{
  "mods": {
    "accelerateddecay": {
      "dependencies": {
        "architectury": "[13.0.0,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21.0,)"
      },
      "info": {
        "authors": "ErrorMikey",
        "classes": "4",
        "description": "Speeds up the decay of leaves\n",
        "displayName": "Accelerated Decay",
        "file": "accelerated-decay-neoforge-21.0.0.jar",
        "license": "GPL3",
        "package": "pro.mikey.accelerateddecay",
        "version": "21.0.0"
      },
      "summary": [
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "actuallyadditions": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "de.ellpeck.actuallyadditions.mixin.AnvilMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "pickupMixin",
              "raw": "pickupMixin(Lnet/minecraft/world/entity/player/Player;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1,21.2)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "de.ellpeck.actuallyadditions.mod.event.ClientEvents#onClientTick"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiLayerEvent$Post": [
          "de.ellpeck.actuallyadditions.mod.event.ClientEvents#onGameOverlay"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "de.ellpeck.actuallyadditions.mod.event.ClientEvents#renderBlockHighlight"
        ],
        "net.neoforged.neoforge.client.event.RenderPlayerEvent$Pre": [
          "de.ellpeck.actuallyadditions.mod.misc.special.SpecialRenderInit#onPlayerRender"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "de.ellpeck.actuallyadditions.data.ActuallyAdditionsData#runGenerator"
        ],
        "net.neoforged.neoforge.event.AnvilUpdateEvent": [
          "de.ellpeck.actuallyadditions.mod.event.CommonEvents#onAnvilEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "de.ellpeck.actuallyadditions.mod.event.CommonEvents#onEntityDropEvent",
          "de.ellpeck.actuallyadditions.mod.items.ItemWingsOfTheBats#onEntityDropEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Pre": [
          "de.ellpeck.actuallyadditions.mod.event.CommonEvents#onPickupEvent",
          "de.ellpeck.actuallyadditions.mod.event.CommonEvents#onItemPickup"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "de.ellpeck.actuallyadditions.mod.event.ClientEvents#onTooltipEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$ItemCraftedEvent": [
          "de.ellpeck.actuallyadditions.mod.event.CommonEvents#onCraftedEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$ItemSmeltedEvent": [
          "de.ellpeck.actuallyadditions.mod.event.CommonEvents#onSmeltedEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "de.ellpeck.actuallyadditions.mod.event.CommonEvents#onLogInEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "de.ellpeck.actuallyadditions.mod.event.CommonEvents#onBlockRightClick"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "de.ellpeck.actuallyadditions.mod.items.ItemWaterBowl#onPlayerInteractEvent"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BreakEvent": [
          "de.ellpeck.actuallyadditions.mod.event.CommonEvents#onBlockBreaking"
        ],
        "net.neoforged.neoforge.event.level.ExplosionEvent$Detonate": [
          "de.ellpeck.actuallyadditions.mod.blocks.BlockShockSuppressor#onExplosion"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "de.ellpeck.actuallyadditions.mod.items.ItemWingsOfTheBats#livingUpdateEvent"
        ]
      },
      "info": {
        "authors": "Ellpeck",
        "classes": "551",
        "description": "Do you want Automation? Wireless Transport? Better Machines? A cup o' Coffee? Chests? Better Hoppers? Leaf Blowers? Faster Growth? Plants? Well, Actually Additions has all that and a lot more!\n",
        "displayName": "Actually Additions",
        "file": "actuallyadditions-1.3.14+mc1.21.1.jar",
        "license": "MIT",
        "package": "de.ellpeck.actuallyadditions.mod",
        "version": "1.3.14"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiFireworkBox",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiMiner",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.VoidSackGui",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiDropper",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiOilGenerator",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiFluidCollector",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.AAScreen",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiPhantomPlacer",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiDirectionalBreaker",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiBioReactor",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiCoffeeMachine",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiBreaker",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiEnergizer",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiFarmer",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.CrusherScreen$CrusherDoubleScreen",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.SackGui",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiLaserRelayItemWhitelist",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiFurnaceDouble",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiDrill",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.ItemTagScreen",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiRangedCollector",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiFermentingBarrel",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiEnervator",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiCanolaPress",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiFilter",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiFeeder",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.CrusherScreen",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiCoalGenerator",
          "de.ellpeck.actuallyadditions.mod.inventory.gui.GuiXPSolidifier",
          "de.ellpeck.actuallyadditions.api.booklet.internal.GuiBookletBase"
        ],
        "net.minecraft.client.particle.Particle": [
          "de.ellpeck.actuallyadditions.mod.particle.ParticleLaserItem",
          "de.ellpeck.actuallyadditions.mod.particle.ParticleBeam"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "de.ellpeck.actuallyadditions.mod.blocks.render.RenderBatteryBox",
          "de.ellpeck.actuallyadditions.mod.blocks.render.RenderEmpowerer",
          "de.ellpeck.actuallyadditions.mod.blocks.render.RenderDisplayStand",
          "de.ellpeck.actuallyadditions.mod.blocks.render.ReconstructorRenderer",
          "de.ellpeck.actuallyadditions.mod.blocks.render.RenderLaserRelay"
        ],
        "net.minecraft.data.DataProvider": [
          "de.ellpeck.actuallyadditions.data.GlobalLootModifierGenerator",
          "de.ellpeck.actuallyadditions.data.StructureUpdater",
          "de.ellpeck.actuallyadditions.data.FuelRecipeGenerator",
          "de.ellpeck.actuallyadditions.data.LaserRecipeGenerator",
          "de.ellpeck.actuallyadditions.data.DataMapGenerator",
          "de.ellpeck.actuallyadditions.data.BlockTagsGenerator",
          "de.ellpeck.actuallyadditions.data.BlockRecipeGenerator",
          "de.ellpeck.actuallyadditions.data.ColorChangeGenerator",
          "de.ellpeck.actuallyadditions.data.ItemTagsGenerator",
          "de.ellpeck.actuallyadditions.data.MiningLensGenerator",
          "de.ellpeck.actuallyadditions.data.DamageTypeTagsGenerator",
          "de.ellpeck.actuallyadditions.data.ItemRecipeGenerator",
          "de.ellpeck.actuallyadditions.data.Curios",
          "de.ellpeck.actuallyadditions.data.BlockStateGenerator",
          "de.ellpeck.actuallyadditions.data.PoiTypeTagsGenerator",
          "de.ellpeck.actuallyadditions.data.ItemModelGenerator",
          "de.ellpeck.actuallyadditions.data.MiscMachineRecipeGenerator",
          "de.ellpeck.actuallyadditions.data.EmpoweringRecipeGenerator",
          "de.ellpeck.actuallyadditions.data.AdvancementGenerator",
          "de.ellpeck.actuallyadditions.data.CrushingRecipeGenerator",
          "de.ellpeck.actuallyadditions.data.LootTableGenerator",
          "de.ellpeck.actuallyadditions.data.BannerPatternTagsGenerator",
          "de.ellpeck.actuallyadditions.data.CoffeeIngredientGenerator",
          "de.ellpeck.actuallyadditions.data.SoundsGenerator"
        ],
        "net.minecraft.world.entity.Entity": [
          "de.ellpeck.actuallyadditions.mod.entity.EntityWorm"
        ],
        "net.minecraft.world.item.Item": [
          "de.ellpeck.actuallyadditions.mod.items.ActuallyItems$1",
          "de.ellpeck.actuallyadditions.mod.items.ItemDrillUpgrade",
          "de.ellpeck.actuallyadditions.mod.items.CanolaSeed",
          "de.ellpeck.actuallyadditions.mod.items.ItemPhantomConnector",
          "de.ellpeck.actuallyadditions.mod.items.ItemWaterBowl",
          "de.ellpeck.actuallyadditions.mod.items.ItemFertilizer",
          "de.ellpeck.actuallyadditions.mod.items.ItemTag",
          "de.ellpeck.actuallyadditions.mod.items.Sack",
          "de.ellpeck.actuallyadditions.mod.items.ItemSolidifiedExperience",
          "de.ellpeck.actuallyadditions.mod.items.ActuallyItems$3",
          "de.ellpeck.actuallyadditions.mod.items.ItemLaserWrench",
          "de.ellpeck.actuallyadditions.mod.items.ItemDust",
          "de.ellpeck.actuallyadditions.mod.items.ItemBooklet",
          "de.ellpeck.actuallyadditions.mod.items.base.ItemEnergy",
          "de.ellpeck.actuallyadditions.mod.items.base.ItemBase",
          "de.ellpeck.actuallyadditions.mod.items.base.ItemArmorAA",
          "de.ellpeck.actuallyadditions.mod.items.ItemLaserRelayUpgrade",
          "de.ellpeck.actuallyadditions.mod.items.Filler",
          "de.ellpeck.actuallyadditions.mod.items.ItemCrafterOnAStick",
          "de.ellpeck.actuallyadditions.mod.items.ItemBattery",
          "de.ellpeck.actuallyadditions.mod.items.ItemPlayerProbe",
          "de.ellpeck.actuallyadditions.mod.items.ItemResonantRice",
          "de.ellpeck.actuallyadditions.mod.items.AllInOneTool",
          "de.ellpeck.actuallyadditions.mod.items.ItemCrystal",
          "de.ellpeck.actuallyadditions.mod.items.ItemWingsOfTheBats",
          "de.ellpeck.actuallyadditions.mod.items.DrillItem",
          "de.ellpeck.actuallyadditions.mod.items.ItemTeleportStaff",
          "de.ellpeck.actuallyadditions.mod.items.ItemGrowthRing",
          "de.ellpeck.actuallyadditions.mod.items.Worm",
          "de.ellpeck.actuallyadditions.mod.items.ItemGeneric",
          "de.ellpeck.actuallyadditions.mod.items.ItemMagnetRing",
          "de.ellpeck.actuallyadditions.mod.items.ItemEngineerGoggles",
          "de.ellpeck.actuallyadditions.mod.items.ItemLeafBlower",
          "de.ellpeck.actuallyadditions.mod.items.ItemFilter",
          "de.ellpeck.actuallyadditions.mod.items.lens.ItemLens",
          "de.ellpeck.actuallyadditions.mod.items.ItemCoffee",
          "de.ellpeck.actuallyadditions.mod.items.ActuallyItems$2",
          "de.ellpeck.actuallyadditions.mod.blocks.base.ItemBlockBase",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockCrystal$1",
          "de.ellpeck.actuallyadditions.mod.blocks.AABlockItem$AASeedItem",
          "de.ellpeck.actuallyadditions.mod.blocks.AABlockItem$BlockEntityEnergyItem",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockAtomicReconstructor$TheItemBlock",
          "de.ellpeck.actuallyadditions.mod.blocks.AABlockItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "de.ellpeck.actuallyadditions.mod.crafting.PressingRecipe",
          "de.ellpeck.actuallyadditions.mod.crafting.FermentingRecipe",
          "de.ellpeck.actuallyadditions.mod.crafting.LiquidFuelRecipe",
          "de.ellpeck.actuallyadditions.mod.crafting.CrushingRecipe",
          "de.ellpeck.actuallyadditions.mod.crafting.EmpowererRecipe",
          "de.ellpeck.actuallyadditions.mod.crafting.RecipeKeepDataShaped",
          "de.ellpeck.actuallyadditions.mod.crafting.CoffeeIngredientRecipe",
          "de.ellpeck.actuallyadditions.mod.crafting.LaserRecipe",
          "de.ellpeck.actuallyadditions.mod.crafting.MiningLensRecipe",
          "de.ellpeck.actuallyadditions.mod.crafting.ColorChangeRecipe",
          "de.ellpeck.actuallyadditions.mod.crafting.RecipeKeepDataShapeless"
        ],
        "net.minecraft.world.level.block.Block": [
          "de.ellpeck.actuallyadditions.mod.blocks.BlockTinyTorch",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockFluidCollector",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockLongRangeBreaker",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockShockSuppressor",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockFeeder",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockLampController",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockColoredLamp",
          "de.ellpeck.actuallyadditions.mod.blocks.ActuallyBlock$Slabs",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockPoweredFurnace",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockGreenhouseGlass",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockItemInterface",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockLaserRelay",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockBatteryBox",
          "de.ellpeck.actuallyadditions.mod.blocks.base.BlockBase",
          "de.ellpeck.actuallyadditions.mod.blocks.base.DirectionalBlock$Container",
          "de.ellpeck.actuallyadditions.mod.blocks.base.FullyDirectionalBlock",
          "de.ellpeck.actuallyadditions.mod.blocks.base.BlockContainerBase",
          "de.ellpeck.actuallyadditions.mod.blocks.base.AACrops",
          "de.ellpeck.actuallyadditions.mod.blocks.base.DirectionalBlock",
          "de.ellpeck.actuallyadditions.mod.blocks.base.BlockBushBase",
          "de.ellpeck.actuallyadditions.mod.blocks.base.FullyDirectionalBlock$Container",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockXPSolidifier",
          "de.ellpeck.actuallyadditions.mod.blocks.ActuallyBlock$Stairs",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockPhantom",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockRangedCollector",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockLeafGenerator",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockFarmer",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockPhantomBooster",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockCoalGenerator",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockHeatCollector",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockCanolaPress",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockItemInterfaceHopping",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockFermentingBarrel",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockFireworkBox",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockDropper",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockLavaFactoryController",
          "de.ellpeck.actuallyadditions.mod.blocks.ActuallyBlock",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockCrystal",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockDisplayStand",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockBreaker",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockAtomicReconstructor",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockGeneric",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockVerticalDigger",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockOilGenerator",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockEnergizer",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockBioReactor",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockCrusher",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockCoffeeMachine",
          "de.ellpeck.actuallyadditions.mod.blocks.BlockPlayerInterface",
          "de.ellpeck.actuallyadditions.mod.blocks.CrystalClusterBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "de.ellpeck.actuallyadditions.mod.data.WorldData",
          "de.ellpeck.actuallyadditions.mod.sack.SackManager"
        ]
      },
      "modifies": [
        "net.minecraft.world.inventory.AnvilMenu",
        "net.minecraft.world.inventory.ItemCombinerMenu"
      ],
      "summary": [
        "Custom Anvil Recipes",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Particles",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Handles Explosion Detonation",
        "Handles Right Clicks with Items",
        "Listens to Entity Drop Events",
        "Listens to Item Crafting Events",
        "Listens to Item Pickup Events",
        "Listens to Item Smelting Events",
        "Listens to Player Login Events",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Block Breaking",
        "Modifies Methods",
        "Patchouli Guide Book",
        "Runs Client Tick Logic",
        "Runs Player Tick Logic",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "advanced_ae": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.pedroksl.advanced_ae.mixins.MixinPatternProviderLogic",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "java.util.EnumSet"
              ],
              "name": "onGetActiveSides",
              "raw": "onGetActiveSides(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Ljava/util/EnumSet;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.MixinPatternEncodingTermMenu",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "[",
                "appeng.api.stacks.GenericStack",
                "[",
                "appeng.api.stacks.GenericStack"
              ],
              "name": "onEncodeProcessingPattern",
              "raw": "onEncodeProcessingPattern(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;[Lappeng/api/stacks/GenericStack;[Lappeng/api/stacks/GenericStack;)V"
            },
            "params": {
              "at": "[{value=RETURN, ordinal=2}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.MixinPatternEncodingLogic",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onLoadEncodedPattern",
              "raw": "onLoadEncodedPattern(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.MixinLivingEntity",
            "method": {
              "argTypes": [
                "net.minecraft.world.damagesource.DamageSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "hurtSound",
              "raw": "hurtSound(Lnet/minecraft/world/damagesource/DamageSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.MixinEncodedPatternItem",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.Item$TooltipContext",
                "java.util.List",
                "net.minecraft.world.item.TooltipFlag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onHoverText",
              "raw": "onHoverText(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item$TooltipContext;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingService",
            "method": {
              "argTypes": [
                "appeng.api.networking.crafting.ICraftingCPU",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onHasCpu",
              "raw": "onHasCpu(Lappeng/api/networking/crafting/ICraftingCPU;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingService",
            "method": {
              "argTypes": [
                "appeng.api.stacks.AEKey",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "long"
              ],
              "name": "onGetRequestedAmount",
              "raw": "onGetRequestedAmount(Lappeng/api/stacks/AEKey;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;J)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingService",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "com.google.common.collect.ImmutableSet$Builder"
              ],
              "name": "onGetCpus",
              "raw": "onGetCpus(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lcom/google/common/collect/ImmutableSet$Builder;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingService",
            "method": {
              "argTypes": [
                "appeng.api.networking.crafting.ICraftingPlan",
                "appeng.api.networking.crafting.ICraftingRequester",
                "appeng.api.networking.crafting.ICraftingCPU",
                "boolean",
                "appeng.api.networking.security.IActionSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "appeng.me.cluster.implementations.CraftingCPUCluster",
                "org.apache.commons.lang3.mutable.MutableObject"
              ],
              "name": "onSubmitJob",
              "raw": "onSubmitJob(Lappeng/api/networking/crafting/ICraftingPlan;Lappeng/api/networking/crafting/ICraftingRequester;Lappeng/api/networking/crafting/ICraftingCPU;ZLappeng/api/networking/security/IActionSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lappeng/me/cluster/implementations/CraftingCPUCluster;Lorg/apache/commons/lang3/mutable/MutableObject;)V"
            },
            "params": {
              "at": "[{value=INVOKE_ASSIGN, target=appeng/me/service/CraftingService.findSuitableCraftingCPU (Lappeng/api/networking/crafting/ICraftingPlan;ZLappeng/api/networking/security/IActionSource;Lorg/apache/commons/lang3/mutable/MutableObject;)Lappeng/me/cluster/implementations/CraftingCPUCluster;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingService",
            "method": {
              "argTypes": [
                "appeng.api.stacks.AEKey",
                "long",
                "appeng.api.config.Actionable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "long"
              ],
              "name": "onInsertIntoCpus",
              "raw": "onInsertIntoCpus(Lappeng/api/stacks/AEKey;JLappeng/api/config/Actionable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;J)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingService",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onUpdateCPUClusters",
              "raw": "onUpdateCPUClusters(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingService",
            "method": {
              "argTypes": [
                "appeng.api.networking.IGridNode",
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onAddNode",
              "raw": "onAddNode(Lappeng/api/networking/IGridNode;Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingService",
            "method": {
              "argTypes": [
                "appeng.api.networking.IGridNode",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRemoveNode",
              "raw": "onRemoveNode(Lappeng/api/networking/IGridNode;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingService",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tickAdvClusters2",
              "raw": "tickAdvClusters2(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{opcode=180, value=FIELD, target=Lappeng/me/service/CraftingService;interests:Lcom/google/common/collect/Multimap;, ordinal=0}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingService",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "long"
              ],
              "name": "tickAdvClusters1",
              "raw": "tickAdvClusters1(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;J)V"
            },
            "params": {
              "at": "[{opcode=180, value=FIELD, target=Lappeng/me/service/CraftingService;lastProcessedCraftingLogicChangeTick:J, ordinal=0}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingCPUMenu",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onBroadcastChanges",
              "raw": "onBroadcastChanges(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingCPUMenu",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRemoved",
              "raw": "onRemoved(Lnet/minecraft/world/entity/player/Player;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingCPUMenu",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onCancelCrafting",
              "raw": "onCancelCrafting(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingCPUMenu",
            "method": {
              "argTypes": [
                "appeng.api.networking.crafting.ICraftingCPU",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onSetCPU",
              "raw": "onSetCPU(Lappeng/api/networking/crafting/ICraftingCPU;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.cpu.MixinCraftingCPUMenu",
            "method": {
              "argTypes": [
                "net.minecraft.world.inventory.MenuType",
                "int",
                "net.minecraft.world.entity.player.Inventory",
                "java.lang.Object",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lnet/minecraft/world/inventory/MenuType;ILnet/minecraft/world/entity/player/Inventory;Ljava/lang/Object;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.client.ModelBakeryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "loadModelHook",
              "raw": "loadModelHook(Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.appflux.MixinSmallAdvPatternProviderScreen",
            "method": {
              "argTypes": [
                "net.pedroksl.advanced_ae.gui.advpatternprovider.SmallAdvPatternProviderMenu",
                "net.minecraft.world.entity.player.Inventory",
                "net.minecraft.network.chat.Component",
                "appeng.client.gui.style.ScreenStyle",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initUpgrade",
              "raw": "initUpgrade(Lnet/pedroksl/advanced_ae/gui/advpatternprovider/SmallAdvPatternProviderMenu;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/network/chat/Component;Lappeng/client/gui/style/ScreenStyle;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.appflux.MixinAdvPatternProviderScreen",
            "method": {
              "argTypes": [
                "net.pedroksl.advanced_ae.gui.advpatternprovider.AdvPatternProviderMenu",
                "net.minecraft.world.entity.player.Inventory",
                "net.minecraft.network.chat.Component",
                "appeng.client.gui.style.ScreenStyle",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initUpgrade",
              "raw": "initUpgrade(Lnet/pedroksl/advanced_ae/gui/advpatternprovider/AdvPatternProviderMenu;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/network/chat/Component;Lappeng/client/gui/style/ScreenStyle;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.appflux.MixinAdvPatternProviderMenu",
            "method": {
              "argTypes": [
                "net.minecraft.world.inventory.MenuType",
                "int",
                "net.minecraft.world.entity.player.Inventory",
                "net.pedroksl.advanced_ae.common.logic.AdvPatternProviderLogicHost",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initToolbox",
              "raw": "initToolbox(Lnet/minecraft/world/inventory/MenuType;ILnet/minecraft/world/entity/player/Inventory;Lnet/pedroksl/advanced_ae/common/logic/AdvPatternProviderLogicHost;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/pedroksl/advanced_ae/gui/advpatternprovider/AdvPatternProviderMenu;createPlayerInventorySlots(Lnet/minecraft/world/entity/player/Inventory;)V}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.appflux.MixinAdvPatternProviderLogic",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "clearUpgrade",
              "raw": "clearUpgrade(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.appflux.MixinAdvPatternProviderLogic",
            "method": {
              "argTypes": [
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "dropUpgrade",
              "raw": "dropUpgrade(Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.appflux.MixinAdvPatternProviderLogic",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "net.minecraft.core.HolderLookup$Provider",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "loadUpgrade",
              "raw": "loadUpgrade(Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/HolderLookup$Provider;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.appflux.MixinAdvPatternProviderLogic",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "net.minecraft.core.HolderLookup$Provider",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "saveUpgrade",
              "raw": "saveUpgrade(Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/HolderLookup$Provider;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.pedroksl.advanced_ae.mixins.appflux.MixinAdvPatternProviderLogic",
            "method": {
              "argTypes": [
                "appeng.api.networking.IManagedGridNode",
                "net.pedroksl.advanced_ae.common.logic.AdvPatternProviderLogicHost",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initUpgrade",
              "raw": "initUpgrade(Lappeng/api/networking/IManagedGridNode;Lnet/pedroksl/advanced_ae/common/logic/AdvPatternProviderLogicHost;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "ae2": "[19.2.0-beta,)",
        "geckolib": "[4.7,)",
        "glodium": "[1.21-2.0-neoforge,)",
        "minecraft": "1.21.1",
        "neoforge": "[21.1.1,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RenderPlayerEvent$Pre": [
          "net.pedroksl.advanced_ae.events.AAEPlayerEvents#playerRender"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "net.pedroksl.advanced_ae.datagen.AAEDataGen#onGatherData"
        ],
        "net.neoforged.neoforge.event.ItemAttributeModifierEvent": [
          "net.pedroksl.advanced_ae.events.AAEPlayerEvents#ItemAttributes"
        ],
        "net.neoforged.neoforge.event.entity.EntityInvulnerabilityCheckEvent": [
          "net.pedroksl.advanced_ae.events.AAELivingEntityEvents#invulnerability"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingBreatheEvent": [
          "net.pedroksl.advanced_ae.events.AAELivingEntityEvents#breath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEvent$LivingJumpEvent": [
          "net.pedroksl.advanced_ae.events.AAELivingEntityEvents#jumpEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingFallEvent": [
          "net.pedroksl.advanced_ae.events.AAELivingEntityEvents#LivingFallDamage"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "net.pedroksl.advanced_ae.events.AAELivingEntityEvents#incomingDamage"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$BreakSpeed": [
          "net.pedroksl.advanced_ae.events.AAEPlayerEvents#BreakSpeed"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "net.pedroksl.advanced_ae.events.AAEPlayerEvents#playerTick"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Pre": [
          "net.pedroksl.advanced_ae.events.AAEPlayerEvents#playerTick"
        ]
      },
      "info": {
        "authors": "Pedroksl",
        "classes": "288",
        "description": "An AE2 addon that adds a lot of utilities and quality of life.",
        "displayName": "Advanced AE",
        "file": "AdvancedAE-1.2.3-1.21.1.jar",
        "license": "LGPL-3.0",
        "package": "net.pedroksl.advanced_ae",
        "version": "1.2.3-1.21.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.pedroksl.advanced_ae.mixins.appflux.MixinSmallAdvPatternProviderScreen",
          "net.pedroksl.advanced_ae.mixins.appflux.MixinAdvPatternProviderScreen",
          "net.pedroksl.advanced_ae.client.gui.StockExportBusScreen",
          "net.pedroksl.advanced_ae.client.gui.SmallAdvPatternProviderScreen",
          "net.pedroksl.advanced_ae.client.gui.SetAmountScreen",
          "net.pedroksl.advanced_ae.client.gui.ReactionChamberScreen",
          "net.pedroksl.advanced_ae.client.gui.QuantumCrafterScreen",
          "net.pedroksl.advanced_ae.client.gui.QuantumCrafterConfigPatternScreen",
          "net.pedroksl.advanced_ae.client.gui.QuantumComputerScreen",
          "net.pedroksl.advanced_ae.client.gui.QuantumArmorNumInputConfigScreen",
          "net.pedroksl.advanced_ae.client.gui.QuantumArmorMagnetScreen",
          "net.pedroksl.advanced_ae.client.gui.QuantumArmorFilterScreen",
          "net.pedroksl.advanced_ae.client.gui.QuantumArmorFilterConfigScreen",
          "net.pedroksl.advanced_ae.client.gui.QuantumArmorConfigScreen",
          "net.pedroksl.advanced_ae.client.gui.PortableWorkbenchScreen",
          "net.pedroksl.advanced_ae.client.gui.OutputDirectionScreen",
          "net.pedroksl.advanced_ae.client.gui.ImportExportBusScreen",
          "net.pedroksl.advanced_ae.client.gui.AdvPatternProviderScreen",
          "net.pedroksl.advanced_ae.client.gui.AdvPatternEncoderScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "net.pedroksl.advanced_ae.client.renderer.ReactionChamberTESR"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "net.pedroksl.advanced_ae.client.renderer.AnimatedCraftingCubeBakedModel",
          "net.pedroksl.advanced_ae.client.renderer.AAECraftingCubeBakedModel"
        ],
        "net.minecraft.data.DataProvider": [
          "net.pedroksl.advanced_ae.datagen.AAETagProvider$AAEItemTagProvider",
          "net.pedroksl.advanced_ae.datagen.AAETagProvider$AAEDataComponentTypeTagProvider",
          "net.pedroksl.advanced_ae.datagen.AAETagProvider$AAEBlockTagProvider",
          "net.pedroksl.advanced_ae.datagen.AAERecipeProvider",
          "net.pedroksl.advanced_ae.datagen.AAEModelProvider",
          "net.pedroksl.advanced_ae.datagen.AAELootTableProvider",
          "net.pedroksl.advanced_ae.datagen.AAELanguageProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "net.pedroksl.advanced_ae.mixins.MixinLivingEntity"
        ],
        "net.minecraft.world.item.Item": [
          "net.pedroksl.advanced_ae.common.items.upgrades.QuantumUpgradeBaseItem",
          "net.pedroksl.advanced_ae.common.items.BlockUpgradeItem",
          "net.pedroksl.advanced_ae.common.items.armors.QuantumLeggings",
          "net.pedroksl.advanced_ae.common.items.armors.QuantumHelmet",
          "net.pedroksl.advanced_ae.common.items.armors.QuantumChestplate",
          "net.pedroksl.advanced_ae.common.items.armors.QuantumBoots",
          "net.pedroksl.advanced_ae.common.items.armors.QuantumArmorBase",
          "net.pedroksl.advanced_ae.common.items.armors.PoweredItem",
          "net.pedroksl.advanced_ae.common.items.AdvPatternProviderUpgradeItem",
          "net.pedroksl.advanced_ae.common.items.AdvPatternProviderCapacityUpgradeItem",
          "net.pedroksl.advanced_ae.common.items.AdvPatternEncoderItem",
          "net.pedroksl.advanced_ae.common.items.AAECraftingBlockItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "net.pedroksl.advanced_ae.recipes.ReactionChamberRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.pedroksl.advanced_ae.common.fluids.QuantumInfusionBlock",
          "net.pedroksl.advanced_ae.common.blocks.SmallAdvPatternProviderBlock",
          "net.pedroksl.advanced_ae.common.blocks.ReactionChamberBlock",
          "net.pedroksl.advanced_ae.common.blocks.QuantumCrafterBlock",
          "net.pedroksl.advanced_ae.common.blocks.AdvPatternProviderBlock",
          "net.pedroksl.advanced_ae.common.blocks.AAECraftingUnitBlock",
          "net.pedroksl.advanced_ae.common.blocks.AAEAbstractCraftingUnitBlock"
        ]
      },
      "modifies": [
        "appeng.crafting.pattern.EncodedPatternItem",
        "appeng.helpers.patternprovider.PatternProviderLogic",
        "appeng.hooks.BuiltInModelHooks",
        "appeng.me.service.CraftingService",
        "appeng.menu.me.crafting.CraftingCPUMenu",
        "appeng.menu.me.items.PatternEncodingTermMenu",
        "appeng.parts.encoding.PatternEncodingLogic",
        "appeng.parts.reporting.AbstractMonitorPart",
        "com.glodblock.github.extendedae.container.ContainerPatternModifier",
        "net.minecraft.client.resources.model.ModelBakery",
        "net.minecraft.world.entity.LivingEntity",
        "net.pedroksl.advanced_ae.client.gui.AdvPatternProviderScreen",
        "net.pedroksl.advanced_ae.client.gui.SmallAdvPatternProviderScreen",
        "net.pedroksl.advanced_ae.common.logic.AdvPatternProviderLogic",
        "net.pedroksl.advanced_ae.common.logic.AdvPatternProviderLogicHost",
        "net.pedroksl.advanced_ae.gui.advpatternprovider.AdvPatternProviderMenu"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Listens to Entity Breathing Events",
        "Listens to Entity Damage Events",
        "Listens to Entity Fall Events",
        "Listens to Entity Jump Events",
        "Localization",
        "Modifies Block Breaking Speed",
        "Modifies Item Attributes",
        "Modifies Methods",
        "Runs Player Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "advancementplaques": {
      "dependencies": {
        "iceberg": "[1.2.2,)",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1,)",
        "prism": "[1.0.8,)",
        "toastcontrol": "[9.0,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.anthonyhilyard.advancementplaques.neoforge.client.AdvancementPlaquesNeoForgeClient#onClientSetup"
        ]
      },
      "info": {
        "authors": "Grend",
        "classes": "14",
        "description": "Replaces standard advancement toasts with fancy plaques.",
        "displayName": "Advancement Plaques",
        "file": "AdvancementPlaques-1.21.1-neoforge-1.6.8.jar",
        "license": "CC BY-NC-ND 4.0",
        "package": "com.anthonyhilyard.advancementplaques",
        "updateUrl": "https://mc-update-check.anthonyhilyard.com/499826",
        "version": "1.6.8"
      },
      "summary": [
        "Custom GUI Textures",
        "Uses Access Transformers"
      ]
    },
    "ae2": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "appeng.mixins.TextureAtlasMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.texture.SpriteLoader$Preparations",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "uploadHook",
              "raw": "uploadHook(Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "appeng.mixins.AnvilMenuMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "clearAnnihilationPlaneThreadLocal",
              "raw": "clearAnnihilationPlaneThreadLocal(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=net/minecraft/world/item/ItemStack.isDamageableItem()Z, ordinal=1}]"
            }
          },
          {
            "class": "appeng.mixins.AnvilMenuMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setAnnihilationPlaneThreadLocal",
              "raw": "setAnnihilationPlaneThreadLocal(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=net/minecraft/world/item/ItemStack.isDamageableItem()Z, ordinal=1}]"
            }
          },
          {
            "class": "appeng.mixins.EnchantmentHelperMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.Holder",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "hookGetItemEnchantmentLevel",
              "raw": "hookGetItemEnchantmentLevel(Lnet/minecraft/core/Holder;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "appeng.mixins.ItemEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "handleEntityTransform",
              "raw": "handleEntityTransform(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "appeng.mixins.ItemEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.damagesource.DamageSource",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "handleExplosion",
              "raw": "handleExplosion(Lnet/minecraft/world/damagesource/DamageSource;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "appeng.mixins.tests.StructureUtilsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestInfo",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.Rotation",
                "net.minecraft.server.level.ServerLevel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "prepareTestStructure",
              "raw": "prepareTestStructure(Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;get(Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "appeng.mixins.tests.TestCommandMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "verifyStructureExists",
              "raw": "verifyStructureExists(Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "appeng.mixins.chunkloading.ChunkMapMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.ChunkPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "spatialAnchorEnableRandomTicks",
              "raw": "spatialAnchorEnableRandomTicks(Lnet/minecraft/world/level/ChunkPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "appeng.mixins.ModelBakeryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getModelHook",
              "raw": "getModelHook(Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "appeng.mixins.PonderWorldMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "disableClientSideStateSavingForRestoreBlocks",
              "raw": "disableClientSideStateSavingForRestoreBlocks(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "appeng.mixins.PonderWorldMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "enableClientSideStateSavingForRestoreBlocks",
              "raw": "enableClientSideStateSavingForRestoreBlocks(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "appeng.mixins.PonderWorldMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "disableClientSideStateSavingForRestore",
              "raw": "disableClientSideStateSavingForRestore(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "appeng.mixins.PonderWorldMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "enableClientSideStateSavingForRestore",
              "raw": "enableClientSideStateSavingForRestore(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "appeng.mixins.PickColorMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "pickColor",
              "raw": "pickColor(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "appeng.mixins.spatial.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.progress.ChunkProgressListener",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "injectSpatialLevel",
              "raw": "injectSpatialLevel(Lnet/minecraft/server/level/progress/ChunkProgressListener;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "appeng.mixins.StructureTemplateMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "disableClientSideStateSaving",
              "raw": "disableClientSideStateSaving(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "appeng.mixins.StructureTemplateMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "enableClientSideStateSaving",
              "raw": "enableClientSideStateSaving(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "appeng.mixins.WrappedGenericStackTooltipModIdMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getTooltipFromItem",
              "raw": "getTooltipFromItem(Lnet/minecraft/client/Minecraft;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "appeng.mixins.VariantDeserializerMixin",
            "method": {
              "argTypes": [
                "com.google.gson.JsonElement",
                "java.lang.reflect.Type",
                "com.google.gson.JsonDeserializationContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "addAdditionalRotationOptions",
              "raw": "addAdditionalRotationOptions(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "appeng.mixins.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "net.minecraft.world.level.Level",
                "net.minecraft.world.item.ItemStack",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderGuiItem",
              "raw": "renderGuiItem(Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;IIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "emi": " ",
        "guideme": "2.5.1",
        "jade": "[15.0.0,)",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.113,)",
        "theoneprobe": "[1.20.0,)",
        "vanillafix": " "
      },
      "events": {
        "appeng.server.testplots.SpawnExtraGridTestTools": [
          "appeng.server.testplots.SpawnTestTools#spawnWirelessTerminals"
        ],
        "net.neoforged.neoforge.client.event.RecipesUpdatedEvent": [
          "appeng.recipes.transform.TransformLogic#onClientRecipesUpdated"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "appeng.client.render.overlay.OverlayManager#renderWorldLastEvent"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "appeng.datagen.AE2DataGenerators#onGatherData"
        ],
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "appeng.recipes.transform.TransformLogic#onReloadServerResources"
        ],
        "net.neoforged.neoforge.event.level.ChunkEvent$Load": [
          "appeng.server.subcommands.ChunkLogger#onChunkLoadEvent"
        ],
        "net.neoforged.neoforge.event.level.ChunkEvent$Unload": [
          "appeng.server.subcommands.ChunkLogger#onChunkUnloadEvent"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "appeng.me.cluster.implementations.QuantumCluster#onUnload"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "appeng.recipes.transform.TransformLogic#onServerStarted"
        ]
      },
      "info": {
        "classes": "1818",
        "description": "A Mod about Matter, Energy and using them to conquer the world..",
        "displayName": "Applied Energistics 2",
        "file": "appliedenergistics2-19.2.2-beta.jar",
        "license": "See GitHub repository for details",
        "package": "appeng.me",
        "version": "19.2.2-beta"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "appeng.client.gui.AEBaseScreen",
          "appeng.client.gui.AESubScreen",
          "appeng.client.gui.implementations.CellWorkbenchScreen",
          "appeng.client.gui.implementations.SpatialIOPortScreen",
          "appeng.client.gui.implementations.FormationPlaneScreen",
          "appeng.client.gui.implementations.QuartzKnifeScreen",
          "appeng.client.gui.implementations.SpatialAnchorScreen",
          "appeng.client.gui.implementations.InterfaceScreen",
          "appeng.client.gui.implementations.PriorityScreen",
          "appeng.client.gui.implementations.StorageBusScreen",
          "appeng.client.gui.implementations.EnergyLevelEmitterScreen",
          "appeng.client.gui.implementations.DriveScreen",
          "appeng.client.gui.implementations.UpgradeableScreen",
          "appeng.client.gui.implementations.PatternProviderScreen",
          "appeng.client.gui.implementations.CondenserScreen",
          "appeng.client.gui.implementations.StorageLevelEmitterScreen",
          "appeng.client.gui.implementations.KeyTypeSelectionScreen",
          "appeng.client.gui.implementations.MEChestScreen",
          "appeng.client.gui.implementations.IOBusScreen",
          "appeng.client.gui.implementations.IOPortScreen",
          "appeng.client.gui.implementations.MolecularAssemblerScreen",
          "appeng.client.gui.implementations.SkyChestScreen",
          "appeng.client.gui.implementations.VibrationChamberScreen",
          "appeng.client.gui.implementations.WirelessAccessPointScreen",
          "appeng.client.gui.implementations.QNBScreen",
          "appeng.client.gui.implementations.InscriberScreen",
          "appeng.client.gui.me.crafting.CraftingCPUScreen",
          "appeng.client.gui.me.crafting.CraftConfirmScreen",
          "appeng.client.gui.me.crafting.CraftingStatusScreen",
          "appeng.client.gui.me.crafting.CraftAmountScreen",
          "appeng.client.gui.me.crafting.SetStockAmountScreen",
          "appeng.client.gui.me.crafting.CraftErrorScreen",
          "appeng.client.gui.me.items.CraftingTermScreen",
          "appeng.client.gui.me.items.SetProcessingPatternAmountScreen",
          "appeng.client.gui.me.items.PatternEncodingTermScreen",
          "appeng.client.gui.me.networktool.NetworkToolScreen",
          "appeng.client.gui.me.networktool.NetworkStatusScreen",
          "appeng.client.gui.me.common.MEStorageScreen",
          "appeng.client.gui.me.common.TerminalSettingsScreen",
          "appeng.client.gui.me.patternaccess.PatternAccessTermScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "appeng.client.render.cablebus.CableBusBreakingParticle",
          "appeng.client.render.effects.CraftingFx",
          "appeng.client.render.effects.EnergyFx",
          "appeng.client.render.effects.VibrantFX",
          "appeng.client.render.effects.LightningArcFX",
          "appeng.client.render.effects.LightningFX",
          "appeng.client.render.effects.MatterCannonFX"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "appeng.client.render.crafting.CraftingMonitorRenderer",
          "appeng.client.render.crafting.MolecularAssemblerRenderer",
          "appeng.client.render.tesr.CrankRenderer",
          "appeng.client.render.tesr.InscriberTESR",
          "appeng.client.render.tesr.SkyStoneTankBlockEntityRenderer",
          "appeng.client.render.tesr.DriveLedBlockEntityRenderer",
          "appeng.client.render.tesr.ChestBlockEntityRenderer",
          "appeng.client.render.tesr.ModularTESR",
          "appeng.client.render.tesr.SkyChestTESR",
          "appeng.blockentity.networking.CableBusTESR"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "appeng.client.render.FacadeDispatcherBakedModel",
          "appeng.client.render.cablebus.P2PTunnelFrequencyBakedModel",
          "appeng.client.render.cablebus.CableBusBakedModel",
          "appeng.client.render.model.DriveBakedModel",
          "appeng.client.render.model.MemoryCardBakedModel",
          "appeng.client.render.model.MeteoriteCompassBakedModel$FixedRotationModel",
          "appeng.client.render.model.ColorApplicatorBakedModel",
          "appeng.client.render.model.GlassBakedModel",
          "appeng.client.render.model.MeteoriteCompassBakedModel",
          "appeng.client.render.FacadeBakedItemModel",
          "appeng.client.render.crafting.LightBakedModel",
          "appeng.client.render.crafting.MonitorBakedModel",
          "appeng.client.render.crafting.CraftingCubeBakedModel",
          "appeng.client.render.crafting.UnitBakedModel",
          "appeng.client.render.DelegateBakedModel",
          "appeng.client.render.tesr.ChestBlockEntityRenderer$FaceRotatingModel",
          "appeng.client.render.tesr.spatial.SpatialPylonBakedModel",
          "appeng.parts.automation.PlaneBakedModel",
          "appeng.block.qnb.QnbFormedBakedModel",
          "appeng.block.paint.PaintSplotchesBakedModel"
        ],
        "net.minecraft.data.DataProvider": [
          "appeng.datagen.providers.WorldGenProvider",
          "appeng.datagen.providers.localization.LocalizationProvider",
          "appeng.datagen.providers.tags.ItemTagsProvider",
          "appeng.datagen.providers.tags.BlockTagsProvider",
          "appeng.datagen.providers.tags.BiomeTagsProvider",
          "appeng.datagen.providers.tags.FluidTagsProvider",
          "appeng.datagen.providers.tags.DataComponentTypeTagProvider",
          "appeng.datagen.providers.tags.PoiTypeTagsProvider",
          "appeng.datagen.providers.loot.AE2LootTableProvider",
          "appeng.datagen.providers.IAE2DataProvider",
          "appeng.datagen.providers.models.BlockModelProvider",
          "appeng.datagen.providers.models.CableModelProvider",
          "appeng.datagen.providers.models.DecorationModelProvider",
          "appeng.datagen.providers.models.ItemModelProvider",
          "appeng.datagen.providers.models.AE2BlockStateProvider",
          "appeng.datagen.providers.models.PartModelProvider",
          "appeng.datagen.providers.recipes.SmithingRecipes",
          "appeng.datagen.providers.recipes.TransformRecipes",
          "appeng.datagen.providers.recipes.DecorationBlockRecipes",
          "appeng.datagen.providers.recipes.CraftingRecipes",
          "appeng.datagen.providers.recipes.QuartzCuttingRecipesProvider",
          "appeng.datagen.providers.recipes.MatterCannonAmmoProvider",
          "appeng.datagen.providers.recipes.ChargerRecipes",
          "appeng.datagen.providers.recipes.AE2RecipeProvider",
          "appeng.datagen.providers.recipes.EntropyRecipes",
          "appeng.datagen.providers.recipes.InscriberRecipes",
          "appeng.datagen.providers.recipes.DecorationRecipes",
          "appeng.datagen.providers.recipes.UpgradeRecipes",
          "appeng.datagen.providers.recipes.SmeltingRecipes"
        ],
        "net.minecraft.world.entity.Entity": [
          "appeng.entity.TinyTNTPrimedEntity",
          "appeng.mixins.ItemEntityMixin"
        ],
        "net.minecraft.world.item.Item": [
          "appeng.debug.MeteoritePlacerItem",
          "appeng.debug.EraserItem",
          "appeng.debug.DebugCardItem",
          "appeng.debug.ReplicatorCardItem",
          "appeng.parts.automation.AnnihilationPlanePartItem",
          "appeng.crafting.pattern.EncodedPatternItem",
          "appeng.block.crafting.CraftingBlockItem",
          "appeng.block.AEBaseBlockItem",
          "appeng.block.networking.EnergyCellBlockItem",
          "appeng.items.storage.SpatialStorageCellItem",
          "appeng.items.storage.ViewCellItem",
          "appeng.items.storage.BasicStorageCell",
          "appeng.items.storage.CreativeCellItem",
          "appeng.items.AEBaseItem",
          "appeng.items.parts.ColoredPartItem",
          "appeng.items.parts.FacadeItem",
          "appeng.items.parts.PartItem",
          "appeng.items.materials.MaterialItem",
          "appeng.items.materials.EnergyCardItem",
          "appeng.items.materials.StorageComponentItem",
          "appeng.items.materials.UpgradeCardItem",
          "appeng.items.materials.NamePressItem",
          "appeng.items.misc.WrappedGenericStack",
          "appeng.items.misc.MissingContentItem",
          "appeng.items.misc.MeteoriteCompassItem",
          "appeng.items.misc.PaintBallItem",
          "appeng.items.tools.NetworkToolItem",
          "appeng.items.tools.fluix.FluixHoeItem",
          "appeng.items.tools.fluix.FluixSmithingTemplateItem",
          "appeng.items.tools.fluix.FluixSwordItem",
          "appeng.items.tools.fluix.FluixAxeItem",
          "appeng.items.tools.fluix.FluixPickaxeItem",
          "appeng.items.tools.fluix.FluixSpadeItem",
          "appeng.items.tools.GuideItem",
          "appeng.items.tools.quartz.QuartzSpadeItem",
          "appeng.items.tools.quartz.QuartzSwordItem",
          "appeng.items.tools.quartz.QuartzPickaxeItem",
          "appeng.items.tools.quartz.QuartzHoeItem",
          "appeng.items.tools.quartz.QuartzCuttingKnifeItem",
          "appeng.items.tools.quartz.QuartzAxeItem",
          "appeng.items.tools.quartz.QuartzWrenchItem",
          "appeng.items.tools.MemoryCardItem",
          "appeng.items.tools.powered.WirelessCraftingTerminalItem",
          "appeng.items.tools.powered.EntropyManipulatorItem",
          "appeng.items.tools.powered.PoweredContainerItem",
          "appeng.items.tools.powered.PortableCellItem",
          "appeng.items.tools.powered.powersink.AEBasePoweredItem",
          "appeng.items.tools.powered.ChargedStaffItem",
          "appeng.items.tools.powered.MatterCannonItem",
          "appeng.items.tools.powered.ColorApplicatorItem",
          "appeng.items.tools.powered.WirelessTerminalItem",
          "appeng.items.tools.powered.AbstractPortableCell"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "appeng.recipes.quartzcutting.QuartzCuttingRecipe",
          "appeng.recipes.handlers.ChargerRecipe",
          "appeng.recipes.handlers.InscriberRecipe",
          "appeng.recipes.mattercannon.MatterCannonAmmo",
          "appeng.recipes.transform.TransformRecipe",
          "appeng.recipes.game.StorageCellDisassemblyRecipe",
          "appeng.recipes.game.FacadeRecipe",
          "appeng.recipes.game.StorageCellUpgradeRecipe",
          "appeng.recipes.game.AddItemUpgradeRecipe",
          "appeng.recipes.game.RemoveItemUpgradeRecipe",
          "appeng.recipes.game.CraftingUnitTransformRecipe",
          "appeng.recipes.entropy.EntropyRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "appeng.debug.CubeGeneratorBlock",
          "appeng.debug.EnergyGeneratorBlock",
          "appeng.debug.ItemGenBlock",
          "appeng.debug.PhantomNodeBlock",
          "appeng.decorative.solid.QuartzGlassBlock",
          "appeng.decorative.solid.QuartzLampBlock",
          "appeng.decorative.solid.CertusQuartzClusterBlock",
          "appeng.decorative.solid.NotSoMysteriousCubeBlock",
          "appeng.decorative.solid.BuddingCertusQuartzBlock",
          "appeng.decorative.AEDecorativeBlock",
          "appeng.block.storage.DriveBlock",
          "appeng.block.storage.IOPortBlock",
          "appeng.block.storage.SkyStoneTankBlock",
          "appeng.block.storage.SkyChestBlock",
          "appeng.block.storage.MEChestBlock",
          "appeng.block.qnb.QuantumRingBlock",
          "appeng.block.qnb.QuantumBaseBlock",
          "appeng.block.qnb.QuantumLinkChamberBlock",
          "appeng.block.AEBaseEntityBlock",
          "appeng.block.crafting.AbstractCraftingUnitBlock",
          "appeng.block.crafting.CraftingMonitorBlock",
          "appeng.block.crafting.PatternProviderBlock",
          "appeng.block.crafting.CraftingUnitBlock",
          "appeng.block.crafting.MolecularAssemblerBlock",
          "appeng.block.misc.TinyTNTBlock",
          "appeng.block.misc.MysteriousCubeBlock",
          "appeng.block.misc.CondenserBlock",
          "appeng.block.misc.InterfaceBlock",
          "appeng.block.misc.InscriberBlock",
          "appeng.block.misc.VibrationChamberBlock",
          "appeng.block.misc.GrowthAcceleratorBlock",
          "appeng.block.misc.LightDetectorBlock",
          "appeng.block.misc.CellWorkbenchBlock",
          "appeng.block.misc.ChargerBlock",
          "appeng.block.misc.QuartzFixtureBlock",
          "appeng.block.misc.CrankBlock",
          "appeng.block.paint.PaintSplotchesBlock",
          "appeng.block.networking.EnergyAcceptorBlock",
          "appeng.block.networking.CrystalResonanceGeneratorBlock",
          "appeng.block.networking.CableBusBlock",
          "appeng.block.networking.ControllerBlock",
          "appeng.block.networking.CreativeEnergyCellBlock",
          "appeng.block.networking.WirelessAccessPointBlock",
          "appeng.block.networking.EnergyCellBlock",
          "appeng.block.AEBaseBlock",
          "appeng.block.spatial.SpatialAnchorBlock",
          "appeng.block.spatial.MatrixFrameBlock",
          "appeng.block.spatial.SpatialPylonBlock",
          "appeng.block.spatial.SpatialIOPortBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "appeng.core.worlddata.AESavedData",
          "appeng.server.services.ChunkLoadState",
          "appeng.server.services.compass.CompassRegion",
          "appeng.spatial.SpatialStorageWorldData",
          "appeng.api.features.PlayerRegistryInternal"
        ]
      },
      "modifies": [
        "com.simibubi.create.foundation.ponder.PonderWorld",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.GuiGraphics",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen",
        "net.minecraft.client.renderer.block.model.Variant$Deserializer",
        "net.minecraft.client.renderer.texture.TextureAtlas",
        "net.minecraft.client.resources.model.ModelBakery",
        "net.minecraft.gametest.framework.StructureUtils",
        "net.minecraft.gametest.framework.TestCommand",
        "net.minecraft.server.MinecraftServer",
        "net.minecraft.server.level.ChunkMap",
        "net.minecraft.world.entity.item.ItemEntity",
        "net.minecraft.world.inventory.AnvilMenu",
        "net.minecraft.world.item.enchantment.EnchantmentHelper",
        "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Dimension Types",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Particles",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Listens to Chunk Load Events",
        "Listens to Chunk Unload Events",
        "Listens to Recipe Updates",
        "Listens to Server Started Events",
        "Localization",
        "Modifies Methods",
        "Modifies World Rendering",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "ae2_mega_things": {
      "dependencies": {
        "ae2": "[19.0.20-beta,)",
        "ae2things": "[1.2,)",
        "appmek": "[1.4,)",
        "kotlinforforge": "[5.6.0,)",
        "megacells": "[2.1,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1,)"
      },
      "events": {
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "io.github.lapis256.ae2_mega_things.data.AE2MEGAThingsDataGenerator#onGatherData"
        ]
      },
      "info": {
        "authors": "Lapis256",
        "classes": "40",
        "description": "AE2 MEGA Things",
        "displayName": "AE2 MEGA Things",
        "file": "AE2MEGAThings-1.21.1-2.0.3.jar",
        "license": "Please refer to the GitHub repository for details.",
        "loader": "kotlinforforge",
        "package": "io.github.lapis256.ae2_mega_things",
        "version": "2.0.3"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "io.github.lapis256.ae2_mega_things.data.provider.AE2MTBlockModelProvider",
          "io.github.lapis256.ae2_mega_things.data.provider.AE2MTRecipeProvider",
          "io.github.lapis256.ae2_mega_things.data.provider.AE2MTItemModelProvider",
          "io.github.lapis256.ae2_mega_things.data.provider.AE2MTLanguageProvider"
        ],
        "net.minecraft.world.item.Item": [
          "io.github.lapis256.ae2_mega_things.item.FluidDISKDrive",
          "io.github.lapis256.ae2_mega_things.item.DISKHousing",
          "io.github.lapis256.ae2_mega_things.item.AbstractDISKDrive",
          "io.github.lapis256.ae2_mega_things.item.ItemDISKDrive",
          "io.github.lapis256.ae2_mega_things.integration.appmek.item.ChemicalDISKDrive"
        ]
      },
      "modifies": [
        "io.github.projectet.ae2things.command.Command",
        "io.github.projectet.ae2things.storage.DISKCellHandler",
        "io.github.projectet.ae2things.storage.DISKCellInventory"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Localization",
        "Uses Data Generators"
      ]
    },
    "ae2ct": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.neuvillette.ae2ct.mixin.AE2CraftingPlanSummary",
            "method": {
              "argTypes": [
                "net.minecraft.network.RegistryFriendlyByteBuf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "read",
              "raw": "read(Lnet/minecraft/network/RegistryFriendlyByteBuf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.neuvillette.ae2ct.mixin.AE2CraftingPlanSummary",
            "method": {
              "argTypes": [
                "net.minecraft.network.RegistryFriendlyByteBuf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "write",
              "raw": "write(Lnet/minecraft/network/RegistryFriendlyByteBuf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.neuvillette.ae2ct.mixin.AE2CraftingPlanSummary",
            "method": {
              "argTypes": [
                "appeng.api.networking.IGrid",
                "appeng.api.networking.security.IActionSource",
                "appeng.api.networking.crafting.ICraftingPlan",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "buildEX",
              "raw": "buildEX(Lappeng/api/networking/IGrid;Lappeng/api/networking/security/IActionSource;Lappeng/api/networking/crafting/ICraftingPlan;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.neuvillette.ae2ct.mixin.Ae2CraftConfirmScreen",
            "method": {
              "argTypes": [
                "appeng.menu.me.crafting.CraftConfirmMenu",
                "net.minecraft.world.entity.player.Inventory",
                "net.minecraft.network.chat.Component",
                "appeng.client.gui.style.ScreenStyle",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "CraftConfirmScreenInit",
              "raw": "CraftConfirmScreenInit(Lappeng/menu/me/crafting/CraftConfirmMenu;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/network/chat/Component;Lappeng/client/gui/style/ScreenStyle;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "ae2": "[19.0.16,99.99.99)",
        "minecraft": "[1.21,1.21.2)",
        "neoforge": "[21.0.0-beta,)"
      },
      "info": {
        "authors": "Neuvillette",
        "classes": "16",
        "description": "AE2:Crafting Tree",
        "displayName": "AE2:Crafting Tree",
        "file": "ae2ct-1.21.1-1.0.5.jar",
        "license": "All Rights Reserved",
        "package": "com.neuvillette.ae2ct",
        "version": "1.21.1-1.0.5"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.neuvillette.ae2ct.mixin.Ae2CraftConfirmScreen",
          "com.neuvillette.ae2ct.gui.CraftingTreeScreen"
        ]
      },
      "modifies": [
        "appeng.client.gui.me.crafting.CraftConfirmScreen",
        "appeng.menu.me.crafting.CraftingPlanSummary"
      ],
      "summary": [
        "Custom GUI Screens",
        "Localization",
        "Modifies Methods"
      ]
    },
    "ae2jeiintegration": {
      "dependencies": {
        "ae2": "[19.0.22-beta,)",
        "jei": "[19.18.9,)"
      },
      "info": {
        "authors": "Tamaized, mezz",
        "classes": "59",
        "description": "AE2 JEI integration",
        "displayName": "AE2 JEI Integration",
        "file": "ae2jeiintegration-1.2.0.jar",
        "license": "LGPL-3.0",
        "package": "tamaized.ae2jeiintegration",
        "version": "1.2.0"
      }
    },
    "ae2things": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "io.github.projectet.ae2things.mixin.CursedInternalSlotMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "net.minecraft.world.inventory.ClickType",
                "net.minecraft.world.entity.player.Player",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "CLONE",
              "raw": "CLONE(IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=net/minecraft/world/item/ItemStack.copyWithCount (I)Lnet/minecraft/world/item/ItemStack;}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "ae2": "[19.0.0-beta,20.0.0)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "io.github.projectet.ae2things.data.AE2ThingsDataGenerator#onGatherData"
        ]
      },
      "info": {
        "authors": "ProjectET, Technici4n",
        "classes": "14",
        "description": "This mod adds a new type of cell the DISK: Deep Item Storage disK.\nThis cell has no type limits and one item counts as one byte.\nDue to limitations with the cell format, you lose 24 bytes per kibibyte, but hey a small price to pay for no types right?\n",
        "displayName": "AE2 Things",
        "file": "AE2-Things-1.4.2-beta.jar",
        "license": "MIT",
        "package": "io.github.projectet.ae2things",
        "version": "1.4.2-beta"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "io.github.projectet.ae2things.data.CraftingRecipeProvider"
        ],
        "net.minecraft.world.item.Item": [
          "io.github.projectet.ae2things.item.DISKDrive"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "io.github.projectet.ae2things.util.StorageManager"
        ]
      },
      "modifies": [
        "net.minecraft.world.inventory.AbstractContainerMenu"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Localization",
        "Modifies Methods",
        "Stores Data in World Saves",
        "Uses Data Generators"
      ]
    },
    "ae2wtlib": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "de.mari_023.ae2wtlib.mixin.ServerPlayerMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.item.ItemStack"
              ],
              "name": "restockDrop",
              "raw": "restockDrop(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/item/ItemStack;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "de.mari_023.ae2wtlib.mixin.GuiMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "net.minecraft.client.DeltaTracker",
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.item.ItemStack",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "restockOverlay",
              "raw": "restockOverlay(Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/client/DeltaTracker;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/GuiGraphics;renderItemDecorations(Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;II)V}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.mari_023.ae2wtlib.mixin.MinecraftMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.item.ItemStack",
                "int"
              ],
              "name": "pickBlock",
              "raw": "pickBlock(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/item/ItemStack;I)V"
            },
            "params": {
              "at": "[{value=INVOKE_ASSIGN, target=Lnet/minecraft/world/entity/player/Inventory;findSlotMatchingItem(Lnet/minecraft/world/item/ItemStack;)I}]"
            }
          },
          {
            "class": "de.mari_023.ae2wtlib.mixin.AEItemsMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "net.minecraft.resources.ResourceLocation",
                "java.util.function.Function",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "replaceWirelessCraftingTerminal",
              "raw": "replaceWirelessCraftingTerminal(Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Function;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "ae2": "[19.1.2-beta,20.0.0)",
        "ae2wtlib_api": "[19.2.1,19.2.1]",
        "curios": "*",
        "extendedae": "(,1.21-1.1.4-neoforge]",
        "megacells": "(0.0.0,4.0.0-alpha]"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "de.mari_023.ae2wtlib.AE2wtlibForge#handle"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent$Finish": [
          "de.mari_023.ae2wtlib.AE2wtlibForge#handle"
        ],
        "net.neoforged.neoforge.event.entity.player.ArrowLooseEvent": [
          "de.mari_023.ae2wtlib.AE2wtlibForge#handle"
        ],
        "net.neoforged.neoforge.event.entity.player.ArrowNockEvent": [
          "de.mari_023.ae2wtlib.AE2wtlibForge#handle"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Pre": [
          "de.mari_023.ae2wtlib.AE2wtlibForge#handle"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteractSpecific": [
          "de.mari_023.ae2wtlib.AE2wtlibForge#handle"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "de.mari_023.ae2wtlib.AE2wtlibForge#handle"
        ]
      },
      "info": {
        "authors": "mari_023, Ridanisaurus",
        "classes": "82",
        "description": "Adds Wireless versions of ae2 Terminals with infinite range capabilities.\n",
        "displayName": "AE2WTLib",
        "file": "ae2wtlib-19.2.1.jar",
        "license": "MIT",
        "package": "de.mari_023.ae2wtlib",
        "updateUrl": "https://api.modrinth.com/updates/applied-energistics-2-wireless-terminals/forge_updates.json?neoforge=only",
        "version": "19.2.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "de.mari_023.ae2wtlib.wet.WETScreen",
          "de.mari_023.ae2wtlib.wat.WATScreen",
          "de.mari_023.ae2wtlib.wct.WirelessTerminalSettingsScreen",
          "de.mari_023.ae2wtlib.wct.magnet_card.MagnetScreen",
          "de.mari_023.ae2wtlib.wct.TrashScreen",
          "de.mari_023.ae2wtlib.wct.WCTScreen",
          "de.mari_023.ae2wtlib.wut.select.WUTSelectScreen"
        ],
        "net.minecraft.world.entity.Entity": [
          "de.mari_023.ae2wtlib.mixin.ServerPlayerMixin"
        ],
        "net.minecraft.world.item.Item": [
          "de.mari_023.ae2wtlib.wet.ItemWET",
          "de.mari_023.ae2wtlib.wat.ItemWAT",
          "de.mari_023.ae2wtlib.wct.ItemWCT"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "de.mari_023.ae2wtlib.wut.recipe.Combine",
          "de.mari_023.ae2wtlib.wut.recipe.Upgrade",
          "de.mari_023.ae2wtlib.wut.recipe.Common"
        ]
      },
      "modifies": [
        "appeng.core.definitions.AEItems",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.Gui",
        "net.minecraft.server.level.ServerPlayer"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Listens to Bow Loose Events",
        "Listens to Bow Nock Events",
        "Listens to Entity Interaction Events with Click Positions",
        "Listens to Item Pickup Events",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Methods",
        "Runs Client Tick Logic",
        "Uses Access Transformers"
      ]
    },
    "ae2wtlib_api": {
      "dependencies": {
        "ae2": "[19.1.2-beta,20.0.0)",
        "minecraft": "*",
        "neoforge": "*"
      },
      "info": {
        "authors": "mari_023, Ridanisaurus",
        "classes": "38",
        "description": "API for adding wireless terminals with easy integration with AE2wtlib.\n",
        "displayName": "AE2WTLib API",
        "file": "ae2wtlib-19.2.1.jar",
        "jarInJar": "de.mari_023.ae2wtlib_api-19.2.1.jar",
        "license": "MIT",
        "package": "de.mari_023.ae2wtlib.api",
        "version": "19.2.1"
      },
      "inheritance": {
        "net.minecraft.world.item.Item": [
          "de.mari_023.ae2wtlib.api.terminal.ItemWUT",
          "de.mari_023.ae2wtlib.api.terminal.ItemWT"
        ]
      },
      "summary": [
        "Custom Items",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "akashictome": {
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RenderGuiLayerEvent$Post": [
          "vazkii.akashictome.client.HUDHandler#onDrawScreen"
        ],
        "net.neoforged.neoforge.event.entity.item.ItemTossEvent": [
          "vazkii.akashictome.MorphingHandler#onItemDropped"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickEmpty": [
          "vazkii.akashictome.MorphingHandler#onPlayerLeftClick"
        ]
      },
      "info": {
        "authors": "Vazkii, MoreThanHidden, Uraneptus",
        "classes": "17",
        "description": "The book to end all books.",
        "displayName": "Akashic Tome",
        "file": "AkashicTome-1.8-29.jar",
        "license": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License",
        "package": "vazkii.akashictome",
        "version": "1.8-29"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "vazkii.akashictome.client.TomeScreen"
        ],
        "net.minecraft.world.item.Item": [
          "vazkii.akashictome.TomeItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "vazkii.akashictome.AttachementRecipe"
        ]
      },
      "summary": [
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Recipe Types",
        "Handles Left Clicks with Empty Hands (Client-side)",
        "Localization"
      ]
    },
    "almostunified": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.almostreliable.unified.mixin.unification.TieredItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "almostunified$onItemRepair",
              "raw": "almostunified$onItemRepair(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.almostreliable.unified.mixin.unification.ArmorItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "almostunified$onArmorRepair",
              "raw": "almostunified$onArmorRepair(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.almostreliable.unified.mixin.runtime.TagLoaderMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "almostunified$onTagUpdate",
              "raw": "almostunified$onTagUpdate(Ljava/util/Map;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.almostreliable.unified.mixin.runtime.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "almostunified$onRecipeReloadEnd",
              "raw": "almostunified$onRecipeReloadEnd(Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.almostreliable.unified.mixin.runtime.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.resources.ResourceLocation"
              ],
              "name": "almostunified$onRecipeError",
              "raw": "almostunified$onRecipeError(Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/resources/ResourceLocation;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lorg/slf4j/Logger;error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V}]"
            }
          },
          {
            "class": "com.almostreliable.unified.mixin.runtime.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "almostunified$onRecipeReload",
              "raw": "almostunified$onRecipeReload(Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.almostreliable.unified.mixin.runtime.ClientPacketListenerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.common.ClientboundUpdateTagsPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "almostunified$onClientTagsUpdate",
              "raw": "almostunified$onClientTagsUpdate(Lnet/minecraft/network/protocol/common/ClientboundUpdateTagsPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.almostreliable.unified.mixin.neoforge.worldgen.ServerLifecycleHooksMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.MinecraftServer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "almostunified$injectRegistryAccess",
              "raw": "almostunified$injectRegistryAccess(Lnet/minecraft/server/MinecraftServer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "emi": "[1.1.13,)",
        "jei": "[19.10.0.126,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.37,)",
        "roughlyenoughitems": "[16.0.762,)"
      },
      "info": {
        "authors": "Almost Reliable",
        "classes": "161",
        "description": "Unify all resources.",
        "displayName": "AlmostUnified",
        "file": "almostunified-neoforge-1.21.1-1.2.3.jar",
        "license": "All Rights Reserved",
        "package": "com.almostreliable.unified",
        "version": "1.21.1-1.2.3"
      },
      "inheritance": {
        "net.minecraft.world.item.crafting.Recipe": [
          "com.almostreliable.unified.compat.viewer.ClientRecipeTracker"
        ]
      },
      "modifies": [
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.tags.TagLoader",
        "net.minecraft.world.item.ArmorItem",
        "net.minecraft.world.item.TieredItem",
        "net.minecraft.world.item.crafting.RecipeManager",
        "net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration",
        "net.minecraft.world.level.storage.loot.LootPool",
        "net.minecraft.world.level.storage.loot.LootTable",
        "net.minecraft.world.level.storage.loot.entries.CompositeEntryBase",
        "net.minecraft.world.level.storage.loot.entries.LootItem",
        "net.neoforged.neoforge.server.ServerLifecycleHooks"
      ],
      "summary": [
        "Custom Recipe Types",
        "Localization",
        "Modifies Methods"
      ]
    },
    "antiquetradingship": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.12,)"
      },
      "events": {
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "antiquetradingship.AntiquetradingshipMod#tick"
        ]
      },
      "info": {
        "authors": "Wario",
        "classes": "2",
        "description": "Adds an antique trading ship to the oceans",
        "displayName": "AntiqueTradingShip",
        "file": "antiquetradingship-1.3.0-neoforge-1.21.1.jar",
        "license": "Academic Free License v3.0",
        "package": "antiquetradingship",
        "version": "1.3.0"
      },
      "summary": [
        "Custom World Generation",
        "Localization",
        "Runs Server Tick Logic"
      ]
    },
    "apothic_attributes": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.shadowsoffire.apothic_attributes.mixin.NearestAttackableTargetGoalMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "apoth_updateFollowRange",
              "raw": "apoth_updateFollowRange(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "dev.shadowsoffire.apothic_attributes.mixin.NearestAttackableTargetGoalMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Mob",
                "java.lang.Class",
                "int",
                "boolean",
                "boolean",
                "java.util.function.Predicate",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "apoth_cachePredicate",
              "raw": "apoth_cachePredicate(Lnet/minecraft/world/entity/Mob;Ljava/lang/Class;IZZLjava/util/function/Predicate;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "dev.shadowsoffire.apothic_attributes.mixin.client.AbstractContainerScreenMixin",
            "method": {
              "argTypes": [
                "double",
                "double",
                "int",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "apoth_superMouseDragged",
              "raw": "apoth_superMouseDragged(DDIDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.61,)",
        "placebo": "[9.6.2,)"
      },
      "events": {
        "dev.shadowsoffire.apothic_attributes.event.ApotheosisCommandEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#cmds"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "dev.shadowsoffire.apothic_attributes.ApothicAttributes#setup",
          "dev.shadowsoffire.apothic_attributes.ApothicAttributes#init"
        ],
        "net.neoforged.neoforge.client.event.GatherEffectScreenTooltipsEvent": [
          "dev.shadowsoffire.apothic_attributes.client.AttributesLibClient#effectGuiTooltips"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientReloadListenersEvent": [
          "dev.shadowsoffire.apothic_attributes.client.AttributesLibClient$ModBusSub#clientReload"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "dev.shadowsoffire.apothic_attributes.client.AttributesLibClient$ModBusSub#particleFactories"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "dev.shadowsoffire.apothic_attributes.client.AttributesLibClient#addAttribComponent"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "dev.shadowsoffire.apothic_attributes.ApothicAttributes#data"
        ],
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#reloads"
        ],
        "net.neoforged.neoforge.event.ItemAttributeModifierEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#affixModifiers",
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#bonusModifiers"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#sync"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#cmds"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeModificationEvent": [
          "dev.shadowsoffire.apothic_attributes.ApothicAttributes#applyAttribs"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#arrow"
        ],
        "net.neoforged.neoforge.event.entity.ProjectileImpactEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#fixMCF9370",
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#dodge"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Post": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#lifeStealOverheal"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Pre": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#recordPreDamageHealth"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent$Tick": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#drawSpeed"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingExperienceDropEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#mobXp"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingHealEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#heal"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#dodge",
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#projDmg",
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#apothCriticalStrike",
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#meleeDamageAttributes"
        ],
        "net.neoforged.neoforge.event.entity.player.CriticalHitEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#vanillaCritDmg"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "dev.shadowsoffire.apothic_attributes.client.AttributesLibClient#potionTooltips"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$BreakSpeed": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#breakSpd"
        ],
        "net.neoforged.neoforge.event.level.BlockDropsEvent": [
          "dev.shadowsoffire.apothic_attributes.impl.AttributeEvents#blockBreak"
        ]
      },
      "info": {
        "authors": "Shadows_of_Fire",
        "classes": "96",
        "description": "A library mod providing Attributes and related things.",
        "displayName": "Apothic Attributes",
        "file": "ApothicAttributes-1.21.1-2.6.2.jar",
        "license": "MIT License",
        "package": "dev.shadowsoffire.apothic_attributes",
        "version": "2.6.2"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.shadowsoffire.apothic_attributes.mixin.client.AbstractContainerScreenMixin"
        ],
        "net.minecraft.client.particle.Particle": [
          "dev.shadowsoffire.apothic_attributes.client.AttributesLibClient$ApothCritParticle"
        ],
        "net.minecraft.data.DataProvider": [
          "dev.shadowsoffire.apothic_attributes.util.MiscDatagen"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "dev.shadowsoffire.apothic_attributes.mob_effect.VitalityEffect",
          "dev.shadowsoffire.apothic_attributes.mob_effect.SunderingEffect",
          "dev.shadowsoffire.apothic_attributes.mob_effect.KnowledgeEffect",
          "dev.shadowsoffire.apothic_attributes.mob_effect.GrievousEffect",
          "dev.shadowsoffire.apothic_attributes.mob_effect.FlyingEffect",
          "dev.shadowsoffire.apothic_attributes.mob_effect.DetonationEffect",
          "dev.shadowsoffire.apothic_attributes.mob_effect.BleedingEffect"
        ],
        "net.minecraft.world.entity.Entity": [
          "dev.shadowsoffire.apothic_attributes.mixin.ThrownTridentMixin",
          "dev.shadowsoffire.apothic_attributes.mixin.LivingEntityMixin"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen",
        "net.minecraft.world.damagesource.CombatRules",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal",
        "net.minecraft.world.entity.player.Player",
        "net.minecraft.world.entity.projectile.ThrownTrident",
        "net.neoforged.neoforge.common.extensions.IItemExtension"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Custom Data Pack Sync",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Server Commands",
        "Custom Tag Assignments",
        "Listens to Entity Damage Events",
        "Listens to Entity Healing Events",
        "Listens to Entity Join World Events",
        "Localization",
        "Modifies Block Breaking Speed",
        "Modifies Item Attributes",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "appleskin": {
      "dependencies": {
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.CustomizeGuiOverlayEvent$DebugText": [
          "squeek.appleskin.client.DebugInfoHandler#onTextRender"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "squeek.appleskin.AppleSkin#onRegisterHudHandler"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$GatherComponents": [
          "squeek.appleskin.client.TooltipOverlayHandler#gatherTooltips"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "squeek.appleskin.network.SyncHandler#onPlayerLoggedIn"
        ],
        "net.neoforged.neoforge.event.tick.EntityTickEvent$Pre": [
          "squeek.appleskin.network.SyncHandler#onLivingTickEvent"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "squeek.appleskin.AppleSkin#onRegisterPayloadHandler"
        ]
      },
      "info": {
        "authors": "squeek",
        "classes": "36",
        "description": "Adds various food-related HUD improvements",
        "displayName": "AppleSkin",
        "file": "appleskin-neoforge-mc1.21-3.0.5.jar",
        "license": "The Unlicense",
        "package": "squeek.appleskin",
        "version": "3.0.5+mc1.21"
      },
      "summary": [
        "Custom Network Packets",
        "Listens to Player Login Events",
        "Modifies Tooltips",
        "Runs Entity Tick Logic"
      ]
    },
    "appmek": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "me.ramidzkh.mekae2.mixin.CondenserMEStorageMixin",
            "method": {
              "argTypes": [
                "appeng.api.stacks.AEKey",
                "long",
                "appeng.api.config.Actionable",
                "appeng.api.networking.security.IActionSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onInsert",
              "raw": "onInsert(Lappeng/api/stacks/AEKey;JLappeng/api/config/Actionable;Lappeng/api/networking/security/IActionSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "ae2": "[19.0.24,20.0.0)",
        "mekanism": "[10.7.0,11-)",
        "neoforge": "[21.0,)"
      },
      "info": {
        "authors": "ramidzkh",
        "classes": "50",
        "description": "Use Mekanism resources through your ME network",
        "displayName": "Applied Mekanistics",
        "file": "Applied-Mekanistics-1.6.2.jar",
        "license": "See GitHub repository for details",
        "package": "me.ramidzkh.mekae2",
        "updateUrl": "https://api.modrinth.com/updates/applied-mekanistics/forge_updates.json",
        "version": "1.6.2"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "me.ramidzkh.mekae2.data.ItemModelProvider",
          "me.ramidzkh.mekae2.data.BlockTagsProvider",
          "me.ramidzkh.mekae2.data.ItemTagsProvider",
          "me.ramidzkh.mekae2.data.RecipeProvider"
        ],
        "net.minecraft.world.item.Item": [
          "me.ramidzkh.mekae2.item.ChemicalPortableCellItem",
          "me.ramidzkh.mekae2.item.ChemicalStorageCell"
        ]
      },
      "modifies": [
        "appeng.blockentity.misc.CondenserMEStorage",
        "appeng.me.storage.MEInventoryHandler"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods",
        "Uses Data Generators"
      ]
    },
    "aquatic_frontiers": {
      "dependencies": {
        "geckolib": "[0,)",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.65,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "net.mcreator.aquaticfrontiers.init.AquaticFrontiersModEntityRenderers#registerEntityRenderers"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeCreationEvent": [
          "net.mcreator.aquaticfrontiers.init.AquaticFrontiersModEntities#registerAttributes"
        ],
        "net.neoforged.neoforge.event.entity.RegisterSpawnPlacementsEvent": [
          "net.mcreator.aquaticfrontiers.init.AquaticFrontiersModEntities#init"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$EntityPlaceEvent": [
          "net.mcreator.aquaticfrontiers.procedures.CoralGolemSpawningProcedureProcedure#onBlockPlace"
        ],
        "net.neoforged.neoforge.event.tick.EntityTickEvent$Pre": [
          "net.mcreator.aquaticfrontiers.init.EntityAnimationFactory#onEntityTick"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "net.mcreator.aquaticfrontiers.AquaticFrontiersMod#tick"
        ]
      },
      "info": {
        "authors": "GlitchedMastery",
        "classes": "50",
        "description": "A mod which adds a few aquatic creatures to the game",
        "displayName": "Aquatic Frontiers",
        "file": "aquatic_frontiers-1.7-neoforge-1.21.1.jar",
        "license": "All Rights Reserved",
        "package": "net.mcreator.aquaticfrontiers",
        "version": "1.7"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "net.mcreator.aquaticfrontiers.entity.SpongeSquidEntity",
          "net.mcreator.aquaticfrontiers.entity.SoulSandyEntity",
          "net.mcreator.aquaticfrontiers.entity.SandyPickleEntity",
          "net.mcreator.aquaticfrontiers.entity.SandyEntity",
          "net.mcreator.aquaticfrontiers.entity.SandyCoralEntity",
          "net.mcreator.aquaticfrontiers.entity.GiantSquidEntity",
          "net.mcreator.aquaticfrontiers.entity.CoralGolemEntity",
          "net.mcreator.aquaticfrontiers.entity.CoralCrabEntity"
        ],
        "net.minecraft.world.entity.Mob": [
          "net.mcreator.aquaticfrontiers.entity.SpongeSquidEntity",
          "net.mcreator.aquaticfrontiers.entity.SoulSandyEntity",
          "net.mcreator.aquaticfrontiers.entity.SandyPickleEntity",
          "net.mcreator.aquaticfrontiers.entity.SandyEntity",
          "net.mcreator.aquaticfrontiers.entity.SandyCoralEntity",
          "net.mcreator.aquaticfrontiers.entity.GiantSquidEntity",
          "net.mcreator.aquaticfrontiers.entity.CoralGolemEntity",
          "net.mcreator.aquaticfrontiers.entity.CoralCrabEntity"
        ],
        "net.minecraft.world.entity.animal.Animal": [
          "net.mcreator.aquaticfrontiers.entity.CoralCrabEntity"
        ],
        "net.minecraft.world.item.Item": [
          "net.mcreator.aquaticfrontiers.item.SandyEggItem",
          "net.mcreator.aquaticfrontiers.item.AquaticFrontiersThemeItem"
        ]
      },
      "summary": [
        "Custom Animals",
        "Custom Entities",
        "Custom Entity Attributes",
        "Custom Entity Renderers",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Block Placement",
        "Runs Entity Tick Logic",
        "Runs Server Tick Logic"
      ]
    },
    "architectury": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.architectury.mixin.inject.MixinItem",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.Item$Properties",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lnet/minecraft/world/item/Item$Properties;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.architectury.mixin.forge.neoforge.MixinChunkSerializer",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.entity.ai.village.poi.PoiManager",
                "net.minecraft.world.level.chunk.storage.RegionStorageInfo",
                "net.minecraft.world.level.ChunkPos",
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "read",
              "raw": "read(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/ai/village/poi/PoiManager;Lnet/minecraft/world/level/chunk/storage/RegionStorageInfo;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "dev.architectury.mixin.forge.neoforge.MixinBucketItem",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.InteractionHand",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.phys.BlockHitResult"
              ],
              "name": "fillBucket",
              "raw": "fillBucket(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/BlockHitResult;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/phys/BlockHitResult;getType()Lnet/minecraft/world/phys/HitResult$Type;, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.architectury.mixin.forge.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onStopping",
              "raw": "onStopping(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target={1}(Ljava/lang/String;)V, remap=false}]"
            }
          },
          {
            "class": "dev.architectury.mixin.forge.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onStart",
              "raw": "onStart(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/lang/Runtime;getRuntime()Ljava/lang/Runtime;, ordinal=0}]"
            }
          },
          {
            "class": "dev.architectury.mixin.forge.MixinInventory",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "updateItems",
              "raw": "updateItems(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.architectury.mixin.forge.MixinFallingBlockEntity",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.Block",
                "net.minecraft.core.BlockPos",
                "boolean",
                "boolean",
                "double",
                "net.minecraft.world.level.block.state.BlockState"
              ],
              "name": "handleLand",
              "raw": "handleLand(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;ZZDLnet/minecraft/world/level/block/state/BlockState;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/block/Fallable;onLand(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V}]"
            }
          },
          {
            "class": "dev.architectury.mixin.forge.MixinClientLevel",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tickEntitiesPost",
              "raw": "tickEntitiesPost(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.architectury.mixin.forge.MixinClientLevel",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tickEntities",
              "raw": "tickEntities(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "dev.architectury.mixin.MixinLightningBolt",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.util.List"
              ],
              "name": "handleLightning",
              "raw": "handleLightning(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/util/List;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BY], by=1, value=INVOKE_ASSIGN, target=Lnet/minecraft/world/level/Level;getEntities(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List;, ordinal=1}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.110-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "dev.architectury.event.forge.EventHandlerImplClient$ModBasedEventHandler#event"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon$ModBasedEventHandler#event"
        ],
        "net.neoforged.neoforge.client.event.ClientChatEvent": [
          "dev.architectury.event.forge.EventHandlerImplClient#event"
        ],
        "net.neoforged.neoforge.client.event.ClientChatReceivedEvent": [
          "dev.architectury.event.forge.EventHandlerImplClient#event"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$Clone": [
          "dev.architectury.event.forge.EventHandlerImplClient#event"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingIn": [
          "dev.architectury.event.forge.EventHandlerImplClient#event"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingOut": [
          "dev.architectury.event.forge.EventHandlerImplClient#event"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#event"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#event"
        ],
        "net.neoforged.neoforge.client.event.ContainerScreenEvent$Render$Background": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventContainerScreenEvent"
        ],
        "net.neoforged.neoforge.client.event.ContainerScreenEvent$Render$Foreground": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventContainerScreenEvent"
        ],
        "net.neoforged.neoforge.client.event.CustomizeGuiOverlayEvent$DebugText": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventRenderGameOverlayEvent"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "dev.architectury.registry.client.level.entity.forge.EntityModelLayerRegistryImpl#event"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "dev.architectury.registry.client.level.entity.forge.EntityRendererRegistryImpl#event"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventInputEvent"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseButton$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventInputEvent"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseButton$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventInputEvent"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseScrollingEvent": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventInputEvent"
        ],
        "net.neoforged.neoforge.client.event.RecipesUpdatedEvent": [
          "dev.architectury.event.forge.EventHandlerImplClient#event"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientCommandsEvent": [
          "dev.architectury.event.forge.EventHandlerImplClient#event"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "dev.architectury.registry.client.rendering.forge.ColorHandlerRegistryImpl#onBlockColorEvent"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "dev.architectury.registry.client.rendering.forge.ColorHandlerRegistryImpl#onItemColorEvent"
        ],
        "net.neoforged.neoforge.client.event.RegisterShadersEvent": [
          "dev.architectury.event.forge.EventHandlerImplClient$ModBasedEventHandler#event"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiEvent$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventRenderGameOverlayEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$Color": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventRenderTooltipEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventRenderTooltipEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$CharacterTyped$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventKeyboardCharTypedEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$CharacterTyped$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventKeyboardCharTypedEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventInitScreenEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventInitScreenEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyPressed$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventKeyboardKeyPressedEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyPressed$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventKeyboardKeyPressedEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyReleased$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventKeyboardKeyReleasedEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyReleased$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventKeyboardKeyReleasedEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonPressed$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventMouseClickedEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonPressed$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventMouseClickedEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonReleased$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventMouseReleasedEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonReleased$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventMouseReleasedEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseDragged$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventMouseDragEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseDragged$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventMouseDragEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseScrolled$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventMouseScrollEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseScrolled$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventMouseScrollEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Opening": [
          "dev.architectury.event.forge.EventHandlerImplClient#event"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Render$Post": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventDrawScreenEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Render$Pre": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventDrawScreenEvent"
        ],
        "net.neoforged.neoforge.event.CommandEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.LootTableLoadEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.ServerChatEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventAfter",
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeCreationEvent": [
          "dev.architectury.registry.level.entity.forge.EntityAttributeRegistryImpl#event"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.item.ItemTossEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.living.AnimalTameEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.living.FinalizeSpawnEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventLivingSpawnEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.player.AdvancementEvent$AdvancementEarnEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.player.AttackEntityEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Post": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Pre": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "dev.architectury.event.forge.EventHandlerImplClient#event"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerContainerEvent$Close": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventPlayerContainerEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerContainerEvent$Open": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventPlayerContainerEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$Clone": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventPlayerEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$ItemCraftedEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$ItemSmeltedEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerRespawnEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventPlayerInteractEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickBlock": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventPlayerInteractEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickEmpty": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventPlayerInteractEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventPlayerInteractEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickEmpty": [
          "dev.architectury.event.forge.EventHandlerImplClient#eventPlayerInteractEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventPlayerInteractEvent"
        ],
        "net.neoforged.neoforge.event.furnace.FurnaceFuelBurnTimeEvent": [
          "dev.architectury.registry.fuel.forge.FuelRegistryImpl#event"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BreakEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$EntityPlaceEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$FarmlandTrampleEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.level.ChunkDataEvent$Load": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventChunkDataEvent"
        ],
        "net.neoforged.neoforge.event.level.ChunkDataEvent$Save": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventChunkDataEvent"
        ],
        "net.neoforged.neoforge.event.level.ExplosionEvent$Detonate": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventExplosionEvent"
        ],
        "net.neoforged.neoforge.event.level.ExplosionEvent$Start": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventExplosionEvent"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Load": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventWorldEvent",
          "dev.architectury.event.forge.EventHandlerImplClient#eventWorldEvent"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Save": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventWorldEvent"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "dev.architectury.event.forge.EventHandlerImplCommon#eventWorldEvent"
        ],
        "net.neoforged.neoforge.event.server.ServerAboutToStartEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.server.ServerStartingEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppedEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppingEvent": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Post": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Pre": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Pre": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Pre": [
          "dev.architectury.event.forge.EventHandlerImplCommon#event"
        ],
        "net.neoforged.neoforge.registries.NewRegistryEvent": [
          "dev.architectury.registry.registries.forge.RegistrarManagerImpl$RegistryProviderImpl$EventListener#handleEvent"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "dev.architectury.registry.registries.forge.RegistrarManagerImpl$RegistryProviderImpl$EventListener#handleEventPost",
          "dev.architectury.registry.registries.forge.RegistrarManagerImpl$RegistryProviderImpl$EventListener#handleEvent"
        ]
      },
      "info": {
        "authors": "shedaniel",
        "classes": "382",
        "description": "A intermediary api aimed to ease developing multiplatform mods.\n",
        "displayName": "Architectury",
        "file": "architectury-13.0.8-neoforge.jar",
        "license": "GNU LGPLv3",
        "package": "dev.architectury.impl",
        "version": "13.0.8"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "dev.architectury.mixin.forge.MixinFallingBlockEntity",
          "dev.architectury.mixin.MixinLightningBolt"
        ],
        "net.minecraft.world.item.Item": [
          "dev.architectury.core.item.ArchitecturySpawnEggItem",
          "dev.architectury.core.item.ArchitecturyMobBucketItem",
          "dev.architectury.core.item.ArchitecturyBucketItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "dev.architectury.core.block.ArchitecturyLiquidBlock"
        ]
      },
      "modifies": [
        "dev.architectury.extensions.ItemExtension",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.multiplayer.ClientLevel",
        "net.minecraft.commands.CommandSourceStack",
        "net.minecraft.world.entity.EntityType",
        "net.minecraft.world.entity.LightningBolt",
        "net.minecraft.world.entity.item.FallingBlockEntity",
        "net.minecraft.world.entity.player.Inventory",
        "net.minecraft.world.food.FoodProperties$Builder",
        "net.minecraft.world.item.BucketItem",
        "net.minecraft.world.item.Item",
        "net.minecraft.world.item.Item$Properties",
        "net.minecraft.world.level.block.Block",
        "net.minecraft.world.level.block.LiquidBlock",
        "net.minecraft.world.level.chunk.storage.ChunkSerializer",
        "net.minecraft.world.level.material.Fluid",
        "net.neoforged.neoforge.event.level.LevelEvent"
      ],
      "summary": [
        "Custom Blocks",
        "Custom Client Commands",
        "Custom Entities",
        "Custom Entity Attributes",
        "Custom Entity Renderers",
        "Custom Items",
        "Custom Server Commands",
        "Custom Shaders",
        "Handles Explosion Detonation",
        "Handles Left Clicks with Empty Hands (Client-side)",
        "Handles Right Clicks with Empty Hands (Client-side)",
        "Handles Right Clicks with Items",
        "Listens to Client Chat Messages",
        "Listens to Dimension Change Events",
        "Listens to Entity Damage Events",
        "Listens to Entity Death Events",
        "Listens to Entity Interaction Events",
        "Listens to Entity Join World Events",
        "Listens to GUI Open Events",
        "Listens to Item Crafting Events",
        "Listens to Item Pickup Events",
        "Listens to Item Smelting Events",
        "Listens to Left Click Block Events",
        "Listens to Player Login Events",
        "Listens to Player Logout Events",
        "Listens to Recipe Updates",
        "Listens to Right Click Block Events",
        "Listens to Server About to Start Events",
        "Listens to Server Chat Messages",
        "Listens to Server Started Events",
        "Listens to Server Starting Events",
        "Listens to Server Stopped Events",
        "Listens to Server Stopping Events",
        "Modifies Block Breaking",
        "Modifies Block Placement",
        "Modifies Entity Spawning",
        "Modifies Explosions",
        "Modifies Farmland Trampling",
        "Modifies GUI Rendering",
        "Modifies Methods",
        "Runs Client Tick Logic",
        "Runs Player Tick Logic",
        "Runs Server Tick Logic",
        "Runs World Tick Logic",
        "Uses Access Transformers"
      ]
    },
    "ars_nouveau": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.structure.StructureTemplateMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.ServerLevelAccessor",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings",
                "net.minecraft.util.RandomSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "ars_nouveau_preventAutoWaterlogging",
              "raw": "ars_nouveau_preventAutoWaterlogging(Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/util/RandomSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.rewind.RewindEntityMixin",
            "method": {
              "argTypes": [
                "double",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "anSetDeltaMovement",
              "raw": "anSetDeltaMovement(DDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.rewind.RewindEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.phys.Vec3",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "anSetDeltaMovement",
              "raw": "anSetDeltaMovement(Lnet/minecraft/world/phys/Vec3;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.rewind.RewindEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onTick",
              "raw": "onTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.redstone.RedstoneLevelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.Direction",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getArsSignal",
              "raw": "getArsSignal(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.perks.PerkLivingEntity",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getJumpPower",
              "raw": "getJumpPower(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.perks.PerkLivingEntity",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "decreaseAirSupply",
              "raw": "decreaseAirSupply(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.light.LightEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "removed",
              "raw": "removed(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.light.LightEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRemove",
              "raw": "onRemove(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.light.LightEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onTick",
              "raw": "onTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.light.LevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockAndTintGetter",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "ars_nouveau$onGetLightmapCoordinates",
              "raw": "ars_nouveau$onGetLightmapCoordinates(Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.light.EntityRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "ars_nouveau$onGetBlockLight",
              "raw": "ars_nouveau$onGetBlockLight(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.light.ClientMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientLevel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "ars_nouveau$onSetWorld",
              "raw": "ars_nouveau$onSetWorld(Lnet/minecraft/client/multiplayer/ClientLevel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.camera.PlayerListMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "double",
                "double",
                "double",
                "double",
                "net.minecraft.resources.ResourceKey",
                "net.minecraft.network.protocol.Packet",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "int",
                "net.minecraft.server.level.ServerPlayer"
              ],
              "name": "anbroadcastToCameras",
              "raw": "anbroadcastToCameras(Lnet/minecraft/world/entity/player/Player;DDDDLnet/minecraft/resources/ResourceKey;Lnet/minecraft/network/protocol/Packet;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;ILnet/minecraft/server/level/ServerPlayer;)V"
            },
            "params": {
              "at": "[{value=INVOKE_ASSIGN, target=Lnet/minecraft/server/level/ServerPlayer;getZ()D}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.camera.ClientChunkCacheMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "net.minecraft.world.level.chunk.status.ChunkStatus",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "an$onGetChunk",
              "raw": "an$onGetChunk(IILnet/minecraft/world/level/chunk/status/ChunkStatus;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.camera.ClientChunkCacheMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "net.minecraft.network.FriendlyByteBuf",
                "net.minecraft.nbt.CompoundTag",
                "java.util.function.Consumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "an$onReplace",
              "raw": "an$onReplace(IILnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.camera.ClientChunkCacheMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.ChunkPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "an$onDrop",
              "raw": "an$onDrop(Lnet/minecraft/world/level/ChunkPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.camera.ClientChunkCacheMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "an$onUpdateViewRadius",
              "raw": "an$onUpdateViewRadius(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/multiplayer/ClientChunkCache$Storage;<init>(Lnet/minecraft/client/multiplayer/ClientChunkCache;I)V}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.camera.ClientChunkCacheMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientLevel",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "an$onInit",
              "raw": "an$onInit(Lnet/minecraft/client/multiplayer/ClientLevel;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.camera.ChunkMapMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerPlayer",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "an$onIsChunkTracked",
              "raw": "an$onIsChunkTracked(Lnet/minecraft/server/level/ServerPlayer;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.camera.ChunkMapMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.chunk.LevelChunk",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.server.level.ServerPlayer"
              ],
              "name": "an$sendChunksToCameras",
              "raw": "an$sendChunksToCameras(Lnet/minecraft/world/level/chunk/LevelChunk;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/server/level/ServerPlayer;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/server/level/ServerPlayer;getChunkTrackingView()Lnet/minecraft/server/level/ChunkTrackingView;}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.camera.ChunkMapMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerPlayer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "an$onUpdateChunkTracking",
              "raw": "an$onUpdateChunkTracking(Lnet/minecraft/server/level/ServerPlayer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.GameRendererMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "arsNouveau$resize",
              "raw": "arsNouveau$resize(IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "ars_nouveau$setSecondsOnFire",
              "raw": "ars_nouveau$setSecondsOnFire(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.hollingsworth.arsnouveau.common.mixin.DamageSourceMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "java.lang.String"
              ],
              "name": "spellDeathMessage",
              "raw": "spellDeathMessage(Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Ljava/lang/String;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/world/item/ItemStack;isEmpty()Z}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "curios": "[1.19-5.0.7.1,)",
        "geckolib": "[4.2.1,)",
        "neoforge": "[21.0.86-beta,)"
      },
      "events": {
        "com.hollingsworth.arsnouveau.api.event.DispelEvent": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#dispelEvent",
          "com.hollingsworth.arsnouveau.common.event.ArsEvents#dispelEvent"
        ],
        "com.hollingsworth.arsnouveau.api.event.EffectResolveEvent$Post": [
          "com.hollingsworth.arsnouveau.common.event.PerkEvents#postEffectResolve"
        ],
        "com.hollingsworth.arsnouveau.api.event.EffectResolveEvent$Pre": [
          "com.hollingsworth.arsnouveau.common.event.PerkEvents#preEffectResolve"
        ],
        "com.hollingsworth.arsnouveau.api.event.FamiliarSummonEvent": [
          "com.hollingsworth.arsnouveau.common.event.FamiliarEvents#summonEvent"
        ],
        "com.hollingsworth.arsnouveau.api.event.MaxManaCalcEvent": [
          "com.hollingsworth.arsnouveau.common.event.FamiliarEvents#maxManaCalc"
        ],
        "com.hollingsworth.arsnouveau.api.event.SpellCastEvent": [
          "com.hollingsworth.arsnouveau.common.items.curios.SummoningFocus#castSpell",
          "com.hollingsworth.arsnouveau.common.event.PerkEvents#onSpellCast",
          "com.hollingsworth.arsnouveau.common.event.FamiliarEvents#castEvent",
          "com.hollingsworth.arsnouveau.common.event.ArsEvents#castEvent"
        ],
        "com.hollingsworth.arsnouveau.api.event.SpellCostCalcEvent": [
          "com.hollingsworth.arsnouveau.common.event.FamiliarEvents#calcEvent",
          "com.hollingsworth.arsnouveau.common.event.ArsEvents#costCalc"
        ],
        "com.hollingsworth.arsnouveau.api.event.SpellDamageEvent$Post": [
          "com.hollingsworth.arsnouveau.common.event.PerkEvents#postSpellDamageEvent"
        ],
        "com.hollingsworth.arsnouveau.api.event.SpellDamageEvent$Pre": [
          "com.hollingsworth.arsnouveau.common.event.PerkEvents#preSpellDamageEvent",
          "com.hollingsworth.arsnouveau.common.event.ArsEvents#preSpellDamage"
        ],
        "com.hollingsworth.arsnouveau.api.event.SpellModifierEvent": [
          "com.hollingsworth.arsnouveau.common.event.FamiliarEvents#modifierEvent",
          "com.hollingsworth.arsnouveau.common.event.FamiliarEvents#spellResolveEvent"
        ],
        "com.hollingsworth.arsnouveau.api.event.SpellResolveEvent$Post": [
          "com.hollingsworth.arsnouveau.common.event.PerkEvents#postSpellResolve",
          "com.hollingsworth.arsnouveau.common.event.ArsEvents#spellResolve"
        ],
        "com.hollingsworth.arsnouveau.api.event.SpellResolveEvent$Pre": [
          "com.hollingsworth.arsnouveau.common.event.PerkEvents#preSpellResolve"
        ],
        "com.hollingsworth.arsnouveau.api.event.SummonEvent": [
          "com.hollingsworth.arsnouveau.common.items.curios.SummoningFocus#summonedEvent"
        ],
        "com.hollingsworth.arsnouveau.api.event.SummonEvent$Death": [
          "com.hollingsworth.arsnouveau.common.items.curios.SummoningFocus#summonDeathEvent"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "com.hollingsworth.arsnouveau.setup.config.Config#onLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "com.hollingsworth.arsnouveau.setup.config.Config#onReload"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.hollingsworth.arsnouveau.client.registry.ClientHandler#init"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingIn": [
          "com.hollingsworth.arsnouveau.common.entity.pathfinding.ClientEventHandler#clientPlayerLogin"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingOut": [
          "com.hollingsworth.arsnouveau.client.events.ClientPlayerEvent#playerLogout"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#clientTickEnd",
          "com.hollingsworth.arsnouveau.common.camera.CameraController#onClientTick",
          "com.hollingsworth.arsnouveau.api.event.EventQueue#clientTickEvent"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "com.hollingsworth.arsnouveau.common.camera.CameraController#onClientTick"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.hollingsworth.arsnouveau.client.registry.ClientHandler#registerRenderers"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$InteractionKeyMappingTriggered": [
          "com.hollingsworth.arsnouveau.common.camera.ClientCameraEvents#onClickInput"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "com.hollingsworth.arsnouveau.client.keybindings.KeyHandler#keyEvent"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseButton$Post": [
          "com.hollingsworth.arsnouveau.client.keybindings.KeyHandler#mouseEvent"
        ],
        "net.neoforged.neoforge.client.event.MovementInputUpdateEvent": [
          "com.hollingsworth.arsnouveau.client.gui.radial_menu.GuiRadialMenu#updateInputEvent"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientTooltipComponentFactoriesEvent": [
          "com.hollingsworth.arsnouveau.client.events.ClientEvents$ClientModEvents#registerTooltipFactory"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "com.hollingsworth.arsnouveau.client.registry.ClientHandler#initBlockColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "com.hollingsworth.arsnouveau.client.registry.ClientHandler#initItemColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "com.hollingsworth.arsnouveau.client.registry.ClientHandler#registerOverlays"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "com.hollingsworth.arsnouveau.client.registry.ModKeyBindings#registerKeyBindings"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.hollingsworth.arsnouveau.client.registry.ClientHandler#registerMenu"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "com.hollingsworth.arsnouveau.client.registry.ModParticles#registerFactories"
        ],
        "net.neoforged.neoforge.client.event.RegisterShadersEvent": [
          "com.hollingsworth.arsnouveau.client.registry.ShaderRegistry#shaderRegistry"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiLayerEvent$Pre": [
          "com.hollingsworth.arsnouveau.common.camera.ClientCameraEvents#onGuiOpen",
          "com.hollingsworth.arsnouveau.client.events.ClientEvents#overlayEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderHandEvent": [
          "com.hollingsworth.arsnouveau.common.camera.ClientCameraEvents#renderHandEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "com.hollingsworth.arsnouveau.client.events.ClientEvents#highlightBlockEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.hollingsworth.arsnouveau.common.event.ScryEvents#renderScry",
          "com.hollingsworth.arsnouveau.common.event.ScryEvents#onRenderHighlights",
          "com.hollingsworth.arsnouveau.common.entity.pathfinding.ClientEventHandler#renderWorldLastEvent",
          "com.hollingsworth.arsnouveau.client.events.ClientEvents#renderWorldLastEvent",
          "com.hollingsworth.arsnouveau.client.SkyTextureHandler#renderSky"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$GatherComponents": [
          "com.hollingsworth.arsnouveau.client.events.ClientEvents#addComponents"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$Pre": [
          "com.hollingsworth.arsnouveau.client.events.ClientEvents#TooltipEvent"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "com.hollingsworth.arsnouveau.client.events.ClientEvents$ClientModEvents#registerClientExtensions"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.hollingsworth.arsnouveau.common.datagen.ModDatagen#datagen"
        ],
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#resourceLoadEvent"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#commandRegister"
        ],
        "net.neoforged.neoforge.event.brewing.RegisterBrewingRecipesEvent": [
          "com.hollingsworth.arsnouveau.setup.registry.ModPotions#addRecipes"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeCreationEvent": [
          "com.hollingsworth.arsnouveau.setup.registry.ModEntities$RegistrationHandler#registerEntityAttributes"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeModificationEvent": [
          "com.hollingsworth.arsnouveau.api.perk.PerkAttributes#modifyEntityAttributes"
        ],
        "net.neoforged.neoforge.event.entity.EntityMountEvent": [
          "com.hollingsworth.arsnouveau.common.event.JarEvents#onRide"
        ],
        "net.neoforged.neoforge.event.entity.EntityTravelToDimensionEvent": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#endDupePatch"
        ],
        "net.neoforged.neoforge.event.entity.RegisterSpawnPlacementsEvent": [
          "com.hollingsworth.arsnouveau.setup.registry.ModEntities#registerPlacements"
        ],
        "net.neoforged.neoforge.event.entity.living.BabyEntitySpawnEvent": [
          "com.hollingsworth.arsnouveau.common.block.tile.VitalicSourcelinkTile#babySpawnEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.FinalizeSpawnEvent": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#livingSpawnEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Post": [
          "com.hollingsworth.arsnouveau.common.event.ReactiveEvents#livingHitEvent",
          "com.hollingsworth.arsnouveau.common.event.FamiliarEvents#livingHurtEvent",
          "com.hollingsworth.arsnouveau.common.event.EventHandler#livingHurtEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Pre": [
          "com.hollingsworth.arsnouveau.common.potions.GravityEffect#entityHurt",
          "com.hollingsworth.arsnouveau.common.potions.BounceEffect#onFlyWallDamage",
          "com.hollingsworth.arsnouveau.common.event.EventHandler#entityHurt",
          "com.hollingsworth.arsnouveau.common.camera.CameraEvents#onDamageTaken"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "com.hollingsworth.arsnouveau.common.mob_jar.WitherBehavior#livingDeath",
          "com.hollingsworth.arsnouveau.common.event.PerkEvents#totemEvent",
          "com.hollingsworth.arsnouveau.common.block.tile.VitalicSourcelinkTile#livingDeath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent$Finish": [
          "com.hollingsworth.arsnouveau.common.event.FamiliarEvents#eatEvent",
          "com.hollingsworth.arsnouveau.common.event.EventHandler#eatEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEquipmentChangeEvent": [
          "com.hollingsworth.arsnouveau.common.event.PerkEvents#equipmentChangedEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEvent$LivingJumpEvent": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#onJump",
          "com.hollingsworth.arsnouveau.common.event.EventHandler#jumpEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingFallEvent": [
          "com.hollingsworth.arsnouveau.common.potions.BounceEffect#onFall",
          "com.hollingsworth.arsnouveau.common.event.EventHandler#fallEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingHealEvent": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#entityHeal"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingKnockBackEvent": [
          "com.hollingsworth.arsnouveau.common.event.FamiliarEvents#knockbackEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingShieldBlockEvent": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#shieldEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.MobEffectEvent$Added": [
          "com.hollingsworth.arsnouveau.common.event.FamiliarEvents#potionEvent",
          "com.hollingsworth.arsnouveau.common.event.EventHandler#onPotionAdd"
        ],
        "net.neoforged.neoforge.event.entity.living.MobEffectEvent$Expired": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#onPotionExpire"
        ],
        "net.neoforged.neoforge.event.entity.living.MobEffectEvent$Remove": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#onPotionRemove"
        ],
        "net.neoforged.neoforge.event.entity.player.AttackEntityEvent": [
          "com.hollingsworth.arsnouveau.common.event.ReactiveEvents#playerAttackEntity"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Pre": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#itemPickupEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "com.hollingsworth.arsnouveau.client.events.ClientEvents#onTooltip"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": [
          "com.hollingsworth.arsnouveau.setup.registry.CapabilityRegistry$EventHandler#onPlayerDimChangedEvent",
          "com.hollingsworth.arsnouveau.common.event.ManaCapEvents#playerChangeDimension"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "com.hollingsworth.arsnouveau.setup.registry.CapabilityRegistry$EventHandler#onPlayerLoginEvent",
          "com.hollingsworth.arsnouveau.common.event.ScryEvents#playerLoginEvent",
          "com.hollingsworth.arsnouveau.common.event.EventHandler#playerLogin"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "com.hollingsworth.arsnouveau.common.camera.CameraEvents#onPlayerLoggedOut"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerRespawnEvent": [
          "com.hollingsworth.arsnouveau.setup.registry.CapabilityRegistry$EventHandler#respawnEvent",
          "com.hollingsworth.arsnouveau.common.event.ManaCapEvents#playerRespawn"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$StartTracking": [
          "com.hollingsworth.arsnouveau.setup.registry.CapabilityRegistry$EventHandler#onPlayerStartTrackingEvent",
          "com.hollingsworth.arsnouveau.common.event.ManaCapEvents#playerLoggedIn"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickBlock": [
          "com.hollingsworth.arsnouveau.common.event.ReactiveEvents#leftClickBlock",
          "com.hollingsworth.arsnouveau.common.camera.CameraEvents#onLeftClickBlock"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickEmpty": [
          "com.hollingsworth.arsnouveau.common.event.ReactiveEvents#leftClickAir"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.hollingsworth.arsnouveau.common.camera.CameraEvents#onRightClickBlock",
          "com.hollingsworth.arsnouveau.common.block.ScribesBlock#rightClick",
          "com.hollingsworth.arsnouveau.client.events.ClientPlayerEvent#onBlock"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "com.hollingsworth.arsnouveau.common.camera.CameraEvents#onRightClickItem",
          "com.hollingsworth.arsnouveau.client.events.ClientPlayerEvent#onItem"
        ],
        "net.neoforged.neoforge.event.level.BlockGrowFeatureEvent": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#treeGrow",
          "com.hollingsworth.arsnouveau.common.block.tile.AgronomicSourcelinkTile#treeGrow"
        ],
        "net.neoforged.neoforge.event.level.NoteBlockEvent$Play": [
          "com.hollingsworth.arsnouveau.common.event.JarEvents#onNoteblock"
        ],
        "net.neoforged.neoforge.event.level.SleepFinishedTimeEvent": [
          "com.hollingsworth.arsnouveau.common.event.PerkEvents#sleepEvent"
        ],
        "net.neoforged.neoforge.event.level.block.CropGrowEvent$Post": [
          "com.hollingsworth.arsnouveau.common.block.tile.AgronomicSourcelinkTile#cropGrow"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Post": [
          "com.hollingsworth.arsnouveau.common.world.saved_data.RedstoneSavedData#serverTick",
          "com.hollingsworth.arsnouveau.api.source.SourceManager#serverTick"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "com.hollingsworth.arsnouveau.common.potions.GravityEffect#entityTick",
          "com.hollingsworth.arsnouveau.common.event.ScryEvents#playerTickEvent",
          "com.hollingsworth.arsnouveau.common.event.ManaCapEvents#onTick",
          "com.hollingsworth.arsnouveau.common.event.LightEvents#onTick"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Pre": [
          "com.hollingsworth.arsnouveau.common.event.ManaCapEvents#playerOnTick",
          "com.hollingsworth.arsnouveau.common.event.EventHandler#onGlideTick"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "com.hollingsworth.arsnouveau.api.event.EventQueue#serverTick"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Pre": [
          "com.hollingsworth.arsnouveau.api.event.EventQueue#serverTickPre"
        ],
        "net.neoforged.neoforge.event.village.VillageSiegeEvent": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#villageSiegeEvent"
        ],
        "net.neoforged.neoforge.event.village.VillagerTradesEvent": [
          "com.hollingsworth.arsnouveau.common.event.EventHandler#registerTrades"
        ]
      },
      "info": {
        "authors": "Bailey Hollingsworth",
        "classes": "5690",
        "description": "    Craft spells, create powerful baubles, and summon magical creatures!\n    ",
        "displayName": "Ars Nouveau",
        "file": "ars_nouveau-1.21.1-5.4.2-all.jar",
        "license": "GNU GENERAL PUBLIC LICENSE",
        "package": "org.tartarus.snowball",
        "version": "5.4.2"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.hollingsworth.arsnouveau.client.gui.radial_menu.GuiRadialMenu",
          "com.hollingsworth.arsnouveau.client.gui.documentation.SearchScreen",
          "com.hollingsworth.arsnouveau.client.gui.documentation.PageHolderScreen",
          "com.hollingsworth.arsnouveau.client.gui.documentation.IndexScreen",
          "com.hollingsworth.arsnouveau.client.gui.documentation.EntriesScreen",
          "com.hollingsworth.arsnouveau.client.gui.documentation.BaseDocScreen",
          "com.hollingsworth.arsnouveau.client.gui.book.SoundScreen",
          "com.hollingsworth.arsnouveau.client.gui.book.GuiSpellBook",
          "com.hollingsworth.arsnouveau.client.gui.book.GuiSettingsScreen",
          "com.hollingsworth.arsnouveau.client.gui.book.GuiFamiliarScreen",
          "com.hollingsworth.arsnouveau.client.gui.book.GuiColorScreen",
          "com.hollingsworth.arsnouveau.client.gui.book.GlyphUnlockMenu",
          "com.hollingsworth.arsnouveau.client.gui.book.BaseBook",
          "com.hollingsworth.arsnouveau.client.gui.ModdedScreen",
          "com.hollingsworth.arsnouveau.client.container.CraftingTerminalScreen",
          "com.hollingsworth.arsnouveau.client.container.AbstractStorageTerminalScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "com.hollingsworth.arsnouveau.client.particle.ParticleSparkle",
          "com.hollingsworth.arsnouveau.client.particle.ParticleLine",
          "com.hollingsworth.arsnouveau.client.particle.ParticleHelixGlow",
          "com.hollingsworth.arsnouveau.client.particle.ParticleGlow",
          "com.hollingsworth.arsnouveau.client.particle.BubbleParticle"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "com.hollingsworth.arsnouveau.client.renderer.tile.RepositoryRenderer$1",
          "com.hollingsworth.arsnouveau.client.renderer.tile.RedstoneRelayRenderer$1",
          "com.hollingsworth.arsnouveau.client.renderer.item.WandRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.TatteredTomeRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.SwordRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.SpellCrossbowRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.SpellBowRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.SpellBookRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.ScryCasterRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.MobJarItemRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.MirrorRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.GenericItemRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.GenericItemBlockRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.FlaskCannonRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.item.FixedGeoItemRenderer",
          "com.hollingsworth.arsnouveau.client.events.ClientEvents$ClientModEvents$1$1"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.hollingsworth.arsnouveau.client.renderer.tile.WhirlisprigFlowerRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.TimerTurretRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.SkyBlockRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.ScryerOculusRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.ScribesRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.RuneRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.RotatingTurretRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.RepositoryRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.ReducerTurretRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.RedstoneRelayRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.PotionMelderRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.PortalTileRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.MobJarRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.MirrorweaveRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.LecternRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.ItemDetectorRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.IntangibleAirRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.ImbuementRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.GhostweaveRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.GenericTileRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.FalseweaveRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.EnchantingApparatusRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.BasicTurretRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.ArsGeoBlockRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.ArchwoodChestRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.ArcanePedestalRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.ArcaneCoreRenderer",
          "com.hollingsworth.arsnouveau.client.renderer.tile.AlterationTableRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "com.hollingsworth.arsnouveau.common.datagen.WorldgenProvider",
          "com.hollingsworth.arsnouveau.common.datagen.SummonRitualProvider",
          "com.hollingsworth.arsnouveau.common.datagen.StructureTagProvider",
          "com.hollingsworth.arsnouveau.common.datagen.SimpleDataProvider",
          "com.hollingsworth.arsnouveau.common.datagen.ScryRitualProvider",
          "com.hollingsworth.arsnouveau.common.datagen.RecipeDatagen",
          "com.hollingsworth.arsnouveau.common.datagen.PotionEffectTagProvider",
          "com.hollingsworth.arsnouveau.common.datagen.PlacedFeatureTagProvider",
          "com.hollingsworth.arsnouveau.common.datagen.PatchouliProvider",
          "com.hollingsworth.arsnouveau.common.datagen.OneOffRecipesProvider",
          "com.hollingsworth.arsnouveau.common.datagen.MusicProvider",
          "com.hollingsworth.arsnouveau.common.datagen.LangDatagen",
          "com.hollingsworth.arsnouveau.common.datagen.ItemTagProvider",
          "com.hollingsworth.arsnouveau.common.datagen.ItemModelGenerator",
          "com.hollingsworth.arsnouveau.common.datagen.ImbuementRecipeProvider",
          "com.hollingsworth.arsnouveau.common.datagen.GlyphRecipeProvider",
          "com.hollingsworth.arsnouveau.common.datagen.EntityTagProvider",
          "com.hollingsworth.arsnouveau.common.datagen.EnchantmentProvider",
          "com.hollingsworth.arsnouveau.common.datagen.EnchantmentProvider$EnchantmentTagsProvider",
          "com.hollingsworth.arsnouveau.common.datagen.DyeRecipeDatagen",
          "com.hollingsworth.arsnouveau.common.datagen.DocProvider",
          "com.hollingsworth.arsnouveau.common.datagen.DispelEntityProvider",
          "com.hollingsworth.arsnouveau.common.datagen.DefaultTableProvider",
          "com.hollingsworth.arsnouveau.common.datagen.DamageTypesProvider",
          "com.hollingsworth.arsnouveau.common.datagen.DamageTypesProvider$DamageTypesTagsProvider",
          "com.hollingsworth.arsnouveau.common.datagen.CrushRecipeProvider",
          "com.hollingsworth.arsnouveau.common.datagen.CompostablesProvider",
          "com.hollingsworth.arsnouveau.common.datagen.CasterTomeProvider",
          "com.hollingsworth.arsnouveau.common.datagen.BuddingConversionProvider",
          "com.hollingsworth.arsnouveau.common.datagen.BlockTagProvider",
          "com.hollingsworth.arsnouveau.common.datagen.BlockStatesDatagen",
          "com.hollingsworth.arsnouveau.common.datagen.BiomeTagProvider",
          "com.hollingsworth.arsnouveau.common.datagen.BannerTagsProvider",
          "com.hollingsworth.arsnouveau.common.datagen.AtlasProvider",
          "com.hollingsworth.arsnouveau.common.datagen.ApparatusRecipeProvider",
          "com.hollingsworth.arsnouveau.common.datagen.AlakarkinosRecipeProvider",
          "com.hollingsworth.arsnouveau.common.datagen.AdvancementProvider",
          "com.hollingsworth.arsnouveau.common.datagen.ANCurioProvider"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "com.hollingsworth.arsnouveau.common.potions.SummoningSicknessEffect",
          "com.hollingsworth.arsnouveau.common.potions.SoakedEffect",
          "com.hollingsworth.arsnouveau.common.potions.SnareEffect",
          "com.hollingsworth.arsnouveau.common.potions.ShockedEffect",
          "com.hollingsworth.arsnouveau.common.potions.ScryingEffect",
          "com.hollingsworth.arsnouveau.common.potions.PublicEffect",
          "com.hollingsworth.arsnouveau.common.potions.MagicFindEffect",
          "com.hollingsworth.arsnouveau.common.potions.ImmolateEffect",
          "com.hollingsworth.arsnouveau.common.potions.GravityEffect",
          "com.hollingsworth.arsnouveau.common.potions.FreezingEffect",
          "com.hollingsworth.arsnouveau.common.potions.BounceEffect",
          "com.hollingsworth.arsnouveau.common.potions.BlastEffect"
        ],
        "net.minecraft.world.entity.Entity": [
          "com.hollingsworth.arsnouveau.setup.registry.ModEntities$1",
          "com.hollingsworth.arsnouveau.common.mixin.perks.PerkLivingEntity",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FlyingFamiliarEntity",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarWixie",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarWhirlisprig",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarStarbuncle",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarJabberwog",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarEntity",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarDrygmy",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarBookwyrm",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarAmethystGolem",
          "com.hollingsworth.arsnouveau.common.entity.WildenStalker",
          "com.hollingsworth.arsnouveau.common.entity.WildenHunter",
          "com.hollingsworth.arsnouveau.common.entity.WildenGuardian",
          "com.hollingsworth.arsnouveau.common.entity.WildenChimera",
          "com.hollingsworth.arsnouveau.common.entity.Whirlisprig",
          "com.hollingsworth.arsnouveau.common.entity.WealdWalker",
          "com.hollingsworth.arsnouveau.common.entity.SummonWolf",
          "com.hollingsworth.arsnouveau.common.entity.SummonSkeleton",
          "com.hollingsworth.arsnouveau.common.entity.SummonHorse",
          "com.hollingsworth.arsnouveau.common.entity.Starbuncle",
          "com.hollingsworth.arsnouveau.common.entity.ScryerCamera",
          "com.hollingsworth.arsnouveau.common.entity.Nook",
          "com.hollingsworth.arsnouveau.common.entity.Lily",
          "com.hollingsworth.arsnouveau.common.entity.LightningEntity",
          "com.hollingsworth.arsnouveau.common.entity.IceShardEntity",
          "com.hollingsworth.arsnouveau.common.entity.GiftStarbuncle",
          "com.hollingsworth.arsnouveau.common.entity.EntityWixie",
          "com.hollingsworth.arsnouveau.common.entity.EntityWallSpell",
          "com.hollingsworth.arsnouveau.common.entity.EntitySpellArrow",
          "com.hollingsworth.arsnouveau.common.entity.EntityRitualProjectile",
          "com.hollingsworth.arsnouveau.common.entity.EntityProjectileSpell",
          "com.hollingsworth.arsnouveau.common.entity.EntityOrbitProjectile",
          "com.hollingsworth.arsnouveau.common.entity.EntityLingeringSpell",
          "com.hollingsworth.arsnouveau.common.entity.EntityHomingProjectileSpell",
          "com.hollingsworth.arsnouveau.common.entity.EntityFollowProjectile",
          "com.hollingsworth.arsnouveau.common.entity.EntityFlyingItem",
          "com.hollingsworth.arsnouveau.common.entity.EntityEvokerFangs",
          "com.hollingsworth.arsnouveau.common.entity.EntityDummy",
          "com.hollingsworth.arsnouveau.common.entity.EntityDrygmy",
          "com.hollingsworth.arsnouveau.common.entity.EntityChimeraProjectile",
          "com.hollingsworth.arsnouveau.common.entity.EntityBookwyrm",
          "com.hollingsworth.arsnouveau.common.entity.EntityAllyVex",
          "com.hollingsworth.arsnouveau.common.entity.EnchantedSkull",
          "com.hollingsworth.arsnouveau.common.entity.EnchantedMageblock",
          "com.hollingsworth.arsnouveau.common.entity.EnchantedFallingBlock",
          "com.hollingsworth.arsnouveau.common.entity.ColoredProjectile",
          "com.hollingsworth.arsnouveau.common.entity.Cinder",
          "com.hollingsworth.arsnouveau.common.entity.BubbleEntity",
          "com.hollingsworth.arsnouveau.common.entity.AnimHeadSummon",
          "com.hollingsworth.arsnouveau.common.entity.AnimBlockSummon",
          "com.hollingsworth.arsnouveau.common.entity.AmethystGolem",
          "com.hollingsworth.arsnouveau.common.entity.Alakarkinos",
          "com.hollingsworth.arsnouveau.common.entity.AbstractFlyingCreature",
          "com.hollingsworth.arsnouveau.api.ANFakePlayer"
        ],
        "net.minecraft.world.entity.Mob": [
          "com.hollingsworth.arsnouveau.common.entity.familiar.FlyingFamiliarEntity",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarWixie",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarWhirlisprig",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarStarbuncle",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarJabberwog",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarEntity",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarDrygmy",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarBookwyrm",
          "com.hollingsworth.arsnouveau.common.entity.familiar.FamiliarAmethystGolem",
          "com.hollingsworth.arsnouveau.common.entity.WildenStalker",
          "com.hollingsworth.arsnouveau.common.entity.WildenHunter",
          "com.hollingsworth.arsnouveau.common.entity.WildenGuardian",
          "com.hollingsworth.arsnouveau.common.entity.WildenChimera",
          "com.hollingsworth.arsnouveau.common.entity.Whirlisprig",
          "com.hollingsworth.arsnouveau.common.entity.WealdWalker",
          "com.hollingsworth.arsnouveau.common.entity.SummonWolf",
          "com.hollingsworth.arsnouveau.common.entity.SummonSkeleton",
          "com.hollingsworth.arsnouveau.common.entity.SummonHorse",
          "com.hollingsworth.arsnouveau.common.entity.Starbuncle",
          "com.hollingsworth.arsnouveau.common.entity.Nook",
          "com.hollingsworth.arsnouveau.common.entity.Lily",
          "com.hollingsworth.arsnouveau.common.entity.GiftStarbuncle",
          "com.hollingsworth.arsnouveau.common.entity.EntityWixie",
          "com.hollingsworth.arsnouveau.common.entity.EntityDummy",
          "com.hollingsworth.arsnouveau.common.entity.EntityDrygmy",
          "com.hollingsworth.arsnouveau.common.entity.EntityBookwyrm",
          "com.hollingsworth.arsnouveau.common.entity.EntityAllyVex",
          "com.hollingsworth.arsnouveau.common.entity.AnimHeadSummon",
          "com.hollingsworth.arsnouveau.common.entity.AnimBlockSummon",
          "com.hollingsworth.arsnouveau.common.entity.AmethystGolem",
          "com.hollingsworth.arsnouveau.common.entity.Alakarkinos",
          "com.hollingsworth.arsnouveau.common.entity.AbstractFlyingCreature"
        ],
        "net.minecraft.world.entity.animal.Animal": [
          "com.hollingsworth.arsnouveau.common.entity.SummonWolf",
          "com.hollingsworth.arsnouveau.common.entity.SummonHorse",
          "com.hollingsworth.arsnouveau.common.entity.Nook",
          "com.hollingsworth.arsnouveau.common.entity.Lily",
          "com.hollingsworth.arsnouveau.common.entity.AnimHeadSummon",
          "com.hollingsworth.arsnouveau.common.entity.AnimBlockSummon"
        ],
        "net.minecraft.world.item.Item": [
          "com.hollingsworth.arsnouveau.setup.registry.ItemsRegistry$9",
          "com.hollingsworth.arsnouveau.setup.registry.ItemsRegistry$8",
          "com.hollingsworth.arsnouveau.setup.registry.ItemsRegistry$7",
          "com.hollingsworth.arsnouveau.setup.registry.ItemsRegistry$6",
          "com.hollingsworth.arsnouveau.setup.registry.ItemsRegistry$5",
          "com.hollingsworth.arsnouveau.setup.registry.ItemsRegistry$4",
          "com.hollingsworth.arsnouveau.setup.registry.ItemsRegistry$3",
          "com.hollingsworth.arsnouveau.setup.registry.ItemsRegistry$2",
          "com.hollingsworth.arsnouveau.setup.registry.ItemsRegistry$1",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$9",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$8",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$7",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$6",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$5",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$4",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$3",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$20",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$2",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$19",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$18",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$17",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$16",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$15",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$14",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$13",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$12",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$11",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$10",
          "com.hollingsworth.arsnouveau.setup.registry.BlockRegistry$1",
          "com.hollingsworth.arsnouveau.common.items.summon_charms.WixieCharm",
          "com.hollingsworth.arsnouveau.common.items.summon_charms.WhirlisprigCharm",
          "com.hollingsworth.arsnouveau.common.items.summon_charms.StarbuncleCharm",
          "com.hollingsworth.arsnouveau.common.items.summon_charms.DrygmyCharm",
          "com.hollingsworth.arsnouveau.common.items.summon_charms.BookwyrmCharm",
          "com.hollingsworth.arsnouveau.common.items.summon_charms.AmethystGolemCharm",
          "com.hollingsworth.arsnouveau.common.items.itemscrolls.MimicItemScroll",
          "com.hollingsworth.arsnouveau.common.items.itemscrolls.DenyItemScroll",
          "com.hollingsworth.arsnouveau.common.items.itemscrolls.AllowItemScroll",
          "com.hollingsworth.arsnouveau.common.items.curios.SummoningFocus",
          "com.hollingsworth.arsnouveau.common.items.curios.ShapersFocus",
          "com.hollingsworth.arsnouveau.common.items.curios.JumpingRing",
          "com.hollingsworth.arsnouveau.common.items.curios.DiscountRing",
          "com.hollingsworth.arsnouveau.common.items.curios.BeltOfUnstableGifts",
          "com.hollingsworth.arsnouveau.common.items.curios.BeltOfLevitation",
          "com.hollingsworth.arsnouveau.common.items.curios.AbstractManaCurio",
          "com.hollingsworth.arsnouveau.common.items.WornNotebook",
          "com.hollingsworth.arsnouveau.common.items.WixieHat",
          "com.hollingsworth.arsnouveau.common.items.WarpScroll",
          "com.hollingsworth.arsnouveau.common.items.Wand",
          "com.hollingsworth.arsnouveau.common.items.VoidJar",
          "com.hollingsworth.arsnouveau.common.items.StarbuncleShard",
          "com.hollingsworth.arsnouveau.common.items.StarbuncleShades",
          "com.hollingsworth.arsnouveau.common.items.StableWarpScroll",
          "com.hollingsworth.arsnouveau.common.items.SpellParchment",
          "com.hollingsworth.arsnouveau.common.items.SpellCrossbow",
          "com.hollingsworth.arsnouveau.common.items.SpellBow",
          "com.hollingsworth.arsnouveau.common.items.SpellBook",
          "com.hollingsworth.arsnouveau.common.items.SpellArrow",
          "com.hollingsworth.arsnouveau.common.items.ScryerScroll",
          "com.hollingsworth.arsnouveau.common.items.ScryCaster",
          "com.hollingsworth.arsnouveau.common.items.RunicChalk",
          "com.hollingsworth.arsnouveau.common.items.RitualTablet",
          "com.hollingsworth.arsnouveau.common.items.RendererBlockItem",
          "com.hollingsworth.arsnouveau.common.items.Present",
          "com.hollingsworth.arsnouveau.common.items.PotionFlask",
          "com.hollingsworth.arsnouveau.common.items.PerkItem",
          "com.hollingsworth.arsnouveau.common.items.ModItem",
          "com.hollingsworth.arsnouveau.common.items.ModBlockItem",
          "com.hollingsworth.arsnouveau.common.items.MobJarItem",
          "com.hollingsworth.arsnouveau.common.items.ManipulationEssence",
          "com.hollingsworth.arsnouveau.common.items.JarOfLight",
          "com.hollingsworth.arsnouveau.common.items.ItemScroll",
          "com.hollingsworth.arsnouveau.common.items.Glyph",
          "com.hollingsworth.arsnouveau.common.items.FormSpellArrow",
          "com.hollingsworth.arsnouveau.common.items.FluidBlockItem",
          "com.hollingsworth.arsnouveau.common.items.FlaskCannon",
          "com.hollingsworth.arsnouveau.common.items.FlaskCannon$SplashLauncher",
          "com.hollingsworth.arsnouveau.common.items.FlaskCannon$LingeringLauncher",
          "com.hollingsworth.arsnouveau.common.items.FireEssence",
          "com.hollingsworth.arsnouveau.common.items.FamiliarScript",
          "com.hollingsworth.arsnouveau.common.items.ExperienceGem",
          "com.hollingsworth.arsnouveau.common.items.EnchantersSword",
          "com.hollingsworth.arsnouveau.common.items.EnchantersShield",
          "com.hollingsworth.arsnouveau.common.items.EnchantersMirror",
          "com.hollingsworth.arsnouveau.common.items.EarthEssence",
          "com.hollingsworth.arsnouveau.common.items.DowsingRod",
          "com.hollingsworth.arsnouveau.common.items.DominionWand",
          "com.hollingsworth.arsnouveau.common.items.Debug",
          "com.hollingsworth.arsnouveau.common.items.CasterTome",
          "com.hollingsworth.arsnouveau.common.items.BlankParchmentItem",
          "com.hollingsworth.arsnouveau.common.items.AnnotatedCodex",
          "com.hollingsworth.arsnouveau.common.items.AnimModItem",
          "com.hollingsworth.arsnouveau.common.items.AnimBlockItem",
          "com.hollingsworth.arsnouveau.common.items.AlchemistsCrown",
          "com.hollingsworth.arsnouveau.common.items.AlakarkinosCharm",
          "com.hollingsworth.arsnouveau.common.armor.AnimatedMagicArmor",
          "com.hollingsworth.arsnouveau.api.item.ArsNouveauCurio",
          "com.hollingsworth.arsnouveau.api.item.AbstractSummonCharm"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.hollingsworth.arsnouveau.common.crafting.recipes.SummonRitualRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.SpellWriteRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.SpecialSingleInputRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.ScryRitualRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.ReactiveEnchantmentRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.PotionFlaskRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.ImbuementRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.IEnchantingRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.GlyphRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.EnchantmentRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.EnchantingApparatusRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.DyeRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.DispelEntityRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.CrushRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.CasterTomeData",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.BuddingConversionRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.BookUpgradeRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.ArmorUpgradeRecipe",
          "com.hollingsworth.arsnouveau.common.crafting.recipes.AlakarkinosRecipe",
          "com.hollingsworth.arsnouveau.api.imbuement_chamber.IImbuementRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.hollingsworth.arsnouveau.common.block.WixieCauldron",
          "com.hollingsworth.arsnouveau.common.block.WhirlisprigFlower",
          "com.hollingsworth.arsnouveau.common.block.VolcanicSourcelinkBlock",
          "com.hollingsworth.arsnouveau.common.block.VoidPrism",
          "com.hollingsworth.arsnouveau.common.block.VitalicSourcelinkBlock",
          "com.hollingsworth.arsnouveau.common.block.TimerSpellTurret",
          "com.hollingsworth.arsnouveau.common.block.TickableModBlock",
          "com.hollingsworth.arsnouveau.common.block.TemporaryBlock",
          "com.hollingsworth.arsnouveau.common.block.TempLightBlock",
          "com.hollingsworth.arsnouveau.common.block.TableBlock",
          "com.hollingsworth.arsnouveau.common.block.SummonBlock",
          "com.hollingsworth.arsnouveau.common.block.SummonBed",
          "com.hollingsworth.arsnouveau.common.block.StrippableLog",
          "com.hollingsworth.arsnouveau.common.block.SpellSensor",
          "com.hollingsworth.arsnouveau.common.block.SpellPrismBlock",
          "com.hollingsworth.arsnouveau.common.block.SourcelinkBlock",
          "com.hollingsworth.arsnouveau.common.block.SourceLamp",
          "com.hollingsworth.arsnouveau.common.block.SourceJar",
          "com.hollingsworth.arsnouveau.common.block.SourceBlock",
          "com.hollingsworth.arsnouveau.common.block.SourceBerryBush",
          "com.hollingsworth.arsnouveau.common.block.SkyWeave",
          "com.hollingsworth.arsnouveau.common.block.ScryersOculus",
          "com.hollingsworth.arsnouveau.common.block.ScryerCrystal",
          "com.hollingsworth.arsnouveau.common.block.ScribesBlock",
          "com.hollingsworth.arsnouveau.common.block.SconceBlock",
          "com.hollingsworth.arsnouveau.common.block.RuneBlock",
          "com.hollingsworth.arsnouveau.common.block.RotatingSpellTurret",
          "com.hollingsworth.arsnouveau.common.block.RitualBrazierBlock",
          "com.hollingsworth.arsnouveau.common.block.RepositoryBlock",
          "com.hollingsworth.arsnouveau.common.block.RelayWarpBlock",
          "com.hollingsworth.arsnouveau.common.block.RelaySplitter",
          "com.hollingsworth.arsnouveau.common.block.RelayDepositBlock",
          "com.hollingsworth.arsnouveau.common.block.RelayCollectorBlock",
          "com.hollingsworth.arsnouveau.common.block.Relay",
          "com.hollingsworth.arsnouveau.common.block.RedstoneRelay",
          "com.hollingsworth.arsnouveau.common.block.PotionMelder",
          "com.hollingsworth.arsnouveau.common.block.PotionJar",
          "com.hollingsworth.arsnouveau.common.block.PotionDiffuserBlock",
          "com.hollingsworth.arsnouveau.common.block.PortalBlock",
          "com.hollingsworth.arsnouveau.common.block.MycelialSourcelinkBlock",
          "com.hollingsworth.arsnouveau.common.block.ModBlock",
          "com.hollingsworth.arsnouveau.common.block.MobJar",
          "com.hollingsworth.arsnouveau.common.block.MirrorWeave",
          "com.hollingsworth.arsnouveau.common.block.MagicLeaves",
          "com.hollingsworth.arsnouveau.common.block.MagicFire",
          "com.hollingsworth.arsnouveau.common.block.MagelightTorch",
          "com.hollingsworth.arsnouveau.common.block.MageBloomCrop",
          "com.hollingsworth.arsnouveau.common.block.MageBlock",
          "com.hollingsworth.arsnouveau.common.block.LightBlock",
          "com.hollingsworth.arsnouveau.common.block.ItemGrate",
          "com.hollingsworth.arsnouveau.common.block.ItemDetector",
          "com.hollingsworth.arsnouveau.common.block.IntangibleAirBlock",
          "com.hollingsworth.arsnouveau.common.block.ImbuementBlock",
          "com.hollingsworth.arsnouveau.common.block.GhostWeave",
          "com.hollingsworth.arsnouveau.common.block.FalseWeave",
          "com.hollingsworth.arsnouveau.common.block.EnchantingApparatusBlock",
          "com.hollingsworth.arsnouveau.common.block.EnchantedSpellTurret",
          "com.hollingsworth.arsnouveau.common.block.DrygmyStone",
          "com.hollingsworth.arsnouveau.common.block.DirectionalModBlock",
          "com.hollingsworth.arsnouveau.common.block.CreativeSourceJar",
          "com.hollingsworth.arsnouveau.common.block.CraftingLecternBlock",
          "com.hollingsworth.arsnouveau.common.block.CrabHat",
          "com.hollingsworth.arsnouveau.common.block.BrazierRelay",
          "com.hollingsworth.arsnouveau.common.block.BasicSpellTurret",
          "com.hollingsworth.arsnouveau.common.block.ArchwoodChest",
          "com.hollingsworth.arsnouveau.common.block.ArchfruitPod",
          "com.hollingsworth.arsnouveau.common.block.ArcanePlatform",
          "com.hollingsworth.arsnouveau.common.block.ArcanePedestal",
          "com.hollingsworth.arsnouveau.common.block.ArcaneCore",
          "com.hollingsworth.arsnouveau.common.block.AlterationTable",
          "com.hollingsworth.arsnouveau.common.block.AlchemicalSourcelinkBlock",
          "com.hollingsworth.arsnouveau.common.block.AgronomicSourcelinkBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.hollingsworth.arsnouveau.common.world.saved_data.RedstoneSavedData"
        ]
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.components.ChatComponent",
        "net.minecraft.client.multiplayer.ClientChunkCache",
        "net.minecraft.client.player.LocalPlayer",
        "net.minecraft.client.renderer.GameRenderer",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.entity.EntityRenderer",
        "net.minecraft.server.level.ChunkMap",
        "net.minecraft.server.level.ChunkMap$TrackedEntity",
        "net.minecraft.server.level.ServerPlayer",
        "net.minecraft.server.players.PlayerList",
        "net.minecraft.world.damagesource.DamageSource",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.Mob",
        "net.minecraft.world.entity.animal.Pufferfish",
        "net.minecraft.world.entity.player.Player",
        "net.minecraft.world.level.block.DispenserBlock",
        "net.minecraft.world.level.block.entity.BrushableBlockEntity",
        "net.minecraft.world.level.block.state.BlockBehaviour",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessor",
        "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate",
        "net.minecraft.world.level.storage.loot.functions.EnchantedCountIncreaseFunction",
        "net.minecraft.world.level.storage.loot.predicates.LootItemRandomChanceWithEnchantedBonusCondition"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Auto-reloads Config Files",
        "Custom Advancements",
        "Custom Animals",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Brewing Recipes",
        "Custom Entities",
        "Custom Entity Attributes",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Server Commands",
        "Custom Shaders",
        "Custom Tag Assignments",
        "Custom Tooltip Components",
        "Custom World Generation",
        "Handles Left Clicks with Empty Hands (Client-side)",
        "Handles Right Clicks with Items",
        "Listens to Dimension Change Events",
        "Listens to Entity Death Events",
        "Listens to Entity Equipment Change Events",
        "Listens to Entity Fall Events",
        "Listens to Entity Healing Events",
        "Listens to Entity Jump Events",
        "Listens to Entity Knockback Events",
        "Listens to Entity Shield Block Events",
        "Listens to Item Pickup Events",
        "Listens to Left Click Block Events",
        "Listens to Player Login Events",
        "Listens to Player Logout Events",
        "Listens to Potion Effect Added Events",
        "Listens to Potion Effect Expired Events",
        "Listens to Potion Effect Removed Events",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Entity Spawning",
        "Modifies Methods",
        "Modifies Tooltips",
        "Modifies Villager Trades",
        "Modifies World Rendering",
        "Patchouli Guide Book",
        "Runs Client Tick Logic",
        "Runs Player Tick Logic",
        "Runs Server Tick Logic",
        "Runs World Tick Logic",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "ars_ocultas": {
      "dependencies": {
        "ars_nouveau": "[5.3,6)",
        "minecraft": "[1.21,1.21.1)",
        "occultism": "[1.71.0,)"
      },
      "events": {
        "com.klikli_dev.occultism.common.entity.job.CrusherJob$CrusherJobEvent": [
          "com.mystchonky.arsocultas.common.event.OccultismEvents#crusherJob"
        ],
        "com.klikli_dev.occultism.common.entity.job.SmelterJob$SmelterJobEvent": [
          "com.mystchonky.arsocultas.common.event.OccultismEvents#smelterJob"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "com.mystchonky.arsocultas.common.registrar.RegisterEvents#attachItemCapability"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.mystchonky.arsocultas.common.registrar.RegisterEvents#registerScreens"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.mystchonky.arsocultas.data.DataProvider#gatherData"
        ]
      },
      "info": {
        "authors": "mystchonky",
        "classes": "34",
        "description": "Ars Nouveau empowered by Occultism",
        "displayName": "Ars Ocultas",
        "file": "ars_ocultas-1.21.1-2.1.0.jar",
        "license": "GNU Lesser General Public License v3.0",
        "package": "com.mystchonky.arsocultas",
        "version": "2.1.0"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.mystchonky.arsocultas.common.mob_jar.SpiritScreenWrapper$1"
        ],
        "net.minecraft.data.DataProvider": [
          "com.mystchonky.arsocultas.data.LanguageProvider",
          "com.mystchonky.arsocultas.data.recipe.EnchantingAppProvider",
          "com.mystchonky.arsocultas.data.recipe.ImbuementProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "com.mystchonky.arsocultas.common.entity.FamiliarDragon"
        ],
        "net.minecraft.world.entity.Mob": [
          "com.mystchonky.arsocultas.common.entity.FamiliarDragon"
        ]
      },
      "summary": [
        "Custom Entities",
        "Custom GUI Screens",
        "Custom Item Textures",
        "Custom Mobs",
        "Has Capability Providers",
        "Patchouli Guide Book",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "arseng": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "gripe._90.arseng.mixin.ScribesTileMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "takeFromInterfaces",
              "raw": "takeFromInterfaces(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "gripe._90.arseng.mixin.ConfigInventoryMixin",
            "method": {
              "argTypes": [
                "int",
                "appeng.api.stacks.GenericStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "rememberStack",
              "raw": "rememberStack(ILappeng/api/stacks/GenericStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {},
      "info": {
        "classes": "40",
        "description": "Bringing magic to the digital age.\nAdds digital source storage, P2P transport and various other cross-compatibility improvements to Ars Nouveau and AE2.",
        "displayName": "Ars Énergistique",
        "file": "arseng-2.1.0-beta.jar",
        "license": "LGPLv3.0",
        "package": "gripe._90.arseng",
        "version": "2.1.0-beta"
      },
      "inheritance": {
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "gripe._90.arseng.client.MESourceJarBlockEntityRenderer"
        ],
        "net.minecraft.world.item.Item": [
          "gripe._90.arseng.item.SourceCellItem",
          "gripe._90.arseng.item.PortableSourceCellItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "gripe._90.arseng.block.SourceConverterBlock",
          "gripe._90.arseng.block.MESourceJarBlock"
        ]
      },
      "modifies": [
        "appeng.util.ConfigInventory",
        "com.hollingsworth.arsnouveau.common.block.tile.ScribesTile",
        "com.hollingsworth.arsnouveau.common.block.tile.WixieCauldronTile"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods"
      ]
    },
    "athena": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "earth.terrarium.athena.mixins.ModelBakeryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.color.block.BlockColors",
                "net.minecraft.util.profiling.ProfilerFiller",
                "java.util.Map",
                "java.util.Map",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "stitch$onStart",
              "raw": "stitch$onStart(Lnet/minecraft/client/color/block/BlockColors;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/Map;Ljava/util/Map;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/resources/model/ModelBakery;registerModel(Lnet/minecraft/client/resources/model/ModelResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;)V, ordinal=0}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.0-beta,)"
      },
      "info": {
        "authors": "ThatGravyBoat",
        "classes": "53",
        "description": "Crossplatform Baked Model Loader",
        "displayName": "Athena",
        "file": "athena-neoforge-1.21-4.0.1.jar",
        "license": "MIT",
        "package": "earth.terrarium.athena.mixins",
        "version": "4.0.1"
      },
      "inheritance": {
        "net.minecraft.client.resources.model.BakedModel": [
          "earth.terrarium.athena.api.client.neoforge.AthenaBakedModel"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "earth.terrarium.athena.neoforge.client.AthenaGeometryLoader"
        ]
      },
      "modifies": [
        "net.minecraft.client.resources.model.ModelBakery"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Model Loaders",
        "Modifies Methods"
      ]
    },
    "atlas_api": {
      "dependencies": {
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0-beta,)"
      },
      "info": {
        "authors": "Iron431",
        "classes": "12",
        "description": "Provides an API for generating atlases during game runtime, and helpers for loading custom item models using the dynamic atlas sprites",
        "displayName": "Atlas API",
        "file": "atlas_api-1.21-1.0.2.jar",
        "license": "All Rights Reserved",
        "package": "io.redspace.atlasapi",
        "version": "1.21-1.0.2"
      },
      "inheritance": {
        "net.minecraft.client.resources.model.BakedModel": [
          "io.redspace.atlasapi.internal.DynamicModel$BakedHolder"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "io.redspace.atlasapi.internal.DynamicModel$Loader"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Model Loaders",
        "Uses Access Transformers"
      ]
    },
    "attributefix": {
      "dependencies": {
        "bookshelf": "[21.1,21.2)",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.61,)",
        "prickle": "[21.1,21.2)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLLoadCompleteEvent": [
          "net.darkhax.attributefix.impl.NeoForgeMod#onLoadComplete"
        ]
      },
      "info": {
        "authors": "Darkhax",
        "classes": "5",
        "description": "Extends the maximum attribute ranges to allow for higher values.",
        "displayName": "AttributeFix",
        "file": "attributefix-neoforge-1.21.1-21.1.2.jar",
        "license": "LGPL 2.1",
        "package": "net.darkhax.attributefix.impl",
        "updateUrl": "https://updates.blamejared.com/get?n=attributefix&gv=1.21.1&ml=neoforge",
        "version": "21.1.2"
      },
      "modifies": [
        "net.minecraft.world.entity.ai.attributes.RangedAttribute"
      ]
    },
    "balm": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.blay09.mods.balm.mixin.PlayerListMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.Connection",
                "net.minecraft.server.level.ServerPlayer",
                "net.minecraft.server.network.CommonListenerCookie",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "handlePlayerConnection",
              "raw": "handlePlayerConnection(Lnet/minecraft/network/Connection;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/network/CommonListenerCookie;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;<init>(Lnet/minecraft/world/entity/player/Abilities;)V}]"
            }
          },
          {
            "class": "net.blay09.mods.balm.mixin.StemBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "mayPlaceOn",
              "raw": "mayPlaceOn(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.blay09.mods.balm.mixin.LootTableMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.storage.loot.LootContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getRandomItems",
              "raw": "getRandomItems(Lnet/minecraft/world/level/storage/loot/LootContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.blay09.mods.balm.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "saveWithoutId",
              "raw": "saveWithoutId(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.blay09.mods.balm.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "load",
              "raw": "load(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.blay09.mods.balm.mixin.CropBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "mayPlaceOn",
              "raw": "mayPlaceOn(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.blay09.mods.balm.mixin.ReloadableServerResourcesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.core.LayeredRegistryAccess",
                "net.minecraft.world.flag.FeatureFlagSet",
                "net.minecraft.commands.Commands$CommandSelection",
                "int",
                "java.util.concurrent.Executor",
                "java.util.concurrent.Executor",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "loadResources",
              "raw": "loadResources(Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/commands/Commands$CommandSelection;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.blay09.mods.balm.mixin.KeyMappingMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.KeyMapping",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "same",
              "raw": "same(Lnet/minecraft/client/KeyMapping;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.blay09.mods.balm.mixin.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "java.util.Collection",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "reloadResources",
              "raw": "reloadResources(Ljava/util/Collection;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.blay09.mods.balm.mixin.ModelBakeryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.resources.model.ModelBakery$TextureGetter",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "apply",
              "raw": "apply(Lnet/minecraft/client/resources/model/ModelBakery$TextureGetter;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.82-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "net.blay09.mods.balm.neoforge.client.rendering.NeoForgeBalmRenderers$Registrations#setupClient"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "net.blay09.mods.balm.neoforge.stats.NeoForgeBalmStats$Registrations#commonSetup"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "net.blay09.mods.balm.neoforge.client.rendering.NeoForgeBalmRenderers$Registrations#initLayerDefinitions"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "net.blay09.mods.balm.neoforge.client.rendering.NeoForgeBalmRenderers$Registrations#initRenderers"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$BakingCompleted": [
          "net.blay09.mods.balm.neoforge.client.rendering.NeoForgeBalmModels$Registrations#onModelBakingCompleted"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$ModifyBakingResult": [
          "net.blay09.mods.balm.neoforge.client.rendering.NeoForgeBalmModels$Registrations#onModelBakingCompleted"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "net.blay09.mods.balm.neoforge.client.rendering.NeoForgeBalmModels$Registrations#onRegisterAdditionalModels"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "net.blay09.mods.balm.neoforge.client.rendering.NeoForgeBalmRenderers$Registrations#initBlockColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "net.blay09.mods.balm.neoforge.client.rendering.NeoForgeBalmRenderers$Registrations#initItemColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "net.blay09.mods.balm.neoforge.client.keymappings.NeoForgeBalmKeyMappings$Registrations#registerKeyMappings"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "net.blay09.mods.balm.neoforge.client.screen.NeoForgeBalmScreens$Registrations#registerMenuScreens"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeCreationEvent": [
          "net.blay09.mods.balm.neoforge.entity.NeoForgeBalmEntities$Registrations#registerAttributes"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "net.blay09.mods.balm.neoforge.network.NeoForgeBalmNetworking$Registrations#registerPayloadHandlers"
        ]
      },
      "info": {
        "authors": "BlayTheNinth",
        "classes": "278",
        "description": "Abstraction Layer (but not really) for Blay's multiplatform mods",
        "displayName": "Balm",
        "file": "balm-neoforge-1.21.1-21.0.26.jar",
        "license": "All Rights Reserved",
        "package": "net.blay09.mods.balm.api",
        "version": "21.0.26"
      },
      "inheritance": {
        "net.minecraft.client.resources.model.BakedModel": [
          "net.blay09.mods.balm.neoforge.client.rendering.NeoForgeCachedDynamicModel",
          "net.blay09.mods.balm.common.client.rendering.AbstractCachedDynamicModel"
        ]
      },
      "modifies": [
        "net.minecraft.client.KeyMapping",
        "net.minecraft.client.MouseHandler",
        "net.minecraft.client.gui.components.Checkbox",
        "net.minecraft.client.gui.components.ImageButton",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen",
        "net.minecraft.client.resources.model.ModelBakery",
        "net.minecraft.server.MinecraftServer",
        "net.minecraft.server.ReloadableServerResources",
        "net.minecraft.server.players.PlayerList",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.inventory.Slot",
        "net.minecraft.world.level.block.CropBlock",
        "net.minecraft.world.level.block.StemBlock",
        "net.minecraft.world.level.storage.loot.LootTable"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Entity Attributes",
        "Custom Entity Renderers",
        "Custom Key Mappings",
        "Custom Network Packets",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods"
      ]
    },
    "bambooeverything": {
      "dependencies": {
        "architectury": "[13.0.1,)",
        "minecraft": "[1.21,)",
        "neoforge": "[2,)"
      },
      "info": {
        "authors": "Gaz(Gaz492)",
        "classes": "14",
        "description": "All things bamboo\n",
        "displayName": "Bamboo Everything",
        "file": "BambooEverything-neoforge-21.1.0+mc1.21.1.jar",
        "license": "All rights reserved",
        "package": "dev.wuffs",
        "version": "21.1.0+mc1.21.1"
      },
      "inheritance": {
        "net.minecraft.world.level.block.Block": [
          "dev.wuffs.blocks.block.BambooTrapDoorBlock",
          "dev.wuffs.blocks.block.BambooStairsBlock",
          "dev.wuffs.blocks.block.BambooSlabBlock",
          "dev.wuffs.blocks.block.BambooLadderBlock",
          "dev.wuffs.blocks.block.BambooFenceGateBlock",
          "dev.wuffs.blocks.block.BambooFenceBlock",
          "dev.wuffs.blocks.block.BambooDoorBlock",
          "dev.wuffs.blocks.block.BambooBundleBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "bcc": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.wuffs.bcc.mixin.ClientboundStatusResponsePacketMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.FriendlyByteBuf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onReadConstructor",
              "raw": "onReadConstructor(Lnet/minecraft/network/FriendlyByteBuf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "dev.wuffs.bcc.mixin.ClientboundStatusResponsePacketMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.FriendlyByteBuf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onWrite",
              "raw": "onWrite(Lnet/minecraft/network/FriendlyByteBuf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "dev.wuffs.bcc.mixin.ServerStatusPingerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.status.ClientboundStatusResponsePacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onHandleResponse",
              "raw": "onHandleResponse(Lnet/minecraft/network/protocol/status/ClientboundStatusResponsePacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/network/protocol/status/ServerStatus;description()Lnet/minecraft/network/chat/Component;, ordinal=0}]"
            }
          },
          {
            "class": "dev.wuffs.bcc.mixin.OnlineServerEntryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "boolean",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "render",
              "raw": "render(Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {},
      "info": {
        "authors": "Gaz",
        "classes": "19",
        "description": "A better compatibility checker for Minecraft.\n",
        "displayName": "Better Compatibility Checker",
        "file": "BetterCompatibilityChecker-neoforge-21.1.0+mc1.21.1.jar",
        "license": "All rights reserved",
        "package": "dev.wuffs.bcc",
        "version": "21.1.0"
      },
      "modifies": [
        "net.minecraft.client.gui.screens.multiplayer.ServerSelectionList$OnlineServerEntry",
        "net.minecraft.client.multiplayer.ServerData",
        "net.minecraft.client.multiplayer.ServerStatusPinger$1",
        "net.minecraft.network.protocol.status.ClientboundStatusResponsePacket",
        "net.minecraft.network.protocol.status.ServerStatus"
      ],
      "summary": [
        "Custom GUI Textures",
        "Localization",
        "Modifies Methods"
      ]
    },
    "better_tooltips": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.isxander.adaptivetooltips.mixins.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.Font",
                "java.util.List",
                "int",
                "int",
                "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "closeCustomMatrices",
              "raw": "closeCustomMatrices(Lnet/minecraft/client/gui/Font;Ljava/util/List;IILnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/vertex/PoseStack;popPose()V, ordinal=0}]"
            }
          },
          {
            "class": "dev.isxander.adaptivetooltips.mixins.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.Font",
                "java.util.List",
                "java.util.Optional",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "removeNeoforgeWrapping",
              "raw": "removeNeoforgeWrapping(Lnet/minecraft/client/gui/Font;Ljava/util/List;Ljava/util/Optional;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.isxander.adaptivetooltips.mixins.GameRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "checkTooltipRendered",
              "raw": "checkTooltipRendered(Lnet/minecraft/client/DeltaTracker;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "dev.isxander.adaptivetooltips.utils.ModKeyBinds#onKeyRegister"
        ]
      },
      "info": {
        "authors": "isXander, 1foxy2",
        "classes": "23",
        "description": "Highly configurable tooltip rendering, so they always fit on the screen.",
        "displayName": "Better Tooltips",
        "file": "better_tooltips-1.0.2.jar",
        "license": "LGPL-3.0-or-later",
        "package": "dev.isxander.adaptivetooltips",
        "version": "1.0.2"
      },
      "modifies": [
        "net.minecraft.client.MouseHandler",
        "net.minecraft.client.gui.GuiGraphics",
        "net.minecraft.client.gui.components.Tooltip",
        "net.minecraft.client.gui.components.WidgetTooltipHolder",
        "net.minecraft.client.gui.screens.inventory.tooltip.ClientBundleTooltip",
        "net.minecraft.client.gui.screens.inventory.tooltip.ClientTextTooltip",
        "net.minecraft.client.gui.screens.inventory.tooltip.DefaultTooltipPositioner",
        "net.minecraft.client.gui.screens.inventory.tooltip.TooltipRenderUtil",
        "net.minecraft.client.renderer.GameRenderer"
      ],
      "summary": [
        "Custom Key Mappings",
        "Localization",
        "Modifies Methods"
      ]
    },
    "bhc": {
      "dependencies": {
        "curios": "[9.0.5,)",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.92,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.traverse.bhc.common.util.EasterEgg#onClientSetup"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.traverse.bhc.client.HeartCanistersClient#registerScreens"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.traverse.bhc.datagen.BHCDataGenerator#onDataGeneration"
        ],
        "net.neoforged.neoforge.event.ItemAttributeModifierEvent": [
          "com.traverse.bhc.common.items.tools.ItemBladeOfVitality#onAttributeModifiers"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "com.traverse.bhc.common.util.StartingHealthHandler#setStartingHealth"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "com.traverse.bhc.common.util.PlayerDeathEvent#onPlayerDeathEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "com.traverse.bhc.common.util.DropHandler#onEntityDrop"
        ]
      },
      "info": {
        "authors": "Traverse_Joe",
        "classes": "44",
        "description": "Heart Canisters for Curios, enjoy! :D\n",
        "displayName": "Baubley Heart Canisters",
        "file": "baubley-heart-canisters-1.21.1-1.2.1.jar",
        "license": "MIT",
        "package": "com.traverse.bhc.common",
        "version": "1.21.1-1.2.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.traverse.bhc.client.screens.VigorBowScreen",
          "com.traverse.bhc.client.screens.SoulHeartAmuletScreen",
          "com.traverse.bhc.client.screens.HeartAmuletScreen",
          "com.traverse.bhc.client.screens.BladeOfVitalityScreen"
        ],
        "net.minecraft.data.DataProvider": [
          "com.traverse.bhc.datagen.BHCRecipeProvider",
          "com.traverse.bhc.datagen.BHCItemTagsProvider",
          "com.traverse.bhc.datagen.BHCBlockTagsProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.traverse.bhc.common.items.tools.ItemVigorBow",
          "com.traverse.bhc.common.items.tools.ItemBladeOfVitality",
          "com.traverse.bhc.common.items.ItemSoulHeartAmulet",
          "com.traverse.bhc.common.items.ItemRelicApple",
          "com.traverse.bhc.common.items.ItemHeartPatch",
          "com.traverse.bhc.common.items.ItemHeartAmulet",
          "com.traverse.bhc.common.items.ItemHeart",
          "com.traverse.bhc.common.items.BaseItem",
          "com.traverse.bhc.common.items.BaseHeartCanister"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.traverse.bhc.common.recipes.HeartAmuletRecipe"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Listens to Entity Death Events",
        "Listens to Entity Drop Events",
        "Listens to Entity Join World Events",
        "Localization",
        "Modifies Item Attributes",
        "Uses Data Generators"
      ]
    },
    "bhmenu": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.bisecthosting.mods.bhmenu.mixins.modules.servercreatorbanner.ServerSelectionListMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "addBannerEntry",
              "raw": "addBannerEntry(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList;clearEntries()V}]"
            }
          }
        ]
      },
      "dependencies": {},
      "events": {
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "com.bisecthosting.mods.bhmenu.modules.publicserverlist.PublicServerList#addPublicServerWidget"
        ],
        "net.neoforged.neoforge.event.GameShuttingDownEvent": [
          "com.bisecthosting.mods.bhmenu.modules.servercreatorbanner.ServerCreatorBanner#onClientInit"
        ]
      },
      "info": {
        "authors": "BisectHosting",
        "classes": "70",
        "description": "Introducing the BisectHosting Server Integration Mod, exclusively designed for our Official BisectHosting Partners!\nThis unique mod enables our partners to easily embed their partner links into the multiplayer menu of their modpacks.\nThis functionality, developed with user-friendliness in mind, allows partners to gain commissions that support their projects and strengthen their community, all without spending unnecessary time on complex menu editing.",
        "displayName": "BHMenu",
        "file": "BHMenu-NeoForge-1.21-2.4.3.jar",
        "license": "All Rights Reserved",
        "package": "com.bisecthosting.mods.bhmenu",
        "version": "2.4.3"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.bisecthosting.mods.bhmenu.modules.servercreatorbanner.screens.BHOrderScreen",
          "com.bisecthosting.mods.bhmenu.modules.publicserverlist.screen.PublicServersScreen",
          "com.bisecthosting.mods.bhmenu.modules.publicserverlist.screen.PublicServerLoadingScreen",
          "com.bisecthosting.mods.bhmenu.config.UserConfigScreen",
          "com.bisecthosting.mods.bhmenu.config.PackConfigScreen",
          "com.bisecthosting.mods.bhmenu.config.ModuleConfigScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.screens.multiplayer.ServerSelectionList",
        "net.minecraft.client.gui.screens.multiplayer.ServerSelectionList$OnlineServerEntry"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "bibliocraft": {
      "dependencies": {
        "jei": "[19,20)",
        "minecraft": "[1.21.1,1.21.2)",
        "neoforge": "[21.1.62,21.2)"
      },
      "events": {
        "com.github.minecraftschurlimods.bibliocraft.api.lockandkey.RegisterLockAndKeyBehaviorEvent": [
          "com.github.minecraftschurlimods.bibliocraft.EventHandler$ModBus#registerLockAndKeyBehaviors"
        ],
        "com.github.minecraftschurlimods.bibliocraft.api.woodtype.RegisterBibliocraftWoodTypesEvent": [
          "com.github.minecraftschurlimods.bibliocraft.EventHandler$ModBus#registerBibliocraftWoodTypes"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "com.github.minecraftschurlimods.bibliocraft.EventHandler$ModBus#commonSetup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLConstructModEvent": [
          "com.github.minecraftschurlimods.bibliocraft.EventHandler$ModBus#constructMod"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "com.github.minecraftschurlimods.bibliocraft.EventHandler$ModBus#registerCapabilities"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "com.github.minecraftschurlimods.bibliocraft.client.ClientHandler$ModBus#registerLayerDefinitions"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.github.minecraftschurlimods.bibliocraft.client.ClientHandler$ModBus#registerRenderers"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$BakingCompleted": [
          "com.github.minecraftschurlimods.bibliocraft.client.ClientHandler$ModBus#bakingCompleted"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "com.github.minecraftschurlimods.bibliocraft.client.ClientHandler$ModBus#registerAdditional"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "com.github.minecraftschurlimods.bibliocraft.client.ClientHandler$ModBus#registerGeometryLoaders"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "com.github.minecraftschurlimods.bibliocraft.client.ClientHandler$ModBus#registerColorHandlersBlock"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "com.github.minecraftschurlimods.bibliocraft.client.ClientHandler$ModBus#registerColorHandlersItem"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.github.minecraftschurlimods.bibliocraft.client.ClientHandler$ModBus#registerMenuScreens"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeCreationEvent": [
          "com.github.minecraftschurlimods.bibliocraft.EventHandler$ModBus#entityAttributeCreation"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.github.minecraftschurlimods.bibliocraft.EventHandler$ModBus#registerPayloadHandlers"
        ]
      },
      "info": {
        "authors": "IchHabeHunger54, Minecraftschurli",
        "classes": "222",
        "description": "Bibliocraft Legacy is a port of the original BiblioCraft Minecraft mod by Nuchaz. It adds various pieces of decorative and functional furniture into the game.\n",
        "displayName": "Bibliocraft Legacy",
        "file": "bibliocraft-1.21.1-1.3.3.jar",
        "license": "MIT",
        "package": "com.github.minecraftschurlimods.bibliocraft",
        "version": "1.3.3"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.github.minecraftschurlimods.bibliocraft.client.screen.BCMenuScreens$PotionShelf",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.BCMenuScreens$FancyArmorStand",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.BCMenuScreens$ToolRack",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.BCMenuScreens$CookieJar",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.BCMenuScreen",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.BCMenuScreens$Label",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.BCMenuScreens$Bookcase",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.BCMenuScreens$Shelf",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.BCMenuScreens$DiscRack",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.FancyCrafterScreen",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.RedstoneBookScreen",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.ClipboardScreen",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.clock.ClockTriggerElement",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.clock.ClockScreen",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.clock.ClockTriggerEditScreen",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.StockroomCatalogScreen",
          "com.github.minecraftschurlimods.bibliocraft.client.screen.SlottedBookScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.github.minecraftschurlimods.bibliocraft.client.ber.PotionShelfBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.FancyCrafterBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.SwordPedestalBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.LabelBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.FancyArmorStandBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.ClipboardBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.DiscRackBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.ShelfBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.ToolRackBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.DinnerPlateBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.TableBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.CookieJarBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.DisplayCaseBER",
          "com.github.minecraftschurlimods.bibliocraft.client.ber.ClockBER"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "com.github.minecraftschurlimods.bibliocraft.client.model.BookcaseModel",
          "com.github.minecraftschurlimods.bibliocraft.client.model.DynamicBlockModel",
          "com.github.minecraftschurlimods.bibliocraft.client.model.TableModel"
        ],
        "net.minecraft.data.DataProvider": [
          "com.github.minecraftschurlimods.bibliocraft.api.datagen.NonClearingItemTagsProvider",
          "com.github.minecraftschurlimods.bibliocraft.api.datagen.NonClearingBlockTagsProvider",
          "com.github.minecraftschurlimods.bibliocraft.apiimpl.BibliocraftDatagenHelperImpl$3",
          "com.github.minecraftschurlimods.bibliocraft.apiimpl.BibliocraftDatagenHelperImpl$1",
          "com.github.minecraftschurlimods.bibliocraft.apiimpl.BibliocraftDatagenHelperImpl$2",
          "com.github.minecraftschurlimods.bibliocraft.apiimpl.BibliocraftDatagenHelperImpl$5"
        ],
        "net.minecraft.world.entity.Entity": [
          "com.github.minecraftschurlimods.bibliocraft.content.seat.SeatEntity",
          "com.github.minecraftschurlimods.bibliocraft.content.fancyarmorstand.FancyArmorStandEntity"
        ],
        "net.minecraft.world.item.Item": [
          "com.github.minecraftschurlimods.bibliocraft.content.redstonebook.RedstoneBookItem",
          "com.github.minecraftschurlimods.bibliocraft.content.fancylight.FancyLightItem",
          "com.github.minecraftschurlimods.bibliocraft.content.slottedbook.SlottedBookItem",
          "com.github.minecraftschurlimods.bibliocraft.content.displaycase.DisplayCaseItem",
          "com.github.minecraftschurlimods.bibliocraft.content.plumbline.PlumbLineItem",
          "com.github.minecraftschurlimods.bibliocraft.content.seat.SeatBackItem",
          "com.github.minecraftschurlimods.bibliocraft.content.tapemeasure.TapeMeasureItem",
          "com.github.minecraftschurlimods.bibliocraft.content.clipboard.ClipboardItem",
          "com.github.minecraftschurlimods.bibliocraft.content.clock.FancyClockItem",
          "com.github.minecraftschurlimods.bibliocraft.content.lockandkey.LockAndKeyItem",
          "com.github.minecraftschurlimods.bibliocraft.content.stockroomcatalog.StockroomCatalogItem",
          "com.github.minecraftschurlimods.bibliocraft.content.discrack.DiscRackItem",
          "com.github.minecraftschurlimods.bibliocraft.util.init.WoodTypeBlockItem",
          "com.github.minecraftschurlimods.bibliocraft.util.init.ColoredWoodTypeBlockItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.github.minecraftschurlimods.bibliocraft.content.fancycrafter.FancyCrafterBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.fancylight.FancyLanternBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.fancylight.FancyLampBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.fancylight.AbstractFancyLightBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.potionshelf.PotionShelfBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.displaycase.WallDisplayCaseBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.displaycase.AbstractDisplayCaseBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.displaycase.DisplayCaseBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.swordpedestal.SwordPedestalBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.seat.SeatBackBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.seat.SeatBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.bookcase.BookcaseBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.cookiejar.CookieJarBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.clipboard.ClipboardBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.dinnerplate.DinnerPlateBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.toolrack.ToolRackBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.clock.GrandfatherClockBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.clock.AbstractClockBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.clock.FancyClockBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.clock.WallFancyClockBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.table.TableBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.shelf.ShelfBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.fancyarmorstand.FancyArmorStandBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.deskbell.DeskBellBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.label.LabelBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.discrack.WallDiscRackBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.discrack.DiscRackBlock",
          "com.github.minecraftschurlimods.bibliocraft.content.discrack.AbstractDiscRackBlock",
          "com.github.minecraftschurlimods.bibliocraft.util.content.BCFacingBlock",
          "com.github.minecraftschurlimods.bibliocraft.util.content.BCEntityBlock",
          "com.github.minecraftschurlimods.bibliocraft.util.content.BCFacingInteractibleBlock",
          "com.github.minecraftschurlimods.bibliocraft.util.content.BCWaterloggedBlock",
          "com.github.minecraftschurlimods.bibliocraft.util.content.BCFacingEntityBlock"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Attributes",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Network Packets",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Has Capability Providers",
        "Localization",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "bigreactors": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.21,)",
        "zerocore": "[1.21.1-2.4.14,1.21.1-2.5.0)"
      },
      "events": {
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "it.zerono.mods.extremereactors.datagen.ForgeDataGenerationHandler#gatherData"
        ],
        "net.neoforged.neoforge.event.TagsUpdatedEvent": [
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reactor.ReactantHelper#onVanillaTagsUpdated"
        ]
      },
      "info": {
        "authors": "ZeroNoRyouki",
        "classes": "490",
        "description": "Adds large, multiblock power generation machines to Minecraft. This is a continuation of the 1.7.10 mod Big Reactors from ErogenousBeef",
        "displayName": "Extreme Reactors",
        "file": "ExtremeReactors2-1.21.1-2.4.21.jar",
        "license": "MIT",
        "package": "it.zerono.mods.extremereactors",
        "updateUrl": "https://raw.githubusercontent.com/ZeroNoRyouki/ModUpdates/master/ExtremeReactors2.json",
        "version": "1.21.1-2.4.21"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "it.zerono.mods.extremereactors.gamecontent.multiblock.turbine.client.screen.TurbineRedstonePortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.turbine.client.screen.TurbineFluidPortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.turbine.client.screen.TurbineControllerScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.turbine.client.screen.TurbineChargingPortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reprocessor.client.screen.ReprocessorControllerScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reprocessor.client.screen.ReprocessorAccessPortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reactor.client.screen.ReactorSolidAccessPortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reactor.client.screen.ReactorRedstonePortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reactor.client.screen.ReactorFluidPortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reactor.client.screen.ReactorFluidAccessPortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reactor.client.screen.ReactorControlRodScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reactor.client.screen.ReactorControllerScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reactor.client.screen.ReactorChargingPortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.fluidizer.client.screen.FluidizerSolidInjectorScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.fluidizer.client.screen.FluidizerControllerScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.energizer.client.screen.EnergizerPowerPortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.energizer.client.screen.EnergizerControllerScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.energizer.client.screen.EnergizerChargingPortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.common.client.screen.CommonMultiblockScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.common.client.screen.AbstractRedstonePortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.common.client.screen.AbstractMultiblockScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.common.client.screen.AbstractFluidPortScreen",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.common.client.screen.AbstractChargingPortScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "it.zerono.mods.extremereactors.gamecontent.multiblock.turbine.client.render.rotor.RotorBearingEntityRenderer",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reprocessor.client.render.ReprocessorCollectorRender",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.fluidizer.client.render.FluidizerControllerEntityRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reactor.client.model.ReactorFuelRodModel"
        ],
        "net.minecraft.data.DataProvider": [
          "it.zerono.mods.extremereactors.datagen.recipe.TurbineRecipesDataProvider",
          "it.zerono.mods.extremereactors.datagen.recipe.ReprocessorRecipesDataProvider",
          "it.zerono.mods.extremereactors.datagen.recipe.ReactorRecipesDataProvider",
          "it.zerono.mods.extremereactors.datagen.recipe.GenericRecipesDataProvider",
          "it.zerono.mods.extremereactors.datagen.recipe.FluidizerRecipesDataProvider",
          "it.zerono.mods.extremereactors.datagen.recipe.EnergizerRecipesDataProvider",
          "it.zerono.mods.extremereactors.datagen.recipe.AbstractRecipesDataProvider"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reprocessor.recipe.ReprocessorRecipe",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.fluidizer.recipe.FluidizerSolidRecipe",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.fluidizer.recipe.FluidizerSolidMixingRecipe",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.fluidizer.recipe.FluidizerFluidMixingRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "it.zerono.mods.extremereactors.gamecontent.multiblock.turbine.part.TurbineRotorComponentBlock",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.turbine.part.TurbineRotorComponentBlock$2",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.turbine.part.TurbineRotorComponentBlock$1",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.turbine.part.TurbineRotorBearingBlock",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.turbine.part.TurbineRedstonePortBlock",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reactor.part.ReactorRedstonePortBlock",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.reactor.part.ReactorFuelRodBlock",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.common.part.PowerTapBlock",
          "it.zerono.mods.extremereactors.gamecontent.multiblock.common.part.PassiveFluidPortBlock",
          "it.zerono.mods.extremereactors.gamecontent.fluid.ReactantFluidBlock"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Loot Tables",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Listens to Tag Updates",
        "Localization",
        "Patchouli Guide Book",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "blockrunner": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "fuzs.blockrunner.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "baseTick",
              "raw": "baseTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "fuzs.blockrunner.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "double",
                "boolean",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "checkFallDamage",
              "raw": "checkFallDamage(DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "fuzs.blockrunner.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onChangedBlock",
              "raw": "onChangedBlock(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "fuzs.blockrunner.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getBlockSpeedFactor",
              "raw": "getBlockSpeedFactor(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.21,)",
        "neoforgedatapackextensions": "*",
        "puzzleslib": "[21.1.27,)"
      },
      "info": {
        "authors": "Fuzs",
        "classes": "15",
        "description": "Encourages path building by making you run faster on certain blocks such as path blocks.",
        "displayName": "Block Runner",
        "file": "BlockRunner-v21.1.1-1.21.1-NeoForge.jar",
        "latest": "21.1.2",
        "license": "MPL-2.0",
        "package": "fuzs.blockrunner",
        "updateUrl": "https://raw.githubusercontent.com/Fuzss/modresources/main/update/blockrunner.json",
        "version": "21.1.1"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "fuzs.blockrunner.neoforge.data.ModDataMapProvider",
          "fuzs.blockrunner.data.client.ModLanguageProvider",
          "fuzs.blockrunner.data.ModBlockTagsProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "fuzs.blockrunner.mixin.client.AbstractClientPlayerMixin",
          "fuzs.blockrunner.mixin.LivingEntityMixin"
        ]
      },
      "modifies": [
        "net.minecraft.client.player.AbstractClientPlayer",
        "net.minecraft.world.entity.LivingEntity"
      ],
      "summary": [
        "Custom Entities",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "bonsaitrees4": {
      "annotations": {
        "net.minecraft.gametest.framework.GameTest": [
          {
            "class": "com.davenonymous.bonsaitrees.gametest.GenerationTests",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "generateDatapacks",
              "raw": "generateDatapacks(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty"
            }
          }
        ],
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.davenonymous.bonsaitrees.mixins.MixinLootItemBlockStatePropertyCondition",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.storage.loot.LootContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "test",
              "raw": "test(Lnet/minecraft/world/level/storage/loot/LootContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.davenonymous.bonsaitrees.mixins.MixinJeiEnchantmentFix",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "canEnchant",
              "raw": "canEnchant(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.davenonymous.bonsaitrees.mixins.MixinBlockCanSurvive",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.LevelReader",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "canSurvive",
              "raw": "canSurvive(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.davenonymous.bonsaitrees.mixins.MixinArsNouveauDatagenSkip",
            "method": {
              "argTypes": [
                "net.neoforged.neoforge.data.event.GatherDataEvent",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "datagen",
              "raw": "datagen(Lnet/neoforged/neoforge/data/event/GatherDataEvent;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.davenonymous.bonsaitrees.mixins.MixinArsElementalDatagenSkip",
            "method": {
              "argTypes": [
                "net.neoforged.neoforge.data.event.GatherDataEvent",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "gatherData",
              "raw": "gatherData(Lnet/neoforged/neoforge/data/event/GatherDataEvent;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.davenonymous.bonsaitrees.mixins.MixinAbstractHugeMushroomFeature",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.LevelAccessor",
                "net.minecraft.core.BlockPos",
                "int",
                "net.minecraft.core.BlockPos$MutableBlockPos",
                "net.minecraft.world.level.levelgen.feature.configurations.HugeMushroomFeatureConfiguration",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "isValidPosition",
              "raw": "isValidPosition(Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "com.davenonymous.bonsaitrees.setup.config.Config#onLoad"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.davenonymous.bonsaitrees.setup.ModModelLoaders#onClientSetup"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "com.davenonymous.bonsaitrees.setup.CapabilityRegister#onCapabilityRegister"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.davenonymous.bonsaitrees.setup.ModBlockEntityRenderers#registerEntityRenderers"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "com.davenonymous.bonsaitrees.setup.ModModelLoaders#registerAdditional"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "com.davenonymous.bonsaitrees.setup.ModModelLoaders#registerGeometryLoaders"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientTooltipComponentFactoriesEvent": [
          "com.davenonymous.bonsaitrees.setup.ModTooltipComponents#onTooltipRegister"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.davenonymous.bonsaitrees.setup.ModContainers#attachScreens"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$GatherComponents": [
          "com.davenonymous.bonsaitrees.client.BonsaiTooltip#onTooltipCreation"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "com.davenonymous.bonsaitrees.setup.ModBlockEntityRenderers#registerClientExtensions"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.davenonymous.bonsaitrees.datagen.DGHandler#gatherData"
        ],
        "net.neoforged.neoforge.event.AddPackFindersEvent": [
          "com.davenonymous.bonsaitrees.setup.ModDataPacks#addPackFinder"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "com.davenonymous.bonsaitrees.setup.cache.EventListeners#onDataPackSync"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "com.davenonymous.bonsaitrees.setup.ModCommands#onRegisterCommands"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.davenonymous.bonsaitrees.networking.Register#register"
        ],
        "net.neoforged.neoforge.registries.DataPackRegistryEvent$NewRegistry": [
          "com.davenonymous.bonsaitrees.setup.ModRegistries#newRegistry"
        ],
        "net.neoforged.neoforge.registries.datamaps.DataMapsUpdatedEvent": [
          "com.davenonymous.bonsaitrees.setup.cache.EventListeners#dataMapsUpdated"
        ],
        "net.neoforged.neoforge.registries.datamaps.RegisterDataMapTypesEvent": [
          "com.davenonymous.bonsaitrees.setup.ModDataMaps#registerDataMapTypes"
        ]
      },
      "info": {
        "authors": "Davenonymous",
        "classes": "226",
        "description": "Bonsai is the Japanese art of growing and shaping miniature trees in containers.",
        "displayName": "Bonsai Trees 4",
        "file": "bonsaitrees4-1.0.0.jar",
        "license": "MIT",
        "package": "com.davenonymous.bonsaitrees",
        "version": "1.0.0"
      },
      "inheritance": {
        "com.mojang.brigadier.Command": [
          "com.davenonymous.bonsaitrees.command.place.PlaceSoilTest",
          "com.davenonymous.bonsaitrees.command.place.PlaceDemoDisplay",
          "com.davenonymous.bonsaitrees.command.place.PlaceCamouflageTest",
          "com.davenonymous.bonsaitrees.command.list.ListSaplings",
          "com.davenonymous.bonsaitrees.command.list.ListDrops",
          "com.davenonymous.bonsaitrees.command.generate.GenerateModel",
          "com.davenonymous.bonsaitrees.command.generate.GenerateDataPack"
        ],
        "net.minecraft.client.gui.screens.Screen": [
          "com.davenonymous.bonsaitrees.lib.gui.WidgetScreen",
          "com.davenonymous.bonsaitrees.lib.gui.WidgetContainerScreen",
          "com.davenonymous.bonsaitrees.blocks.BonsaiPotScreen"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "com.davenonymous.bonsaitrees.client.BonsaiPotItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.davenonymous.bonsaitrees.client.BonsaiPotBlockRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "com.davenonymous.bonsaitrees.client.PotModel",
          "com.davenonymous.bonsaitrees.client.multiblock.MultiBlockModel"
        ],
        "net.minecraft.data.DataProvider": [
          "com.davenonymous.bonsaitrees.lib.ResourcePackMetadataGenerator",
          "com.davenonymous.bonsaitrees.lib.FileCopyGenerator",
          "com.davenonymous.bonsaitrees.datagen.DGTreeModelProvider",
          "com.davenonymous.bonsaitrees.datagen.DGRecipes",
          "com.davenonymous.bonsaitrees.datagen.DGDataMaps",
          "com.davenonymous.bonsaitrees.datagen.DGBlockTags",
          "com.davenonymous.bonsaitrees.datagen.DGBlockStates"
        ],
        "net.minecraft.world.item.Item": [
          "com.davenonymous.bonsaitrees.blocks.BonsaiPotBlockItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.davenonymous.bonsaitrees.lib.recipe.TransformItemRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.davenonymous.bonsaitrees.blocks.BonsaiPotSmallBlock",
          "com.davenonymous.bonsaitrees.blocks.BonsaiPotBlock"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "com.davenonymous.bonsaitrees.client.PotModelLoader",
          "com.davenonymous.bonsaitrees.client.multiblock.MultiBlockModelLoader"
        ]
      },
      "modifies": [
        "alexthw.ars_elemental.datagen.Datagen",
        "com.hollingsworth.arsnouveau.common.datagen.ModDatagen",
        "net.minecraft.world.item.enchantment.Enchantment",
        "net.minecraft.world.level.block.ChorusFlowerBlock",
        "net.minecraft.world.level.block.ChorusPlantBlock",
        "net.minecraft.world.level.levelgen.feature.AbstractHugeMushroomFeature",
        "net.minecraft.world.level.storage.loot.predicates.LootItemBlockStatePropertyCondition"
      ],
      "summary": [
        "Adds Resource/Data Pack Finders",
        "Auto-reloads Config Files",
        "Automatic Testing",
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Data Map Types",
        "Custom Data Pack Sync",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Model Loaders",
        "Custom Network Packets",
        "Custom Recipe Types",
        "Custom Registries",
        "Custom Server Commands",
        "Custom Tag Assignments",
        "Custom Tooltip Components",
        "Has Capability Providers",
        "Has Commands",
        "Localization",
        "Modifies Methods",
        "Modifies Tooltips",
        "Patchouli Guide Book",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Data Maps"
      ]
    },
    "bookshelf": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.item.MixinCreativeModeTab",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.CreativeModeTab$ItemDisplayParameters",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "buildContents",
              "raw": "buildContents(Lnet/minecraft/world/item/CreativeModeTab$ItemDisplayParameters;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.commands.MixinArgumentTypeInfos",
            "method": {
              "argTypes": [
                "net.minecraft.core.Registry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "bootstrap",
              "raw": "bootstrap(Lnet/minecraft/core/Registry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.commands.MixinCommands",
            "method": {
              "argTypes": [
                "net.minecraft.commands.Commands$CommandSelection",
                "net.minecraft.commands.CommandBuildContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "registerCommands",
              "raw": "registerCommands(Lnet/minecraft/commands/Commands$CommandSelection;Lnet/minecraft/commands/CommandBuildContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.packs.MixinSimpleJsonResourceReloadListener",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "prepare",
              "raw": "prepare(Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.advancement.MixinCriteriaTriggers",
            "method": {
              "argTypes": [
                "net.minecraft.core.Registry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "bootstrap",
              "raw": "bootstrap(Lnet/minecraft/core/Registry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.advancement.MixinItemSubPredicates",
            "method": {
              "argTypes": [
                "net.minecraft.core.Registry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onBootstrap",
              "raw": "onBootstrap(Lnet/minecraft/core/Registry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.advancement.MixinPlayerAdvancements",
            "method": {
              "argTypes": [
                "net.minecraft.advancements.AdvancementHolder",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onAward",
              "raw": "onAward(Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.registries.MixinBuiltInRegistries",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "bootstrap",
              "raw": "bootstrap(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/core/registries/BuiltInRegistries;freeze()V, ordinal=0}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.MixinCatVariant",
            "method": {
              "argTypes": [
                "net.minecraft.core.Registry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onBootstrap",
              "raw": "onBootstrap(Lnet/minecraft/core/Registry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.client.MixinClientPacketListener",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "net.minecraft.network.Connection",
                "net.minecraft.client.multiplayer.CommonListenerCookie",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/Connection;Lnet/minecraft/client/multiplayer/CommonListenerCookie;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.gui.screens.MixinMenuScreens",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClassInit",
              "raw": "onClassInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.server.MixinReloadableServerResources",
            "method": {
              "argTypes": [
                "net.minecraft.core.RegistryAccess$Frozen",
                "net.minecraft.world.flag.FeatureFlagSet",
                "net.minecraft.commands.Commands$CommandSelection",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lnet/minecraft/core/RegistryAccess$Frozen;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/commands/Commands$CommandSelection;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.locale.MixinClientLanguage",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "has",
              "raw": "has(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.locale.MixinClientLanguage",
            "method": {
              "argTypes": [
                "java.lang.String",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getOrDefault",
              "raw": "getOrDefault(Ljava/lang/String;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.component.MixinDataComponents",
            "method": {
              "argTypes": [
                "net.minecraft.core.Registry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "bootstrap",
              "raw": "bootstrap(Lnet/minecraft/core/Registry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.level.MixinRecipeManager",
            "method": {
              "argTypes": [
                "java.lang.Iterable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRecipesUpdated",
              "raw": "onRecipesUpdated(Ljava/lang/Iterable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.level.MixinRecipeManager",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onReload",
              "raw": "onReload(Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.level.MixinWalkNodeEvaluator",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.level.block.state.BlockState"
              ],
              "name": "getBlockPathTypeRaw",
              "raw": "getBlockPathTypeRaw(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/level/block/state/BlockState;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/block/state/BlockState;getBlock()Lnet/minecraft/world/level/block/Block;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.loot.MixinLootPoolEntries",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "classInit",
              "raw": "classInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.loot.MixinLootDataType",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "com.mojang.serialization.DynamicOps",
                "java.lang.Object",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "com.mojang.serialization.DataResult"
              ],
              "name": "onDeserialize",
              "raw": "onDeserialize(Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lcom/mojang/serialization/DataResult;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/serialization/DataResult;error()Ljava/util/Optional;}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.loot.MixinLootPool",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClassInit",
              "raw": "onClassInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.block.MixinDecoratedPotPatterns",
            "method": {
              "argTypes": [
                "net.minecraft.core.Registry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "bootstrap",
              "raw": "bootstrap(Lnet/minecraft/core/Registry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.block.MixinDecoratedPotPatterns",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.Item",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getResourceKey",
              "raw": "getResourceKey(Lnet/minecraft/world/item/Item;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.darkhax.bookshelf.common.mixin.patch.block.MixinBlockEntityRenderers",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClassInit",
              "raw": "onClassInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.61,)"
      },
      "info": {
        "authors": "Darkhax",
        "classes": "154",
        "description": "Bookshelf is a library mod that provides code, frameworks, and utilities for other mods. Many mods make use of Bookshelf and are powered by its code.",
        "displayName": "Bookshelf",
        "file": "bookshelf-neoforge-1.21.1-21.1.48.jar",
        "license": "LGPL 2.1",
        "package": "net.darkhax.bookshelf.common.api",
        "updateUrl": "https://updates.blamejared.com/get?n=bookshelf&gv=1.21.1&ml=neoforge",
        "version": "21.1.48"
      },
      "inheritance": {
        "com.mojang.brigadier.Command": [
          "net.darkhax.bookshelf.common.api.commands.IEnumCommand",
          "net.darkhax.bookshelf.common.impl.command.DebugCommands",
          "net.darkhax.bookshelf.common.impl.command.HandCommand"
        ]
      },
      "modifies": [
        "com.mojang.brigadier.context.CommandContext",
        "net.minecraft.advancements.CriteriaTriggers",
        "net.minecraft.advancements.critereon.ItemSubPredicates",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.font.FontManager",
        "net.minecraft.client.gui.screens.MenuScreens",
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.client.renderer.ItemBlockRenderTypes",
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderers",
        "net.minecraft.client.resources.language.ClientLanguage",
        "net.minecraft.commands.Commands",
        "net.minecraft.commands.synchronization.ArgumentTypeInfos",
        "net.minecraft.core.component.DataComponents",
        "net.minecraft.core.particles.SimpleParticleType",
        "net.minecraft.core.registries.BuiltInRegistries",
        "net.minecraft.server.PlayerAdvancements",
        "net.minecraft.server.ReloadableServerResources",
        "net.minecraft.server.packs.resources.SimpleJsonResourceReloadListener",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.animal.CatVariant",
        "net.minecraft.world.item.CreativeModeTab",
        "net.minecraft.world.item.crafting.RecipeManager",
        "net.minecraft.world.level.block.CropBlock",
        "net.minecraft.world.level.block.entity.BannerBlockEntity",
        "net.minecraft.world.level.block.entity.BaseContainerBlockEntity",
        "net.minecraft.world.level.block.entity.DecoratedPotPatterns",
        "net.minecraft.world.level.pathfinder.WalkNodeEvaluator",
        "net.minecraft.world.level.storage.loot.LootDataType",
        "net.minecraft.world.level.storage.loot.LootPool",
        "net.minecraft.world.level.storage.loot.LootTable",
        "net.minecraft.world.level.storage.loot.entries.LootItem",
        "net.minecraft.world.level.storage.loot.entries.LootPoolEntries"
      ],
      "summary": [
        "Custom Tag Assignments",
        "Has Commands",
        "Localization",
        "Modifies Methods"
      ]
    },
    "brickfurnace": {
      "dependencies": {
        "immersiveengineering": "[1.21.1-12.0.0,)",
        "jei": "[19.19.0.219,)",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.62,)",
        "roughlyenoughitems": "[16.0.788,)",
        "theoneprobe": "[1.21_neo-12.0.3,)"
      },
      "events": {
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "de.cech12.brickfurnace.BrickFurnaceMod#registerCapabilities",
          "de.cech12.brickfurnace.compat.EventHandler#onCapabilitiesAttachBlockEntity"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "de.cech12.brickfurnace.BrickFurnaceMod#addItemsToTabs"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "de.cech12.brickfurnace.BrickFurnaceMod#register"
        ]
      },
      "info": {
        "authors": "Cech12",
        "classes": "41",
        "description": "A mod which adds Brick Furnaces.",
        "displayName": "Castin'n'Smelting",
        "file": "brickfurnace-neoforge-1.21.1-4.2.0.0.jar",
        "license": "The MIT License (MIT)",
        "package": "de.cech12.brickfurnace",
        "version": "1.21.1-4.2.0.0"
      },
      "inheritance": {
        "net.minecraft.world.item.crafting.Recipe": [
          "de.cech12.brickfurnace.crafting.BrickSmeltingRecipe",
          "de.cech12.brickfurnace.crafting.BrickBlastingRecipe",
          "de.cech12.brickfurnace.crafting.BrickSmokingRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "de.cech12.brickfurnace.block.BrickSmokerBlock",
          "de.cech12.brickfurnace.block.BrickFurnaceBlock",
          "de.cech12.brickfurnace.block.BrickBlastFurnaceBlock"
        ]
      },
      "modifies": [
        "net.minecraft.world.entity.ai.village.poi.PoiType",
        "net.minecraft.world.entity.ai.village.poi.PoiTypes"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Loot Tables",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Has Capability Providers",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "bridgingmod": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "me.cg360.mod.bridging.mixin.OutlineRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderTracedViewPath",
              "raw": "renderTracedViewPath(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/renderer/debug/DebugRenderer;render(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDD)V, ordinal=0}]"
            }
          },
          {
            "class": "me.cg360.mod.bridging.mixin.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onItemUse",
              "raw": "onItemUse(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.cg360.mod.bridging.mixin.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onTick",
              "raw": "onTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "me.cg360.mod.bridging.mixin.CrosshairRenderingMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "net.minecraft.client.DeltaTracker",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderPlacementAssistMarker",
              "raw": "renderPlacementAssistMarker(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/DeltaTracker;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "dynamiccrosshair": "[9.3,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1,)",
        "yet_another_config_lib_v3": "[3.6.2+1.21,)"
      },
      "info": {
        "authors": "CG360",
        "classes": "50",
        "description": "Adds bridging assist similar to Bedrock & Quark's building mechanics.",
        "displayName": "Bridging Mod",
        "file": "BridgingMod-2.6.1+1.21.1.neoforge-release.jar",
        "license": "MIT",
        "package": "me.cg360.mod.bridging",
        "version": "2.6.1+1.21.1"
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.Gui",
        "net.minecraft.client.renderer.LevelRenderer"
      ],
      "summary": [
        "Localization",
        "Modifies Methods"
      ]
    },
    "bucketlib": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "de.cech12.bucketlib.mixin.AxolotlAiMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getTemptationsProxy",
              "raw": "getTemptationsProxy(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.cech12.bucketlib.mixin.ItemStackMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getMaxStackSizeProxy",
              "raw": "getMaxStackSizeProxy(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.cech12.bucketlib.mixin.ItemStackMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "isDamageableItemProxy",
              "raw": "isDamageableItemProxy(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.cech12.bucketlib.mixin.ItemStackMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getMaxDamageProxy",
              "raw": "getMaxDamageProxy(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.cech12.bucketlib.mixin.AxolotlMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.InteractionHand",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "usePlayerItemProxy",
              "raw": "usePlayerItemProxy(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.cech12.bucketlib.mixin.AxolotlMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "isFoodProxy",
              "raw": "isFoodProxy(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "jei": "[19.0.0.9,)",
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.94-beta,)",
        "roughlyenoughitems": "[16.0.729,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "de.cech12.bucketlib.client.ClientEvents#clientSetup"
        ]
      },
      "info": {
        "authors": "Cech12",
        "classes": "58",
        "description": "A library mod for custom buckets.",
        "displayName": "BucketLib",
        "file": "bucketlib-neoforge-1.21-4.1.2.0.jar",
        "license": "The MIT License (MIT)",
        "package": "de.cech12.bucketlib",
        "version": "1.21-4.1.2.0"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "de.cech12.bucketlib.mixin.AxolotlMixin"
        ],
        "net.minecraft.world.entity.Mob": [
          "de.cech12.bucketlib.mixin.AxolotlMixin"
        ],
        "net.minecraft.world.entity.animal.Animal": [
          "de.cech12.bucketlib.mixin.AxolotlMixin"
        ],
        "net.minecraft.world.item.Item": [
          "de.cech12.bucketlib.mixin.NeoforgeUniversalBucketItemMixin",
          "de.cech12.bucketlib.api.item.UniversalBucketItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "de.cech12.bucketlib.item.crafting.BucketFillingShapelessRecipe",
          "de.cech12.bucketlib.item.crafting.BucketFillingShapedRecipe"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "de.cech12.bucketlib.client.model.UniversalBucketModel$Loader"
        ]
      },
      "modifies": [
        "de.cech12.bucketlib.api.item.UniversalBucketItem",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.animal.axolotl.Axolotl",
        "net.minecraft.world.entity.animal.axolotl.AxolotlAi",
        "net.minecraft.world.item.ItemStack",
        "net.minecraft.world.item.MobBucketItem",
        "net.minecraft.world.item.crafting.Recipe"
      ],
      "summary": [
        "Custom Animals",
        "Custom Entities",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Mobs",
        "Custom Model Loaders",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods"
      ]
    },
    "buildguide": {
      "dependencies": {
        "minecraft": "[1.21,1.21.2)",
        "neoforge": "[21.0,21.2)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "brentmaas.buildguide.neoforge.InputHandler#onKeyInputProxy"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "brentmaas.buildguide.neoforge.RenderHandler#onRenderBlock"
        ]
      },
      "info": {
        "authors": "brentmaas",
        "classes": "123",
        "description": "A client-side only mod to project shapes like circles and spheres into the world. It works both in singleplayer and multiplayer, even if the server doesn't have the mod installed.",
        "displayName": "Build Guide",
        "file": "BuildGuide-1.21-0.4.4.jar",
        "license": "Creative Commons Attribution-NonCommercial 3.0 Unported",
        "package": "brentmaas.buildguide.forge",
        "version": "0.4.4"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "brentmaas.buildguide.forge.screen.ScreenWrapper",
          "brentmaas.buildguide.neoforge.screen.ScreenWrapper"
        ]
      },
      "summary": [
        "Custom GUI Screens",
        "Localization",
        "Modifies World Rendering"
      ]
    },
    "buildinggadgets2": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "com.direwolf20.buildinggadgets2.client.events.EventKeyInput#handleEventInput"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.direwolf20.buildinggadgets2.setup.ClientSetup#registerRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientTooltipComponentFactoriesEvent": [
          "com.direwolf20.buildinggadgets2.setup.ClientSetup#registerTooltipFactory"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "com.direwolf20.buildinggadgets2.client.KeyBindings#registerKeyMappings"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.direwolf20.buildinggadgets2.setup.ClientSetup#registerScreens"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "com.direwolf20.buildinggadgets2.client.particles.ParticleRenderDispatcher#registerProviders"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.direwolf20.buildinggadgets2.client.events.RenderLevelLast#renderWorldLastEvent"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.direwolf20.buildinggadgets2.datagen.DataGenerators#gatherData"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Pre": [
          "com.direwolf20.buildinggadgets2.common.events.ServerTickHandler#handleTickEndEvent"
        ]
      },
      "info": {
        "authors": "Direwolf20",
        "classes": "166",
        "description": "We can build it better, stronger, faster.\n",
        "displayName": "Building Gadgets 2",
        "file": "buildinggadgets2-1.3.8.jar",
        "license": "MIT (https://github.com/Direwolf20-MC/BuildingGadgets2/blob/main/LICENSE)",
        "package": "com.direwolf20.buildinggadgets2",
        "version": "1.3.8"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.direwolf20.buildinggadgets2.client.screen.TemplateManagerGUI",
          "com.direwolf20.buildinggadgets2.client.screen.PasteGUI",
          "com.direwolf20.buildinggadgets2.client.screen.ModeRadialMenu",
          "com.direwolf20.buildinggadgets2.client.screen.MaterialListGUI",
          "com.direwolf20.buildinggadgets2.client.screen.DestructionGUI",
          "com.direwolf20.buildinggadgets2.client.screen.CopyGUI"
        ],
        "net.minecraft.client.particle.Particle": [
          "com.direwolf20.buildinggadgets2.client.particles.itemparticle.ItemFlowParticle",
          "com.direwolf20.buildinggadgets2.client.particles.fluidparticle.FluidFlowParticle"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.direwolf20.buildinggadgets2.client.blockentityrenders.RenderBlockBER"
        ],
        "net.minecraft.data.DataProvider": [
          "com.direwolf20.buildinggadgets2.datagen.BG2Recipes",
          "com.direwolf20.buildinggadgets2.datagen.BG2LanguageProvider",
          "com.direwolf20.buildinggadgets2.datagen.BG2ItemTags",
          "com.direwolf20.buildinggadgets2.datagen.BG2ItemModels",
          "com.direwolf20.buildinggadgets2.datagen.BG2BlockTags",
          "com.direwolf20.buildinggadgets2.datagen.BG2BlockStates"
        ],
        "net.minecraft.world.item.Item": [
          "com.direwolf20.buildinggadgets2.common.items.TemplateItem",
          "com.direwolf20.buildinggadgets2.common.items.Redprint",
          "com.direwolf20.buildinggadgets2.common.items.GadgetExchanger",
          "com.direwolf20.buildinggadgets2.common.items.GadgetDestruction",
          "com.direwolf20.buildinggadgets2.common.items.GadgetCutPaste",
          "com.direwolf20.buildinggadgets2.common.items.GadgetCopyPaste",
          "com.direwolf20.buildinggadgets2.common.items.GadgetBuilding",
          "com.direwolf20.buildinggadgets2.common.items.BaseGadget"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.direwolf20.buildinggadgets2.common.blocks.TemplateManager",
          "com.direwolf20.buildinggadgets2.common.blocks.RenderBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.direwolf20.buildinggadgets2.common.worlddata.BG2Data"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Loot Tables",
        "Custom Particles",
        "Custom Tag Assignments",
        "Custom Tooltip Components",
        "Localization",
        "Modifies World Rendering",
        "Patchouli Guide Book",
        "Runs Client Tick Logic",
        "Runs Server Tick Logic",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "cable_facades": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.portingdeadmods.cable_facades.mixins.BlockStateBaseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "isSolidRender",
              "raw": "isSolidRender(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.portingdeadmods.cable_facades.mixins.BlockStateBaseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "propagatesSkylightDown",
              "raw": "propagatesSkylightDown(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.portingdeadmods.cable_facades.mixins.BlockStateBaseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getLightBlock",
              "raw": "getLightBlock(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.portingdeadmods.cable_facades.mixins.BlockStateBaseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getOcclusionShape",
              "raw": "getOcclusionShape(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.portingdeadmods.cable_facades.mixins.BlockStateBaseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.phys.shapes.CollisionContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getShape",
              "raw": "getShape(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.portingdeadmods.cable_facades.mixins.BlockStateBaseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.phys.shapes.CollisionContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getCollisionShape",
              "raw": "getCollisionShape(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.portingdeadmods.cable_facades.mixins.BlockStateBaseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRemove",
              "raw": "onRemove(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.portingdeadmods.cable_facades.mixins.BlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.Direction",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.level.block.state.BlockState"
              ],
              "name": "checkFacadeOcclusion",
              "raw": "checkFacadeOcclusion(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/level/block/state/BlockState;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "com.portingdeadmods.cable_facades.CFConfig#onLoad"
        ],
        "net.neoforged.neoforge.client.event.AddSectionGeometryEvent": [
          "com.portingdeadmods.cable_facades.events.GameClientEvents#geometryEvent"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "com.portingdeadmods.cable_facades.events.CFClientEvents#registerAdditionalModels"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "com.portingdeadmods.cable_facades.events.GameClientEvents#renderOutline"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.portingdeadmods.cable_facades.events.GameClientEvents#render"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "com.portingdeadmods.cable_facades.events.CFClientEvents#registerClientExtensions"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": [
          "com.portingdeadmods.cable_facades.events.GameClientEvents#onChangeDimension"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.portingdeadmods.cable_facades.events.GameEvents#onRightClick"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BreakEvent": [
          "com.portingdeadmods.cable_facades.events.GameEvents#onBlockBreak"
        ],
        "net.neoforged.neoforge.event.level.ChunkWatchEvent$Sent": [
          "com.portingdeadmods.cable_facades.events.GameEvents#loadChunk"
        ],
        "net.neoforged.neoforge.event.level.ChunkWatchEvent$UnWatch": [
          "com.portingdeadmods.cable_facades.events.GameEvents#unloadChunk"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.portingdeadmods.cable_facades.events.NetworkingEvents#registerPayloads"
        ]
      },
      "info": {
        "authors": "Leclowndu93150, Thepigcat76, SuperMartijn642, Heather White, IMS212",
        "classes": "38",
        "description": "Adds facades for most cables in the game.",
        "displayName": "Cable Facades",
        "file": "cable_facades-1.21.1-NeoForge-1.4.1.jar",
        "license": "MIT",
        "package": "com.portingdeadmods.cable_facades",
        "version": "1.4.1"
      },
      "inheritance": {
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "com.portingdeadmods.cable_facades.client.renderer.item.FacadeItemRenderer"
        ],
        "net.minecraft.world.item.Item": [
          "com.portingdeadmods.cable_facades.registries.CFItems$1",
          "com.portingdeadmods.cable_facades.content.items.FacadeItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.portingdeadmods.cable_facades.content.recipes.FacadeCraftingRecipe"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.portingdeadmods.cable_facades.data.CableFacadeSavedData"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.world.level.block.Block",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "net.minecraft.world.level.block.state.BlockState"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Network Packets",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Listens to Dimension Change Events",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Block Breaking",
        "Modifies Methods",
        "Modifies World Rendering",
        "Stores Data in World Saves"
      ]
    },
    "caelus": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.illusivesoulworks.caelus.mixin.core.MixinLocalPlayer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "caelus$checkFlight",
              "raw": "caelus$checkFlight(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE_ASSIGN, target=net/minecraft/client/player/LocalPlayer.getItemBySlot(Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack;}]"
            }
          },
          {
            "class": "com.illusivesoulworks.caelus.mixin.core.MixinCapeLayer",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "net.minecraft.client.player.AbstractClientPlayer",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "caelus$canRenderCape",
              "raw": "caelus$canRenderCape(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=net/minecraft/client/player/AbstractClientPlayer.getItemBySlot(Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.illusivesoulworks.caelus.mixin.core.MixinCaelusApi",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "caelus$getInstance",
              "raw": "caelus$getInstance(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21,)"
      },
      "info": {
        "authors": "Illusive Soulworks",
        "classes": "24",
        "description": "An API to provide developers access to the elytra's fall flying mechanics through an entity attribute.",
        "displayName": "Caelus API",
        "file": "caelus-neoforge-7.0.1+1.21.1.jar",
        "license": "LGPL-3.0-or-later",
        "package": "com.illusivesoulworks.caelus",
        "version": "7.0.1+1.21.1"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "com.illusivesoulworks.caelus.mixin.core.MixinLivingEntity"
        ]
      },
      "modifies": [
        "com.illusivesoulworks.caelus.api.CaelusApi",
        "net.minecraft.client.player.LocalPlayer",
        "net.minecraft.client.renderer.entity.layers.CapeLayer",
        "net.minecraft.world.entity.LivingEntity"
      ],
      "summary": [
        "Custom Entities",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods"
      ]
    },
    "carbonconfig": {
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.143,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingIn": [
          "carbonconfiglib.impl.internal.EventHandler#onPlayerServerJoinEvent"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingOut": [
          "carbonconfiglib.impl.internal.EventHandler#onPlayerServerLeaveEvent"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "carbonconfiglib.impl.internal.EventHandler#onClientTickEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "carbonconfiglib.impl.internal.EventHandler#onServerLeaveEvent"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "carbonconfiglib.impl.internal.EventHandler#onServerTickEvent"
        ]
      },
      "info": {
        "authors": "Meduris, Speiger",
        "classes": "230",
        "description": "\t\tCarbon Config is IC2Classics Config Implementation made open source\n\t",
        "displayName": "Carbon Config Library",
        "file": "CarbonConfig-Neoforge-1.21-1.2.9.2.jar",
        "license": "Apache-2.0",
        "package": "carbonconfiglib",
        "version": "0.0NONE"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "carbonconfiglib.gui.screen.SelectFileScreen",
          "carbonconfiglib.gui.screen.RequestScreen",
          "carbonconfiglib.gui.screen.MultiChoiceScreen",
          "carbonconfiglib.gui.screen.ListSelectionScreen",
          "carbonconfiglib.gui.screen.EditStringScreen",
          "carbonconfiglib.gui.screen.ConfigSelectorScreen",
          "carbonconfiglib.gui.screen.ConfigScreen",
          "carbonconfiglib.gui.screen.CompoundScreen",
          "carbonconfiglib.gui.screen.ArrayScreen",
          "carbonconfiglib.gui.config.ListScreen"
        ]
      },
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Listens to Player Logout Events",
        "Localization",
        "Runs Client Tick Logic",
        "Runs Server Tick Logic"
      ]
    },
    "carryon": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "tschipp.carryon.mixin.PlayerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onReadAdditionalSaveData",
              "raw": "onReadAdditionalSaveData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "tschipp.carryon.mixin.PlayerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onAddAdditionalSaveData",
              "raw": "onAddAdditionalSaveData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "tschipp.carryon.mixin.PlayerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.syncher.SynchedEntityData$Builder",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onDefineSynchedData",
              "raw": "onDefineSynchedData(Lnet/minecraft/network/syncher/SynchedEntityData$Builder;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "tschipp.carryon.mixin.HumanoidModelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onSetupAnimations",
              "raw": "onSetupAnimations(Lnet/minecraft/world/entity/LivingEntity;FFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "tschipp.carryon.mixin.InventoryMixin",
            "method": {
              "argTypes": [
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onSwapPaint",
              "raw": "onSwapPaint(DLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "tschipp.carryon.mixin.InventoryMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onPickSlot",
              "raw": "onPickSlot(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "tschipp.carryon.mixin.InventoryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onPickBlock",
              "raw": "onPickBlock(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "tschipp.carryon.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onPassengerTurned",
              "raw": "onPassengerTurned(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "tschipp.carryon.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onDismountPassenger",
              "raw": "onDismountPassenger(Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "tschipp.carryon.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.world.entity.Entity$MoveFunction",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onPositionPassenger",
              "raw": "onPositionPassenger(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[4,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "tschipp.carryon.config.neoforge.ConfigLoaderImpl#onConfigLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "tschipp.carryon.config.neoforge.ConfigLoaderImpl#onConfigReload"
        ],
        "net.neoforged.fml.event.lifecycle.InterModProcessEvent": [
          "tschipp.carryon.events.ModBusEvents#serverLoad"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "tschipp.carryon.events.ClientEvents#onClientTick"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "tschipp.carryon.events.ModClientEvents#registerKeybinds"
        ],
        "net.neoforged.neoforge.client.event.RenderHandEvent": [
          "tschipp.carryon.events.ClientEvents#renderHand"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "tschipp.carryon.events.ClientEvents#onRenderLevel"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Pre": [
          "tschipp.carryon.events.ClientEvents#onGuiInit"
        ],
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "tschipp.carryon.events.CommonEvents#onDatapackRegister"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "tschipp.carryon.events.CommonEvents#onDatapackSync"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "tschipp.carryon.events.CommonEvents#onRegisterCommands"
        ],
        "net.neoforged.neoforge.event.TagsUpdatedEvent": [
          "tschipp.carryon.events.CommonEvents#onTagsUpdate"
        ],
        "net.neoforged.neoforge.event.entity.player.AttackEntityEvent": [
          "tschipp.carryon.events.CommonEvents#playerAttack",
          "tschipp.carryon.events.CommonEvents#attackEntity"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$BreakSpeed": [
          "tschipp.carryon.events.CommonEvents#harvestSpeed"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$Clone": [
          "tschipp.carryon.events.CommonEvents#onClone"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "tschipp.carryon.events.CommonEvents#onEntityRightClick"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "tschipp.carryon.events.CommonEvents#onBlockClick"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BreakEvent": [
          "tschipp.carryon.events.CommonEvents#onBreakBlock"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "tschipp.carryon.events.CommonEvents#onServerTick"
        ]
      },
      "info": {
        "authors": "Tschipp, PurpliciousCow",
        "classes": "81",
        "description": "Carry On is a simple mod that improves game interaction by allowing players to pick up, carry, and place single block Tile Entities using only their empty hands.",
        "displayName": "Carry On",
        "file": "carryon-neoforge-1.21.1-2.2.2.11.jar",
        "license": "GNU LGPLv3",
        "package": "tschipp.carryon",
        "version": "2.2.2"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "tschipp.carryon.mixin.PlayerMixin"
        ]
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.model.HumanoidModel",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.player.Inventory",
        "net.minecraft.world.entity.player.Player"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Auto-reloads Config Files",
        "Custom Data Pack Sync",
        "Custom Entities",
        "Custom Key Mappings",
        "Custom Server Commands",
        "Custom Tag Assignments",
        "Listens to Entity Interaction Events",
        "Listens to Inter-Mod Communication Events",
        "Listens to Right Click Block Events",
        "Listens to Tag Updates",
        "Localization",
        "Modifies Block Breaking",
        "Modifies Block Breaking Speed",
        "Modifies Methods",
        "Modifies World Rendering",
        "Runs Client Tick Logic",
        "Runs Server Tick Logic"
      ]
    },
    "cataclysm": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.github.L_Ender.cataclysm.mixin.NoOreInStructuresMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cataclysm_noOreInStructures",
              "raw": "cataclysm_noOreInStructures(Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.github.L_Ender.cataclysm.mixin.NoMultifaceGrowthFeatureInStructuresMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cataclysm_noOreInStructures",
              "raw": "cataclysm_noOreInStructures(Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.github.L_Ender.cataclysm.mixin.NoMagmaBlockInStructuresMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cataclysm_noMagmablockInStructures",
              "raw": "cataclysm_noMagmablockInStructures(Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.github.L_Ender.cataclysm.mixin.NoLakesInStructuresMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cataclysm_noLakesInStructures",
              "raw": "cataclysm_noLakesInStructures(Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.github.L_Ender.cataclysm.mixin.NoGeodeInStructuresMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cataclysm_noGeodeInStructures",
              "raw": "cataclysm_noGeodeInStructures(Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.github.L_Ender.cataclysm.mixin.NoDeltasInStructuresMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cataclysm_noDeltasInStructures",
              "raw": "cataclysm_noDeltasInStructures(Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.github.L_Ender.cataclysm.mixin.NoBasaltColumnsInStructuresMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.LevelAccessor",
                "int",
                "net.minecraft.core.BlockPos$MutableBlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cataclysm_noBasaltColumnsInStructures",
              "raw": "cataclysm_noBasaltColumnsInStructures(Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.github.L_Ender.cataclysm.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "CMcanAttack",
              "raw": "CMcanAttack(Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.github.L_Ender.cataclysm.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.damagesource.DamageSource",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "Cmhurt",
              "raw": "Cmhurt(Lnet/minecraft/world/damagesource/DamageSource;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.github.L_Ender.cataclysm.mixin.Client.HumanoidModelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "custom_poseLeftArm",
              "raw": "custom_poseLeftArm(Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.github.L_Ender.cataclysm.mixin.Client.HumanoidModelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "custom_poseRightArm",
              "raw": "custom_poseRightArm(Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.github.L_Ender.cataclysm.mixin.Client.CustomHeadLayerMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "net.minecraft.world.entity.LivingEntity",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cm_headlayer",
              "raw": "cm_headlayer(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "curios": "[9.2.2+1.21.1,)",
        "minecraft": "1.21.1",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "com.github.L_Ender.lionfishapi.server.event.StandOnFluidEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#StandOnFluidEventEvent"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "com.github.L_Ender.cataclysm.Cataclysm#onModConfigEvent"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeCreationEvent": [
          "com.github.L_Ender.cataclysm.init.ModEntities#initializeAttributes"
        ],
        "net.neoforged.neoforge.event.entity.RegisterSpawnPlacementsEvent": [
          "com.github.L_Ender.cataclysm.init.ModEntities#registerSpawnPlacements"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingChangeTargetEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onLivingSetTargetEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Pre": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onLivingDamage"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#DeathEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onUseItem"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent$Start": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onStartUsing"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent$Stop": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onStopUsing"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent$Tick": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onUseTick"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEvent$LivingJumpEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onLivingJump"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingFallEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onLivingFall"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingHealEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#BlockHeal"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onLivingAttack"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingKnockBackEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#KnockbackEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingShieldBlockEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onShieldDamage"
        ],
        "net.neoforged.neoforge.event.entity.player.AttackEntityEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onPlayerAttack"
        ],
        "net.neoforged.neoforge.event.entity.player.CriticalHitEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onCriticalAttack"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onPlayerInteract3"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickBlock": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onPlayerInteract5",
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onPlayerLeftClick"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickEmpty": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onPlayerInteract2"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onPlayerInteract4"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickEmpty": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onPlayerInteract1"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onPlayerInteract"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BreakEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onBreakBlock"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$EntityPlaceEvent": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onPlaceBlock"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "com.github.L_Ender.cataclysm.event.ServerEventHandler#onLivingUpdateEvent"
        ]
      },
      "info": {
        "authors": "L_Ender",
        "classes": "928",
        "description": "https://www.curseforge.com/minecraft/texture-packs/cataclysmic-tunes",
        "displayName": "L_Ender's Cataclysm",
        "file": "L_Ender's Cataclysm-2.53-1.21.1.jar",
        "license": "All assets of The Cataclysm are unlicensed and all rights are reserved to them by MCL_Ender. The source code LGPL v3.0 license",
        "package": "com.github.L_Ender.cataclysm",
        "version": "2.53-1.21.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.github.L_Ender.cataclysm.client.gui.MinistrosityInventoryScreen",
          "com.github.L_Ender.cataclysm.client.gui.GUIWeponfusion"
        ],
        "net.minecraft.client.particle.Particle": [
          "com.github.L_Ender.cataclysm.client.particle.TrapFlameParticle",
          "com.github.L_Ender.cataclysm.client.particle.TrackLightningParticle",
          "com.github.L_Ender.cataclysm.client.particle.StormParticle",
          "com.github.L_Ender.cataclysm.client.particle.SparkTrailParticle",
          "com.github.L_Ender.cataclysm.client.particle.SparkParticle",
          "com.github.L_Ender.cataclysm.client.particle.SoulLavaParticle",
          "com.github.L_Ender.cataclysm.client.particle.Shock_WaveParticle",
          "com.github.L_Ender.cataclysm.client.particle.SandStormParticle",
          "com.github.L_Ender.cataclysm.client.particle.RingParticle",
          "com.github.L_Ender.cataclysm.client.particle.Phantom_Wing_FlameParticle",
          "com.github.L_Ender.cataclysm.client.particle.LightTrailParticle",
          "com.github.L_Ender.cataclysm.client.particle.LightningParticle",
          "com.github.L_Ender.cataclysm.client.particle.FlameJetParticle",
          "com.github.L_Ender.cataclysm.client.particle.EM_PulseParticle",
          "com.github.L_Ender.cataclysm.client.particle.CustomExplodeParticle",
          "com.github.L_Ender.cataclysm.client.particle.CursedFlameParticle",
          "com.github.L_Ender.cataclysm.client.particle.AbstractTrailParticle",
          "com.github.L_Ender.cataclysm.client.particle.AbstractLightTrailParticle"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "com.github.L_Ender.cataclysm.client.render.CMItemstackRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.github.L_Ender.cataclysm.client.render.blockentity.RendererMechanical_fusion_anvil",
          "com.github.L_Ender.cataclysm.client.render.blockentity.RendererEMP",
          "com.github.L_Ender.cataclysm.client.render.blockentity.RendererAltar_of_Void",
          "com.github.L_Ender.cataclysm.client.render.blockentity.RendererAltar_of_Fire",
          "com.github.L_Ender.cataclysm.client.render.blockentity.RendererAltar_of_Amethyst",
          "com.github.L_Ender.cataclysm.client.render.blockentity.RendererAltar_of_Abyss",
          "com.github.L_Ender.cataclysm.client.render.blockentity.RendererAbyssal_Egg",
          "com.github.L_Ender.cataclysm.client.render.blockentity.Door_Of_Seal_Renderer",
          "com.github.L_Ender.cataclysm.client.render.blockentity.Cursed_Tombstone_Renderer",
          "com.github.L_Ender.cataclysm.client.render.blockentity.Cataclysm_Skull_Block_Renderer"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "com.github.L_Ender.cataclysm.effects.EffectStun",
          "com.github.L_Ender.cataclysm.effects.EffectMonstrous",
          "com.github.L_Ender.cataclysm.effects.EffectGhost_Sickness",
          "com.github.L_Ender.cataclysm.effects.EffectGhostForm",
          "com.github.L_Ender.cataclysm.effects.EffectCurse_Of_Desert",
          "com.github.L_Ender.cataclysm.effects.EffectBone_Fracture",
          "com.github.L_Ender.cataclysm.effects.EffectBlessing_Of_Amethyst",
          "com.github.L_Ender.cataclysm.effects.EffectBlazing_Brand",
          "com.github.L_Ender.cataclysm.effects.EffectAbyssal_Fear",
          "com.github.L_Ender.cataclysm.effects.EffectAbyssal_Curse",
          "com.github.L_Ender.cataclysm.effects.EffectAbyssal_Burn"
        ],
        "net.minecraft.world.entity.Entity": [
          "com.github.L_Ender.cataclysm.mixin.LivingEntityMixin",
          "com.github.L_Ender.cataclysm.entity.projectile.Wither_Missile_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Wither_Howitzer_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Wither_Homing_Missile_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Void_Shard_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Void_Scatter_Arrow_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Void_Rune_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Void_Howitzer_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Tidal_Tentacle_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Tidal_Hook_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.ThrownCoral_Spear_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.ThrownCoral_Bardiche_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Sandstorm_Projectile",
          "com.github.L_Ender.cataclysm.entity.projectile.Poison_Dart_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Phantom_Halberd_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Phantom_Arrow_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Mini_Abyss_Blast_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Lionfish_Spike_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Lava_Bomb_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Laser_Beam_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Ignis_Fireball_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Ignis_Abyss_Fireball_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Flare_Bomb_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Flame_Jet_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Eye_Of_Dungeon_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Ender_Guardian_Bullet_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.EarthQuake_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Death_Laser_Beam_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Cursed_Sandstorm_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.CMAbstractHurtingProjectile",
          "com.github.L_Ender.cataclysm.entity.projectile.Blazing_Bone_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Axe_Blade_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Ashen_Breath_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Ancient_Desert_Stele_Entity",
          "com.github.L_Ender.cataclysm.entity.projectile.Amethyst_Cluster_Projectile_Entity",
          "com.github.L_Ender.cataclysm.entity.Pet.The_Baby_Leviathan_Entity",
          "com.github.L_Ender.cataclysm.entity.Pet.Netherite_Ministrosity_Entity",
          "com.github.L_Ender.cataclysm.entity.Pet.Modern_Remnant_Entity",
          "com.github.L_Ender.cataclysm.entity.Pet.LLibraryAnimationPet",
          "com.github.L_Ender.cataclysm.entity.Pet.InternalAnimationPet",
          "com.github.L_Ender.cataclysm.entity.Pet.AnimationPet",
          "com.github.L_Ender.cataclysm.entity.partentity.Cm_Part_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Wadjet_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.The_Prowler_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Kobolediator_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Internal_Animation_Monster",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Ignited_Berserker_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.IABossMonsters.NewNetherite_Monstrosity.Netherite_Monstrosity_Part",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.IABossMonsters.NewNetherite_Monstrosity.Netherite_Monstrosity_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.IABossMonsters.Maledictus.Maledictus_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.IABossMonsters.IABoss_monster",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.IABossMonsters.Ancient_Remnant.Ancient_Remnant_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Draugar.Royal_Draugr_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Draugar.Elite_Draugr_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Draugar.Draugr_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Draugar.Aptrgangr_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Coralssus_Entity",
          "com.github.L_Ender.cataclysm.entity.etc.Animation_Monsters",
          "com.github.L_Ender.cataclysm.entity.effect.Wither_Smoke_Effect_Entity",
          "com.github.L_Ender.cataclysm.entity.effect.Wall_Watcher_Entity",
          "com.github.L_Ender.cataclysm.entity.effect.Void_Vortex_Entity",
          "com.github.L_Ender.cataclysm.entity.effect.ScreenShake_Entity",
          "com.github.L_Ender.cataclysm.entity.effect.Sandstorm_Entity",
          "com.github.L_Ender.cataclysm.entity.effect.Flame_Strike_Entity",
          "com.github.L_Ender.cataclysm.entity.effect.Cm_Falling_Block_Entity",
          "com.github.L_Ender.cataclysm.entity.effect.Bolt_strike_Entity",
          "com.github.L_Ender.cataclysm.entity.effect.Abyss_Mark_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Lionfish_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Deepling_Warlock_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Deepling_Priest_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Deepling_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Deepling_Brute_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Deepling_Angler_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Coral_Golem_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.AbstractDeepling",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.The_Watcher_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.LLibrary_Monster",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.Koboleton_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.Endermaptera_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Leviathan.The_Leviathan_Tongue_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Leviathan.The_Leviathan_Part",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Leviathan.The_Leviathan_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Leviathan.Portal_Abyss_Blast_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Leviathan.Dimensional_Rift_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Leviathan.Abyss_Portal_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Leviathan.Abyss_Orb_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Leviathan.Abyss_Mine_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Leviathan.Abyss_Blast_Portal_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Leviathan.Abyss_Blast_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Harbinger_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.LLibrary_Boss_Monster",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Ignited_Revenant_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Ignis_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Ender_Guardian_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Ender_Golem_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Ancient_Ancient_Remnant_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Amethyst_Crab_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.Animation_Monster"
        ],
        "net.minecraft.world.entity.Mob": [
          "com.github.L_Ender.cataclysm.entity.Pet.The_Baby_Leviathan_Entity",
          "com.github.L_Ender.cataclysm.entity.Pet.Netherite_Ministrosity_Entity",
          "com.github.L_Ender.cataclysm.entity.Pet.Modern_Remnant_Entity",
          "com.github.L_Ender.cataclysm.entity.Pet.LLibraryAnimationPet",
          "com.github.L_Ender.cataclysm.entity.Pet.InternalAnimationPet",
          "com.github.L_Ender.cataclysm.entity.Pet.AnimationPet",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Wadjet_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.The_Prowler_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Kobolediator_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Internal_Animation_Monster",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Ignited_Berserker_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.IABossMonsters.NewNetherite_Monstrosity.Netherite_Monstrosity_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.IABossMonsters.Maledictus.Maledictus_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.IABossMonsters.IABoss_monster",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.IABossMonsters.Ancient_Remnant.Ancient_Remnant_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Draugar.Royal_Draugr_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Draugar.Elite_Draugr_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Draugar.Draugr_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Draugar.Aptrgangr_Entity",
          "com.github.L_Ender.cataclysm.entity.InternalAnimationMonster.Coralssus_Entity",
          "com.github.L_Ender.cataclysm.entity.etc.Animation_Monsters",
          "com.github.L_Ender.cataclysm.entity.Deepling.Lionfish_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Deepling_Warlock_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Deepling_Priest_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Deepling_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Deepling_Brute_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Deepling_Angler_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.Coral_Golem_Entity",
          "com.github.L_Ender.cataclysm.entity.Deepling.AbstractDeepling",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.The_Watcher_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.LLibrary_Monster",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.Koboleton_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.Endermaptera_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Leviathan.The_Leviathan_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.The_Harbinger_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.LLibrary_Boss_Monster",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Ignited_Revenant_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Ignis_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Ender_Guardian_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Ender_Golem_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Ancient_Ancient_Remnant_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.BossMonsters.Amethyst_Crab_Entity",
          "com.github.L_Ender.cataclysm.entity.AnimationMonster.Animation_Monster"
        ],
        "net.minecraft.world.entity.animal.Animal": [
          "com.github.L_Ender.cataclysm.entity.Pet.The_Baby_Leviathan_Entity",
          "com.github.L_Ender.cataclysm.entity.Pet.Netherite_Ministrosity_Entity",
          "com.github.L_Ender.cataclysm.entity.Pet.Modern_Remnant_Entity",
          "com.github.L_Ender.cataclysm.entity.Pet.LLibraryAnimationPet",
          "com.github.L_Ender.cataclysm.entity.Pet.InternalAnimationPet",
          "com.github.L_Ender.cataclysm.entity.Pet.AnimationPet"
        ],
        "net.minecraft.world.item.Item": [
          "com.github.L_Ender.cataclysm.items.Wrath_of_the_desert",
          "com.github.L_Ender.cataclysm.items.Wither_Assault_SHoulder_Weapon",
          "com.github.L_Ender.cataclysm.items.Void_Scatter_Arrow_Item",
          "com.github.L_Ender.cataclysm.items.void_forge",
          "com.github.L_Ender.cataclysm.items.void_core",
          "com.github.L_Ender.cataclysm.items.Void_Assault_SHoulder_Weapon",
          "com.github.L_Ender.cataclysm.items.Tidal_Claws",
          "com.github.L_Ender.cataclysm.items.The_Incinerator",
          "com.github.L_Ender.cataclysm.items.The_Immolator",
          "com.github.L_Ender.cataclysm.items.The_Annihilator",
          "com.github.L_Ender.cataclysm.items.Soul_Render",
          "com.github.L_Ender.cataclysm.items.Sandstorm_In_A_Bottle",
          "com.github.L_Ender.cataclysm.items.Remnant_Skull",
          "com.github.L_Ender.cataclysm.items.Netherite_Effigy",
          "com.github.L_Ender.cataclysm.items.Necklace_Of_The_Desert",
          "com.github.L_Ender.cataclysm.items.Monstrous_Helm",
          "com.github.L_Ender.cataclysm.items.ModTemplate",
          "com.github.L_Ender.cataclysm.items.ModFishBucket",
          "com.github.L_Ender.cataclysm.items.ModernRemantBucket",
          "com.github.L_Ender.cataclysm.items.Meat_Shredder",
          "com.github.L_Ender.cataclysm.items.Laser_Gatling",
          "com.github.L_Ender.cataclysm.items.Khopesh",
          "com.github.L_Ender.cataclysm.items.ItemInventoryOnly",
          "com.github.L_Ender.cataclysm.items.infernal_forge",
          "com.github.L_Ender.cataclysm.items.Ignitium_Elytra_ChestPlate",
          "com.github.L_Ender.cataclysm.items.Ignitium_Armor",
          "com.github.L_Ender.cataclysm.items.Gauntlet_of_Maelstrom",
          "com.github.L_Ender.cataclysm.items.Gauntlet_of_Guard",
          "com.github.L_Ender.cataclysm.items.Gauntlet_of_Bulwark",
          "com.github.L_Ender.cataclysm.items.Dungeon_Eye.VoidEyeItem",
          "com.github.L_Ender.cataclysm.items.Dungeon_Eye.MonstrousEyeItem",
          "com.github.L_Ender.cataclysm.items.Dungeon_Eye.MechEyeItem",
          "com.github.L_Ender.cataclysm.items.Dungeon_Eye.FlameEyeItem",
          "com.github.L_Ender.cataclysm.items.Dungeon_Eye.DesertEyeItem",
          "com.github.L_Ender.cataclysm.items.Dungeon_Eye.CursedEyeItem",
          "com.github.L_Ender.cataclysm.items.Dungeon_Eye.AbyssEyeItem",
          "com.github.L_Ender.cataclysm.items.Cursium_Armor",
          "com.github.L_Ender.cataclysm.items.Cursed_bow",
          "com.github.L_Ender.cataclysm.items.CuriosItem.Sticky_Gloves",
          "com.github.L_Ender.cataclysm.items.CuriosItem.Sandstorm_In_A_Bottle",
          "com.github.L_Ender.cataclysm.items.CuriosItem.CuriosItem",
          "com.github.L_Ender.cataclysm.items.CuriosItem.Blazing_Grips",
          "com.github.L_Ender.cataclysm.items.Coral_Spear",
          "com.github.L_Ender.cataclysm.items.Coral_Bardiche",
          "com.github.L_Ender.cataclysm.items.CataclysmSkullItem",
          "com.github.L_Ender.cataclysm.items.Bulwark_of_the_flame",
          "com.github.L_Ender.cataclysm.items.Bone_Reptile_Armor",
          "com.github.L_Ender.cataclysm.items.Bloom_Stone_Pauldrons",
          "com.github.L_Ender.cataclysm.items.BlockItemInventoryOnly",
          "com.github.L_Ender.cataclysm.items.Blessed_Amethyst_Crab_Meat",
          "com.github.L_Ender.cataclysm.items.Black_Steel_Targe",
          "com.github.L_Ender.cataclysm.items.Athame",
          "com.github.L_Ender.cataclysm.items.Ancient_Spear"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.github.L_Ender.cataclysm.crafting.WeaponfusionRecipeInterface",
          "com.github.L_Ender.cataclysm.crafting.WeaponfusionRecipe",
          "com.github.L_Ender.cataclysm.crafting.AltarOfAmethystRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.github.L_Ender.cataclysm.blocks.Wall_Cataclysm_Skull_Block",
          "com.github.L_Ender.cataclysm.blocks.TrapBlock",
          "com.github.L_Ender.cataclysm.blocks.Sandstone_Poison_Dart_Trap",
          "com.github.L_Ender.cataclysm.blocks.Sandstone_Ignite_Trap",
          "com.github.L_Ender.cataclysm.blocks.Sandstone_Falling_Trap",
          "com.github.L_Ender.cataclysm.blocks.SandStoneTrapBlock",
          "com.github.L_Ender.cataclysm.blocks.PurpurVoidRuneTrapBlock",
          "com.github.L_Ender.cataclysm.blocks.PointedIcicleBlock",
          "com.github.L_Ender.cataclysm.blocks.ObsidianExplosionTrapBricks",
          "com.github.L_Ender.cataclysm.blocks.Mechanical_fusion_Anvil",
          "com.github.L_Ender.cataclysm.blocks.FacingPillarBlock",
          "com.github.L_Ender.cataclysm.blocks.FacingBlock",
          "com.github.L_Ender.cataclysm.blocks.EndStoneTeleportTrapBricks",
          "com.github.L_Ender.cataclysm.blocks.EMP_Block",
          "com.github.L_Ender.cataclysm.blocks.Door_of_Seal_Block",
          "com.github.L_Ender.cataclysm.blocks.Door_of_Seal_Block$Door_Of_Seal_Part_Block",
          "com.github.L_Ender.cataclysm.blocks.Cursed_Tombstone_Block",
          "com.github.L_Ender.cataclysm.blocks.Cataclysm_Skull_Block",
          "com.github.L_Ender.cataclysm.blocks.Altar_Of_Void_Block",
          "com.github.L_Ender.cataclysm.blocks.Altar_Of_Fire_Block",
          "com.github.L_Ender.cataclysm.blocks.Altar_Of_Amethyst_Block",
          "com.github.L_Ender.cataclysm.blocks.Altar_Of_Abyss_Block",
          "com.github.L_Ender.cataclysm.blocks.Abyssal_Egg_Block",
          "com.github.L_Ender.cataclysm.blocks.Abstract_Cataclysm_Skull_Block"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.github.L_Ender.cataclysm.world.data.CMWorldData"
        ]
      },
      "modifies": [
        "net.minecraft.client.model.HumanoidModel",
        "net.minecraft.client.renderer.entity.layers.CustomHeadLayer",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.item.ItemEntity",
        "net.minecraft.world.level.StructureManager",
        "net.minecraft.world.level.levelgen.Beardifier",
        "net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature",
        "net.minecraft.world.level.levelgen.feature.DeltaFeature",
        "net.minecraft.world.level.levelgen.feature.GeodeFeature",
        "net.minecraft.world.level.levelgen.feature.LakeFeature",
        "net.minecraft.world.level.levelgen.feature.MultifaceGrowthFeature",
        "net.minecraft.world.level.levelgen.feature.OreFeature",
        "net.minecraft.world.level.levelgen.feature.UnderwaterMagmaFeature",
        "net.minecraft.world.level.levelgen.structure.BoundingBox",
        "net.minecraft.world.level.levelgen.structure.pools.FeaturePoolElement",
        "net.minecraft.world.level.levelgen.structure.pools.ListPoolElement",
        "net.minecraft.world.level.levelgen.structure.pools.SinglePoolElement",
        "net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool",
        "net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessor"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom Animals",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Attributes",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Handles Left Clicks with Empty Hands (Client-side)",
        "Handles Right Clicks with Empty Hands (Client-side)",
        "Handles Right Clicks with Items",
        "Listens to Entity AI Target Change Events",
        "Listens to Entity Damage Events",
        "Listens to Entity Death Events",
        "Listens to Entity Fall Events",
        "Listens to Entity Healing Events",
        "Listens to Entity Interaction Events",
        "Listens to Entity Item Use Events",
        "Listens to Entity Jump Events",
        "Listens to Entity Knockback Events",
        "Listens to Entity Shield Block Events",
        "Listens to Left Click Block Events",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Block Breaking",
        "Modifies Block Placement",
        "Modifies Methods",
        "Runs Player Tick Logic",
        "Stores Data in World Saves",
        "Uses Access Transformers"
      ]
    },
    "ceramicbucket": {
      "dependencies": {
        "bucketlib": "[1.21-4.1.0.0,)",
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.94-beta,)"
      },
      "info": {
        "authors": "Cech12",
        "classes": "10",
        "description": "A mod which adds a Ceramic Bucket.",
        "displayName": "Ceramic Bucket",
        "file": "ceramicbucket-neoforge-1.21-6.1.1.0.jar",
        "license": "The MIT License (MIT)",
        "package": "de.cech12.ceramicbucket",
        "version": "1.21-6.1.1.0"
      },
      "summary": [
        "Custom Advancements",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "chipped": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "earth.terrarium.chipped.mixins.NetherWartBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "chipped$mayPlaceOn",
              "raw": "chipped$mayPlaceOn(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "earth.terrarium.chipped.mixins.BlockBehaviourMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.storage.loot.LootParams$Builder",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "chipped$getDrops",
              "raw": "chipped$getDrops(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/Collections;emptyList()Ljava/util/List;, ordinal=0}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "athena": "[4.0.0,)",
        "jei": "[19.19.3,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21,)",
        "resourcefullib": "[3.0.0,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "earth.terrarium.chipped.client.neoforge.ChippedClientNeoForge#onClientSetup"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "earth.terrarium.chipped.client.neoforge.ChippedClientNeoForge#onRegisterScreens"
        ]
      },
      "info": {
        "authors": "Alex Nijjar, Grimbop, Kekie6, ThatGravyBoat",
        "classes": "62",
        "description": "Every block needs a friend!",
        "displayName": "Chipped",
        "file": "chipped-neoforge-1.21.1-4.0.2.jar",
        "license": "Terrarium License",
        "package": "earth.terrarium.chipped",
        "updateUrl": "https://api.modrinth.com/updates/BAscRYKm/forge_updates.json",
        "version": "4.0.2"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "earth.terrarium.chipped.client.screens.WorkbenchScreen"
        ],
        "net.minecraft.world.item.Item": [
          "earth.terrarium.chipped.common.items.WorkbenchItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "earth.terrarium.chipped.common.recipes.ChippedRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "earth.terrarium.chipped.common.registry.ModBlocks$9",
          "earth.terrarium.chipped.common.registry.ModBlocks$8",
          "earth.terrarium.chipped.common.registry.ModBlocks$7",
          "earth.terrarium.chipped.common.registry.ModBlocks$6",
          "earth.terrarium.chipped.common.registry.ModBlocks$5",
          "earth.terrarium.chipped.common.registry.ModBlocks$4",
          "earth.terrarium.chipped.common.registry.ModBlocks$3",
          "earth.terrarium.chipped.common.registry.ModBlocks$2",
          "earth.terrarium.chipped.common.registry.ModBlocks$17",
          "earth.terrarium.chipped.common.registry.ModBlocks$16",
          "earth.terrarium.chipped.common.registry.ModBlocks$15",
          "earth.terrarium.chipped.common.registry.ModBlocks$14",
          "earth.terrarium.chipped.common.registry.ModBlocks$13",
          "earth.terrarium.chipped.common.registry.ModBlocks$12",
          "earth.terrarium.chipped.common.registry.ModBlocks$11",
          "earth.terrarium.chipped.common.registry.ModBlocks$10",
          "earth.terrarium.chipped.common.registry.ModBlocks$1",
          "earth.terrarium.chipped.common.blocks.WorkbenchBlock",
          "earth.terrarium.chipped.common.blocks.SpecialPointedDripstoneBlock",
          "earth.terrarium.chipped.common.blocks.SpecialLanternBlock",
          "earth.terrarium.chipped.common.blocks.DirectionBlock"
        ]
      },
      "modifies": [
        "net.minecraft.world.level.block.NetherWartBlock",
        "net.minecraft.world.level.block.state.BlockBehaviour"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods"
      ]
    },
    "chipped_express": {
      "dependencies": {
        "chipped": "[1.0.0,)"
      },
      "info": {
        "classes": "0",
        "description": "Chipped mod still a good but cannot be automated , this mod allow autocrafting using other mods like AE2 or Create",
        "displayName": "ChippedExpress",
        "file": "ChippedExpress-universal.jar",
        "license": "MIT",
        "loader": "lowcodefml",
        "version": "1.2.4"
      }
    },
    "clean_tooltips": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.mandalacreations.clean_tooltips.mixin.ItemEnchantmentsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.Item$TooltipContext",
                "java.util.function.Consumer",
                "net.minecraft.world.item.TooltipFlag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cleanTooltips_addToTooltip",
              "raw": "cleanTooltips_addToTooltip(Lnet/minecraft/world/item/Item$TooltipContext;Ljava/util/function/Consumer;Lnet/minecraft/world/item/TooltipFlag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mandalacreations.clean_tooltips.mixin.DyedItemColorMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.Item$TooltipContext",
                "java.util.function.Consumer",
                "net.minecraft.world.item.TooltipFlag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cleanTooltips_addToTooltip",
              "raw": "cleanTooltips_addToTooltip(Lnet/minecraft/world/item/Item$TooltipContext;Ljava/util/function/Consumer;Lnet/minecraft/world/item/TooltipFlag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.20.6,)",
        "neoforge": "[20.6,)"
      },
      "info": {
        "authors": "stal111",
        "classes": "14",
        "description": "\n",
        "displayName": "Clean Tooltips",
        "file": "clean_tooltips-1.1-neoforge-1.21.1.jar",
        "license": "All Rights Reserved",
        "package": "net.mandalacreations.clean_tooltips",
        "version": "1.1"
      },
      "modifies": [
        "net.minecraft.world.item.ItemStack",
        "net.minecraft.world.item.component.DyedItemColor",
        "net.minecraft.world.item.enchantment.ItemEnchantments"
      ],
      "summary": [
        "Localization",
        "Modifies Methods"
      ]
    },
    "clienttweaks": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.blay09.mods.clienttweaks.mixin.BlockStateBaseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.phys.shapes.CollisionContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getShape",
              "raw": "getShape(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.blay09.mods.clienttweaks.mixin.ChainBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.phys.shapes.CollisionContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getShape",
              "raw": "getShape(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.blay09.mods.clienttweaks.mixin.ShovelItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.context.UseOnContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "useOn",
              "raw": "useOn(Lnet/minecraft/world/item/context/UseOnContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.blay09.mods.clienttweaks.mixin.RecipeBookComponentMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "isOffsetNextToMainGUI",
              "raw": "isOffsetNextToMainGUI(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.blay09.mods.clienttweaks.mixin.RecipeBookComponentMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initVisuals",
              "raw": "initVisuals(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=FIELD, target=Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent;xOffset:I}]"
            }
          },
          {
            "class": "net.blay09.mods.clienttweaks.mixin.CrossCollisionBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.phys.shapes.CollisionContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getShape",
              "raw": "getShape(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "balm": "[21.0.0,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21-beta,)"
      },
      "info": {
        "authors": "BlayTheNinth",
        "classes": "33",
        "description": "There, I fixed Minecraft for you. Various optional tweaks to improve Minecraft Quality of Life.",
        "displayName": "Client Tweaks",
        "file": "clienttweaks-neoforge-1.21.1-21.1.2.jar",
        "license": "All Rights Reserved",
        "package": "net.blay09.mods.clienttweaks",
        "version": "21.1.2"
      },
      "modifies": [
        "net.minecraft.client.gui.screens.recipebook.RecipeBookComponent",
        "net.minecraft.client.renderer.ItemInHandRenderer",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.item.AxeItem",
        "net.minecraft.world.item.ShovelItem",
        "net.minecraft.world.level.block.ChainBlock",
        "net.minecraft.world.level.block.CrossCollisionBlock",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase"
      ],
      "summary": [
        "Localization",
        "Modifies Methods"
      ]
    },
    "cloth_config": {
      "dependencies": {
        "neoforge": "[21.0.110-beta,)"
      },
      "info": {
        "classes": "633",
        "description": "An API for config screens.\n",
        "displayName": "Cloth Config v15 API",
        "file": "cloth-config-15.0.140-neoforge.jar",
        "license": "GNU LGPLv3",
        "package": "me.shedaniel.math",
        "version": "15.0.140"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "me.shedaniel.clothconfig2.gui.GlobalizedClothConfigScreen",
          "me.shedaniel.clothconfig2.gui.ClothRequiresRestartScreen",
          "me.shedaniel.clothconfig2.gui.ClothConfigScreen",
          "me.shedaniel.clothconfig2.gui.AbstractTabbedConfigScreen",
          "me.shedaniel.clothconfig2.gui.AbstractConfigScreen"
        ]
      },
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "cloudglass": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.1.1,)"
      },
      "events": {
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.mrbysco.cloudglass.datagen.CloudDataGenerator#gatherData"
        ]
      },
      "info": {
        "authors": "Mrbysco",
        "classes": "10",
        "description": "Decorative semi-transparent glass blocks that can be walked through\n",
        "displayName": "Cloud Glass",
        "file": "CloudGlass-1.21.1-1.0.1.jar",
        "license": "MIT",
        "package": "com.mrbysco.cloudglass",
        "version": "1.0.1"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "com.mrbysco.cloudglass.datagen.client.CloudItemModelProvider",
          "com.mrbysco.cloudglass.datagen.client.CloudBlockstateProvider",
          "com.mrbysco.cloudglass.datagen.client.CloudLanguageProvider",
          "com.mrbysco.cloudglass.datagen.server.CloudLootProvider",
          "com.mrbysco.cloudglass.datagen.server.CloudRecipeProvider"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.mrbysco.cloudglass.block.CloudGlassBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Loot Tables",
        "Localization",
        "Uses Data Generators"
      ]
    },
    "clumps": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.blamejared.clumps.mixin.MixinExperienceOrb",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "readAdditionalSaveData",
              "raw": "readAdditionalSaveData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.blamejared.clumps.mixin.MixinExperienceOrb",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "addAdditionalSaveData",
              "raw": "addAdditionalSaveData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.blamejared.clumps.mixin.MixinExperienceOrb",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.phys.Vec3",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "tryMergeToExisting",
              "raw": "tryMergeToExisting(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.blamejared.clumps.mixin.MixinExperienceOrb",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.ExperienceOrb",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "merge",
              "raw": "merge(Lnet/minecraft/world/entity/ExperienceOrb;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=net/minecraft/world/entity/ExperienceOrb.discard()V}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.blamejared.clumps.mixin.MixinExperienceOrb",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerPlayer",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "clumps$repairPlayerItems",
              "raw": "clumps$repairPlayerItems(Lnet/minecraft/server/level/ServerPlayer;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE_ASSIGN, target=Lnet/minecraft/world/item/enchantment/EnchantmentHelper;getRandomItemWith(Lnet/minecraft/core/component/DataComponentType;Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Ljava/util/Optional;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.blamejared.clumps.mixin.MixinExperienceOrb",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "playerTouch",
              "raw": "playerTouch(Lnet/minecraft/world/entity/player/Player;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.blamejared.clumps.mixin.MixinExperienceOrb",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.ExperienceOrb",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "canMerge",
              "raw": "canMerge(Lnet/minecraft/world/entity/ExperienceOrb;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.blamejared.clumps.mixin.MixinExperienceOrb",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.ExperienceOrb",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "canMerge",
              "raw": "canMerge(Lnet/minecraft/world/entity/ExperienceOrb;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[4,)"
      },
      "info": {
        "authors": "Jared",
        "classes": "15",
        "description": "Clumps xp orbs together.",
        "displayName": "Clumps",
        "file": "Clumps-neoforge-1.21.1-19.0.0.1.jar",
        "license": "MIT",
        "package": "com.blamejared.clumps",
        "updateUrl": "https://updates.blamejared.com/get?n=clumps&gv=1.21.1&ml=neoforge",
        "version": "19.0.0.1"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "com.blamejared.clumps.mixin.MixinExperienceOrb"
        ]
      },
      "modifies": [
        "net.minecraft.world.entity.ExperienceOrb"
      ],
      "summary": [
        "Custom Entities",
        "Modifies Methods"
      ]
    },
    "codechickenlib": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "codechicken.lib.internal.mixin.ItemRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemDisplayContext",
                "boolean",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "net.minecraft.client.resources.model.BakedModel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRenderItem",
              "raw": "onRenderItem(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "codechicken.lib.internal.mixin.MinecraftMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRunTick",
              "raw": "onRunTick(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.72,)"
      },
      "info": {
        "authors": "ChickenBones, covers1624",
        "classes": "797",
        "description": "CodeChickenLib is a library of systems to help make various aspects of minecraft modding easier.\nIt contains libraries for 3D math and transformations, model rendering, packets, config, colours, asm and a few other things..\n    ",
        "displayName": "CodeChicken Lib",
        "file": "CodeChickenLib-1.21.1-4.6.0.521.jar",
        "license": "GNU Lesser General Public License v2.1",
        "package": "codechicken.lib",
        "updateUrl": "https://version-check.covers1624.net/check/?mod=CodeChickenLib&mc=1.21.1",
        "version": "4.6.0.521"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "codechicken.lib.gui.modular.ModularGuiScreen",
          "codechicken.lib.gui.modular.ModularGuiContainer"
        ],
        "net.minecraft.client.particle.Particle": [
          "codechicken.lib.render.particle.CustomBreakingParticle"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "codechicken.lib.model.DummyBakedModel",
          "codechicken.lib.model.PerspectiveModel",
          "codechicken.lib.model.bakedmodels.WrappedItemModel",
          "codechicken.lib.model.bakedmodels.OverrideListModel",
          "codechicken.lib.model.bakedmodels.PerspectiveAwareBakedModel",
          "codechicken.lib.model.bakedmodels.PerspectiveAwareLayeredModel",
          "codechicken.lib.model.bakedmodels.AbstractBakedPropertiesModel",
          "codechicken.lib.render.particle.IModelParticleProvider",
          "codechicken.lib.render.item.IItemRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "codechicken.lib.datagen.recipe.RecipeProvider",
          "codechicken.lib.datagen.DynamicTextureProvider",
          "codechicken.lib.datagen.ItemModelProvider",
          "codechicken.lib.datagen.LanguageProvider",
          "codechicken.lib.internal.DataGenerators$LangUS",
          "codechicken.lib.internal.DataGenerators$ItemTags",
          "codechicken.lib.internal.DataGenerators$BlockTags"
        ],
        "net.minecraft.world.level.block.Block": [
          "codechicken.lib.block.LazyStateBlock",
          "codechicken.lib.block.ModularBlock",
          "codechicken.lib.block.ModularTileBlock"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "codechicken.lib.model.ClassModelLoader",
          "codechicken.lib.model.CompositeItemModel"
        ]
      },
      "modifies": [
        "net.minecraft.client.GameNarrator",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.renderer.ShaderInstance",
        "net.minecraft.client.renderer.entity.ItemRenderer"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom Model Loaders",
        "Custom Particles",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "colorfulhearts": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "terrails.colorfulhearts.mixin.PlayerTabOverlayMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "java.util.UUID",
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.client.gui.components.PlayerTabOverlay$HealthState"
              ],
              "name": "colorfulhearts_renderTablistHearts",
              "raw": "colorfulhearts_renderTablistHearts(IIILjava/util/UUID;Lnet/minecraft/client/gui/GuiGraphics;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/client/gui/components/PlayerTabOverlay$HealthState;)V"
            },
            "params": {
              "at": "[{opcode=0, value=INVOKE, target=Lnet/minecraft/client/gui/GuiGraphics;blitSprite(Lnet/minecraft/resources/ResourceLocation;IIII)V}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.0,)"
      },
      "info": {
        "authors": "Terrails",
        "classes": "51",
        "description": " A client side mod that replaces multiple vanilla heart rows with a single row using colored hearts ",
        "displayName": "Colorful Hearts",
        "file": "colorfulhearts-neoforge-1.21.1-10.3.8.jar",
        "license": "MIT",
        "package": "terrails.colorfulhearts",
        "version": "10.3.8"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "terrails.colorfulhearts.config.screen.ConfigurationScreen",
          "terrails.colorfulhearts.config.screen.ColorSelectionScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.components.PlayerTabOverlay",
        "squeek.appleskin.client.HUDOverlayHandler",
        "vectorwing.farmersdelight.client.gui.HUDOverlays"
      ],
      "summary": [
        "Custom GUI Screens",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "commoncapabilities": {
      "dependencies": {
        "cyclopscore": "[1.25.1,)",
        "minecraft": "[1.21.1,]",
        "neoforge": "[21.1.2,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "org.cyclops.commoncapabilities.GeneralConfig#onConfigLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "org.cyclops.commoncapabilities.GeneralConfig#onConfigReload"
        ],
        "net.neoforged.neoforge.registries.NewRegistryEvent": [
          "org.cyclops.commoncapabilities.api.ingredient.IngredientComponent#onRegistriesCreate"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "org.cyclops.commoncapabilities.api.ingredient.IngredientComponent#onRegistriesFilled"
        ],
        "org.cyclops.commoncapabilities.api.ingredient.capability.AttachCapabilitiesEventIngredientComponent": [
          "org.cyclops.commoncapabilities.api.ingredient.capability.IngredientComponentCapabilityAttacherManager#onIngredientComponentsLoad"
        ]
      },
      "info": {
        "classes": "148",
        "description": "Capabilities that can be shared by multiple mods.",
        "displayName": "CommonCapabilities",
        "file": "commoncapabilities-1.21.1-neoforge-2.9.7-197.jar",
        "license": "MIT",
        "package": "net.minecraft.potion",
        "updateUrl": "https://raw.githubusercontent.com/CyclopsMC/Versions/master/neoforge_update/common-capabilities.json",
        "version": "2.9.7"
      },
      "summary": [
        "Auto-reloads Config Files",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "compactmachines": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.2)",
        "neoforge": "[21.1.79,)"
      },
      "info": {
        "authors": "Davenonymous, RobotGryphon",
        "classes": "165",
        "description": "It's all so tiny!",
        "displayName": "Compact Machines",
        "file": "compactmachines-neoforge-7.0.22.jar",
        "license": "MIT",
        "package": "dev.compactmods.machines",
        "version": "7.0.22"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.compactmods.machines.client.room.MachineRoomScreen",
          "dev.compactmods.machines.room.ui.upgrades.RoomUpgradeScreen"
        ],
        "net.minecraft.world.item.Item": [
          "dev.compactmods.machines.machine.item.BoundCompactMachineItem",
          "dev.compactmods.machines.machine.item.UnboundCompactMachineItem",
          "dev.compactmods.machines.shrinking.PersonalShrinkingDevice",
          "dev.compactmods.machines.room.wall.ItemBlockWall"
        ],
        "net.minecraft.world.level.block.Block": [
          "dev.compactmods.machines.dimension.VoidAirBlock",
          "dev.compactmods.machines.machine.block.CompactMachineBlock",
          "dev.compactmods.machines.machine.block.BoundCompactMachineBlock",
          "dev.compactmods.machines.machine.block.UnboundCompactMachineBlock",
          "dev.compactmods.machines.room.block.SolidWallBlock",
          "dev.compactmods.machines.room.block.ProtectedWallBlock",
          "dev.compactmods.machines.room.wall.BreakableWallBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Dimension Types",
        "Custom Dimensions",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "connectedglass": {
      "dependencies": {
        "fusion": "[1.1.0,)",
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.78-beta,)",
        "supermartijn642corelib": "[1.1.17,1.2.0)"
      },
      "info": {
        "authors": "SuperMartijn642",
        "classes": "21",
        "description": "Connected Glass adds new types of glass with connecting textures!",
        "displayName": "Connected Glass",
        "file": "connectedglass-1.1.12-neoforge-mc1.21.jar",
        "license": "All rights reserved",
        "package": "com.supermartijn642.connectedglass",
        "version": "1.1.12"
      },
      "inheritance": {
        "net.minecraft.client.resources.model.BakedModel": [
          "com.supermartijn642.connectedglass.CGPaneBakedModel"
        ],
        "net.minecraft.data.DataProvider": [
          "com.supermartijn642.connectedglass.data.CGTextureProvider",
          "com.supermartijn642.connectedglass.data.CGFusionModelGenerator",
          "com.supermartijn642.connectedglass.data.CGChiselingRecipeProvider"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.supermartijn642.connectedglass.CGTintedGlassBlock",
          "com.supermartijn642.connectedglass.CGPaneBlock",
          "com.supermartijn642.connectedglass.CGGlassBlock",
          "com.supermartijn642.connectedglass.CGColoredTintedGlassBlock",
          "com.supermartijn642.connectedglass.CGColoredPaneBlock",
          "com.supermartijn642.connectedglass.CGColoredGlassBlock"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "constructionstick": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.1.1,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "mrbysco.constructionstick.client.KeybindHandler#onClientTick"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "mrbysco.constructionstick.client.KeybindHandler#KeyEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "mrbysco.constructionstick.client.RenderBlockPreview#renderBlockHighlight"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "mrbysco.constructionstick.data.ModData#gatherData"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "mrbysco.constructionstick.registry.ModItems#addCreative"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "mrbysco.constructionstick.basics.CommonEvents#logOut"
        ],
        "net.neoforged.neoforge.event.server.ServerStartingEvent": [
          "mrbysco.constructionstick.basics.CommonEvents#serverStarting"
        ]
      },
      "info": {
        "authors": "Mrbysco, ShyNieke",
        "classes": "86",
        "description": "Construction Sticks make building easier!\n\nWith a Construction Stick you can place multiple blocks (up to 1024) at once, extending your build on the side you're\nfacing. If that's not enough: you can upgrade your wand with additional cores, allowing you to place a block\nbehind the block you are facing, conjure blocks in mid air or destroy lots of blocks very fast.\n",
        "displayName": "Construction Sticks",
        "file": "ConstructionSticks-1.21.1-1.1.4.jar",
        "license": "MIT License",
        "package": "mrbysco.constructionstick",
        "version": "1.1.4"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "mrbysco.constructionstick.client.StickScreen"
        ],
        "net.minecraft.data.DataProvider": [
          "mrbysco.constructionstick.data.client.LanguageGenerator",
          "mrbysco.constructionstick.data.client.ItemModelGenerator",
          "mrbysco.constructionstick.data.server.BlockTagsGenerator",
          "mrbysco.constructionstick.data.server.ItemTagsGenerator",
          "mrbysco.constructionstick.data.server.RecipeGenerator"
        ],
        "net.minecraft.world.item.Item": [
          "mrbysco.constructionstick.items.stick.ItemStick",
          "mrbysco.constructionstick.items.stick.ItemStickBasic",
          "mrbysco.constructionstick.items.template.ItemUnbreakableTemplate",
          "mrbysco.constructionstick.items.template.ItemBatteryTemplate",
          "mrbysco.constructionstick.items.template.ItemReplacementTemplate",
          "mrbysco.constructionstick.items.template.ItemAngelTemplate",
          "mrbysco.constructionstick.items.template.ItemUpgradeTemplate",
          "mrbysco.constructionstick.items.template.ItemDestructionTemplate"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "mrbysco.constructionstick.recipe.SmithingApplyUpgradeRecipe"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Listens to Player Logout Events",
        "Listens to Server Starting Events",
        "Localization",
        "Runs Client Tick Logic",
        "Uses Data Generators"
      ]
    },
    "controlling": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.94,)",
        "searchables": "[1.0.1,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ScreenEvent$Opening": [
          "com.blamejared.controlling.events.ClientEventHandler#openGui"
        ]
      },
      "info": {
        "authors": "Jaredlll08",
        "classes": "42",
        "description": "Adds the ability to search for keybinds using their name in the KeyBinding menu, this allows players to easily find a key binding in the menu.",
        "displayName": "Controlling",
        "file": "Controlling-neoforge-1.21.1-19.0.4.jar",
        "license": "MIT",
        "package": "com.blamejared.controlling",
        "updateUrl": "https://updates.blamejared.com/get?n=controlling&gv=1.21.1&ml=neoforge",
        "version": "19.0.4"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.blamejared.controlling.client.NewKeyBindsScreen"
        ]
      },
      "modifies": [
        "com.mojang.blaze3d.platform.InputConstants$Key",
        "net.minecraft.client.KeyMapping",
        "net.minecraft.client.gui.screens.options.OptionsSubScreen",
        "net.minecraft.client.gui.screens.options.controls.KeyBindsScreen"
      ],
      "summary": [
        "Custom GUI Screens",
        "Listens to GUI Open Events",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "cookingforblockheads": {
      "dependencies": {
        "balm": "[21.0.24,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21-beta,)"
      },
      "info": {
        "authors": "BlayTheNinth",
        "classes": "213",
        "description": "Adds a cooking book and multiblock kitchens that only shows recipes you can make with what you currently have in your inventory.",
        "displayName": "Cooking for Blockheads",
        "file": "cookingforblockheads-neoforge-1.21.1-21.1.9.jar",
        "license": "All Rights Reserved",
        "package": "net.blay09.mods.cookingforblockheads",
        "version": "21.1.9"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.blay09.mods.cookingforblockheads.client.gui.screen.OvenScreen",
          "net.blay09.mods.cookingforblockheads.client.gui.screen.CounterScreen",
          "net.blay09.mods.cookingforblockheads.client.gui.screen.FridgeScreen",
          "net.blay09.mods.cookingforblockheads.client.gui.screen.SpiceRackScreen",
          "net.blay09.mods.cookingforblockheads.client.gui.screen.KitchenScreen",
          "net.blay09.mods.cookingforblockheads.client.gui.screen.FruitBasketScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "net.blay09.mods.cookingforblockheads.client.render.ToolRackRenderer",
          "net.blay09.mods.cookingforblockheads.client.render.CowJarRenderer",
          "net.blay09.mods.cookingforblockheads.client.render.FruitBasketRenderer",
          "net.blay09.mods.cookingforblockheads.client.render.CabinetRenderer",
          "net.blay09.mods.cookingforblockheads.client.render.CookingTableRenderer",
          "net.blay09.mods.cookingforblockheads.client.render.ToasterRenderer",
          "net.blay09.mods.cookingforblockheads.client.render.FridgeRenderer",
          "net.blay09.mods.cookingforblockheads.client.render.CounterRenderer",
          "net.blay09.mods.cookingforblockheads.client.render.MilkJarRenderer",
          "net.blay09.mods.cookingforblockheads.client.render.OvenRenderer",
          "net.blay09.mods.cookingforblockheads.client.render.SpiceRackRenderer",
          "net.blay09.mods.cookingforblockheads.client.render.SinkRenderer"
        ],
        "net.minecraft.world.item.Item": [
          "net.blay09.mods.cookingforblockheads.item.ItemHeatingUnit",
          "net.blay09.mods.cookingforblockheads.item.ItemRecipeBook",
          "net.blay09.mods.cookingforblockheads.item.ItemIceUnit",
          "net.blay09.mods.cookingforblockheads.item.ItemPreservationChamber"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "net.blay09.mods.cookingforblockheads.recipe.ToasterRecipe",
          "net.blay09.mods.cookingforblockheads.recipe.OvenRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.blay09.mods.cookingforblockheads.block.CowJarBlock",
          "net.blay09.mods.cookingforblockheads.block.ToasterBlock",
          "net.blay09.mods.cookingforblockheads.block.DyedConnectorBlock",
          "net.blay09.mods.cookingforblockheads.block.MilkJarBlock",
          "net.blay09.mods.cookingforblockheads.block.OvenBlock",
          "net.blay09.mods.cookingforblockheads.block.CabinetBlock",
          "net.blay09.mods.cookingforblockheads.block.FruitBasketBlock",
          "net.blay09.mods.cookingforblockheads.block.FridgeBlock",
          "net.blay09.mods.cookingforblockheads.block.BaseKitchenBlock",
          "net.blay09.mods.cookingforblockheads.block.SinkBlock",
          "net.blay09.mods.cookingforblockheads.block.SpiceRackBlock",
          "net.blay09.mods.cookingforblockheads.block.CookingTableBlock",
          "net.blay09.mods.cookingforblockheads.block.CounterBlock",
          "net.blay09.mods.cookingforblockheads.block.CuttingBoardBlock",
          "net.blay09.mods.cookingforblockheads.block.ToolRackBlock",
          "net.blay09.mods.cookingforblockheads.block.ConnectorBlock",
          "net.blay09.mods.cookingforblockheads.block.KitchenFloorBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "coroutil": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.0-beta,)"
      },
      "info": {
        "authors": "Corosus",
        "classes": "44",
        "description": "It utils",
        "displayName": "CoroUtil",
        "file": "coroutil-neoforge-1.21.0-1.3.8.jar",
        "license": "All Rights Reserved",
        "package": "com.corosus.modconfig",
        "version": "1.21.0-1.3.8"
      },
      "summary": [
        "Uses Access Transformers"
      ]
    },
    "cosmeticarmorreworked": {
      "dependencies": {
        "neoforge": "[21.1,)"
      },
      "info": {
        "authors": "zlainsama",
        "classes": "39",
        "description": "This mod allows you to wear two sets of armor, one for display, one for function. You can also hide armor for your skin. For PVP, you can stop the mod from functioning on your client side.",
        "displayName": "CosmeticArmorReworked",
        "file": "cosmeticarmorreworked-1.21.1-v1-neoforge.jar",
        "license": "Minecraft Mod Public License 1.0.1",
        "package": "lain.mods.cos.api",
        "version": "1.21.1-v1-neoforge"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "lain.mods.cos.impl.client.gui.GuiCosArmorInventory"
        ]
      },
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Localization"
      ]
    },
    "cpapireforged": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.kyrptonaught.customportalapi.mixin.portalLighters.PotionEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "attemptPortalLight",
              "raw": "attemptPortalLight(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.kyrptonaught.customportalapi.mixin.portalLighters.FluidBlockPlacedMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "fluidPlacedAttemptPortalLight",
              "raw": "fluidPlacedAttemptPortalLight(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.kyrptonaught.customportalapi.mixin.portalLighters.AbstractFireMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "detectCustomPortal",
              "raw": "detectCustomPortal(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.21.2)",
        "neoforge": "[21.1.1,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "net.kyrptonaught.customportalapi.client.CustomPortalsModClient#onClientSetup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "net.kyrptonaught.customportalapi.CustomPortalsMod#onCommonStartUp"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "net.kyrptonaught.customportalapi.client.CustomPortalsModClient#onBlockColors"
        ]
      },
      "info": {
        "authors": "AzureDoom, kyrptonaught, Waterpicker, Mysticpasta1",
        "classes": "32",
        "description": "Create portals out of anything!",
        "displayName": "Custom Portal API ReForged",
        "file": "cpapireforged-neo-1.21.1-1.0.11.jar",
        "license": "MIT",
        "package": "net.kyrptonaught.customportalapi",
        "version": "1.0.11"
      },
      "inheritance": {
        "net.minecraft.client.particle.Particle": [
          "net.kyrptonaught.customportalapi.client.CustomPortalParticle"
        ],
        "net.minecraft.world.entity.Entity": [
          "net.kyrptonaught.customportalapi.mixin.portalLighters.PotionEntityMixin"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.kyrptonaught.customportalapi.CustomPortalBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "net.kyrptonaught.customportalapi.portal.linking.PortalLinkingStorage"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.Gui",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.chunk.RenderChunkRegion",
        "net.minecraft.world.entity.PortalProcessor",
        "net.minecraft.world.entity.projectile.ThrownPotion",
        "net.minecraft.world.level.block.BaseFireBlock",
        "net.minecraft.world.level.block.LiquidBlock"
      ],
      "summary": [
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Particles",
        "Modifies Methods",
        "Stores Data in World Saves"
      ]
    },
    "crafting_on_a_stick": {
      "dependencies": {
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "com.ofekn.crafting_on_a_stick.COASKeyMappings$ForgeEvents#event"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "com.ofekn.crafting_on_a_stick.COASKeyMappings$ModEvents#event"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "com.ofekn.crafting_on_a_stick.ClientModEvents#event"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.ofekn.crafting_on_a_stick.network.COASPacketHandler$Register#event"
        ]
      },
      "info": {
        "authors": "OfekN",
        "classes": "27",
        "description": "This mod adds multiple workbenches on a stick:\n - Crafting Table\n - Anvil\n - Loom\n - Grindstone\n - Grindstone\n - Cartography Table\n - Cartography Table\n - Stonecutter\n - Smithing Table\n",
        "displayName": "Crafting On A Stick",
        "file": "crafting_on_a_stick-1.21.0.1.jar",
        "license": "GNU GENERAL PUBLIC LICENSE",
        "package": "com.ofekn.crafting_on_a_stick",
        "version": "1.21.0.1"
      },
      "inheritance": {
        "net.minecraft.world.item.Item": [
          "com.ofekn.crafting_on_a_stick.ItemOnAStick"
        ]
      },
      "summary": [
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Network Packets",
        "Custom Tag Assignments",
        "Localization",
        "Runs Client Tick Logic"
      ]
    },
    "craftingstation": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.1.72,)"
      },
      "events": {
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "tfar.craftingstation.CraftingStationNeoForge$RegistryEvents#block"
        ]
      },
      "info": {
        "authors": "Tfarcenim, Leclowndu93150",
        "classes": "46",
        "description": "Adds a crafting station with JEI support !",
        "displayName": "Crafting Station",
        "file": "craftingstation-neoforge-1.21.1-1.5.0.jar",
        "license": "MIT",
        "package": "tfar.craftingstation",
        "version": "1.5.0"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "tfar.craftingstation.client.CraftingStationScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "tfar.craftingstation.client.CraftingStationBlockEntityRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "tfar.craftingstation.datagen.ModLootTableProvider",
          "tfar.craftingstation.datagen.ModDataMapsProvider",
          "tfar.craftingstation.datagen.ModBlockTagsProvider"
        ],
        "net.minecraft.world.level.block.Block": [
          "tfar.craftingstation.block.CraftingStationSlabBlock",
          "tfar.craftingstation.block.CraftingStationBlock"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "craftingtweaks": {
      "dependencies": {
        "balm": "[21.0.0,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21-beta,)"
      },
      "info": {
        "authors": "BlayTheNinth",
        "classes": "99",
        "description": "Allows you to rotate, balance or clear the crafting matrix by the press of a button, in any (supported) crafting window.",
        "displayName": "Crafting Tweaks",
        "file": "craftingtweaks-neoforge-1.21.1-21.1.5.jar",
        "license": "All Rights Reserved",
        "package": "net.blay09.mods.craftingtweaks",
        "version": "21.1.5"
      },
      "summary": [
        "Localization"
      ]
    },
    "crashutilities": {
      "dependencies": {
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "com.darkere.crashutils.CrashUtils#onWorldTick"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "com.darkere.crashutils.ClientEvents#keyEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyPressed$Post": [
          "com.darkere.crashutils.ClientEvents#GUIKeyEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Render$Pre": [
          "com.darkere.crashutils.ClientEvents#drawEvent"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "com.darkere.crashutils.CrashUtils#onRegisterCommands"
        ],
        "net.neoforged.neoforge.event.level.ChunkDataEvent$Load": [
          "com.darkere.crashutils.DeleteBlocks#loadChunkData"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "com.darkere.crashutils.CrashUtils#ServerStarted"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "com.darkere.crashutils.CrashUtils#onWorldTick"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.darkere.crashutils.Network.Network#register"
        ]
      },
      "info": {
        "authors": "Darkere",
        "classes": "92",
        "description": "Mod for debugging and fixing Modded Minecraft Issues",
        "displayName": "Crash Utilities",
        "file": "crashutilities-9.0.4.jar",
        "license": "MIT LICENSE",
        "package": "com.darkere.crashutils",
        "version": "9.0.4"
      },
      "inheritance": {
        "com.mojang.brigadier.Command": [
          "com.darkere.crashutils.CrashUtilCommands.TileEntityCommands.FindLoadedTEsCommand",
          "com.darkere.crashutils.CrashUtilCommands.TileEntityCommands.DeleteTECommand",
          "com.darkere.crashutils.CrashUtilCommands.TileEntityCommands.AllLoadedTEsCommand",
          "com.darkere.crashutils.CrashUtilCommands.PlayerCommands.UnstuckCommand",
          "com.darkere.crashutils.CrashUtilCommands.PlayerCommands.TeleportCommand",
          "com.darkere.crashutils.CrashUtilCommands.ItemClearCommand",
          "com.darkere.crashutils.CrashUtilCommands.EntityCommands.FindEntitiesCommand",
          "com.darkere.crashutils.CrashUtilCommands.EntityCommands.AllEntitiesCommand"
        ],
        "net.minecraft.client.gui.screens.Screen": [
          "com.darkere.crashutils.Screens.PlayerInvScreen",
          "com.darkere.crashutils.Screens.CUScreen"
        ],
        "net.minecraft.world.entity.Entity": [
          "com.darkere.crashutils.CustomFakePlayer"
        ]
      },
      "summary": [
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Network Packets",
        "Custom Server Commands",
        "Has Commands",
        "Listens to Server Started Events",
        "Localization",
        "Modifies GUI Rendering",
        "Runs Client Tick Logic",
        "Runs Server Tick Logic",
        "Uses Access Transformers"
      ]
    },
    "cropsneedwater": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "gay.blackfur.cropsneedwater.mixin.LevelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef"
              ],
              "name": "addWaterloggingToState",
              "raw": "addWaterloggingToState(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "gay.blackfur.cropsneedwater.mixin.configured.WaterloggedSurvivalMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.LevelReader",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "checkWaterlogging",
              "raw": "checkWaterlogging(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "gay.blackfur.cropsneedwater.mixin.configured.WaterloggedStateMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.StateDefinition$Builder",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "addWaterloggedBlockstate",
              "raw": "addWaterloggedBlockstate(Lnet/minecraft/world/level/block/state/StateDefinition$Builder;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "gay.blackfur.cropsneedwater.mixin.configured.WaterloggedSpreadMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.Direction",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.LevelAccessor",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "addWaterSpreadTick",
              "raw": "addWaterSpreadTick(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "gay.blackfur.cropsneedwater.mixin.configured.WaterloggedPlacementMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.context.BlockPlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "addWaterloggedToPlacement",
              "raw": "addWaterloggedToPlacement(Lnet/minecraft/world/item/context/BlockPlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "gay.blackfur.cropsneedwater.mixin.configured.immersive_engineering.CanGrowTopMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.LevelReader",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "addWaterCheck",
              "raw": "addWaterCheck(Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "gay.blackfur.cropsneedwater.mixin.BlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.context.BlockPlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "addWaterloggedToPlacement",
              "raw": "addWaterloggedToPlacement(Lnet/minecraft/world/item/context/BlockPlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "gay.blackfur.cropsneedwater.mixin.BlockBehaviourMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getFluidState",
              "raw": "getFluidState(Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21,)"
      },
      "info": {
        "authors": "",
        "classes": "19",
        "description": "",
        "displayName": "Crops Need Water",
        "file": "cropsneedwater-1.1.0.jar",
        "license": "MIT",
        "package": "gay.blackfur.cropsneedwater",
        "version": "1.1.0"
      },
      "modifies": [
        "",
        "net.minecraft.world.level.Level",
        "net.minecraft.world.level.block.Block",
        "net.minecraft.world.level.block.state.BlockBehaviour",
        "net.neoforged.neoforge.common.extensions.IBlockExtension"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "cucumber": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.blakebr0.cucumber.mixin.ReloadableServerResourcesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.RegistryAccess$Frozen",
                "net.minecraft.world.flag.FeatureFlagSet",
                "net.minecraft.commands.Commands$CommandSelection",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cucumber$constructor",
              "raw": "cucumber$constructor(Lnet/minecraft/core/RegistryAccess$Frozen;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/commands/Commands$CommandSelection;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.blakebr0.cucumber.mixin.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.google.common.collect.ImmutableMultimap$Builder",
                "com.google.common.collect.ImmutableMap$Builder"
              ],
              "name": "cucumber$apply",
              "raw": "cucumber$apply(Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/google/common/collect/ImmutableMultimap$Builder;Lcom/google/common/collect/ImmutableMap$Builder;)V"
            },
            "params": {
              "at": "[{value=INVOKE_ASSIGN, target=Lcom/google/common/collect/ImmutableMap;builder()Lcom/google/common/collect/ImmutableMap$Builder;, ordinal=0}]"
            }
          },
          {
            "class": "com.blakebr0.cucumber.mixin.ItemStackMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.entity.LivingEntity",
                "java.util.function.Consumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cucumber$hurtAndBreak",
              "raw": "cucumber$hurtAndBreak(ILnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Consumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/item/ItemStack;shrink(I)V, ordinal=0}]"
            }
          },
          {
            "class": "com.blakebr0.cucumber.mixin.ClientPacketListenerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "net.minecraft.network.Connection",
                "net.minecraft.client.multiplayer.CommonListenerCookie",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cucumber$constructor",
              "raw": "cucumber$constructor(Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/Connection;Lnet/minecraft/client/multiplayer/CommonListenerCookie;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.blakebr0.cucumber.Cucumber#onClientSetup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "com.blakebr0.cucumber.Cucumber#onCommonSetup"
        ],
        "net.neoforged.neoforge.client.event.ComputeFovModifierEvent": [
          "com.blakebr0.cucumber.client.handler.BowFOVHandler#onFOVUpdate"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "com.blakebr0.cucumber.command.ModCommands#onRegisterCommands"
        ],
        "net.neoforged.neoforge.event.TagsUpdatedEvent": [
          "com.blakebr0.cucumber.crafting.TagMapper#onTagsUpdated"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "com.blakebr0.cucumber.client.handler.TagTooltipHandler#onItemTooltip",
          "com.blakebr0.cucumber.client.handler.DataComponentTooltipHandler#onItemTooltip"
        ]
      },
      "info": {
        "authors": "BlakeBr0",
        "classes": "127",
        "description": "    A library of shared code that all of my mods depend on.\n    ",
        "displayName": "Cucumber Library",
        "file": "Cucumber-1.21.1-8.0.9.jar",
        "latest": "8.0.10",
        "license": "MIT",
        "package": "com.blakebr0.cucumber",
        "updateUrl": "https://api.blakesmods.com/v2/mods/cucumber/1.21/updates",
        "version": "8.0.9"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.blakebr0.cucumber.client.screen.BaseContainerScreen"
        ],
        "net.minecraft.world.item.Item": [
          "com.blakebr0.cucumber.item.tool.BaseSwordItem",
          "com.blakebr0.cucumber.item.tool.BaseSickleItem",
          "com.blakebr0.cucumber.item.tool.BaseShovelItem",
          "com.blakebr0.cucumber.item.tool.BaseShearsItem",
          "com.blakebr0.cucumber.item.tool.BaseScytheItem",
          "com.blakebr0.cucumber.item.tool.BasePickaxeItem",
          "com.blakebr0.cucumber.item.tool.BasePaxelItem",
          "com.blakebr0.cucumber.item.tool.BaseHoeItem",
          "com.blakebr0.cucumber.item.tool.BaseFishingRodItem",
          "com.blakebr0.cucumber.item.tool.BaseCrossbowItem",
          "com.blakebr0.cucumber.item.tool.BaseBowItem",
          "com.blakebr0.cucumber.item.tool.BaseAxeItem",
          "com.blakebr0.cucumber.item.BaseWateringCanItem",
          "com.blakebr0.cucumber.item.BaseShinyItem",
          "com.blakebr0.cucumber.item.BaseReusableItem",
          "com.blakebr0.cucumber.item.BaseItem",
          "com.blakebr0.cucumber.item.BaseBlockItem",
          "com.blakebr0.cucumber.item.BaseArmorItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.blakebr0.cucumber.crafting.recipe.ShapelessTagRecipe",
          "com.blakebr0.cucumber.crafting.recipe.ShapedTransferDamageRecipe",
          "com.blakebr0.cucumber.crafting.recipe.ShapedTransferComponentsRecipe",
          "com.blakebr0.cucumber.crafting.recipe.ShapedTagRecipe",
          "com.blakebr0.cucumber.crafting.recipe.ShapedNoMirrorRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.blakebr0.cucumber.block.BaseWallBlock",
          "com.blakebr0.cucumber.block.BaseTileEntityBlock",
          "com.blakebr0.cucumber.block.BaseStairsBlock",
          "com.blakebr0.cucumber.block.BaseSlabBlock",
          "com.blakebr0.cucumber.block.BaseOreBlock",
          "com.blakebr0.cucumber.block.BaseGlassBlock",
          "com.blakebr0.cucumber.block.BaseBlock"
        ]
      },
      "modifies": [
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.server.ReloadableServerResources",
        "net.minecraft.world.item.ItemStack",
        "net.minecraft.world.item.crafting.RecipeManager"
      ],
      "summary": [
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Items",
        "Custom Recipe Types",
        "Custom Server Commands",
        "Custom Tag Assignments",
        "Listens to Tag Updates",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "cupboard": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.cupboard.mixin.ServerAddEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "OnaddEntity",
              "raw": "OnaddEntity(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.cupboard.mixin.EntityLoadMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.lang.Throwable"
              ],
              "name": "skipLoadingErroringEntity",
              "raw": "skipLoadingErroringEntity(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/lang/Throwable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/CrashReport;forThrowable(Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/CrashReport;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.cupboard.mixin.EntityLoadMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "avoidLoadCrash",
              "raw": "avoidLoadCrash(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/entity/Entity;setYBodyRot(F)V}]"
            }
          },
          {
            "class": "com.cupboard.mixin.ChunkLoadDebug",
            "method": {
              "argTypes": [
                "int",
                "int",
                "net.minecraft.world.level.chunk.status.ChunkStatus",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cupboard$logChunkLoading",
              "raw": "cupboard$logChunkLoading(IILnet/minecraft/world/level/chunk/status/ChunkStatus;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/server/level/ServerChunkCache;runDistanceManagerUpdates()Z}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.30)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "com.cupboard.event.ClientEventHandler#onClientTick"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Opening": [
          "com.cupboard.event.ClientEventHandler#onClientTick"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "com.cupboard.event.EventHandler#serverstart"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "com.cupboard.event.EventHandler#onServerTick"
        ]
      },
      "info": {
        "authors": "Someaddon",
        "classes": "16",
        "description": "Cupboard library for utilities and configs\n",
        "displayName": "Cupboard mod",
        "file": "cupboard-1.21-2.9.jar",
        "license": "ARR",
        "package": "com.cupboard",
        "version": "2.9"
      },
      "modifies": [
        "net.minecraft.commands.Commands",
        "net.minecraft.server.level.ServerChunkCache",
        "net.minecraft.server.level.ServerLevel",
        "net.minecraft.util.ThreadingDetector",
        "net.minecraft.world.entity.Entity"
      ],
      "summary": [
        "Listens to GUI Open Events",
        "Listens to Server Started Events",
        "Modifies Methods",
        "Runs Client Tick Logic",
        "Runs Server Tick Logic",
        "Uses Access Transformers"
      ]
    },
    "curios": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinV1460",
            "method": {
              "argTypes": [
                "com.mojang.datafixers.schemas.Schema",
                "java.util.Map",
                "java.util.Map",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "captureSchema",
              "raw": "captureSchema(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinPowderSnowBlock",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$canEntityWalkOnPowderSnow",
              "raw": "curios$canEntityWalkOnPowderSnow(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinPiglinAi",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$isWearingGold",
              "raw": "curios$isWearingGold(Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinLivingEntity",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curio$canFreeze",
              "raw": "curio$canFreeze(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinInventory",
            "method": {
              "argTypes": [
                "net.minecraft.tags.TagKey",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$containsTag",
              "raw": "curios$containsTag(Lnet/minecraft/tags/TagKey;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinInventory",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$containsStack",
              "raw": "curios$containsStack(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosTriggersEquip",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$equipAtLocation",
              "raw": "curios$equipAtLocation(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosTriggers",
            "method": {
              "argTypes": [
                "net.minecraft.advancements.critereon.ItemPredicate$Builder",
                "net.minecraft.advancements.critereon.LocationPredicate$Builder",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$equipAtLocation",
              "raw": "curios$equipAtLocation(Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosTriggers",
            "method": {
              "argTypes": [
                "net.minecraft.advancements.critereon.ItemPredicate$Builder",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$equip",
              "raw": "curios$equip(Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosDataProvider",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$createEntitiesData",
              "raw": "curios$createEntitiesData(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosDataProvider",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$createSlotData",
              "raw": "curios$createSlotData(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "top.theillusivec4.curios.api.SlotContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "curios$broadcastCurioBreakEvent",
              "raw": "curios$broadcastCurioBreakEvent(Ltop/theillusivec4/curios/api/SlotContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "top.theillusivec4.curios.api.SlotContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$getUuid",
              "raw": "curios$getUuid(Ltop/theillusivec4/curios/api/SlotContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "java.util.Set",
                "top.theillusivec4.curios.api.SlotResult",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$testCurioPredicates",
              "raw": "curios$testCurioPredicates(Ljava/util/Set;Ltop/theillusivec4/curios/api/SlotResult;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$getCurioPredicates",
              "raw": "curios$getCurioPredicates(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$getCurioPredicate",
              "raw": "curios$getCurioPredicate(Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "java.util.function.Predicate",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "curios$registerCurioPredicate",
              "raw": "curios$registerCurioPredicate(Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Predicate;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.core.Holder",
                "net.minecraft.resources.ResourceLocation",
                "double",
                "net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "curios$addModifier",
              "raw": "curios$addModifier(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceLocation;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "java.lang.String",
                "net.minecraft.resources.ResourceLocation",
                "double",
                "net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "curios$addSlotModifier",
              "raw": "curios$addSlotModifier(Lnet/minecraft/world/item/ItemStack;Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "com.google.common.collect.Multimap",
                "java.lang.String",
                "net.minecraft.resources.ResourceLocation",
                "double",
                "net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "curios$addSlotModifier",
              "raw": "curios$addSlotModifier(Lcom/google/common/collect/Multimap;Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "top.theillusivec4.curios.api.SlotContext",
                "net.minecraft.resources.ResourceLocation",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$getAttributeModifiers",
              "raw": "curios$getAttributeModifiers(Ltop/theillusivec4/curios/api/SlotContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "top.theillusivec4.curios.api.SlotContext",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$isStackValid",
              "raw": "curios$isStackValid(Ltop/theillusivec4/curios/api/SlotContext;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$getCuriosInventory",
              "raw": "curios$getCuriosInventory(Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$getCurio",
              "raw": "curios$getCurio(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$getItemStackSlots",
              "raw": "curios$getItemStackSlots(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$getItemStackSlots",
              "raw": "curios$getItemStackSlots(Lnet/minecraft/world/item/ItemStack;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.EntityType",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$getEntitySlots",
              "raw": "curios$getEntitySlots(Lnet/minecraft/world/entity/EntityType;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "curios$getSlots",
              "raw": "curios$getSlots(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "top.theillusivec4.curios.mixin.core.MixinCuriosApi",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.Item",
                "top.theillusivec4.curios.api.type.capability.ICurioItem",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "curios$registerCurio",
              "raw": "curios$registerCurio(Lnet/minecraft/world/item/Item;Ltop/theillusivec4/curios/api/type/capability/ICurioItem;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.1.60,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "top.theillusivec4.curios.Curios$ClientProxy#setupClient"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "top.theillusivec4.curios.client.ClientEventHandler#onClientTick"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$AddLayers": [
          "top.theillusivec4.curios.Curios$ClientProxy#addLayers"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "top.theillusivec4.curios.Curios$ClientProxy#registerKeys"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "top.theillusivec4.curios.Curios$ClientProxy#registerMenuScreens"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "top.theillusivec4.curios.client.gui.GuiEventHandler#onInventoryGuiInit"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonPressed$Pre": [
          "top.theillusivec4.curios.client.gui.GuiEventHandler#onMouseClick"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Render$Pre": [
          "top.theillusivec4.curios.client.gui.GuiEventHandler#onInventoryGuiDrawBackground"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#onDatapackSync"
        ],
        "net.neoforged.neoforge.event.entity.EntityEvent$EntityConstructing": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#entityConstructing"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#entityJoinWorld"
        ],
        "net.neoforged.neoforge.event.entity.living.EnderManAngerEvent": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#enderManAnger"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#playerDrops"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEquipmentChangeEvent": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#livingEquipmentChange"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "top.theillusivec4.curios.client.ClientEventHandler#onTooltip"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$Clone": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#playerClone"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#playerLoggedIn"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$StartTracking": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#playerStartTracking"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#curioRightClick"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerXpEvent$PickupXp": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#playerXPPickUp"
        ],
        "net.neoforged.neoforge.event.level.BlockDropsEvent": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#onBreakBlock"
        ],
        "net.neoforged.neoforge.event.tick.EntityTickEvent$Post": [
          "top.theillusivec4.curios.common.event.CuriosEventHandler#tick"
        ]
      },
      "info": {
        "authors": "C4",
        "classes": "145",
        "description": "A flexible and expandable accessory/equipment API for users and developers.",
        "displayName": "Curios API",
        "file": "curios-neoforge-9.2.2+1.21.1.jar",
        "license": "LGPL-3.0-or-later",
        "package": "top.theillusivec4.curios",
        "version": "9.2.2+1.21.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "top.theillusivec4.curios.client.gui.CuriosScreen"
        ],
        "net.minecraft.data.DataProvider": [
          "top.theillusivec4.curios.api.CuriosDataProvider"
        ]
      },
      "modifies": [
        "net.minecraft.advancements.critereon.NbtPredicate",
        "net.minecraft.util.datafix.schemas.V1460",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.monster.piglin.PiglinAi",
        "net.minecraft.world.entity.player.Inventory",
        "net.minecraft.world.level.block.PowderSnowBlock",
        "net.minecraft.world.level.storage.loot.functions.ApplyBonusCount",
        "net.minecraft.world.level.storage.loot.functions.EnchantedCountIncreaseFunction",
        "top.theillusivec4.curios.api.CuriosApi",
        "top.theillusivec4.curios.api.CuriosDataProvider",
        "top.theillusivec4.curios.api.CuriosTriggers",
        "top.theillusivec4.curios.api.CuriosTriggers$EquipBuilder"
      ],
      "summary": [
        "Custom Data Pack Sync",
        "Custom GUI Screens",
        "Custom Key Mappings",
        "Handles Right Clicks with Items",
        "Listens to Entity Drop Events",
        "Listens to Entity Equipment Change Events",
        "Listens to Entity Join World Events",
        "Listens to Player Login Events",
        "Localization",
        "Modifies GUI Rendering",
        "Modifies Methods",
        "Runs Client Tick Logic",
        "Runs Entity Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "cyclopscore": {
      "annotations": {
        "net.minecraft.gametest.framework.GameTest": [
          {
            "class": "org.cyclops.cyclopscore.gametest.StartupTestNeoForge",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testDummy",
              "raw": "testDummy(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty"
            }
          }
        ],
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "org.cyclops.cyclopscore.mixin.MixinBufferBuilder",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cc$clearIfRunnableSet",
              "raw": "cc$clearIfRunnableSet(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,]",
        "neoforge": "[21.1.2,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "org.cyclops.cyclopscore.config.ConfigHandlerNeoForge#onLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "org.cyclops.cyclopscore.config.ConfigHandlerNeoForge#onReload"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "org.cyclops.cyclopscore.modcompat.capabilities.CapabilityConstructorRegistry$EntityEventListener#onEntityLoad",
          "org.cyclops.cyclopscore.modcompat.capabilities.CapabilityConstructorRegistry$BlockEventListener#onBlockLoad",
          "org.cyclops.cyclopscore.modcompat.capabilities.CapabilityConstructorRegistry$ItemStackEventListener#onItemStackLoad",
          "org.cyclops.cyclopscore.modcompat.capabilities.CapabilityConstructorRegistry$BlockEntityEventListener#onBlockEntityLoad"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "org.cyclops.cyclopscore.client.key.KeyRegistry#onPlayerKeyInput"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$ModifyBakingResult": [
          "org.cyclops.cyclopscore.config.configurabletypeaction.BlockActionNeoForgeAux#onModelBakeEvent",
          "org.cyclops.cyclopscore.config.configurabletypeaction.ItemActionNeoForge#onModelBakeEvent",
          "org.cyclops.cyclopscore.config.configurabletypeaction.BlockActionNeoForge#onModelBakeEvent"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "org.cyclops.cyclopscore.config.configurabletypeaction.ItemActionNeoForge#onModelRegistryLoad",
          "org.cyclops.cyclopscore.config.configurabletypeaction.BlockActionNeoForge#onModelRegistryLoad"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "org.cyclops.cyclopscore.config.configurabletypeaction.BlockActionNeoForge#onRegisterColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Pre": [
          "org.cyclops.cyclopscore.client.gui.GuiMainMenuExtensionDevWorldNeoForgeRegistrar#onMainMenuInit"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Post": [
          "org.cyclops.cyclopscore.advancement.criterion.ModItemObtainedTriggerEventHooksNeoForge#onPickup"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerContainerEvent$Open": [
          "org.cyclops.cyclopscore.advancement.criterion.GuiContainerOpenTriggerEventHooksNeoForge#onEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$ItemCraftedEvent": [
          "org.cyclops.cyclopscore.advancement.criterion.ItemCraftedTriggerTriggerEventHooksNeoForge#onCrafted",
          "org.cyclops.cyclopscore.advancement.criterion.ModItemObtainedTriggerEventHooksNeoForge#onCrafted"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$ItemSmeltedEvent": [
          "org.cyclops.cyclopscore.advancement.criterion.ModItemObtainedTriggerEventHooksNeoForge#onSmelted"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "org.cyclops.cyclopscore.event.PlayerRingOfFireNeoForge#onLoggedIn"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerRespawnEvent": [
          "org.cyclops.cyclopscore.event.PlayerRingOfFireNeoForge#onRespawn"
        ],
        "net.neoforged.neoforge.event.tick.EntityTickEvent$Post": [
          "org.cyclops.cyclopscore.potion.CyclopsEffect#onEntityUpdate"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "org.cyclops.cyclopscore.tracking.Versions#onTick"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "org.cyclops.cyclopscore.config.configurabletypeaction.FluidAction#onRegistryEvent",
          "org.cyclops.cyclopscore.config.ConfigHandlerNeoForge#onRegistryEvent"
        ]
      },
      "info": {
        "classes": "739",
        "description": "Coremod for Integrated Dynamics, EvilCraft and others.",
        "displayName": "Cyclops Core",
        "file": "cyclopscore-1.21.1-neoforge-1.25.6-713.jar",
        "latest": "1.25.7",
        "license": "MIT",
        "package": "org.cyclops.cyclopscore",
        "updateUrl": "https://raw.githubusercontent.com/CyclopsMC/Versions/master/neoforge_update/cyclops-core.json",
        "version": "1.25.6"
      },
      "inheritance": {
        "com.mojang.brigadier.Command": [
          "org.cyclops.cyclopscore.command.CommandVersion",
          "org.cyclops.cyclopscore.command.CommandIgnite",
          "org.cyclops.cyclopscore.command.CommandInfoBookTest",
          "org.cyclops.cyclopscore.command.CommandReloadResources",
          "org.cyclops.cyclopscore.command.CommandDebug",
          "org.cyclops.cyclopscore.command.CommandDumpRegistries",
          "org.cyclops.cyclopscore.command.CommandConfig"
        ],
        "net.minecraft.client.gui.screens.Screen": [
          "org.cyclops.cyclopscore.client.gui.container.ContainerScreenScrolling",
          "org.cyclops.cyclopscore.client.gui.container.ContainerScreenExtendedCommon",
          "org.cyclops.cyclopscore.client.gui.container.ContainerScreenScrollingCommon",
          "org.cyclops.cyclopscore.client.gui.container.ContainerScreenExtended",
          "org.cyclops.cyclopscore.infobook.test.ContainerScreenInfoBookTest",
          "org.cyclops.cyclopscore.infobook.ScreenInfoBook"
        ],
        "net.minecraft.client.particle.Particle": [
          "org.cyclops.cyclopscore.client.particle.ParticleDropColored",
          "org.cyclops.cyclopscore.client.particle.ParticleBlur"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "org.cyclops.cyclopscore.client.render.blockentity.ItemStackBlockEntityRendererBase"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "org.cyclops.cyclopscore.client.render.blockentity.RenderBlockEntityModelBase",
          "org.cyclops.cyclopscore.client.render.blockentity.RenderBlockEntityModel"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "org.cyclops.cyclopscore.client.model.DynamicBaseModel",
          "org.cyclops.cyclopscore.client.model.DynamicItemAndBlockModel",
          "org.cyclops.cyclopscore.client.model.DelegatingDynamicItemAndBlockModel",
          "org.cyclops.cyclopscore.client.model.DelegatingChildDynamicItemAndBlockModel"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "org.cyclops.cyclopscore.potion.CyclopsEffect"
        ],
        "net.minecraft.world.item.Item": [
          "org.cyclops.cyclopscore.item.ItemGui",
          "org.cyclops.cyclopscore.item.ItemBlockNBT",
          "org.cyclops.cyclopscore.item.DamageIndicatedItemFluidContainer"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "org.cyclops.cyclopscore.recipe.type.RecipeCraftingShapelessCustomOutput",
          "org.cyclops.cyclopscore.recipe.type.RecipeCraftingShapedCustomOutput"
        ],
        "net.minecraft.world.level.block.Block": [
          "org.cyclops.cyclopscore.block.BlockWithEntityGui",
          "org.cyclops.cyclopscore.block.BlockWithEntity",
          "org.cyclops.cyclopscore.block.BlockGui",
          "org.cyclops.cyclopscore.block.BlockWithEntityCommon",
          "org.cyclops.cyclopscore.block.BlockWithEntityGuiCommon",
          "org.cyclops.cyclopscore.block.BlockGuiCommon"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "org.cyclops.cyclopscore.persist.world.WorldStorage$NBTDataHolder"
        ]
      },
      "modifies": [
        "com.mojang.blaze3d.vertex.BufferBuilder"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Automatic Testing",
        "Custom 3D Models",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Items",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Recipe Types",
        "Has Capability Providers",
        "Has Commands",
        "Listens to Item Crafting Events",
        "Listens to Item Pickup Events",
        "Listens to Item Smelting Events",
        "Listens to Player Login Events",
        "Localization",
        "Modifies Methods",
        "Runs Entity Tick Logic",
        "Runs Player Tick Logic",
        "Stores Data in World Saves",
        "Uses Access Transformers"
      ]
    },
    "dummmmmmy": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.mehvahdjukaar.dummmmmmy.mixins.ToolItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.entity.LivingEntity",
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "mm$damageEquipment",
              "raw": "mm$damageEquipment(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.dummmmmmy.mixins.SwordItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.entity.LivingEntity",
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "mm$damageEquipment",
              "raw": "mm$damageEquipment(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.dummmmmmy.mixins.ArmorStandFIxMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.context.UseOnContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.entity.decoration.ArmorStand"
              ],
              "name": "dummy$fixInitialArmorStandRot",
              "raw": "dummy$fixInitialArmorStandRot(Lnet/minecraft/world/item/context/UseOnContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/entity/decoration/ArmorStand;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/entity/decoration/ArmorStand;moveTo(DDDFF)V}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "moonlight": "*",
        "neoforge": "[4,)"
      },
      "events": {
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "net.mehvahdjukaar.dummmmmmy.neoforge.DummmmmmyForge#onEntityJoinWorld"
        ],
        "net.neoforged.neoforge.event.entity.living.FinalizeSpawnEvent": [
          "net.mehvahdjukaar.dummmmmmy.neoforge.DummmmmmyForge#onCheckSpawn"
        ],
        "net.neoforged.neoforge.event.entity.player.CriticalHitEvent": [
          "net.mehvahdjukaar.dummmmmmy.neoforge.DummmmmmyForge#onEntityCriticalHit"
        ]
      },
      "info": {
        "authors": "Mehvahdjukaar, Bonusboni, Gooigipunch, Plantkillable",
        "classes": "41",
        "description": "Don't hurt me pls :S",
        "displayName": "MmmMmmMmmMmm",
        "file": "dummmmmmy-1.21-2.0.6-neoforge.jar",
        "license": "Supplementaries Team License v.1.1",
        "package": "net.mehvahdjukaar.dummmmmmy",
        "url": "https://www.curseforge.com/minecraft/mc-mods/mmmmmmmmmmmm",
        "version": "1.21-2.0.6"
      },
      "inheritance": {
        "net.minecraft.client.particle.Particle": [
          "net.mehvahdjukaar.dummmmmmy.client.HayParticle",
          "net.mehvahdjukaar.dummmmmmy.client.DamageNumberParticle"
        ],
        "net.minecraft.world.entity.Entity": [
          "net.mehvahdjukaar.dummmmmmy.mixins.LivingEntityMixin",
          "net.mehvahdjukaar.dummmmmmy.common.TargetDummyEntity"
        ],
        "net.minecraft.world.entity.Mob": [
          "net.mehvahdjukaar.dummmmmmy.common.TargetDummyEntity"
        ],
        "net.minecraft.world.item.Item": [
          "net.mehvahdjukaar.dummmmmmy.common.TargetDummyItem"
        ]
      },
      "modifies": [
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.player.Player",
        "net.minecraft.world.item.ArmorStandItem",
        "net.minecraft.world.item.DiggerItem",
        "net.minecraft.world.item.SwordItem",
        "net.minecraft.world.item.enchantment.Enchantment"
      ],
      "summary": [
        "Custom Entities",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Mobs",
        "Custom Particles",
        "Custom Tag Assignments",
        "Listens to Entity Join World Events",
        "Localization",
        "Modifies Entity Spawning",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "easy_piglins": {
      "dependencies": {
        "minecraft": "[1.21,1.21.1]",
        "neoforge": "[21.0.161,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "de.maxhenkel.easypiglins.Main#commonSetup"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "de.maxhenkel.easypiglins.corelib.death.DeathEvents#playerDeath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "de.maxhenkel.easypiglins.corelib.death.DeathEvents#playerDeath"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "de.maxhenkel.easypiglins.events.PiglinEvents#onClick"
        ]
      },
      "info": {
        "authors": "Max Henkel",
        "classes": "118",
        "description": "Easy Piglins",
        "displayName": "Easy Piglins",
        "file": "easy-piglins-neoforge-1.21.1-1.0.14.jar",
        "license": "All rights reserved",
        "package": "de.maxhenkel.easypiglins",
        "updateUrl": "https://update.maxhenkel.de/neoforge/easy_piglins",
        "version": "1.21.1-1.0.14"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "de.maxhenkel.easypiglins.corelib.inventory.ScreenBase",
          "de.maxhenkel.easypiglins.gui.InputOutputScreen",
          "de.maxhenkel.easypiglins.gui.BartererScreen"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "de.maxhenkel.easypiglins.corelib.client.ItemRenderer$Renderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "de.maxhenkel.easypiglins.blocks.tileentity.render.BartererRenderer"
        ],
        "net.minecraft.world.item.Item": [
          "de.maxhenkel.easypiglins.corelib.client.CustomRendererItem",
          "de.maxhenkel.easypiglins.corelib.client.CustomRendererBlockItem",
          "de.maxhenkel.easypiglins.items.PiglinItem",
          "de.maxhenkel.easypiglins.blocks.BartererBlock$1"
        ],
        "net.minecraft.world.level.block.Block": [
          "de.maxhenkel.easypiglins.blocks.HorizontalRotatableBlock",
          "de.maxhenkel.easypiglins.blocks.BartererBlock"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Listens to Entity Death Events",
        "Listens to Entity Drop Events",
        "Listens to Entity Interaction Events",
        "Localization"
      ]
    },
    "edivadlib": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0-beta,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingIn": [
          "edivad.edivadlib.setup.UpdateChecker#handlePlayerLoggedInEvent"
        ]
      },
      "info": {
        "authors": "Edivad99",
        "classes": "7",
        "description": "Just a common library for all my mods",
        "displayName": "EdivadLib",
        "file": "EdivadLib-1.21-3.0.0.jar",
        "license": "GNU AGPLv3",
        "package": "edivad.edivadlib",
        "updateUrl": "https://api.modrinth.com/updates/edivadlib/forge_updates.json?neoforge=include",
        "url": "https://www.curseforge.com/minecraft/mc-mods/edivadlib",
        "version": "3.0.0"
      }
    },
    "elevatorid": {
      "dependencies": {
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ModelEvent$ModifyBakingResult": [
          "com.vsngarcia.neoforge.client.ClientRegistry#onModelBake"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "com.vsngarcia.neoforge.client.ClientRegistry#onModelRegistry"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "com.vsngarcia.neoforge.client.ClientRegistry#onBlockColorHandlersRegistry"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.vsngarcia.neoforge.client.ClientRegistry#onMenuScreensRegistry"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.vsngarcia.neoforge.network.NetworkHandler#register"
        ]
      },
      "info": {
        "authors": "VsnGamer",
        "classes": "26",
        "description": "Simple port of the elevator from OpenBlocks to 1.8+",
        "displayName": "ElevatorMod",
        "file": "elevatorid-neoforge-1.21.1-1.11.3.jar",
        "license": "MIT",
        "package": "com.vsngarcia",
        "version": "1.21.1-1.11.3"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.vsngarcia.client.gui.ElevatorScreen"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "com.vsngarcia.neoforge.client.render.ElevatorBakedModel"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.vsngarcia.neoforge.ElevatorBlock",
          "com.vsngarcia.ElevatorBlockBase"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Loot Tables",
        "Custom Network Packets",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "enchdesc": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.darkhax.enchdesc.common.mixin.patch.MixinItemStack",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.Item$TooltipContext",
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.item.TooltipFlag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "java.util.List"
              ],
              "name": "addEnchantmentTooltips",
              "raw": "addEnchantmentTooltips(Lnet/minecraft/world/item/Item$TooltipContext;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/TooltipFlag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Ljava/util/List;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/item/ItemStack;addToTooltip(Lnet/minecraft/core/component/DataComponentType;Lnet/minecraft/world/item/Item$TooltipContext;Ljava/util/function/Consumer;Lnet/minecraft/world/item/TooltipFlag;)V, ordinal=3}]"
            }
          }
        ]
      },
      "dependencies": {
        "bookshelf": "[21.1,21.2)",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.61,)",
        "prickle": "[21.1,21.2)"
      },
      "info": {
        "authors": "Darkhax",
        "classes": "5",
        "description": "Adds descriptions of enchantment effects to their descriptions.",
        "displayName": "EnchantmentDescriptions",
        "file": "enchdesc-neoforge-1.21.1-21.1.5.jar",
        "license": "LGPL 2.1",
        "package": "net.darkhax.enchdesc.impl",
        "updateUrl": "https://updates.blamejared.com/get?n=enchdesc&gv=1.21.1&ml=neoforge",
        "version": "21.1.5"
      },
      "modifies": [
        "net.minecraft.world.item.ItemStack"
      ],
      "summary": [
        "Localization",
        "Modifies Methods"
      ]
    },
    "endercore": {
      "dependencies": {},
      "events": {
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "com.enderio.core.client.ClientModEvents#registerGeometryLoaders"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.enderio.core.common.network.CoreNetwork#register"
        ]
      },
      "info": {
        "authors": "CrazyPants, tterrag, HenryLoenwind, MatthiasM, CyanideX, EpicSquid, Rover656, HypherionSA, agnor99, Ferri_Arnus, dphaldes",
        "classes": "142",
        "description": "Supporting library for Ender IO and its Modules",
        "displayName": "Ender Core",
        "file": "enderio-7.1.6-alpha.jar",
        "jarInJar": "com.enderio.endercore-7.1.6-alpha.jar",
        "license": "CC0",
        "package": "com.enderio.core",
        "version": "7.1.6-alpha"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.enderio.core.client.gui.widgets.BaseEnumPickerWidget$SelectionScreen",
          "com.enderio.core.client.gui.screen.EnderContainerScreen",
          "com.enderio.core.client.gui.screen.EIOScreen"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.enderio.core.common.recipes.WrappedShapedRecipe"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "com.enderio.core.client.model.EitherModelLoader"
        ]
      },
      "summary": [
        "Custom GUI Screens",
        "Custom Model Loaders",
        "Custom Network Packets",
        "Custom Recipe Types"
      ]
    },
    "enderio": {
      "dependencies": {
        "endercore": "7.1.6-alpha",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.58,)"
      },
      "info": {
        "authors": "CrazyPants, tterrag, HenryLoenwind, MatthiasM, CyanideX, EpicSquid, Rover656, HypherionSA, agnor99, Ferri_Arnus, dphaldes",
        "classes": "0",
        "description": "Compact conduits, painted things and all sorts of stuff and bling. This is the monolithic jar, containing all core modules.",
        "displayName": "Ender IO",
        "file": "enderio-7.1.6-alpha.jar",
        "license": "CC0",
        "version": "7.1.6-alpha"
      }
    },
    "enderio_armory": {
      "dependencies": {
        "endercore": "7.1.6-alpha",
        "enderio_base": "7.1.6-alpha",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.58,)"
      },
      "events": {
        "com.enderio.base.common.event.EIOChestLootEvent": [
          "com.enderio.armory.data.loot.ArmoryChestLoot#OnChestLootEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "com.enderio.armory.common.item.darksteel.upgrades.explosive.ExplosiveUpgradeHandler#showAreaOfEffectHighlight"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.enderio.armory.EnderIOArmory#onGatherData"
        ]
      },
      "info": {
        "authors": "CrazyPants, tterrag, HenryLoenwind, MatthiasM, CyanideX, EpicSquid, Rover656, HypherionSA, agnor99, Ferri_Arnus, dphaldes",
        "classes": "57",
        "description": "The Ender IO Armory module.",
        "displayName": "Ender IO Armory",
        "file": "enderio-7.1.6-alpha.jar",
        "jarInJar": "com.enderio.enderio-armory-7.1.6-alpha.jar",
        "license": "CC0",
        "package": "com.enderio.armory",
        "version": "7.1.6-alpha"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "com.enderio.armory.data.tags.ArmoryBlockTagsProvider",
          "com.enderio.armory.data.recipe.ItemRecipeProvider",
          "com.enderio.armory.data.loot.ArmoryLootModifiersProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.enderio.armory.common.item.darksteel.DarkSteelSwordItem",
          "com.enderio.armory.common.item.darksteel.DarkSteelUpgradeItem",
          "com.enderio.armory.common.item.darksteel.DarkSteelPickaxeItem",
          "com.enderio.armory.common.item.darksteel.DarkSteelAxeItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.enderio.armory.common.item.darksteel.upgrades.DarkSteelUpgradeRecipe"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Localization",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "enderio_base": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.enderio.base.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "enderio$allowTagGlidersInChestplateSlot",
              "raw": "enderio$allowTagGlidersInChestplateSlot(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "endercore": "7.1.6-alpha",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.58,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.enderio.base.client.EnderIOBaseClient#clientSetup"
        ],
        "net.neoforged.fml.event.lifecycle.InterModEnqueueEvent": [
          "com.enderio.EnderIOBase#sendIMC"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "com.enderio.base.client.travel.TravelParticleHandler#clientTick"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$AddLayers": [
          "com.enderio.base.client.EnderIOBaseClient#addLayers"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$CreateSkullModels": [
          "com.enderio.base.client.EnderIOBaseClient#registerEnderSkulls"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "com.enderio.base.client.EnderIOBaseClient#registerModelLayers"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.enderio.base.client.EnderIOBaseClient#modelRenderer"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$BakingCompleted": [
          "com.enderio.base.client.EnderIOBaseClient#bakingCompleted"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "com.enderio.base.client.EnderIOBaseClient#additionalModels"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "com.enderio.base.client.EnderIOBaseClient#modelInit"
        ],
        "net.neoforged.neoforge.client.event.RecipesUpdatedEvent": [
          "com.enderio.base.common.handler.FireCraftingHandler#onRecipeUpdate"
        ],
        "net.neoforged.neoforge.client.event.RegisterItemDecorationsEvent": [
          "com.enderio.base.client.EnderIOBaseClient#itemDecorators"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "com.enderio.base.client.EnderIOBaseClient#registerParticleProviders"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.enderio.base.client.travel.TravelTargetRendering#renderLevel"
        ],
        "net.neoforged.neoforge.event.ModifyDefaultComponentsEvent": [
          "com.enderio.base.common.event.EIODefaultComponents#modifyDefaultComponents"
        ],
        "net.neoforged.neoforge.event.entity.player.AdvancementEvent$AdvancementEarnEvent": [
          "com.enderio.base.common.advancement.UseGliderAdvancementBenefit#onEarnAdvancement"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "com.enderio.base.client.tooltip.TooltipHandler#addAdvancedTooltips"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": [
          "com.enderio.base.common.travel.TravelTargetSavedData#onDimensionChange"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "com.enderio.base.common.AlphaWarning#playerJoin",
          "com.enderio.base.common.travel.TravelTargetSavedData#onPlayerLogin"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteractSpecific": [
          "com.enderio.base.common.item.tool.SoulVialItem#onLivingInteract"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.enderio.base.common.integrations.WrenchCompat#onRightClickBlock"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$NeighborNotifyEvent": [
          "com.enderio.base.common.handler.FireCraftingHandler#on"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Pre": [
          "com.enderio.base.common.handler.FireCraftingHandler#onWorldTick"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Pre": [
          "com.enderio.base.common.block.DarkSteelLadderHandler#onTick",
          "com.enderio.base.common.hangglider.PlayerMovementHandler#onPlayerTick"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.enderio.base.common.init.EIONetwork#register"
        ]
      },
      "info": {
        "authors": "CrazyPants, tterrag, HenryLoenwind, MatthiasM, CyanideX, EpicSquid, Rover656, HypherionSA, agnor99, Ferri_Arnus, dphaldes",
        "classes": "366",
        "description": "The base items and materials for the Ender IO Mods.",
        "displayName": "Ender IO Base",
        "file": "enderio-7.1.6-alpha.jar",
        "jarInJar": "com.enderio.enderio-base-7.1.6-alpha.jar",
        "license": "CC0",
        "package": "com.enderio",
        "version": "7.1.6-alpha"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.enderio.base.client.gui.screen.ItemFilterScreen",
          "com.enderio.base.client.gui.screen.CoordinateMenuScreen",
          "com.enderio.base.client.gui.screen.EntityFilterScreen",
          "com.enderio.base.client.gui.screen.FluidFilterScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "com.enderio.base.client.particle.RangeParticle"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.enderio.base.client.renderer.block.EnderSkullRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "com.enderio.base.client.paint.model.PaintedBlockModel",
          "com.enderio.base.client.paint.model.PaintedBlockModel$ItemModel"
        ],
        "net.minecraft.data.DataProvider": [
          "com.enderio.base.data.tags.EIOEntityTagsProvider",
          "com.enderio.base.data.tags.EIOFluidTagsProvider",
          "com.enderio.base.data.tags.EIOBlockTagsProvider",
          "com.enderio.base.data.tags.EIOItemTagsProvider",
          "com.enderio.base.data.recipe.GlassRecipeProvider",
          "com.enderio.base.data.recipe.MaterialRecipeProvider",
          "com.enderio.base.data.recipe.ItemRecipeProvider",
          "com.enderio.base.data.recipe.FilterRecipeProvider",
          "com.enderio.base.data.recipe.FireCraftingRecipeProvider",
          "com.enderio.base.data.recipe.BlockRecipeProvider",
          "com.enderio.base.data.loot.EIOLootModifiersProvider",
          "com.enderio.base.data.EIODataProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "com.enderio.base.common.paint.PaintedSandEntity"
        ],
        "net.minecraft.world.item.Item": [
          "com.enderio.base.common.item.tool.YetaWrenchItem",
          "com.enderio.base.common.item.tool.LevitationStaffItem",
          "com.enderio.base.common.item.tool.PoweredToggledItem",
          "com.enderio.base.common.item.tool.ElectromagnetItem",
          "com.enderio.base.common.item.tool.ExperienceRodItem",
          "com.enderio.base.common.item.tool.ColdFireIgniter",
          "com.enderio.base.common.item.tool.CoordinateSelectorItem",
          "com.enderio.base.common.item.tool.TravelStaffItem",
          "com.enderio.base.common.item.tool.SoulVialItem",
          "com.enderio.base.common.item.capacitors.LootCapacitorItem",
          "com.enderio.base.common.item.capacitors.CapacitorItem",
          "com.enderio.base.common.item.filter.FluidFilter",
          "com.enderio.base.common.item.filter.EntityFilter",
          "com.enderio.base.common.item.filter.ItemFilter",
          "com.enderio.base.common.item.misc.EnderiosItem",
          "com.enderio.base.common.item.misc.MaterialItem",
          "com.enderio.base.common.item.misc.CreativeTabIconItem",
          "com.enderio.base.common.item.misc.LocationPrintoutItem",
          "com.enderio.base.common.item.misc.EnderSkullBlockItem",
          "com.enderio.base.common.item.misc.HangGliderItem",
          "com.enderio.base.common.item.misc.BrokenSpawnerItem",
          "com.enderio.base.common.paint.item.PaintedBlockItem",
          "com.enderio.base.common.paint.item.PaintedSlabBlockItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.enderio.base.common.recipe.FireCraftingRecipe",
          "com.enderio.base.common.recipe.ShapedEntityStorageRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.enderio.base.common.block.ColdFireBlock",
          "com.enderio.base.common.block.EIOPressurePlateBlock",
          "com.enderio.base.common.block.IndustrialInsulationBlock",
          "com.enderio.base.common.block.light.LightNode",
          "com.enderio.base.common.block.light.Light",
          "com.enderio.base.common.block.light.PoweredLight",
          "com.enderio.base.common.block.glass.FusedQuartzBlock",
          "com.enderio.base.common.block.SilentWeightedPressurePlateBlock",
          "com.enderio.base.common.block.DarkSteelLadderBlock",
          "com.enderio.base.common.block.SilentPressurePlateBlock",
          "com.enderio.base.common.block.skull.WallEnderSkullBlock",
          "com.enderio.base.common.block.skull.EnderSkullBlock",
          "com.enderio.base.common.block.ResettingLeverBlock",
          "com.enderio.base.common.block.ReinforcedObsidianBlock",
          "com.enderio.base.common.block.EIOEntityBlock",
          "com.enderio.base.common.paint.block.PaintedSlabBlock",
          "com.enderio.base.common.paint.block.PaintedFenceGateBlock",
          "com.enderio.base.common.paint.block.SinglePaintedBlock",
          "com.enderio.base.common.paint.block.PaintedRedstoneBlock",
          "com.enderio.base.common.paint.block.PaintedWoodenPressurePlateBlock",
          "com.enderio.base.common.paint.block.PaintedWallBlock",
          "com.enderio.base.common.paint.block.PaintedCraftingTableBlock",
          "com.enderio.base.common.paint.block.PaintedStairBlock",
          "com.enderio.base.common.paint.block.PaintedFenceBlock",
          "com.enderio.base.common.paint.block.PaintedTrapDoorBlock",
          "com.enderio.base.common.paint.block.PaintedSandBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.enderio.base.common.travel.TravelTargetSavedData"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "com.enderio.base.client.paint.model.PaintedBlockGeometry$Loader"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.entity.LivingEntityRenderer",
        "net.minecraft.world.entity.LivingEntity"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Model Loaders",
        "Custom Network Packets",
        "Custom Particles",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Listens to Dimension Change Events",
        "Listens to Entity Interaction Events with Click Positions",
        "Listens to Player Login Events",
        "Listens to Recipe Updates",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Default Components",
        "Modifies Methods",
        "Modifies World Rendering",
        "Patchouli Guide Book",
        "Runs Client Tick Logic",
        "Runs Player Tick Logic",
        "Runs World Tick Logic",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "enderio_conduits": {
      "dependencies": {
        "endercore": "7.1.6-alpha",
        "enderio_base": "7.1.6-alpha",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.58,)"
      },
      "events": {
        "com.enderio.conduits.api.model.RegisterConduitCoreModelModifiersEvent": [
          "com.enderio.conduits.client.ConduitClientSetup#registerConduitCoreModelModifiers"
        ],
        "com.enderio.conduits.api.screen.RegisterConduitScreenExtensionsEvent": [
          "com.enderio.conduits.client.ConduitClientSetup#registerConduitScreenExtensions"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.enderio.conduits.client.ConduitClientSetup#clientSetup"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "com.enderio.conduits.common.init.ConduitBlockEntities#registerConduitCapabilities"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingIn": [
          "com.enderio.conduits.common.conduit.ConduitSorter#clientSortTypes"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$BakingCompleted": [
          "com.enderio.conduits.client.ConduitClientSetup#bakingModelsFinished"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "com.enderio.conduits.client.ConduitClientSetup#registerModels"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "com.enderio.conduits.client.ConduitClientSetup#modelLoader"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "com.enderio.conduits.client.ConduitHighlightEvent#highlight"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.enderio.conduits.client.ConduitFacadeRendering#renderFacade"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.enderio.conduits.EnderIOConduits#onData"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "com.enderio.conduits.common.conduit.ConduitBlockItem#addToCreativeTabs"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEquipmentChangeEvent": [
          "com.enderio.conduits.client.model.conduit.facades.FacadeVisibilityHandler#onEquipmentChanged"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.enderio.conduits.common.conduit.block.ConduitBundleBlock#handleShiftYeta"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "com.enderio.conduits.common.conduit.ConduitSorter#serverSortTypes"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Post": [
          "com.enderio.conduits.common.conduit.ConduitSavedData#onLevelTick"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.enderio.conduits.common.network.ConduitNetwork#register"
        ],
        "net.neoforged.neoforge.registries.DataPackRegistryEvent$NewRegistry": [
          "com.enderio.conduits.EnderIOConduits#registerDatapackRegistries"
        ],
        "net.neoforged.neoforge.registries.NewRegistryEvent": [
          "com.enderio.conduits.EnderIOConduits#onNewRegistries"
        ]
      },
      "info": {
        "authors": "CrazyPants, tterrag, HenryLoenwind, MatthiasM, CyanideX, EpicSquid, Rover656, HypherionSA, agnor99, Ferri_Arnus, dphaldes",
        "classes": "226",
        "description": "The conduits module for Ender IO",
        "displayName": "Ender IO Conduits",
        "file": "enderio-7.1.6-alpha.jar",
        "jarInJar": "com.enderio.enderio-conduits-7.1.6-alpha.jar",
        "license": "CC0",
        "package": "com.enderio.conduits",
        "version": "7.1.6-alpha"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.enderio.conduits.client.gui.RedstoneDoubleChannelFilterScreen",
          "com.enderio.conduits.client.gui.RedstoneTimerFilterScreen",
          "com.enderio.conduits.client.gui.ConduitScreen",
          "com.enderio.conduits.client.gui.RedstoneCountFilterScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "com.enderio.conduits.client.particle.ConduitBreakParticle"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "com.enderio.conduits.client.model.ConduitItemModel",
          "com.enderio.conduits.client.model.ConduitBlockModel",
          "com.enderio.conduits.client.model.FacadeItemModel"
        ],
        "net.minecraft.data.DataProvider": [
          "com.enderio.conduits.data.recipe.ConduitRecipes",
          "com.enderio.conduits.data.ConduitTagProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.enderio.conduits.common.conduit.ConduitBlockItem",
          "com.enderio.conduits.common.conduit.upgrade.SpeedUpgradeItem",
          "com.enderio.conduits.common.conduit.facades.ConduitFacadeItem",
          "com.enderio.conduits.common.redstone.RedstoneFilterItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.enderio.conduits.common.conduit.block.ConduitBundleBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.enderio.conduits.common.conduit.ConduitSavedData"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "com.enderio.conduits.client.model.FacadeItemGeometry$Loader",
          "com.enderio.conduits.client.model.ConduitGeometry$Loader",
          "com.enderio.conduits.client.model.ConduitItemModelLoader"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Model Loaders",
        "Custom Network Packets",
        "Custom Particles",
        "Custom Recipes",
        "Custom Registries",
        "Custom Tag Assignments",
        "Has Capability Providers",
        "Listens to Entity Equipment Change Events",
        "Listens to Right Click Block Events",
        "Listens to Server Started Events",
        "Localization",
        "Modifies World Rendering",
        "Runs World Tick Logic",
        "Stores Data in World Saves",
        "Uses Data Generators"
      ]
    },
    "enderio_conduits_modded": {
      "dependencies": {
        "ae2": "[19.0.23-beta,)",
        "endercore": "7.1.6-alpha",
        "enderio_base": "7.1.6-alpha",
        "enderio_conduits": "7.1.6-alpha",
        "mekanism": "[10.7.0,)",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.58,)",
        "refinedstorage": "[2.0.0-milestone.4.5,)"
      },
      "events": {
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "com.enderio.modconduits.mods.laserio.LaserIOIntegration#registerCapEvent",
          "com.enderio.modconduits.mods.laserio.MekansimIntegration#registerCapEvent"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.enderio.modconduits.ModdedConduits#onData"
        ]
      },
      "info": {
        "authors": "CrazyPants, tterrag, HenryLoenwind, MatthiasM, CyanideX, EpicSquid, Rover656, HypherionSA, agnor99, Ferri_Arnus, dphaldes",
        "classes": "52",
        "description": "Adding AE2, RS2 and Mekanism conduits to Ender IO.",
        "displayName": "Ender IO Modded Conduits",
        "file": "enderio-7.1.6-alpha.jar",
        "jarInJar": "com.enderio.enderio-conduits-modded-7.1.6-alpha.jar",
        "license": "CC0",
        "package": "com.enderio.modconduits",
        "version": "7.1.6-alpha"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.enderio.modconduits.mods.mekanism.ChemicalFilterScreen"
        ],
        "net.minecraft.data.DataProvider": [
          "com.enderio.modconduits.data.ModConduitRecipeProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.enderio.modconduits.mods.mekanism.ChemicalFilterItem"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Has Capability Providers",
        "Localization",
        "Uses Data Generators"
      ]
    },
    "enderio_machines": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.enderio.machines.mixin.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "com.google.common.collect.ImmutableMultimap$Builder",
                "com.google.common.collect.ImmutableMap$Builder",
                "net.neoforged.neoforge.common.conditions.WithConditions",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "collectRecipe",
              "raw": "collectRecipe(Lnet/minecraft/resources/ResourceLocation;Lcom/google/common/collect/ImmutableMultimap$Builder;Lcom/google/common/collect/ImmutableMap$Builder;Lnet/neoforged/neoforge/common/conditions/WithConditions;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "endercore": "7.1.6-alpha",
        "enderio_base": "7.1.6-alpha",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.58,)"
      },
      "events": {
        "com.enderio.base.api.travel.RegisterTravelRenderersEvent": [
          "com.enderio.machines.client.EnderIOMachinesClient#registerTravelRenderers"
        ],
        "net.neoforged.fml.event.lifecycle.InterModEnqueueEvent": [
          "com.enderio.machines.EnderIOMachines#sendIMC"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "com.enderio.machines.client.EnderIOMachinesClient#customModelLoaders"
        ],
        "net.neoforged.neoforge.client.event.MovementInputUpdateEvent": [
          "com.enderio.machines.client.MachinesClientEvents#movementInputUpdate"
        ],
        "net.neoforged.neoforge.client.event.RecipesUpdatedEvent": [
          "com.enderio.machines.common.recipe.RecipeCaches#onRecipesUpdated",
          "com.enderio.machines.common.blocks.soul_engine.SoulEngineBlockEntity#onReload",
          "com.enderio.machines.common.blocks.slicer.SlicerRecipeManager#onRecipesUpdated",
          "com.enderio.machines.common.blockentity.solar.SolarPanelBlockEntity#onReload"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "com.enderio.machines.client.EnderIOMachinesClient#registerOverlays"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "com.enderio.machines.client.EnderIOMachinesClient#registerClientExtensions"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.enderio.machines.EnderIOMachines#gatherData"
        ],
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "com.enderio.machines.common.souldata.SpawnerSoul#addResource",
          "com.enderio.machines.common.souldata.EngineSoul#addResource",
          "com.enderio.machines.common.souldata.SolarSoul#addResource",
          "com.enderio.machines.common.recipe.RecipeCaches#registerReloadListener",
          "com.enderio.machines.common.blocks.slicer.SlicerRecipeManager#registerReloadListener"
        ],
        "net.neoforged.neoforge.event.TagsUpdatedEvent": [
          "com.enderio.machines.common.blocks.powered_spawner.SpawnerMachineTask#reloadTags"
        ],
        "net.neoforged.neoforge.event.entity.EntityTeleportEvent": [
          "com.enderio.machines.common.obelisk.InhibitorObeliskManager#onTeleportEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.FinalizeSpawnEvent": [
          "com.enderio.machines.common.obelisk.RelocatorObeliskManager#onSpawnEvent",
          "com.enderio.machines.common.obelisk.AversionObeliskManager#onSpawnEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.AdvancementEvent$AdvancementEarnEvent": [
          "com.enderio.machines.common.block.CapacitorBankBlock#onAdvancement"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.enderio.machines.client.MachinesClientEvents#blockClick",
          "com.enderio.machines.common.block.CapacitorBankBlock#rightClickBlock"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickEmpty": [
          "com.enderio.machines.client.MachinesClientEvents#emptyClick"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "com.enderio.machines.client.MachinesClientEvents#itemClick"
        ],
        "net.neoforged.neoforge.event.entity.player.UseItemOnBlockEvent": [
          "com.enderio.machines.common.blocks.base.block.WrenchableBlockHandler#onItemUse"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.enderio.machines.common.init.MachineNetwork#register"
        ],
        "net.neoforged.neoforge.registries.datamaps.RegisterDataMapTypesEvent": [
          "com.enderio.machines.common.init.MachineDataMaps#registerDataMap"
        ]
      },
      "info": {
        "authors": "CrazyPants, tterrag, HenryLoenwind, MatthiasM, CyanideX, EpicSquid, Rover656, HypherionSA, agnor99, Ferri_Arnus, dphaldes",
        "classes": "468",
        "description": "The machines module for Ender IO",
        "displayName": "Ender IO Machines",
        "file": "enderio-7.1.6-alpha.jar",
        "jarInJar": "com.enderio.enderio-machines-7.1.6-alpha.jar",
        "license": "CC0",
        "package": "com.enderio.machines",
        "version": "7.1.6-alpha"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.enderio.machines.client.gui.screen.SoulEngineScreen",
          "com.enderio.machines.client.gui.screen.VacuumChestScreen",
          "com.enderio.machines.client.gui.screen.PaintingMachineScreen",
          "com.enderio.machines.client.gui.screen.InhibitorObeliskScreen",
          "com.enderio.machines.client.gui.screen.SagMillScreen",
          "com.enderio.machines.client.gui.screen.base.MachineScreen",
          "com.enderio.machines.client.gui.screen.base.LegacyMachineScreen",
          "com.enderio.machines.client.gui.screen.VatScreen",
          "com.enderio.machines.client.gui.screen.RelocatorObeliskScreen",
          "com.enderio.machines.client.gui.screen.XPObeliskScreen",
          "com.enderio.machines.client.gui.screen.XPVacuumScreen",
          "com.enderio.machines.client.gui.screen.SlicerScreen",
          "com.enderio.machines.client.gui.screen.WiredChargerScreen",
          "com.enderio.machines.client.gui.screen.SoulBinderScreen",
          "com.enderio.machines.client.gui.screen.AversionObeliskScreen",
          "com.enderio.machines.client.gui.screen.ImpulseHopperScreen",
          "com.enderio.machines.client.gui.screen.CrafterScreen",
          "com.enderio.machines.client.gui.screen.FluidTankScreen",
          "com.enderio.machines.client.gui.screen.TravelAnchorScreen",
          "com.enderio.machines.client.gui.screen.CapacitorBankScreen",
          "com.enderio.machines.client.gui.screen.DrainScreen",
          "com.enderio.machines.client.gui.screen.EnchanterScreen",
          "com.enderio.machines.client.gui.screen.StirlingGeneratorScreen",
          "com.enderio.machines.client.gui.screen.PrimitiveAlloySmelterScreen",
          "com.enderio.machines.client.gui.screen.PoweredSpawnerScreen",
          "com.enderio.machines.client.gui.screen.AlloySmelterScreen"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "com.enderio.machines.client.rendering.item.FluidTankBEWLR"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.enderio.machines.client.rendering.blockentity.FluidTankBER",
          "com.enderio.machines.client.rendering.blockentity.CapacitorBankBER",
          "com.enderio.machines.client.rendering.blockentity.XPObeliskBER",
          "com.enderio.machines.client.rendering.blockentity.ObeliskBER"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "com.enderio.machines.client.rendering.model.IOOverlayBakedModel"
        ],
        "net.minecraft.data.DataProvider": [
          "com.enderio.machines.data.souldata.SoulDataProvider",
          "com.enderio.machines.data.reagentdata.ReagentDataProvider$TagsProvider",
          "com.enderio.machines.data.reagentdata.ReagentDataProvider",
          "com.enderio.machines.data.reagentdata.ReagentDataProvider$DataProvider",
          "com.enderio.machines.data.tag.MachineEntityTypeTagsProvider",
          "com.enderio.machines.data.recipes.TankRecipeProvider",
          "com.enderio.machines.data.recipes.EnchanterRecipeProvider",
          "com.enderio.machines.data.recipes.FermentingRecipeProvider",
          "com.enderio.machines.data.recipes.SagMillRecipeProvider",
          "com.enderio.machines.data.recipes.MachineRecipeProvider",
          "com.enderio.machines.data.recipes.PaintingRecipeProvider",
          "com.enderio.machines.data.recipes.SlicingRecipeProvider",
          "com.enderio.machines.data.recipes.AlloyRecipeProvider",
          "com.enderio.machines.data.recipes.SoulBindingRecipeProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.enderio.machines.common.item.CapacitorBankItem",
          "com.enderio.machines.common.blocks.fluid_tank.FluidTankBlockItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.enderio.machines.common.integrations.jei.util.WrappedEnchanterRecipe",
          "com.enderio.machines.common.blocks.vat.FermentingRecipe",
          "com.enderio.machines.common.blocks.soul_binder.SoulBindingRecipe",
          "com.enderio.machines.common.blocks.enchanter.EnchanterRecipe",
          "com.enderio.machines.common.blocks.alloy.AlloySmeltingRecipe",
          "com.enderio.machines.common.blocks.base.MachineRecipe",
          "com.enderio.machines.common.blocks.sag_mill.SagMillingRecipe",
          "com.enderio.machines.common.blocks.slicer.SlicingRecipe",
          "com.enderio.machines.common.blocks.fluid_tank.TankRecipe",
          "com.enderio.machines.common.blocks.painting.PaintingRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.enderio.machines.common.block.LegacyMachineBlock",
          "com.enderio.machines.common.block.CapacitorBankBlock",
          "com.enderio.machines.common.block.SolarPanelBlock",
          "com.enderio.machines.common.block.LegacyProgressMachineBlock",
          "com.enderio.machines.common.blocks.vat.VatBlock",
          "com.enderio.machines.common.blocks.enchanter.EnchanterBlock",
          "com.enderio.machines.common.blocks.base.block.MachineBlock",
          "com.enderio.machines.common.blocks.base.block.ProgressMachineBlock",
          "com.enderio.machines.common.blocks.fluid_tank.FluidTankBlock",
          "com.enderio.machines.common.blocks.travel_anchor.TravelAnchorBlock",
          "com.enderio.machines.common.blocks.travel_anchor.PaintedTravelAnchorBlock",
          "com.enderio.machines.common.blocks.block_detector.BlockDetectorBlock"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "com.enderio.machines.client.rendering.model.IOOverlayBakedModel$Loader"
        ]
      },
      "modifies": [
        "net.minecraft.world.item.crafting.AbstractCookingRecipe",
        "net.minecraft.world.item.crafting.RecipeManager"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Data Map Types",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Model Loaders",
        "Custom Network Packets",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Handles Right Clicks with Empty Hands (Client-side)",
        "Handles Right Clicks with Items",
        "Listens to Recipe Updates",
        "Listens to Right Click Block Events",
        "Listens to Tag Updates",
        "Localization",
        "Modifies Entity Spawning",
        "Modifies Methods",
        "Uses Data Generators"
      ]
    },
    "enderstorage": {
      "dependencies": {
        "codechickenlib": "[4.6.0,5.0.0)",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.72,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "codechicken.enderstorage.network.TankSynchroniser#tickEnd"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": [
          "codechicken.enderstorage.network.TankSynchroniser#onPlayerChangedDimension",
          "codechicken.enderstorage.manager.EnderStorageManager$EnderStorageSaveHandler#onPlayerChangedDimension"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "codechicken.enderstorage.network.TankSynchroniser#onPlayerLogin",
          "codechicken.enderstorage.manager.EnderStorageManager$EnderStorageSaveHandler#onPlayerLogin"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "codechicken.enderstorage.network.TankSynchroniser#onPlayerLogout"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Load": [
          "codechicken.enderstorage.network.TankSynchroniser#onWorldLoad",
          "codechicken.enderstorage.manager.EnderStorageManager$EnderStorageSaveHandler#onWorldLoad"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Save": [
          "codechicken.enderstorage.manager.EnderStorageManager$EnderStorageSaveHandler#onWorldSave"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "codechicken.enderstorage.network.TankSynchroniser#onWorldUnload"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "codechicken.enderstorage.network.TankSynchroniser#tickEnd"
        ]
      },
      "info": {
        "authors": "ChickenBones, covers1624",
        "classes": "74",
        "description": "Stores your stuff in the END!\n    Credits: Ecu - original idea, design, chest and pouch texture\n    Rosethorns - tank model\n    Soaryn - tank texture\n\t",
        "displayName": "EnderStorage",
        "file": "EnderStorage-1.21.1-2.13.0.191.jar",
        "license": "The MIT License (MIT)",
        "package": "codechicken.enderstorage",
        "updateUrl": "https://version-check.covers1624.net/check/?mod=EnderStorage&mc=1.21.1",
        "version": "2.13.0.191"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "codechicken.enderstorage.client.gui.GuiEnderItemStorage"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "codechicken.enderstorage.client.render.tile.RenderTileEnderChest",
          "codechicken.enderstorage.client.render.tile.RenderTileEnderTank"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "codechicken.enderstorage.client.render.item.EnderTankItemRender",
          "codechicken.enderstorage.client.render.item.EnderChestItemRender"
        ],
        "net.minecraft.data.DataProvider": [
          "codechicken.enderstorage.init.DataGenerators$ItemModels",
          "codechicken.enderstorage.init.DataGenerators$BlockStates",
          "codechicken.enderstorage.init.DataGenerators$Recipes",
          "codechicken.enderstorage.init.DataGenerators$BlockTagGen"
        ],
        "net.minecraft.world.item.Item": [
          "codechicken.enderstorage.item.ItemEnderPouch",
          "codechicken.enderstorage.item.ItemEnderStorage"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "codechicken.enderstorage.recipe.CreateRecipe",
          "codechicken.enderstorage.recipe.ReColourRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "codechicken.enderstorage.block.BlockEnderTank",
          "codechicken.enderstorage.block.BlockEnderChest",
          "codechicken.enderstorage.block.BlockEnderStorage"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Items",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Listens to Dimension Change Events",
        "Listens to Player Login Events",
        "Listens to Player Logout Events",
        "Localization",
        "Runs Client Tick Logic",
        "Runs Server Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "engineeredcompatibility": {
      "dependencies": {
        "immersiveengineering": "[12.0.0,)",
        "minecraft": "[1.21.1,1.21.2)",
        "neoforge": "[1,)"
      },
      "info": {
        "authors": "Voidsong Dragonfly",
        "classes": "0",
        "description": "Engineered Compatibility: A datapack-mod adding compatibility between other mods and Immersive Engineering machines, items, and processes.\n",
        "displayName": "Engineered Compatibility",
        "file": "engineeredcompatibility-4.0.1.jar",
        "license": "MIT",
        "loader": "lowcodefml",
        "version": "4.0.1"
      },
      "summary": [
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "entangled": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.supermartijn642.entangled.mixin.neoforge.RegisterCapabilitiesEventMixin",
            "method": {
              "argTypes": [
                "net.neoforged.neoforge.capabilities.BlockCapability",
                "net.minecraft.world.level.block.entity.BlockEntityType",
                "net.neoforged.neoforge.capabilities.ICapabilityProvider",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "registerBlockEntity",
              "raw": "registerBlockEntity(Lnet/neoforged/neoforge/capabilities/BlockCapability;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/neoforged/neoforge/capabilities/ICapabilityProvider;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.supermartijn642.entangled.mixin.neoforge.CapabilityHooksMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent"
              ],
              "name": "init",
              "raw": "init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/neoforged/neoforge/capabilities/RegisterCapabilitiesEvent;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/neoforged/fml/ModLoader;postEventWrapContainerInModOrder(Lnet/neoforged/bus/api/Event;)V}]"
            }
          },
          {
            "class": "com.supermartijn642.entangled.mixin.neoforge.BlockCapabilityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "java.lang.Class",
                "java.lang.Class",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "create",
              "raw": "create(Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Class;Ljava/lang/Class;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.21.2)",
        "neoforge": "[21.0.78-beta,)",
        "supermartijn642configlib": "[1.1.6,)",
        "supermartijn642corelib": "[1.1.17,1.2.0)"
      },
      "events": {
        "com.supermartijn642.core.render.RenderWorldEvent": [
          "com.supermartijn642.entangled.EntangledClient$Events#onDrawPlayerEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "com.supermartijn642.entangled.EntangledClient$Events#onBlockHighlight"
        ]
      },
      "info": {
        "authors": "SuperMartijn642",
        "classes": "28",
        "description": "Entangled allows you to 'entangle' two blocks together!",
        "displayName": "Entangled",
        "file": "entangled-1.3.20a-neoforge-mc1.21.jar",
        "license": "All rights reserved",
        "package": "com.supermartijn642.entangled",
        "version": "1.3.20+a"
      },
      "inheritance": {
        "net.minecraft.world.item.Item": [
          "com.supermartijn642.entangled.EntangledBinderItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.supermartijn642.entangled.EntangledBlock"
        ]
      },
      "modifies": [
        "net.neoforged.neoforge.capabilities.BlockCapability",
        "net.neoforged.neoforge.capabilities.CapabilityHooks",
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "euphoria_patcher": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "mc.euphoria_patches.euphoria_patcher.mixin.EuphoriaPatcherMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onBootstrap",
              "raw": "onBootstrap(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.20.5,)",
        "neoforge": "[20.5,)"
      },
      "info": {
        "authors": "SpacEagle17, isuewo",
        "classes": "32",
        "description": "A mod that applies the Euphoria Patches add-on to Complementary Shaders.\nReport issues on discord!",
        "displayName": "Euphoria Patcher",
        "file": "EuphoriaPatcher-1.5.2-r5.4-neoforge.jar",
        "license": "MPL-2.0",
        "package": "io.sigpipe.jbsdiff",
        "version": "1.5.2-r5.4-neoforge"
      },
      "modifies": [
        "net.minecraft.server.Bootstrap"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "explorerscompass": {
      "dependencies": {
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.chaosthedude.explorerscompass.client.ExplorersCompassClient#clientInit"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "com.chaosthedude.explorerscompass.client.ExplorersCompassClient#registerOverlay"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "com.chaosthedude.explorerscompass.registry.ExplorersCompassRegistry#registerItems"
        ]
      },
      "info": {
        "authors": "ChaosTheDude",
        "classes": "34",
        "description": "    Search for and locate structures anywhere in the world.\n    ",
        "displayName": "Explorer's Compass",
        "file": "ExplorersCompass-1.21.1-3.0.3-neoforge.jar",
        "license": "CC BY-NC-SA 4.0",
        "package": "com.chaosthedude.explorerscompass",
        "version": "1.21.1-3.0.3-neoforge"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.chaosthedude.explorerscompass.gui.ExplorersCompassScreen"
        ],
        "net.minecraft.world.item.Item": [
          "com.chaosthedude.explorerscompass.items.ExplorersCompassItem"
        ]
      },
      "summary": [
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "explosiveenhancement": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.xylonity.explosiveenhancement.mixin.ParticleManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.particles.ParticleOptions",
                "double",
                "double",
                "double",
                "double",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onMakeParticle",
              "raw": "onMakeParticle(Lnet/minecraft/core/particles/ParticleOptions;DDDDDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/core/Registry;getKey(Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.xylonity.explosiveenhancement.mixin.ExplosionMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "finalizeExplosion",
              "raw": "finalizeExplosion(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/Level;addParticle(Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.80,)"
      },
      "info": {
        "authors": "Xylonity",
        "classes": "26",
        "description": "Explosive Enhancement.",
        "displayName": "Explosive Enhancement",
        "file": "explosiveenhancement-neoforge-1.21.1-1.1.1-client.jar",
        "license": "GNU GPL v3.0",
        "package": "dev.xylonity.explosiveenhancement",
        "version": "1.1.1"
      },
      "inheritance": {
        "net.minecraft.client.particle.Particle": [
          "dev.xylonity.explosiveenhancement.particle.custom.UnderwaterSparksParticle",
          "dev.xylonity.explosiveenhancement.particle.custom.UnderwaterBlastwaveParticle",
          "dev.xylonity.explosiveenhancement.particle.custom.SparksParticle",
          "dev.xylonity.explosiveenhancement.particle.custom.SmokeParticle",
          "dev.xylonity.explosiveenhancement.particle.custom.ShockwaveParticle",
          "dev.xylonity.explosiveenhancement.particle.custom.FireballParticle",
          "dev.xylonity.explosiveenhancement.particle.custom.BubbleParticle",
          "dev.xylonity.explosiveenhancement.particle.custom.BlastWaveParticle"
        ]
      },
      "modifies": [
        "net.minecraft.client.particle.ParticleEngine",
        "net.minecraft.world.level.Explosion"
      ],
      "summary": [
        "Custom Particles",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "extendedcrafting": {
      "dependencies": {
        "cucumber": "[8.0.1,)",
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "com.blakebr0.cucumber.event.RecipeManagerLoadingEvent": [
          "com.blakebr0.extendedcrafting.crafting.DynamicRecipeManager#onRegisterRecipes"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "com.blakebr0.extendedcrafting.ExtendedCrafting#onCommonSetup"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "com.blakebr0.extendedcrafting.handler.RegisterCapabilityHandler#onRegisterCapabilities"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.blakebr0.extendedcrafting.client.ModTESRs#onRegisterBlockEntityRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "com.blakebr0.extendedcrafting.client.handler.ColorHandler#onBlockColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "com.blakebr0.extendedcrafting.client.handler.ColorHandler#onItemColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.blakebr0.extendedcrafting.client.ModMenuScreens#onRegisterMenuScreens"
        ],
        "net.neoforged.neoforge.client.event.RegisterRecipeBookCategoriesEvent": [
          "com.blakebr0.extendedcrafting.client.ModRecipeBookCategories#onRegisterRecipeBookCategories"
        ],
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "com.blakebr0.extendedcrafting.init.ModReloadListeners#onAddReloadListeners"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "com.blakebr0.extendedcrafting.singularity.SingularityRegistry#onDatapackSync"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.blakebr0.extendedcrafting.network.NetworkHandler#onRegisterPayloadHandlers"
        ]
      },
      "info": {
        "authors": "BlakeBr0",
        "classes": "180",
        "description": "    Adds some new ways to craft items, as well as extra crafting items and utilities.\n    ",
        "displayName": "Extended Crafting",
        "file": "ExtendedCrafting-1.21.1-7.0.2.jar",
        "latest": "7.0.3",
        "license": "MIT",
        "package": "com.blakebr0.extendedcrafting",
        "updateUrl": "https://api.blakesmods.com/v2/mods/extendedcrafting/1.21/updates",
        "version": "7.0.2"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.blakebr0.extendedcrafting.client.screen.UltimateTableScreen",
          "com.blakebr0.extendedcrafting.client.screen.UltimateAutoTableScreen",
          "com.blakebr0.extendedcrafting.client.screen.FluxCrafterScreen",
          "com.blakebr0.extendedcrafting.client.screen.FluxAlternatorScreen",
          "com.blakebr0.extendedcrafting.client.screen.EnderCrafterScreen",
          "com.blakebr0.extendedcrafting.client.screen.EliteTableScreen",
          "com.blakebr0.extendedcrafting.client.screen.EliteAutoTableScreen",
          "com.blakebr0.extendedcrafting.client.screen.CraftingCoreScreen",
          "com.blakebr0.extendedcrafting.client.screen.CompressorScreen",
          "com.blakebr0.extendedcrafting.client.screen.BasicTableScreen",
          "com.blakebr0.extendedcrafting.client.screen.BasicAutoTableScreen",
          "com.blakebr0.extendedcrafting.client.screen.AutoFluxCrafterScreen",
          "com.blakebr0.extendedcrafting.client.screen.AutoEnderCrafterScreen",
          "com.blakebr0.extendedcrafting.client.screen.AdvancedTableScreen",
          "com.blakebr0.extendedcrafting.client.screen.AdvancedAutoTableScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.blakebr0.extendedcrafting.client.tesr.TheUltimateBlockRenderer",
          "com.blakebr0.extendedcrafting.client.tesr.PedestalRenderer",
          "com.blakebr0.extendedcrafting.client.tesr.CraftingCoreRenderer",
          "com.blakebr0.extendedcrafting.client.tesr.CompressorRenderer"
        ],
        "net.minecraft.world.item.Item": [
          "com.blakebr0.extendedcrafting.item.UltimateSingularityItem",
          "com.blakebr0.extendedcrafting.item.SingularityItem",
          "com.blakebr0.extendedcrafting.item.RecipeMakerItem",
          "com.blakebr0.extendedcrafting.item.HandheldTableItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.blakebr0.extendedcrafting.crafting.recipe.UltimateSingularityRecipe",
          "com.blakebr0.extendedcrafting.crafting.recipe.ShapelessTableRecipe",
          "com.blakebr0.extendedcrafting.crafting.recipe.ShapelessFluxCrafterRecipe",
          "com.blakebr0.extendedcrafting.crafting.recipe.ShapelessEnderCrafterRecipe",
          "com.blakebr0.extendedcrafting.crafting.recipe.ShapedTableRecipe",
          "com.blakebr0.extendedcrafting.crafting.recipe.ShapedFluxCrafterRecipe",
          "com.blakebr0.extendedcrafting.crafting.recipe.ShapedEnderCrafterRecipe",
          "com.blakebr0.extendedcrafting.crafting.recipe.CompressorRecipe",
          "com.blakebr0.extendedcrafting.crafting.recipe.CombinationRecipe",
          "com.blakebr0.extendedcrafting.api.crafting.ITableRecipe",
          "com.blakebr0.extendedcrafting.api.crafting.IFluxCrafterRecipe",
          "com.blakebr0.extendedcrafting.api.crafting.IEnderCrafterRecipe",
          "com.blakebr0.extendedcrafting.api.crafting.ICompressorRecipe",
          "com.blakebr0.extendedcrafting.api.crafting.ICombinationRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.blakebr0.extendedcrafting.block.UltimateTableBlock",
          "com.blakebr0.extendedcrafting.block.UltimateAutoTableBlock",
          "com.blakebr0.extendedcrafting.block.TheUltimateBlock",
          "com.blakebr0.extendedcrafting.block.PedestalBlock",
          "com.blakebr0.extendedcrafting.block.FrameBlock",
          "com.blakebr0.extendedcrafting.block.FluxCrafterBlock",
          "com.blakebr0.extendedcrafting.block.FluxAlternatorBlock",
          "com.blakebr0.extendedcrafting.block.EnderCrafterBlock",
          "com.blakebr0.extendedcrafting.block.EnderAlternatorBlock",
          "com.blakebr0.extendedcrafting.block.EliteTableBlock",
          "com.blakebr0.extendedcrafting.block.EliteAutoTableBlock",
          "com.blakebr0.extendedcrafting.block.CraftingCoreBlock",
          "com.blakebr0.extendedcrafting.block.CompressorBlock",
          "com.blakebr0.extendedcrafting.block.BasicTableBlock",
          "com.blakebr0.extendedcrafting.block.BasicAutoTableBlock",
          "com.blakebr0.extendedcrafting.block.AutoFluxCrafterBlock",
          "com.blakebr0.extendedcrafting.block.AutoEnderCrafterBlock",
          "com.blakebr0.extendedcrafting.block.AdvancedTableBlock",
          "com.blakebr0.extendedcrafting.block.AdvancedAutoTableBlock"
        ]
      },
      "summary": [
        "Adds Reload Listeners",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Data Pack Sync",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Network Packets",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Has Capability Providers",
        "Localization",
        "Patchouli Guide Book",
        "Uses Access Transformers"
      ]
    },
    "extremesoundmuffler": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.leobeliik.extremesoundmuffler.mixins.SoundMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.resources.sounds.SoundInstance",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "esm_clearSound",
              "raw": "esm_clearSound(Lnet/minecraft/client/resources/sounds/SoundInstance;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.leobeliik.extremesoundmuffler.mixins.SoundMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.resources.sounds.SoundInstance",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "esm_clearTickableSound",
              "raw": "esm_clearTickableSound(Lnet/minecraft/client/resources/sounds/SoundInstance;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.leobeliik.extremesoundmuffler.mixins.SoundMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.resources.sounds.SoundInstance",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "esm_captureTickableSoundVolume",
              "raw": "esm_captureTickableSoundVolume(Lnet/minecraft/client/resources/sounds/SoundInstance;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.leobeliik.extremesoundmuffler.mixins.SoundMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.resources.sounds.SoundInstance",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "esm_captureSoundVolume",
              "raw": "esm_captureSoundVolume(Lnet/minecraft/client/resources/sounds/SoundInstance;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.leobeliik.extremesoundmuffler.mixins.InventoryScreenMixin",
            "method": {
              "argTypes": [
                "double",
                "double",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "esm_onMouseReleased",
              "raw": "esm_onMouseReleased(DDILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.leobeliik.extremesoundmuffler.mixins.InventoryScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "esm_inventoryScreenRender",
              "raw": "esm_inventoryScreenRender(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.leobeliik.extremesoundmuffler.mixins.InventoryScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "esm_inventoryScreenInit",
              "raw": "esm_inventoryScreenInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.leobeliik.extremesoundmuffler.mixins.CreativeInventoryScreenMixin",
            "method": {
              "argTypes": [
                "double",
                "double",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "esm_onMouseReleased",
              "raw": "esm_onMouseReleased(DDILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.leobeliik.extremesoundmuffler.mixins.CreativeInventoryScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "esm_creativeInventoryScreenRender",
              "raw": "esm_creativeInventoryScreenRender(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.leobeliik.extremesoundmuffler.mixins.CreativeInventoryScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "esm_creativeInventoryScreenInit",
              "raw": "esm_creativeInventoryScreenInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.143,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "com.leobeliik.extremesoundmuffler.NeoForgeConfig#onLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "com.leobeliik.extremesoundmuffler.NeoForgeConfig#onReload"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingIn": [
          "com.leobeliik.extremesoundmuffler.SoundMufflerNeoForge#onPlayerJoin"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "com.leobeliik.extremesoundmuffler.SoundMufflerNeoForge#onKeyInput"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "com.leobeliik.extremesoundmuffler.SoundMufflerNeoForge$ClientModListener#keyRegistry"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonReleased$Post": [
          "com.leobeliik.extremesoundmuffler.SoundMufflerNeoForge#onMouseRelease"
        ]
      },
      "info": {
        "authors": "LeoBeliik",
        "classes": "22",
        "description": "This mod allows you to muffle (almost) any sound selectively,\nallowing you to choose the volume of the sound you want between mute and 90%.\nThis mod also works Clientside only.",
        "displayName": "Extreme Sound Muffler",
        "file": "ExtremeSoundMuffler-3.48.3_NeoForge-1.21.jar",
        "license": "GNU LESSER GENERAL PUBLIC LICENSE",
        "package": "com.leobeliik.extremesoundmuffler",
        "version": "3.48.3"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.leobeliik.extremesoundmuffler.mixins.InventoryScreenMixin",
          "com.leobeliik.extremesoundmuffler.mixins.CreativeInventoryScreenMixin",
          "com.leobeliik.extremesoundmuffler.gui.MufflerScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.screens.inventory.CreativeModeInventoryScreen",
        "net.minecraft.client.gui.screens.inventory.InventoryScreen",
        "net.minecraft.client.sounds.SoundEngine"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Key Mappings",
        "Localization",
        "Modifies Methods"
      ]
    },
    "fabric_api": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.115,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "0",
        "description": "Core API module providing key hooks and intercompatibility features.",
        "displayName": "Forgified Fabric API",
        "file": "forgified-fabric-api-0.107.0+2.0.23+1.21.1.jar",
        "license": "Apache-2.0",
        "loader": "lowcodefml",
        "version": "0.107.0+2.0.23+1.21.1"
      }
    },
    "fabric_api_base": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.133-beta,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "17",
        "description": "Contains the essentials for Fabric API modules.",
        "displayName": "Forgified Fabric API Base",
        "file": "owo-lib-neoforge-0.12.15-beta.12+1.21.jar",
        "jarInJar": "fabric-api-base-0.4.42+d1308dedd1.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.api.util",
        "version": "0.4.42+d1308dedd1"
      }
    },
    "fabric_api_lookup_api_v1": {
      "dependencies": {
        "fabric_api_base": "*",
        "fabric_lifecycle_events_v1": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "29",
        "description": "A universal way to expose and query APIs",
        "displayName": "Forgified Fabric API Lookup API (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-api-lookup-api-v1-1.6.69+c21168c319.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.lookup",
        "version": "1.6.69+c21168c319"
      },
      "modifies": [
        "net.minecraft.server.level.ServerLevel"
      ]
    },
    "fabric_biome_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.biome.TheEndBiomeSourceMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "net.minecraft.world.level.biome.Climate$Sampler",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getWeightedEndBiome",
              "raw": "getWeightedEndBiome(IIILnet/minecraft/world/level/biome/Climate$Sampler;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.biome.TheEndBiomeSourceMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.Holder",
                "net.minecraft.core.Holder",
                "net.minecraft.core.Holder",
                "net.minecraft.core.Holder",
                "net.minecraft.core.Holder",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.biome.TheEndBiomeSourceMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.HolderGetter",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "clearLookup",
              "raw": "clearLookup(Lnet/minecraft/core/HolderGetter;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.biome.TheEndBiomeSourceMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.HolderGetter",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "rememberLookup",
              "raw": "rememberLookup(Lnet/minecraft/core/HolderGetter;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.biome.TheEndBiomeSourceMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "modifyCodec",
              "raw": "modifyCodec(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.biome.NetherBiomePresetMixin",
            "method": {
              "argTypes": [
                "java.util.function.Function",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "apply",
              "raw": "apply(Ljava/util/function/Function;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.biome.NoiseConfigMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.NoiseGeneratorSettings",
                "net.minecraft.core.HolderGetter",
                "long",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/core/HolderGetter;JLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.biome.ChunkNoiseSamplerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.NoiseRouter",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "createMultiNoiseSampler",
              "raw": "createMultiNoiseSampler(Lnet/minecraft/world/level/levelgen/NoiseRouter;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.biome.ChunkNoiseSamplerMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.world.level.levelgen.RandomState",
                "int",
                "int",
                "net.minecraft.world.level.levelgen.NoiseSettings",
                "net.minecraft.world.level.levelgen.DensityFunctions$BeardifierOrMarker",
                "net.minecraft.world.level.levelgen.NoiseGeneratorSettings",
                "net.minecraft.world.level.levelgen.Aquifer$FluidPicker",
                "net.minecraft.world.level.levelgen.blending.Blender",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(ILnet/minecraft/world/level/levelgen/RandomState;IILnet/minecraft/world/level/levelgen/NoiseSettings;Lnet/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;Lnet/minecraft/world/level/levelgen/blending/Blender;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "41",
        "description": "Hooks for adding biomes to the default world generator.",
        "displayName": "Forgified Fabric Biome API (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-biome-api-v1-13.0.30+1e62d33c19.jar",
        "license": "Apache-2.0",
        "package": "org.sinytra.fabric.biome_api",
        "version": "13.0.30+1e62d33c19"
      },
      "modifies": [
        "net.minecraft.world.level.biome.BiomeSource",
        "net.minecraft.world.level.biome.Climate$Sampler",
        "net.minecraft.world.level.biome.MultiNoiseBiomeSourceParameterList$Preset$1",
        "net.minecraft.world.level.biome.TheEndBiomeSource",
        "net.minecraft.world.level.levelgen.NoiseChunk",
        "net.minecraft.world.level.levelgen.RandomState"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_block_api_v1": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "6",
        "description": "Hooks for blocks",
        "displayName": "Forgified Fabric Block API (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-block-api-v1-1.0.22+a6e994cd19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.mixin.block",
        "version": "1.0.22+a6e994cd19"
      },
      "modifies": [
        "net.neoforged.neoforge.common.extensions.IBlockExtension",
        "net.neoforged.neoforge.common.extensions.IBlockStateExtension"
      ]
    },
    "fabric_block_view_api_v2": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.blockview.client.ChunkRendererRegionBuilderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.SectionPos",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef"
              ],
              "name": "createDataMap",
              "raw": "createDataMap(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/SectionPos;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;)V"
            },
            "params": {
              "at": "[{value=RETURN, ordinal=1}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.blockview.client.ChunkRendererRegionBuilderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.SectionPos",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.client.renderer.chunk.RenderRegionCache$ChunkInfo",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef"
              ],
              "name": "copyDataForChunk",
              "raw": "copyDataForChunk(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/SectionPos;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo;renderChunk()Lnet/minecraft/client/renderer/chunk/RenderChunk;}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "12",
        "description": "Hooks for block views",
        "displayName": "Forgified Fabric BlockView API (v2)",
        "file": "iris-neoforge-1.8.6+mc1.21.1.jar",
        "jarInJar": "fabric-block-view-api-v2-1.0.10+9afaaf8c19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.mixin.blockview",
        "version": "1.0.10+9afaaf8c19"
      },
      "modifies": [
        "net.minecraft.client.renderer.chunk.RenderChunkRegion",
        "net.minecraft.client.renderer.chunk.RenderRegionCache",
        "net.minecraft.world.level.BlockGetter",
        "net.minecraft.world.level.LevelReader",
        "net.minecraft.world.level.block.entity.BlockEntity"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_blockrenderlayer_v1": {
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "9",
        "description": "Registration utility for block and fluid render layers.",
        "displayName": "Forgified Fabric BlockRenderLayer Registration (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-blockrenderlayer-v1-1.1.52+b089b4bd19.jar",
        "license": "Apache-2.0",
        "package": "org.sinytra.fabric.blockrenderlayer",
        "version": "1.1.52+b089b4bd19"
      },
      "modifies": [
        "net.minecraft.client.renderer.ItemBlockRenderTypes",
        "net.neoforged.neoforge.client.ChunkRenderTypeSet"
      ]
    },
    "fabric_client_tags_api_v1": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "7",
        "description": "Adds the ability to load tags from the local mods.",
        "displayName": "Forgified Fabric Client Tags",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-client-tags-api-v1-1.1.15+e053909619.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.tag.client",
        "version": "1.1.15+e053909619"
      }
    },
    "fabric_command_api_v2": {
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "16",
        "description": "Adds command-related hooks.",
        "displayName": "Forgified Fabric Command API (v2)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-command-api-v2-2.2.28+36d727be19.jar",
        "license": "Apache-2.0",
        "package": "org.sinytra.fabric.command_api",
        "version": "2.2.28+36d727be19"
      },
      "modifies": [
        "net.minecraft.client.multiplayer.ClientSuggestionProvider",
        "net.minecraft.commands.arguments.selector.EntitySelectorParser",
        "net.neoforged.neoforge.client.ClientCommandSourceStack"
      ],
      "summary": [
        "Uses Access Transformers"
      ]
    },
    "fabric_content_registries_v0": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.content.registry.FireBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getFabricSpreadChance",
              "raw": "getFabricSpreadChance(Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.content.registry.FireBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getFabricBurnChance",
              "raw": "getFabricBurnChance(Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.content.registry.FireBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockBehaviour$Properties",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterConstruct",
              "raw": "afterConstruct(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.content.registry.BaseRegistryMixin",
            "method": {
              "argTypes": [
                "net.neoforged.neoforge.registries.datamaps.DataMapType",
                "net.minecraft.resources.ResourceKey",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getDataMapConsideringFAPI",
              "raw": "getDataMapConsideringFAPI(Lnet/neoforged/neoforge/registries/datamaps/DataMapType;Lnet/minecraft/resources/ResourceKey;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.content.registry.HoneycombItemMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "createUnwaxedToWaxedMap",
              "raw": "createUnwaxedToWaxedMap(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.content.registry.OxidizableMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "createOxidationLevelIncreasesMap",
              "raw": "createOxidationLevelIncreasesMap(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.content.registry.BrewingRecipeRegistryBuilderMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "build",
              "raw": "build(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.content.registry.LandPathNodeMakerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.level.block.state.BlockState"
              ],
              "name": "getCommonNodeType",
              "raw": "getCommonNodeType(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/level/block/state/BlockState;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/block/state/BlockState;getBlock()Lnet/minecraft/world/level/block/Block;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.content.registry.PathContextMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.core.BlockPos"
              ],
              "name": "onGetNodeType",
              "raw": "onGetNodeType(IIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/core/BlockPos;)V"
            },
            "params": {
              "at": "[{value=INVOKE_ASSIGN, target=Lnet/minecraft/core/BlockPos$MutableBlockPos;set(III)Lnet/minecraft/core/BlockPos$MutableBlockPos;}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "fabric_lifecycle_events_v1": "*",
        "fabric_resource_loader_v0": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "events": {
        "net.neoforged.neoforge.event.furnace.FurnaceFuelBurnTimeEvent": [
          "net.fabricmc.fabric.impl.content.registry.FuelRegistryImpl#getBurnTime"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BlockToolModificationEvent": [
          "net.fabricmc.fabric.api.registry.TillableBlockRegistry#modify"
        ],
        "net.neoforged.neoforge.registries.datamaps.DataMapsUpdatedEvent": [
          "net.fabricmc.fabric.impl.content.registry.FuelRegistryImpl#reload"
        ]
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "39",
        "description": "Adds registries for vanilla mechanics that are missing them.",
        "displayName": "Forgified Fabric Content Registries (v0)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-content-registries-v0-8.0.17+0a0c14ff19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.api.registry",
        "version": "8.0.17+0a0c14ff19"
      },
      "modifies": [
        "net.minecraft.world.entity.ai.behavior.GiveGiftToHero",
        "net.minecraft.world.entity.ai.behavior.WorkAtComposter",
        "net.minecraft.world.entity.npc.Villager",
        "net.minecraft.world.item.AxeItem",
        "net.minecraft.world.item.HoeItem",
        "net.minecraft.world.item.HoneycombItem",
        "net.minecraft.world.item.ShovelItem",
        "net.minecraft.world.item.alchemy.PotionBrewing$Builder",
        "net.minecraft.world.level.block.FireBlock",
        "net.minecraft.world.level.block.WeatheringCopper",
        "net.minecraft.world.level.pathfinder.PathfindingContext",
        "net.minecraft.world.level.pathfinder.WalkNodeEvaluator",
        "net.neoforged.neoforge.registries.BaseMappedRegistry"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Maps"
      ]
    },
    "fabric_convention_tags_v1": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "12",
        "description": "Contains common tags used by mods for vanilla things.",
        "displayName": "Forgified Fabric Convention Tags",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-convention-tags-v1-2.1.1+7f945d5b19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.tag.convention",
        "version": "2.1.1+7f945d5b19"
      }
    },
    "fabric_convention_tags_v2": {
      "dependencies": {
        "fabric_lifecycle_events_v1": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "16",
        "description": "Contains common tags used by mods for better inter-mod compatibility.",
        "displayName": "Forgified Fabric Convention Tags (v2)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-convention-tags-v2-2.9.1+231468e519.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.api.tag",
        "version": "2.9.1+231468e519"
      },
      "modifies": [
        "net.minecraft.tags.TagKey"
      ],
      "summary": [
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "fabric_data_attachment_api_v1": {
      "dependencies": {
        "fabric_entity_events_v1": "*",
        "fabric_object_builder_api_v1": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "16",
        "description": "Allows conveniently attaching data to existing game objects",
        "displayName": "Forgified Fabric Data Attachment API (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-data-attachment-api-v1-1.2.0+7330bc1b19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.attachment",
        "version": "1.2.0+7330bc1b19"
      },
      "modifies": [
        "net.minecraft.world.level.chunk.LevelChunk",
        "net.neoforged.neoforge.attachment.AttachmentHolder",
        "net.neoforged.neoforge.attachment.AttachmentType",
        "net.neoforged.neoforge.attachment.IAttachmentHolder",
        "net.neoforged.neoforge.registries.BaseMappedRegistry"
      ]
    },
    "fabric_data_generation_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.datagen.DataProviderMixin",
            "method": {
              "argTypes": [
                "it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "addFabricKeySortOrders",
              "raw": "addFabricKeySortOrders(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.datagen.ModelProviderMixin",
            "method": {
              "argTypes": [
                "java.util.Set",
                "java.util.Map",
                "net.minecraft.world.level.block.Block",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.item.Item"
              ],
              "name": "filterItemsForProcessingMod",
              "raw": "filterItemsForProcessingMod(Ljava/util/Set;Ljava/util/Map;Lnet/minecraft/world/level/block/Block;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/item/Item;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/data/models/model/ModelLocationUtils;getModelLocation(Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.datagen.ModelProviderMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.world.level.block.Block",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "filterBlocksForProcessingMod",
              "raw": "filterBlocksForProcessingMod(Ljava/util/Map;Lnet/minecraft/world/level/block/Block;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.datagen.ModelProviderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.data.CachedOutput",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "runTail",
              "raw": "runTail(Lnet/minecraft/data/CachedOutput;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.datagen.ModelProviderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.data.CachedOutput",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "java.util.Map"
              ],
              "name": "runHead",
              "raw": "runHead(Lnet/minecraft/data/CachedOutput;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Ljava/util/Map;)V"
            },
            "params": {
              "at": "[{value=INVOKE_ASSIGN, target=com/google/common/collect/Maps.newHashMap()Ljava/util/HashMap;, ordinal=0, remap=false}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.datagen.ModelProviderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.data.PackOutput",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lnet/minecraft/data/PackOutput;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "46",
        "description": "Allows for automatic data generation.",
        "displayName": "Forgified Fabric Data Generation API (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-data-generation-api-v1-20.2.22+2d91a6db19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.datagen",
        "version": "20.2.22+2d91a6db19"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricCodecDataProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricTagProvider$EnchantmentTagProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricLanguageProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricAdvancementProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricTagProvider$FluidTagProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricLootTableProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricTagProvider$ItemTagProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricBlockLootTableProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricTagProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricTagProvider$BlockEntityTypeTagProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricTagProvider$EntityTypeTagProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricTagProvider$BlockTagProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricRecipeProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricModelProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.FabricDynamicRegistryProvider",
          "net.fabricmc.fabric.api.datagen.v1.provider.SimpleFabricLootTableProvider"
        ]
      },
      "modifies": [
        "net.minecraft.data.DataGenerator",
        "net.minecraft.data.DataProvider",
        "net.minecraft.data.loot.BlockLootSubProvider",
        "net.minecraft.data.models.ModelProvider"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "fabric_entity_events_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.PlayerEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onIsSleepingLongEnough",
              "raw": "onIsSleepingLongEnough(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.ServerPlayerEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.core.Direction"
              ],
              "name": "onTrySleepDirectionCheck",
              "raw": "onTrySleepDirectionCheck(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/core/Direction;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BY], by=3, value=INVOKE, target=Lnet/minecraft/world/level/block/state/BlockState;getValue(Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Comparable;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.ServerPlayerEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerPlayer",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onCopyFrom",
              "raw": "onCopyFrom(Lnet/minecraft/server/level/ServerPlayer;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.ServerPlayerEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterWorldChanged",
              "raw": "afterWorldChanged(Lnet/minecraft/server/level/ServerLevel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.ServerPlayerEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.damagesource.DamageSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "notifyDeath",
              "raw": "notifyDeath(Lnet/minecraft/world/damagesource/DamageSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.ServerPlayerEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.damagesource.DamageSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "callOnKillForPlayer",
              "raw": "callOnKillForPlayer(Lnet/minecraft/world/damagesource/DamageSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/server/level/ServerPlayer;getKillCredit()Lnet/minecraft/world/entity/LivingEntity;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onIsSleepingInBed",
              "raw": "onIsSleepingInBed(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.LivingEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onWakeUp",
              "raw": "onWakeUp(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onSleep",
              "raw": "onSleep(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.damagesource.DamageSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "notifyDeath",
              "raw": "notifyDeath(Lnet/minecraft/world/damagesource/DamageSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=net/minecraft/world/level/Level.broadcastEntityEvent(Lnet/minecraft/world/entity/Entity;B)V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.elytra.PlayerEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "injectElytraCheck",
              "raw": "injectElytraCheck(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=FIELD, target=Lnet/minecraft/world/entity/EquipmentSlot;CHEST:Lnet/minecraft/world/entity/EquipmentSlot;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.elytra.LivingEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "injectElytraTick",
              "raw": "injectElytraTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/LivingEntity;getItemBySlot(Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "double",
                "double",
                "double",
                "java.util.Set",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "float",
                "net.minecraft.world.entity.Entity"
              ],
              "name": "afterEntityTeleportedToWorld",
              "raw": "afterEntityTeleportedToWorld(Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;FLnet/minecraft/world/entity/Entity;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/Entity;setRemoved(Lnet/minecraft/world/entity/Entity$RemovalReason;)V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.portal.DimensionTransition",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "afterWorldChanged",
              "raw": "afterWorldChanged(Lnet/minecraft/world/level/portal/DimensionTransition;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.IItemStackExtensionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "canElytraFly",
              "raw": "canElytraFly(Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.entity.event.PlayerManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerPlayer",
                "boolean",
                "net.minecraft.world.entity.Entity$RemovalReason",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "afterRespawn",
              "raw": "afterRespawn(Lnet/minecraft/server/level/ServerPlayer;ZLnet/minecraft/world/entity/Entity$RemovalReason;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "events": {
        "net.neoforged.neoforge.event.entity.living.LivingConversionEvent$Post": [
          "net.fabricmc.fabric.impl.entity.event.EntityEventHooks#onLivingConversion"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Post": [
          "net.fabricmc.fabric.impl.entity.event.EntityEventHooks#afterLivingDamage"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "net.fabricmc.fabric.impl.entity.event.EntityEventHooks#onLivingAttack"
        ],
        "net.neoforged.neoforge.event.entity.player.CanContinueSleepingEvent": [
          "net.fabricmc.fabric.impl.entity.event.EntityEventHooks#onPlayerSleepingTimeCheck"
        ],
        "net.neoforged.neoforge.event.entity.player.CanPlayerSleepEvent": [
          "net.fabricmc.fabric.impl.entity.event.EntityEventHooks#onPlayerSleepInBed"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$Clone": [
          "net.fabricmc.fabric.impl.entity.event.EntityEventHooks#onPlayerClone"
        ]
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "45",
        "description": "Events to hook into entities.",
        "displayName": "Forgified Fabric Entity Events (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-entity-events-v1-1.7.0+1af6e62419.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.entity.event",
        "version": "1.7.0+1af6e62419"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "net.fabricmc.fabric.mixin.entity.event.elytra.PlayerEntityMixin",
          "net.fabricmc.fabric.mixin.entity.event.elytra.LivingEntityMixin"
        ]
      },
      "modifies": [
        "net.minecraft.server.level.ServerPlayer",
        "net.minecraft.server.players.PlayerList",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.Mob",
        "net.minecraft.world.entity.player.Player",
        "net.neoforged.neoforge.common.extensions.IItemStackExtension"
      ],
      "summary": [
        "Custom Entities",
        "Listens to Entity Damage Events",
        "Modifies Methods"
      ]
    },
    "fabric_events_interaction_v0": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.event.interaction.PlayerAdvancementTrackerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.advancements.AdvancementHolder",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "preventGrantCriterion",
              "raw": "preventGrantCriterion(Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.interaction.PlayerAdvancementTrackerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerPlayer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preventOwnerOverride",
              "raw": "preventOwnerOverride(Lnet/minecraft/server/level/ServerPlayer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.interaction.client.ClientPlayerInteractionManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.level.Level",
                "net.minecraft.world.level.block.state.BlockState"
              ],
              "name": "fabric$onBlockBroken",
              "raw": "fabric$onBlockBroken(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/block/Block;destroy(Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.interaction.client.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "injectHandleBlockBreakingForCancelling",
              "raw": "injectHandleBlockBreakingForCancelling(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.interaction.client.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "injectDoAttackForCancelling",
              "raw": "injectDoAttackForCancelling(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.interaction.client.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "injectHandleInputEventsForPreAttackCallback",
              "raw": "injectHandleInputEventsForPreAttackCallback(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/player/LocalPlayer;isUsingItem()Z, ordinal=0}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.interaction.client.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cancelItemPick",
              "raw": "cancelItemPick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/player/Inventory;findSlotMatchingItem(Lnet/minecraft/world/item/ItemStack;)I}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.interaction.client.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "fabric_doItemPickWrapper",
              "raw": "fabric_doItemPickWrapper(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.interaction.ServerPlayerInteractionManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onBlockBroken",
              "raw": "onBlockBroken(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/block/Block;destroy(Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V}]"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "events": {
        "net.neoforged.neoforge.event.entity.player.AttackEntityEvent": [
          "net.fabricmc.fabric.impl.event.interaction.InteractionEventHooks#onAttackEntity"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "net.fabricmc.fabric.impl.event.interaction.InteractionEventHooks#onEntityInteract"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteractSpecific": [
          "net.fabricmc.fabric.impl.event.interaction.InteractionEventHooks#onEntityInteractAt"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickBlock": [
          "net.fabricmc.fabric.impl.event.interaction.InteractionEventHooks#onLeftClickBlock"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "net.fabricmc.fabric.impl.event.interaction.InteractionEventHooks#onRightClickBlock"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "net.fabricmc.fabric.impl.event.interaction.InteractionEventHooks#onRightClickItem"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BreakEvent": [
          "net.fabricmc.fabric.impl.event.interaction.InteractionEventHooks#onBlockBreak"
        ]
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "34",
        "description": "Events for player interaction with blocks and entities.",
        "displayName": "Forgified Fabric Events Interaction (v0)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-events-interaction-v0-0.7.13+7b71cc1619.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.api.block",
        "version": "0.7.13+7b71cc1619"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "net.fabricmc.fabric.api.entity.FakePlayer"
        ]
      },
      "modifies": [
        "net.minecraft.client.KeyMapping",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.multiplayer.MultiPlayerGameMode",
        "net.minecraft.server.PlayerAdvancements",
        "net.minecraft.server.level.ServerPlayerGameMode"
      ],
      "summary": [
        "Custom Entities",
        "Handles Right Clicks with Items",
        "Listens to Entity Interaction Events",
        "Listens to Entity Interaction Events with Click Positions",
        "Listens to Left Click Block Events",
        "Listens to Right Click Block Events",
        "Modifies Block Breaking",
        "Modifies Methods"
      ]
    },
    "fabric_game_rule_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.gamerule.GameRuleCommandVisitorMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.GameRules$Key",
                "net.minecraft.world.level.GameRules$Type",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRegisterCommand",
              "raw": "onRegisterCommand(Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.gamerule.client.EditGameRulesScreenRuleListWidgetMixin",
            "method": {
              "argTypes": [
                "java.util.Map$Entry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "ignoreKeysWithCustomCategories",
              "raw": "ignoreKeysWithCustomCategories(Ljava/util/Map$Entry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.gamerule.client.EditGameRulesScreenRuleListWidgetMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.worldselection.EditGameRulesScreen",
                "net.minecraft.world.level.GameRules",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initializeFabricGameruleCategories",
              "raw": "initializeFabricGameruleCategories(Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen;Lnet/minecraft/world/level/GameRules;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "27",
        "description": "Allows registration of custom game rules.",
        "displayName": "Forgified Fabric Game Rule API (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-game-rule-api-v1-1.0.53+36d727be19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.gamerule",
        "version": "1.0.53+36d727be19"
      },
      "modifies": [
        "net.minecraft.client.gui.screens.worldselection.EditGameRulesScreen",
        "net.minecraft.client.gui.screens.worldselection.EditGameRulesScreen$RuleList",
        "net.minecraft.client.gui.screens.worldselection.EditGameRulesScreen$RuleList$1",
        "net.minecraft.server.commands.GameRuleCommand",
        "net.minecraft.server.commands.GameRuleCommand$1",
        "net.minecraft.world.level.GameRules",
        "net.minecraft.world.level.GameRules$IntegerValue",
        "net.minecraft.world.level.GameRules$Key"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_gametest_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.gametest.GameTestHooksMixin",
            "method": {
              "argTypes": [
                "java.lang.reflect.Method",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "provideFabricTestNamespace",
              "raw": "provideFabricTestNamespace(Ljava/lang/reflect/Method;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.gametest.StructureTemplateManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess",
                "com.mojang.datafixers.DataFixer",
                "net.minecraft.core.HolderGetter",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.google.common.collect.ImmutableList$Builder"
              ],
              "name": "addFabricTemplateProvider",
              "raw": "addFabricTemplateProvider(Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/core/HolderGetter;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/google/common/collect/ImmutableList$Builder;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/google/common/collect/ImmutableList$Builder;add(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList$Builder;, ordinal=2, remap=false}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.gametest.TestServerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "isDedicated",
              "raw": "isDedicated(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_resource_loader_v0": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "13",
        "description": "Allows registration of custom game tests.",
        "displayName": "Forgified Fabric Game Test API (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-gametest-api-v1-2.0.5+29f188ce19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.gametest",
        "version": "2.0.5+29f188ce19"
      },
      "modifies": [
        "net.minecraft.gametest.framework.GameTestRegistry",
        "net.minecraft.gametest.framework.GameTestServer",
        "net.minecraft.gametest.framework.TestCommand",
        "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager",
        "net.neoforged.neoforge.gametest.GameTestHooks"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_item_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.item.RegistryLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.WritableRegistry",
                "com.mojang.serialization.Decoder",
                "net.minecraft.resources.RegistryOps",
                "net.minecraft.resources.ResourceKey",
                "net.minecraft.server.packs.resources.Resource",
                "net.minecraft.core.RegistrationInfo",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "captureArgs",
              "raw": "captureArgs(Lnet/minecraft/core/WritableRegistry;Lcom/mojang/serialization/Decoder;Lnet/minecraft/resources/RegistryOps;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/server/packs/resources/Resource;Lnet/minecraft/core/RegistrationInfo;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/Optional;ifPresentOrElse(Ljava/util/function/Consumer;Ljava/lang/Runnable;)V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.item.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "resetLivingEntity",
              "raw": "resetLivingEntity(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE_ASSIGN, target=Lnet/minecraft/world/item/ItemStack;getEquipmentSlot()Lnet/minecraft/world/entity/EquipmentSlot;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.item.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "storeLivingEntity",
              "raw": "storeLivingEntity(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/item/ItemStack;getEquipmentSlot()Lnet/minecraft/world/entity/EquipmentSlot;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.item.IItemExtensionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getEquipmentSlot",
              "raw": "getEquipmentSlot(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.item.IItemExtensionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "hasCraftingRemainingItem",
              "raw": "hasCraftingRemainingItem(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.item.IItemExtensionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getCraftingRemainingItem",
              "raw": "getCraftingRemainingItem(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.item.client.IItemExtensionClientMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "shouldCauseBlockBreakReset",
              "raw": "shouldCauseBlockBreakReset(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/item/ItemStack;isDamageableItem()Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.item.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.Item$Properties",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onConstruct",
              "raw": "onConstruct(Lnet/minecraft/world/item/Item$Properties;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "events": {
        "net.neoforged.neoforge.event.ModifyDefaultComponentsEvent": [
          "net.fabricmc.fabric.impl.item.DefaultItemComponentImpl#modifyItemComponents"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "net.fabricmc.fabric.impl.client.item.ClientItemEventHooks#onItemTooltip"
        ]
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "43",
        "description": "Hooks for items",
        "displayName": "Forgified Fabric Item API (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-item-api-v1-11.1.1+57cdfa8219.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.item",
        "version": "11.1.1+57cdfa8219"
      },
      "modifies": [
        "net.minecraft.core.component.DataComponentMap$Builder",
        "net.minecraft.resources.RegistryDataLoader",
        "net.minecraft.server.commands.EnchantCommand",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.inventory.AnvilMenu",
        "net.minecraft.world.item.Item",
        "net.minecraft.world.item.Item$Properties",
        "net.minecraft.world.item.ItemStack",
        "net.minecraft.world.item.enchantment.Enchantment$Builder",
        "net.minecraft.world.item.enchantment.EnchantmentHelper",
        "net.minecraft.world.level.storage.loot.functions.EnchantRandomlyFunction",
        "net.neoforged.neoforge.common.extensions.IItemExtension"
      ],
      "summary": [
        "Modifies Default Components",
        "Modifies Methods"
      ]
    },
    "fabric_item_group_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.itemgroup.ItemGroupMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.CreativeModeTab$ItemDisplayParameters",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "getStacks",
              "raw": "getStacks(Lnet/minecraft/world/item/CreativeModeTab$ItemDisplayParameters;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "fabric_resource_loader_v0": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "15",
        "description": "An API for adding custom item groups.",
        "displayName": "Forgified Fabric Item Group API (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-item-group-api-v1-4.1.6+e324903319.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.itemgroup",
        "version": "4.1.6+e324903319"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.fabricmc.fabric.mixin.itemgroup.client.CreativeInventoryScreenMixin"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.screens.inventory.CreativeModeInventoryScreen",
        "net.minecraft.world.item.CreativeModeTab"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_key_binding_api_v1": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "7",
        "description": "Key Binding registry API.",
        "displayName": "Forgified Fabric Key Binding API (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-key-binding-api-v1-1.0.47+62cc7ce119.jar",
        "license": "Apache-2.0",
        "package": "org.sinytra.fabric.key_binding_api",
        "version": "1.0.47+62cc7ce119"
      },
      "modifies": [
        "net.minecraft.client.KeyMapping"
      ]
    },
    "fabric_lifecycle_events_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.ServerWorldServerEntityHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "invokeEntityUnloadEvent",
              "raw": "invokeEntityUnloadEvent(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.ServerWorldServerEntityHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "invokeEntityLoadEvent",
              "raw": "invokeEntityLoadEvent(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "boolean",
                "boolean",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "endSave",
              "raw": "endSave(ZZZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "boolean",
                "boolean",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "startSave",
              "raw": "startSave(ZZZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "java.util.Collection",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "endResourceReload",
              "raw": "endResourceReload(Ljava/util/Collection;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "java.util.Collection",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "startResourceReload",
              "raw": "startResourceReload(Ljava/util/Collection;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.WorldChunkMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.entity.BlockEntity"
              ],
              "name": "onRemoveBlockEntity",
              "raw": "onRemoveBlockEntity(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/entity/BlockEntity;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/block/entity/BlockEntity;setRemoved()V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.WorldChunkMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.entity.BlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.entity.BlockEntity"
              ],
              "name": "onRemoveBlockEntity",
              "raw": "onRemoveBlockEntity(Lnet/minecraft/world/level/block/entity/BlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/entity/BlockEntity;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/level/block/entity/BlockEntity;setRemoved()V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.WorldChunkMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.entity.BlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.entity.BlockEntity"
              ],
              "name": "onLoadBlockEntity",
              "raw": "onLoadBlockEntity(Lnet/minecraft/world/level/block/entity/BlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/entity/BlockEntity;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BY], by=3, value=INVOKE, target=Ljava/util/Map;put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.ClientChunkManagerMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "int",
                "int",
                "net.minecraft.client.multiplayer.ClientChunkCache$Storage",
                "int",
                "net.minecraft.world.level.chunk.LevelChunk",
                "net.minecraft.world.level.ChunkPos"
              ],
              "name": "onUpdateLoadDistance",
              "raw": "onUpdateLoadDistance(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;IILnet/minecraft/client/multiplayer/ClientChunkCache$Storage;ILnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/ChunkPos;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/multiplayer/ClientChunkCache$Storage;inRange(II)Z}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.ClientChunkManagerMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "net.minecraft.network.FriendlyByteBuf",
                "net.minecraft.nbt.CompoundTag",
                "java.util.function.Consumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "int",
                "net.minecraft.world.level.chunk.LevelChunk",
                "net.minecraft.world.level.ChunkPos"
              ],
              "name": "onChunkUnload",
              "raw": "onChunkUnload(IILnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;ILnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/ChunkPos;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=NEW, target=net/minecraft/world/level/chunk/LevelChunk}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.ClientPlayNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClearWorld",
              "raw": "onClearWorld(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.ClientPlayNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundLoginPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onGameJoin",
              "raw": "onGameJoin(Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=NEW, target=net/minecraft/client/multiplayer/ClientLevel}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.ClientPlayNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundRespawnPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onPlayerRespawn",
              "raw": "onPlayerRespawn(Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=NEW, target=net/minecraft/client/multiplayer/ClientLevel}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onStart",
              "raw": "onStart(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=FIELD, target=Lnet/minecraft/client/Minecraft;gameThread:Ljava/lang/Thread;, ordinal=0}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onStopping",
              "raw": "onStopping(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lorg/slf4j/Logger;info(Ljava/lang/String;)V, remap=false}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.ClientWorldClientEntityHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "invokeUnloadEntity",
              "raw": "invokeUnloadEntity(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.client.ClientWorldClientEntityHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "invokeLoadEntity",
              "raw": "invokeLoadEntity(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.server.WorldChunkMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.entity.BlockEntity"
              ],
              "name": "onRemoveBlockEntity",
              "raw": "onRemoveBlockEntity(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/entity/BlockEntity;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/block/entity/BlockEntity;setRemoved()V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.server.WorldChunkMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.entity.BlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.entity.BlockEntity"
              ],
              "name": "onRemoveBlockEntity",
              "raw": "onRemoveBlockEntity(Lnet/minecraft/world/level/block/entity/BlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/entity/BlockEntity;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/level/block/entity/BlockEntity;setRemoved()V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.server.WorldChunkMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.entity.BlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.entity.BlockEntity"
              ],
              "name": "onLoadBlockEntity",
              "raw": "onLoadBlockEntity(Lnet/minecraft/world/level/block/entity/BlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/entity/BlockEntity;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BY], by=3, value=INVOKE, target=Ljava/util/Map;put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.event.lifecycle.ServerWorldMixin",
            "method": {
              "argTypes": [
                "java.util.function.BooleanSupplier",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "startWorldTick",
              "raw": "startWorldTick(Ljava/util/function/BooleanSupplier;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], opcode=181, value=FIELD, target=Lnet/minecraft/server/level/ServerLevel;handlingTick:Z, ordinal=0}]"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "67",
        "description": "Events for the game's lifecycle.",
        "displayName": "Forgified Fabric Lifecycle Events (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-lifecycle-events-v1-2.4.0+36b6b86a19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.event.lifecycle",
        "version": "2.4.0+36b6b86a19"
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.multiplayer.ClientChunkCache",
        "net.minecraft.client.multiplayer.ClientLevel$EntityCallbacks",
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.server.MinecraftServer",
        "net.minecraft.server.level.ServerLevel",
        "net.minecraft.server.level.ServerLevel$EntityCallbacks",
        "net.minecraft.world.level.Level",
        "net.minecraft.world.level.chunk.LevelChunk"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_loot_api_v2": {
      "dependencies": {
        "fabric_api_base": "*",
        "fabric_resource_loader_v0": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "14",
        "description": "Hooks for manipulating loot tables.",
        "displayName": "Forgified Fabric Loot API (v2)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-loot-api-v2-3.0.15+a3ee712d19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.api.loot.v2",
        "version": "3.0.15+a3ee712d19"
      },
      "modifies": [
        "net.minecraft.world.level.storage.loot.LootPool$Builder",
        "net.minecraft.world.level.storage.loot.LootTable$Builder"
      ]
    },
    "fabric_loot_api_v3": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.loot.JsonDataLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "java.lang.String",
                "com.google.gson.Gson",
                "java.util.Map",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.util.Map$Entry",
                "net.minecraft.resources.ResourceLocation"
              ],
              "name": "fillSourceMap",
              "raw": "fillSourceMap(Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/lang/String;Lcom/google/gson/Gson;Ljava/util/Map;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/util/Map$Entry;Lnet/minecraft/resources/ResourceLocation;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE_ASSIGN, target=Lnet/minecraft/resources/FileToIdConverter;fileToId(Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.loot.ReloadableRegistriesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.storage.loot.LootDataType",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.resources.RegistryOps",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onLootTablesLoaded",
              "raw": "onLootTablesLoaded(Lnet/minecraft/world/level/storage/loot/LootDataType;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/RegistryOps;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "fabric_resource_loader_v0": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "17",
        "description": "Hooks for manipulating loot tables.",
        "displayName": "Forgified Fabric Loot API (v3)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-loot-api-v3-1.0.3+333dfad919.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.loot",
        "version": "1.0.3+333dfad919"
      },
      "modifies": [
        "net.minecraft.server.ReloadableServerRegistries",
        "net.minecraft.server.packs.resources.SimpleJsonResourceReloadListener",
        "net.minecraft.world.level.storage.loot.LootPool",
        "net.minecraft.world.level.storage.loot.LootPool$Builder",
        "net.minecraft.world.level.storage.loot.LootTable",
        "net.minecraft.world.level.storage.loot.LootTable$Builder"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "fabric_message_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.message.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetChatDecorator",
              "raw": "onGetChatDecorator(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.message.PlayerManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.chat.PlayerChatMessage",
                "net.minecraft.commands.CommandSourceStack",
                "net.minecraft.network.chat.ChatType$Bound",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onSendCommandMessage",
              "raw": "onSendCommandMessage(Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/ChatType$Bound;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.message.PlayerManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.chat.Component",
                "java.util.function.Function",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onSendGameMessage",
              "raw": "onSendGameMessage(Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.message.PlayerManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.chat.PlayerChatMessage",
                "net.minecraft.server.level.ServerPlayer",
                "net.minecraft.network.chat.ChatType$Bound",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onSendChatMessage",
              "raw": "onSendChatMessage(Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/network/chat/ChatType$Bound;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.message.ClientPlayNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef"
              ],
              "name": "fabric_allowSendCommandMessage",
              "raw": "fabric_allowSendCommandMessage(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.message.ClientPlayNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef"
              ],
              "name": "fabric_allowSendChatMessage",
              "raw": "fabric_allowSendChatMessage(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.message.MessageHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.chat.Component",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef"
              ],
              "name": "fabric_allowGameMessage",
              "raw": "fabric_allowGameMessage(Lnet/minecraft/network/chat/Component;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.message.MessageHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.chat.ChatType$Bound",
                "net.minecraft.network.chat.Component",
                "java.time.Instant",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "fabric_onProfilelessChatMessage",
              "raw": "fabric_onProfilelessChatMessage(Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/network/chat/Component;Ljava/time/Instant;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.message.MessageHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.chat.ChatType$Bound",
                "net.minecraft.network.chat.PlayerChatMessage",
                "net.minecraft.network.chat.Component",
                "com.mojang.authlib.GameProfile",
                "boolean",
                "java.time.Instant",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "fabric_onFilteredSignedChatMessage",
              "raw": "fabric_onFilteredSignedChatMessage(Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Lcom/mojang/authlib/GameProfile;ZLjava/time/Instant;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/Gui;getChat()Lnet/minecraft/client/gui/components/ChatComponent;, ordinal=1}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.message.MessageHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.chat.ChatType$Bound",
                "net.minecraft.network.chat.PlayerChatMessage",
                "net.minecraft.network.chat.Component",
                "com.mojang.authlib.GameProfile",
                "boolean",
                "java.time.Instant",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "fabric_onSignedChatMessage",
              "raw": "fabric_onSignedChatMessage(Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Lcom/mojang/authlib/GameProfile;ZLjava/time/Instant;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/Gui;getChat()Lnet/minecraft/client/gui/components/ChatComponent;, ordinal=0}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "32",
        "description": "Adds message-related hooks.",
        "displayName": "Forgified Fabric Message API (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-message-api-v1-6.0.13+e053909619.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.mixin.message",
        "version": "6.0.13+e053909619"
      },
      "modifies": [
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.client.multiplayer.chat.ChatListener",
        "net.minecraft.server.MinecraftServer",
        "net.minecraft.server.players.PlayerList"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "fabric_model_loading_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.client.model.loading.BlockStatesLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "net.minecraft.world.level.block.state.StateDefinition",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onHeadLoadBlockStates",
              "raw": "onHeadLoadBlockStates(Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/StateDefinition;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.model.loading.ModelLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "allowRecursiveLoading",
              "raw": "allowRecursiveLoading(Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.model.loading.ModelLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.color.block.BlockColors",
                "net.minecraft.util.profiling.ProfilerFiller",
                "java.util.Map",
                "java.util.Map",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.client.resources.model.BlockStateModelLoader"
              ],
              "name": "afterMissingModelInit",
              "raw": "afterMissingModelInit(Lnet/minecraft/client/color/block/BlockColors;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/Map;Ljava/util/Map;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/client/resources/model/BlockStateModelLoader;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/resources/model/BlockStateModelLoader;loadAllBlockStates()V}]"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "38",
        "description": "Provides hooks for model loading.",
        "displayName": "Forgified Fabric Model Loading API (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-model-loading-api-v1-2.0.0+a6e994cd19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.client.model.loading",
        "version": "2.0.0+a6e994cd19"
      },
      "modifies": [
        "net.minecraft.client.resources.model.BlockStateModelLoader",
        "net.minecraft.client.resources.model.ModelBakery",
        "net.minecraft.client.resources.model.ModelBakery$ModelBakerImpl",
        "net.minecraft.client.resources.model.ModelManager"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "fabric_networking_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.networking.LoginQueryRequestS2CPacketMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "net.minecraft.network.FriendlyByteBuf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "readPayload",
              "raw": "readPayload(Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.ClientConnectionMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "disconnectAddon",
              "raw": "disconnectAddon(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/network/PacketListener;onDisconnect(Lnet/minecraft/network/DisconnectionDetails;)V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.ClientConnectionMixin",
            "method": {
              "argTypes": [
                "io.netty.channel.ChannelHandlerContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "disconnectAddon",
              "raw": "disconnectAddon(Lio/netty/channel/ChannelHandlerContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.ClientConnectionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.ProtocolInfo",
                "net.minecraft.network.PacketListener",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "unwatchAddon",
              "raw": "unwatchAddon(Lnet/minecraft/network/ProtocolInfo;Lnet/minecraft/network/PacketListener;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.ClientConnectionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.Packet",
                "net.minecraft.network.PacketSendListener",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "checkPacket",
              "raw": "checkPacket(Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=FIELD, target=Lnet/minecraft/network/Connection;sentPackets:I}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.GenericPacketSplitterMixin",
            "method": {
              "argTypes": [
                "io.netty.channel.ChannelHandlerContext",
                "net.minecraft.network.protocol.Packet",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "encode",
              "raw": "encode(Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.ServerLoginNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.login.ServerboundCustomQueryAnswerPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "handleCustomPayloadReceivedAsync",
              "raw": "handleCustomPayloadReceivedAsync(Lnet/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.ServerLoginNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initAddon",
              "raw": "initAddon(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.ServerPlayNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initAddon",
              "raw": "initAddon(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.client.ClientPlayNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundLoginPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "handleServerPlayReady",
              "raw": "handleServerPlayReady(Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.client.ClientPlayNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initAddon",
              "raw": "initAddon(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.client.ClientLoginNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.login.ClientboundCustomQueryPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "handleQueryRequest",
              "raw": "handleQueryRequest(Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Ljava/util/function/Consumer;accept(Ljava/lang/Object;)V, remap=false}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.client.ClientLoginNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initAddon",
              "raw": "initAddon(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.client.ClientConfigurationNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.configuration.ClientboundFinishConfigurationPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "handleComplete",
              "raw": "handleComplete(Lnet/minecraft/network/protocol/configuration/ClientboundFinishConfigurationPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=NEW, target=(Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/Connection;Lnet/minecraft/client/multiplayer/CommonListenerCookie;)Lnet/minecraft/client/multiplayer/ClientPacketListener;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.client.ClientConfigurationNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initAddon",
              "raw": "initAddon(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.client.NetworkRegistryClientMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.configuration.ClientConfigurationPacketListener",
                "net.neoforged.neoforge.network.registration.NetworkPayloadSetup",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "startConfiguration",
              "raw": "startConfiguration(Lnet/minecraft/network/protocol/configuration/ClientConfigurationPacketListener;Lnet/neoforged/neoforge/network/registration/NetworkPayloadSetup;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.EntityTrackerEntryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerPlayer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onStopTracking",
              "raw": "onStopTracking(Lnet/minecraft/server/level/ServerPlayer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.EntityTrackerEntryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerPlayer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onStartTracking",
              "raw": "onStartTracking(Lnet/minecraft/server/level/ServerPlayer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.LoginQueryResponseC2SPacketMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.network.FriendlyByteBuf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "readResponse",
              "raw": "readResponse(ILnet/minecraft/network/FriendlyByteBuf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.NetworkRegistryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.common.ServerCommonPacketListener",
                "net.minecraft.network.protocol.common.ServerboundCustomPayloadPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preventDisconnectOnUnknownFabricPacketServer",
              "raw": "preventDisconnectOnUnknownFabricPacketServer(Lnet/minecraft/network/protocol/common/ServerCommonPacketListener;Lnet/minecraft/network/protocol/common/ServerboundCustomPayloadPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lorg/slf4j/Logger;warn(Ljava/lang/String;Ljava/lang/Object;)V}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.NetworkRegistryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.common.ClientCommonPacketListener",
                "net.minecraft.network.protocol.common.ClientboundCustomPayloadPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preventDisconnectOnUnknownFabricPacketClient",
              "raw": "preventDisconnectOnUnknownFabricPacketClient(Lnet/minecraft/network/protocol/common/ClientCommonPacketListener;Lnet/minecraft/network/protocol/common/ClientboundCustomPayloadPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lorg/slf4j/Logger;warn(Ljava/lang/String;)V, ordinal=1}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.NetworkRegistryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "net.minecraft.network.ConnectionProtocol",
                "net.minecraft.network.protocol.PacketFlow",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getCodec",
              "raw": "getCodec(Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/ConnectionProtocol;Lnet/minecraft/network/protocol/PacketFlow;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lorg/slf4j/Logger;warn(Ljava/lang/String;Ljava/lang/Object;)V, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.networking.ServerConfigurationNetworkHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onPreConfiguration",
              "raw": "onPreConfiguration(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "129",
        "description": "Low-level, vanilla protocol oriented networking hooks.",
        "displayName": "Forgified Fabric Networking API (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-networking-api-v1-4.3.0+5c124ecf19.jar",
        "license": "Apache-2.0",
        "package": "org.sinytra.fabric.networking_api",
        "version": "4.3.0+5c124ecf19"
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.screens.ConnectScreen",
        "net.minecraft.client.multiplayer.ClientCommonPacketListenerImpl",
        "net.minecraft.client.multiplayer.ClientConfigurationPacketListenerImpl",
        "net.minecraft.client.multiplayer.ClientHandshakePacketListenerImpl",
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.network.Connection",
        "net.minecraft.network.protocol.login.ClientboundCustomQueryPacket",
        "net.minecraft.network.protocol.login.ServerboundCustomQueryAnswerPacket",
        "net.minecraft.server.level.ChunkMap",
        "net.minecraft.server.level.ChunkMap$TrackedEntity",
        "net.minecraft.server.level.ServerEntity",
        "net.minecraft.server.network.ServerCommonPacketListenerImpl",
        "net.minecraft.server.network.ServerConfigurationPacketListenerImpl",
        "net.minecraft.server.network.ServerGamePacketListenerImpl",
        "net.minecraft.server.network.ServerLoginPacketListenerImpl",
        "net.neoforged.neoforge.network.filters.GenericPacketSplitter",
        "net.neoforged.neoforge.network.registration.NetworkRegistry"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_object_builder_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.object.builder.DefaultAttributeRegistryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "injectAttributes",
              "raw": "injectAttributes(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.object.builder.EntityTypeMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "alwaysUpdateVelocity",
              "raw": "alwaysUpdateVelocity(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.object.builder.BlockEntityTypeMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.entity.BlockEntityType$BlockEntitySupplier",
                "java.util.Set",
                "com.mojang.datafixers.types.Type",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "mutableBlocks",
              "raw": "mutableBlocks(Lnet/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier;Ljava/util/Set;Lcom/mojang/datafixers/types/Type;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.object.builder.TradeOffersTypeAwareBuyForOneEmeraldFactoryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.util.RandomSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.item.trading.ItemCost"
              ],
              "name": "failOnNullItem",
              "raw": "failOnNullItem(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/item/trading/ItemCost;)V"
            },
            "params": {
              "at": "[{value=NEW, target=net/minecraft/world/item/trading/MerchantOffer}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.object.builder.EntityTypeBuilderMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "applyChildBuilders",
              "raw": "applyChildBuilders(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.object.builder.DetectorRailBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getCustomComparatorOutput",
              "raw": "getCustomComparatorOutput(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.115,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "44",
        "description": "Builders for objects vanilla has locked down.",
        "displayName": "Forgified Fabric Object Builder API (v1)",
        "file": "forgified-fabric-api-0.107.0+2.0.23+1.21.1.jar",
        "jarInJar": "fabric-object-builder-api-v1-15.2.1+cc242efd19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.object.builder",
        "version": "15.2.1+cc242efd19"
      },
      "modifies": [
        "net.minecraft.world.entity.EntityType",
        "net.minecraft.world.entity.EntityType$Builder",
        "net.minecraft.world.entity.ai.attributes.DefaultAttributes",
        "net.minecraft.world.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
        "net.minecraft.world.level.block.DetectorRailBlock",
        "net.minecraft.world.level.block.entity.BlockEntityType",
        "net.minecraft.world.level.block.entity.BlockEntityType$Builder",
        "net.minecraft.world.level.block.state.BlockBehaviour",
        "net.minecraft.world.level.block.state.BlockBehaviour$Properties",
        "net.minecraft.world.level.storage.DimensionDataStorage"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_particles_v1": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "net.fabricmc.fabric.impl.client.particle.ClientParticleEventHooks#onRegisterParticleProviders"
        ]
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "20",
        "description": "Hooks for registering custom particles.",
        "displayName": "Forgified Fabric Particles (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-particles-v1-4.0.2+824f924c19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.api.particle.v1",
        "version": "4.0.2+824f924c19"
      },
      "inheritance": {
        "net.minecraft.client.particle.Particle": [
          "net.fabricmc.fabric.mixin.client.particle.BlockDustParticleMixin"
        ]
      },
      "modifies": [
        "net.minecraft.client.particle.ParticleEngine",
        "net.minecraft.client.particle.ParticleEngine$MutableSpriteSet",
        "net.minecraft.client.particle.TerrainParticle"
      ],
      "summary": [
        "Custom Particles",
        "Uses Access Transformers"
      ]
    },
    "fabric_recipe_api_v1": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "27",
        "description": "Recipe extensions such as creation of new types of recipe ingredients.",
        "displayName": "Forgified Fabric Recipe API (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-recipe-api-v1-5.0.13+59440bcc19.jar",
        "license": "Apache-2.0",
        "package": "org.sinytra.fabric.recipe_api",
        "version": "5.0.13+59440bcc19"
      },
      "modifies": [
        "net.minecraft.world.item.crafting.Ingredient",
        "net.neoforged.neoforge.common.crafting.CraftingHelper"
      ],
      "summary": [
        "Uses Access Transformers"
      ]
    },
    "fabric_registry_sync_v0": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.registry.sync.RegistryLoaderMixin",
            "method": {
              "argTypes": [
                "java.lang.Object",
                "net.minecraft.core.RegistryAccess",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "java.util.List"
              ],
              "name": "beforeLoad",
              "raw": "beforeLoad(Ljava/lang/Object;Lnet/minecraft/core/RegistryAccess;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Ljava/util/List;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/List;forEach(Ljava/util/function/Consumer;)V, ordinal=0}]"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "24",
        "description": "Syncs registry mappings.",
        "displayName": "Forgified Fabric Registry Sync (v0)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-registry-sync-v0-5.1.3+0c9b5b5419.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.api.event.registry",
        "version": "5.1.3+0c9b5b5419"
      },
      "modifies": [
        "net.minecraft.core.MappedRegistry",
        "net.minecraft.resources.RegistryDataLoader",
        "net.minecraft.world.level.levelgen.DebugLevelSource",
        "net.neoforged.neoforge.registries.BaseMappedRegistry",
        "net.neoforged.neoforge.registries.RegistryManager"
      ],
      "summary": [
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_renderer_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.renderer.client.WeightedBakedModelMixin",
            "method": {
              "argTypes": [
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.renderer.client.SpriteAtlasTextureMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.texture.SpriteLoader$Preparations",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "uploadHook",
              "raw": "uploadHook(Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.renderer.client.debughud.DebugHudMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getLeftText",
              "raw": "getLeftText(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.renderer.client.MultipartBakedModelMixin",
            "method": {
              "argTypes": [
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "35",
        "description": "Defines rendering extensions for dynamic/fancy block and item models.",
        "displayName": "Forgified Fabric Renderer API (v1)",
        "file": "iris-neoforge-1.8.6+mc1.21.1.jar",
        "jarInJar": "fabric-renderer-api-v1-3.4.0+acb05a3919.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.renderer",
        "version": "3.4.0+acb05a3919"
      },
      "inheritance": {
        "net.minecraft.client.resources.model.BakedModel": [
          "net.fabricmc.fabric.api.renderer.v1.model.ForwardingBakedModel"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.components.DebugScreenOverlay",
        "net.minecraft.client.renderer.texture.TextureAtlas",
        "net.minecraft.client.resources.model.BakedModel",
        "net.minecraft.client.resources.model.MultiPartBakedModel",
        "net.minecraft.client.resources.model.WeightedBakedModel"
      ],
      "summary": [
        "Custom 3D Models",
        "Modifies Methods"
      ]
    },
    "fabric_renderer_indigo": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.client.indigo.renderer.ItemRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemDisplayContext",
                "boolean",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "net.minecraft.client.resources.model.BakedModel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "hook_renderItem",
              "raw": "hook_renderItem(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/resources/model/BakedModel;isCustomRenderer()Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.indigo.renderer.SectionBuilderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.SectionPos",
                "net.minecraft.client.renderer.chunk.RenderChunkRegion",
                "com.mojang.blaze3d.vertex.VertexSorting",
                "net.minecraft.client.renderer.SectionBufferBuilderPack",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "hookBuildReturn",
              "raw": "hookBuildReturn(Lnet/minecraft/core/SectionPos;Lnet/minecraft/client/renderer/chunk/RenderChunkRegion;Lcom/mojang/blaze3d/vertex/VertexSorting;Lnet/minecraft/client/renderer/SectionBufferBuilderPack;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.indigo.renderer.SectionBuilderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.SectionPos",
                "net.minecraft.client.renderer.chunk.RenderChunkRegion",
                "com.mojang.blaze3d.vertex.VertexSorting",
                "net.minecraft.client.renderer.SectionBufferBuilderPack",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "java.util.Map"
              ],
              "name": "hookBuild",
              "raw": "hookBuild(Lnet/minecraft/core/SectionPos;Lnet/minecraft/client/renderer/chunk/RenderChunkRegion;Lcom/mojang/blaze3d/vertex/VertexSorting;Lnet/minecraft/client/renderer/SectionBufferBuilderPack;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Ljava/util/Map;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/core/BlockPos;betweenClosed(Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/lang/Iterable;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.indigo.renderer.BlockModelRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.indigo.renderer.BlockModelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockAndTintGetter",
                "net.minecraft.client.resources.model.BakedModel",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "com.mojang.blaze3d.vertex.PoseStack",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "boolean",
                "net.minecraft.util.RandomSource",
                "long",
                "int",
                "net.neoforged.neoforge.client.model.data.ModelData",
                "net.minecraft.client.renderer.RenderType",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "hookRender",
              "raw": "hookRender(Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;JILnet/neoforged/neoforge/client/model/data/ModelData;Lnet/minecraft/client/renderer/RenderType;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "fabric_renderer_api_v1": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "58",
        "description": "Default implementation of the Fabric Renderer API.",
        "displayName": "Forgified Fabric Renderer - Indigo",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-renderer-indigo-1.7.0+acb05a3919.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.client.indigo",
        "version": "1.7.0+acb05a3919"
      },
      "modifies": [
        "net.minecraft.client.renderer.block.ModelBlockRenderer",
        "net.minecraft.client.renderer.chunk.RenderChunkRegion",
        "net.minecraft.client.renderer.chunk.SectionCompiler",
        "net.minecraft.client.renderer.entity.ItemRenderer"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_rendering_data_attachment_v1": {
      "dependencies": {
        "fabric_block_view_api_v2": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "8",
        "description": "Thread-safe hooks for block entity data use during terrain rendering.",
        "displayName": "Forgified Fabric Rendering Data Attachment (v1)",
        "file": "iris-neoforge-1.8.6+mc1.21.1.jar",
        "jarInJar": "fabric-rendering-data-attachment-v1-0.3.48+73761d2e19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.mixin.rendering.data",
        "version": "0.3.48+73761d2e19"
      },
      "modifies": [
        "net.minecraft.client.renderer.chunk.RenderChunkRegion",
        "net.minecraft.world.level.LevelReader",
        "net.minecraft.world.level.block.entity.BlockEntity"
      ]
    },
    "fabric_rendering_fluids_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.fluid.FluidRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockAndTintGetter",
                "net.minecraft.core.BlockPos",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.material.FluidState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onHeadRender",
              "raw": "onHeadRender(Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.fluid.FluidRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onResourceReloadReturn",
              "raw": "onResourceReloadReturn(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.fluid.IBlockStateExtensionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockAndTintGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.material.FluidState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "shouldDisplayFluidOverlay",
              "raw": "shouldDisplayFluidOverlay(Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "20",
        "description": "Hooks for registering fluid renders.",
        "displayName": "Forgified Fabric Rendering Fluids (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-rendering-fluids-v1-3.1.6+857185bc19.jar",
        "license": "Apache-2.0",
        "package": "org.sinytra.fabric.rendering_fluids",
        "version": "3.1.6+857185bc19"
      },
      "modifies": [
        "net.minecraft.client.renderer.block.LiquidBlockRenderer",
        "net.neoforged.neoforge.client.extensions.common.IClientFluidTypeExtensions",
        "net.neoforged.neoforge.common.extensions.IBlockStateExtension"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "fabric_rendering_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.CapeFeatureRendererMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "net.minecraft.client.player.AbstractClientPlayer",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "injectCapeRenderCheck",
              "raw": "injectCapeRenderCheck(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=FIELD, target=Lnet/minecraft/world/entity/EquipmentSlot;CHEST:Lnet/minecraft/world/entity/EquipmentSlot;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.TooltipComponentMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.inventory.tooltip.TooltipComponent",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "convertCustomTooltipData",
              "raw": "convertCustomTooltipData(Lnet/minecraft/world/inventory/tooltip/TooltipComponent;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.shader.ShaderProgramMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceProvider",
                "com.mojang.blaze3d.shaders.Program$Type",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "releaseProgramName",
              "raw": "releaseProgramName(Lnet/minecraft/server/packs/resources/ResourceProvider;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.shader.ShaderProgramMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceProvider",
                "com.mojang.blaze3d.shaders.Program$Type",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "captureProgramName",
              "raw": "captureProgramName(Lnet/minecraft/server/packs/resources/ResourceProvider;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/FileUtil;getFullResourcePath(Ljava/lang/String;)Ljava/lang/String;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "net.minecraft.client.Camera",
                "boolean",
                "java.lang.Runnable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderSky",
              "raw": "renderSky(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Ljava/lang/Runnable;run()V, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "double",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderCloud",
              "raw": "renderCloud(Lcom/mojang/blaze3d/vertex/PoseStack;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FDDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.LightTexture",
                "float",
                "double",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderWeather",
              "raw": "renderWeather(Lnet/minecraft/client/renderer/LightTexture;FDDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onReload",
              "raw": "onReload(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterRender",
              "raw": "afterRender(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onChunkDebugRender",
              "raw": "onChunkDebugRender(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderDebug(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/Camera;)V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeClouds",
              "raw": "beforeClouds(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/Options;getCloudsType()Lnet/minecraft/client/CloudStatus;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeDebugRender",
              "raw": "beforeDebugRender(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/debug/DebugRenderer;render(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDD)V, ordinal=0}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "net.minecraft.world.entity.Entity",
                "double",
                "double",
                "double",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onDrawBlockOutline",
              "raw": "onDrawBlockOutline(Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeRenderOutline",
              "raw": "beforeRenderOutline(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=FIELD, target=Lnet/minecraft/client/Minecraft;hitResult:Lnet/minecraft/world/phys/HitResult;, ordinal=1}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterEntities",
              "raw": "afterEntities(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{args=[stringValue=blockentities], value=CONSTANT, ordinal=0}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterTerrainSolid",
              "raw": "afterTerrainSolid(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderSectionLayer(Lnet/minecraft/client/renderer/RenderType;DDDLorg/joml/Matrix4f;Lorg/joml/Matrix4f;)V, ordinal=2}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.culling.Frustum",
                "boolean",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterTerrainSetup",
              "raw": "afterTerrainSetup(Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/culling/Frustum;ZZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.WorldRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeRender",
              "raw": "beforeRender(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.ArmorFeatureRendererMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "net.minecraft.world.entity.LivingEntity",
                "net.minecraft.world.entity.EquipmentSlot",
                "int",
                "net.minecraft.client.model.HumanoidModel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderArmor",
              "raw": "renderArmor(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;ILnet/minecraft/client/model/HumanoidModel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.client.rendering.BuiltinModelItemRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemDisplayContext",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "fabric_onRender",
              "raw": "fabric_onRender(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "71",
        "description": "Hooks and registries for rendering-related things.",
        "displayName": "Forgified Fabric Rendering (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-rendering-v1-5.0.5+077ba95f19.jar",
        "license": "Apache-2.0",
        "package": "org.sinytra.fabric.rendering.generated",
        "version": "5.0.5+077ba95f19"
      },
      "modifies": [
        "net.minecraft.client.color.block.BlockColors",
        "net.minecraft.client.color.item.ItemColors",
        "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipComponent",
        "net.minecraft.client.model.geom.ModelLayers",
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer",
        "net.minecraft.client.renderer.DimensionSpecialEffects",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.ShaderInstance",
        "net.minecraft.client.renderer.ShaderInstance$1",
        "net.minecraft.client.renderer.entity.EntityRenderers",
        "net.minecraft.client.renderer.entity.LivingEntityRenderer",
        "net.minecraft.client.renderer.entity.layers.CapeLayer",
        "net.minecraft.client.renderer.entity.layers.HumanoidArmorLayer",
        "net.minecraft.client.renderer.texture.atlas.SpriteSources"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "fabric_resource_conditions_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.resource.conditions.RegistryLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.WritableRegistry",
                "com.mojang.serialization.Decoder",
                "net.minecraft.resources.RegistryOps",
                "net.minecraft.resources.ResourceKey",
                "net.minecraft.server.packs.resources.Resource",
                "net.minecraft.core.RegistrationInfo",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.io.Reader",
                "com.google.gson.JsonElement"
              ],
              "name": "checkResourceCondition",
              "raw": "checkResourceCondition(Lnet/minecraft/core/WritableRegistry;Lcom/mojang/serialization/Decoder;Lnet/minecraft/resources/RegistryOps;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/server/packs/resources/Resource;Lnet/minecraft/core/RegistrationInfo;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/io/Reader;Lcom/google/gson/JsonElement;)V"
            },
            "params": {
              "at": "[{value=INVOKE_ASSIGN, target=Lcom/google/gson/JsonParser;parseReader(Ljava/io/Reader;)Lcom/google/gson/JsonElement;, remap=false}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.conditions.DataProviderMixin",
            "method": {
              "argTypes": [
                "it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "fabric_injectResourceConditionsSortOrder",
              "raw": "fabric_injectResourceConditionsSortOrder(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.conditions.TagManagerLoaderMixin",
            "method": {
              "argTypes": [
                "java.util.List",
                "java.lang.Void",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "hookApply",
              "raw": "hookApply(Ljava/util/List;Ljava/lang/Void;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.conditions.ReloadableRegistriesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.storage.loot.LootDataType",
                "net.minecraft.resources.RegistryOps",
                "net.minecraft.core.WritableRegistry",
                "net.minecraft.resources.ResourceLocation",
                "com.google.gson.JsonElement",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "applyConditions",
              "raw": "applyConditions(Lnet/minecraft/world/level/storage/loot/LootDataType;Lnet/minecraft/resources/RegistryOps;Lnet/minecraft/core/WritableRegistry;Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonElement;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.conditions.ReloadableRegistriesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.LayeredRegistryAccess",
                "net.minecraft.server.packs.resources.ResourceManager",
                "java.util.concurrent.Executor",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.resources.RegistryOps",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef"
              ],
              "name": "storeWrapperLookup",
              "raw": "storeWrapperLookup(Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/resources/RegistryOps;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE_ASSIGN, target=Lnet/minecraft/server/ReloadableServerRegistries$EmptyTagLookupWrapper;createSerializationContext(Lcom/mojang/serialization/DynamicOps;)Lnet/minecraft/resources/RegistryOps;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.conditions.SinglePreparationResourceReloaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "java.lang.Object",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "applyResourceConditions",
              "raw": "applyResourceConditions(Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/lang/Object;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.conditions.DataPackContentsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.core.LayeredRegistryAccess",
                "net.minecraft.world.flag.FeatureFlagSet",
                "net.minecraft.commands.Commands$CommandSelection",
                "int",
                "java.util.concurrent.Executor",
                "java.util.concurrent.Executor",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "hookReload",
              "raw": "hookReload(Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/commands/Commands$CommandSelection;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.conditions.DataPackContentsMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "hookRefresh",
              "raw": "hookRefresh(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "31",
        "description": "Allows conditionally loading resources.",
        "displayName": "Forgified Fabric Resource Conditions API (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-resource-conditions-api-v1-4.3.0+edeecbd819.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.impl.resource.conditions",
        "version": "4.3.0+edeecbd819"
      },
      "modifies": [
        "net.minecraft.data.DataProvider",
        "net.minecraft.resources.RegistryDataLoader",
        "net.minecraft.server.ReloadableServerRegistries",
        "net.minecraft.server.ReloadableServerResources",
        "net.minecraft.server.ServerAdvancementManager",
        "net.minecraft.server.packs.repository.Pack",
        "net.minecraft.server.packs.resources.SimpleJsonResourceReloadListener",
        "net.minecraft.server.packs.resources.SimplePreparableReloadListener",
        "net.minecraft.tags.TagManager",
        "net.minecraft.world.item.crafting.RecipeManager"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_resource_loader_v0": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.LifecycledResourceManagerImplMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.PackType",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lnet/minecraft/server/packs/PackType;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.SimpleResourceReloadMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "java.util.List",
                "java.util.concurrent.Executor",
                "java.util.concurrent.Executor",
                "java.util.concurrent.CompletableFuture",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "method_40087",
              "raw": "method_40087(Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "java.lang.Thread",
                "net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess",
                "net.minecraft.server.packs.repository.PackRepository",
                "net.minecraft.server.WorldStem",
                "java.net.Proxy",
                "com.mojang.datafixers.DataFixer",
                "net.minecraft.server.Services",
                "net.minecraft.server.level.progress.ChunkProgressListenerFactory",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Ljava/lang/Thread;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/server/WorldStem;Ljava/net/Proxy;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/server/Services;Lnet/minecraft/server/level/progress/ChunkProgressListenerFactory;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.DatapackCommandMixin",
            "method": {
              "argTypes": [
                "com.mojang.brigadier.context.CommandContext",
                "java.lang.String",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.server.packs.repository.Pack"
              ],
              "name": "errorOnInternalPack",
              "raw": "errorOnInternalPack(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/server/packs/repository/Pack;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Ljava/util/Collection;contains(Ljava/lang/Object;)Z}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.client.VanillaResourcePackProviderMixin",
            "method": {
              "argTypes": [
                "java.util.function.Consumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "addBuiltinResourcePacks",
              "raw": "addBuiltinResourcePacks(Ljava/util/function/Consumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.client.GameOptionsMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onLoad",
              "raw": "onLoad(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.client.ResourcePackOrganizerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "removeHiddenPacksRefresh",
              "raw": "removeHiddenPacksRefresh(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.client.ResourcePackOrganizerMixin",
            "method": {
              "argTypes": [
                "java.lang.Runnable",
                "java.util.function.Function",
                "net.minecraft.server.packs.repository.PackRepository",
                "java.util.function.Consumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "removeHiddenPacksInit",
              "raw": "removeHiddenPacksInit(Ljava/lang/Runnable;Ljava/util/function/Function;Lnet/minecraft/server/packs/repository/PackRepository;Ljava/util/function/Consumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.client.CreateWorldScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onScanPacks",
              "raw": "onScanPacks(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/server/packs/repository/PackRepository;reload()V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.SynchronizeRegistriesTaskMixin",
            "method": {
              "argTypes": [
                "java.util.function.Consumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "sendPacket",
              "raw": "sendPacket(Ljava/util/function/Consumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.SynchronizeRegistriesTaskMixin",
            "method": {
              "argTypes": [
                "java.util.function.Consumer",
                "java.util.Set",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "syncRegistryAndTags",
              "raw": "syncRegistryAndTags(Ljava/util/function/Consumer;Ljava/util/Set;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.SynchronizeRegistriesTaskMixin",
            "method": {
              "argTypes": [
                "java.util.List",
                "java.util.function.Consumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onSelectKnownPacks",
              "raw": "onSelectKnownPacks(Ljava/util/List;Ljava/util/function/Consumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.ResourcePackProfileMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onCreateResourcePack",
              "raw": "onCreateResourcePack(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.ResourcePackProfileMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.PackLocationInfo",
                "net.minecraft.server.packs.repository.Pack$ResourcesSupplier",
                "net.minecraft.server.packs.repository.Pack$Metadata",
                "net.minecraft.server.packs.PackSelectionConfig",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lnet/minecraft/server/packs/PackLocationInfo;Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/server/packs/repository/Pack$Metadata;Lnet/minecraft/server/packs/PackSelectionConfig;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.ResourcePackManagerMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "java.util.List"
              ],
              "name": "handleAutoDisable",
              "raw": "handleAutoDisable(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Ljava/util/List;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/List;remove(Ljava/lang/Object;)Z}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.ResourcePackManagerMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "java.util.List"
              ],
              "name": "handleAutoEnable",
              "raw": "handleAutoEnable(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Ljava/util/List;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Ljava/util/List;add(Ljava/lang/Object;)Z}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.ResourcePackManagerMixin",
            "method": {
              "argTypes": [
                "java.util.Collection",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "java.util.List"
              ],
              "name": "handleAutoEnableDisable",
              "raw": "handleAutoEnableDisable(Ljava/util/Collection;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Ljava/util/List;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lcom/google/common/collect/ImmutableList;copyOf(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.resource.loader.ResourcePackManagerMixin",
            "method": {
              "argTypes": [
                "[",
                "net.minecraft.server.packs.repository.RepositorySource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "construct",
              "raw": "construct([Lnet/minecraft/server/packs/repository/RepositorySource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "51",
        "description": "Asset and data resource loading.",
        "displayName": "Forgified Fabric Resource Loader (v0)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-resource-loader-v0-1.3.1+4ea8954419.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.api.resource",
        "version": "1.3.1+4ea8954419"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.fabricmc.fabric.mixin.resource.loader.client.CreateWorldScreenMixin"
        ]
      },
      "modifies": [
        "net.minecraft.client.Options",
        "net.minecraft.client.Options$3",
        "net.minecraft.client.gui.font.FontManager",
        "net.minecraft.client.gui.screens.packs.PackSelectionModel",
        "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen",
        "net.minecraft.client.multiplayer.KnownPacksManager",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.block.BlockRenderDispatcher",
        "net.minecraft.client.renderer.entity.ItemRenderer",
        "net.minecraft.client.renderer.texture.TextureManager",
        "net.minecraft.client.resources.language.LanguageManager",
        "net.minecraft.client.resources.model.ModelManager",
        "net.minecraft.client.sounds.SoundManager",
        "net.minecraft.gametest.framework.GameTestServer",
        "net.minecraft.network.protocol.configuration.ServerboundSelectKnownPacks",
        "net.minecraft.server.MinecraftServer",
        "net.minecraft.server.ServerAdvancementManager",
        "net.minecraft.server.ServerFunctionLibrary",
        "net.minecraft.server.commands.DataPackCommand",
        "net.minecraft.server.dedicated.DedicatedServerProperties",
        "net.minecraft.server.network.ServerConfigurationPacketListenerImpl",
        "net.minecraft.server.network.config.SynchronizeRegistriesTask",
        "net.minecraft.server.packs.repository.BuiltInPackSource",
        "net.minecraft.server.packs.repository.Pack",
        "net.minecraft.server.packs.repository.PackRepository",
        "net.minecraft.server.packs.resources.MultiPackResourceManager",
        "net.minecraft.server.packs.resources.Resource",
        "net.minecraft.server.packs.resources.SimpleReloadInstance",
        "net.minecraft.tags.TagManager",
        "net.minecraft.world.item.crafting.RecipeManager"
      ],
      "summary": [
        "Custom GUI Screens",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fabric_screen_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.screen.ScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterResizeScreen",
              "raw": "afterResizeScreen(Lnet/minecraft/client/Minecraft;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.ScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeResizeScreen",
              "raw": "beforeResizeScreen(Lnet/minecraft/client/Minecraft;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.ScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterInitScreen",
              "raw": "afterInitScreen(Lnet/minecraft/client/Minecraft;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.ScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeInitScreen",
              "raw": "beforeInitScreen(Lnet/minecraft/client/Minecraft;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterLoadingScreenTick",
              "raw": "afterLoadingScreenTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/Minecraft;runTick(Z)V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeLoadingScreenTick",
              "raw": "beforeLoadingScreenTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/LevelLoadingScreen;tick()V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterScreenTick",
              "raw": "afterScreenTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeScreenTick",
              "raw": "beforeScreenTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;tick()V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onScreenRemoveBecauseStopping",
              "raw": "onScreenRemoveBecauseStopping(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;removed()V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onScreenRemove",
              "raw": "onScreenRemove(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;removed()V}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "checkThreadOnDev",
              "raw": "checkThreadOnDev(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.HandledScreenMixin",
            "method": {
              "argTypes": [
                "double",
                "double",
                "int",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "callSuperMouseReleased",
              "raw": "callSuperMouseReleased(DDIDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.screen.HandledScreenMixin",
            "method": {
              "argTypes": [
                "double",
                "double",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "callSuperMouseReleased",
              "raw": "callSuperMouseReleased(DDILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyPressed$Post": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#afterKeyPressed"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyPressed$Pre": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#beforeKeyPressed"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyReleased$Post": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#afterKeyReleased"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyReleased$Pre": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#beforeKeyReleased"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonPressed$Post": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#afterMouseClicked"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonPressed$Pre": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#beforeMouseClicked"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonReleased$Post": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#afterMouseReleased"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonReleased$Pre": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#beforeMouseReleased"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseScrolled$Post": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#afterMouseScroll"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseScrolled$Pre": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#beforeMouseScroll"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Render$Post": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#afterScreenDraw"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Render$Pre": [
          "org.sinytra.fabric.screen_api.ScreenEventHooks#beforeScreenDraw"
        ]
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "37",
        "description": "Adds screen related hooks.",
        "displayName": "Forgified Fabric Screen API (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-screen-api-v1-2.0.25+b282c4bb19.jar",
        "license": "Apache-2.0",
        "package": "org.sinytra.fabric.screen_api",
        "version": "2.0.25+b282c4bb19"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.fabricmc.fabric.mixin.screen.HandledScreenMixin"
        ]
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen"
      ],
      "summary": [
        "Custom GUI Screens",
        "Modifies GUI Rendering",
        "Modifies Methods"
      ]
    },
    "fabric_screen_handler_api_v1": {
      "dependencies": {
        "fabric_api_base": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "9",
        "description": "Hooks and extensions for creating screen handlers.",
        "displayName": "Forgified Fabric Screen Handler API (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-screen-handler-api-v1-1.3.87+8dbc56dd19.jar",
        "license": "Apache-2.0",
        "package": "net.fabricmc.fabric.mixin.screenhandler",
        "version": "1.3.87+8dbc56dd19"
      },
      "modifies": [
        "net.minecraft.server.level.ServerPlayer",
        "net.minecraft.world.MenuProvider"
      ],
      "summary": [
        "Uses Access Transformers"
      ]
    },
    "fabric_sound_api_v1": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "4",
        "description": "Hooks for modifying Minecraft's sound system.",
        "displayName": "Forgified Fabric Sound API (v1)",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "jarInJar": "fabric-sound-api-v1-1.0.23+10b84f8419.jar",
        "license": "Apache-2.0",
        "package": "org.sinytra.fabric.sound_api.generated",
        "version": "1.0.23+10b84f8419"
      },
      "modifies": [
        "net.minecraft.client.resources.sounds.SoundInstance"
      ]
    },
    "fabric_transfer_api_v1": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.fabricmc.fabric.mixin.transfer.AbstractFurnaceBlockEntityMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setStackSuppressUpdate",
              "raw": "setStackSuppressUpdate(ILnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.transfer.FluidMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "hookGetBucketFillSound",
              "raw": "hookGetBucketFillSound(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.fabricmc.fabric.mixin.transfer.JukeboxBlockEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setStackBypass",
              "raw": "setStackBypass(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "fabric_api_lookup_api_v1": "*",
        "fabric_rendering_fluids_v1": "*",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "events": {
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "org.sinytra.fabric.transfer_api.TransferApiNeoCompat#onAttachBlockEntityCapabilities"
        ]
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "120",
        "description": "A common API for the transfer of fluids, items and other game resources.",
        "displayName": "Forgified Fabric Transfer API (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-transfer-api-v1-5.4.1+d719f32719.jar",
        "license": "Apache-2.0",
        "package": "org.sinytra.fabric.transfer_api",
        "version": "5.4.1+d719f32719"
      },
      "modifies": [
        "net.minecraft.world.CompoundContainer",
        "net.minecraft.world.SimpleContainer",
        "net.minecraft.world.item.BucketItem",
        "net.minecraft.world.item.Item",
        "net.minecraft.world.item.component.BundleContents",
        "net.minecraft.world.item.component.ItemContainerContents",
        "net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity",
        "net.minecraft.world.level.block.entity.BaseContainerBlockEntity",
        "net.minecraft.world.level.block.entity.JukeboxBlockEntity",
        "net.minecraft.world.level.material.Fluid"
      ],
      "summary": [
        "Has Capability Providers",
        "Modifies Methods"
      ]
    },
    "fabric_transitive_access_wideners_v1": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.57,)"
      },
      "info": {
        "authors": "Sinytra, FabricMC",
        "classes": "0",
        "description": "Contains transitive access wideners that provide access to otherwise inaccessible Minecraft code.",
        "displayName": "Forgified Fabric Transitive Access Wideners (v1)",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "jarInJar": "fabric-transitive-access-wideners-v1-6.1.0+0df3143b19.jar",
        "license": "Apache-2.0",
        "loader": "lowcodefml",
        "version": "6.1.0+0df3143b19"
      },
      "summary": [
        "Uses Access Transformers"
      ]
    },
    "factory_blocks": {
      "dependencies": {
        "architectury": "[0,)",
        "minecraft": "[1.21,1.21.1]",
        "neoforge": "[0,)"
      },
      "info": {
        "authors": "slaincow",
        "classes": "13",
        "description": "Adds Factory Blocks to Chisel Reborn or Chipped\n",
        "displayName": "Factory Blocks",
        "file": "factory_blocks-neoforge-1.3.4+mc1.21.1.jar",
        "license": "MIT",
        "package": "com.slaincow.factoryblocks",
        "version": "1.3.4+mc1.21.1"
      },
      "inheritance": {
        "net.minecraft.world.item.Item": [
          "com.slaincow.factoryblocks.TooltipBlockItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.slaincow.factoryblocks.block.fan.RedstoneFanBlock",
          "com.slaincow.factoryblocks.block.fan.MediumFanBlock",
          "com.slaincow.factoryblocks.block.fan.BaseFanBlock",
          "com.slaincow.factoryblocks.block.BaseFactoryBlock"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "fancymenu": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.neoforge.client.MixinNeoForgeLoadingOverlay",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterRenderScreenFancyMenu",
              "raw": "afterRenderScreenFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;render(Lnet/minecraft/client/gui/GuiGraphics;IIF)V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.neoforge.client.MixinNeoForgeLoadingOverlay",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeRenderScreenFancyMenu",
              "raw": "beforeRenderScreenFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;render(Lnet/minecraft/client/gui/GuiGraphics;IIF)V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinTitleScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cancelVanillaRealmsNotificationIconRenderingFancyMenu",
              "raw": "cancelVanillaRealmsNotificationIconRenderingFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinTitleScreen",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterRenderFancyMenu",
              "raw": "afterRenderFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinTitleScreen",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeRenderFancyMenu",
              "raw": "beforeRenderFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinTitleScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "at_return_of_screen_init_FancyMenu",
              "raw": "at_return_of_screen_init_FancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinTabNavigationBar",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "after_selectTab_in_keyPressed_FancyMenu",
              "raw": "after_selectTab_in_keyPressed_FancyMenu(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/components/tabs/TabNavigationBar;selectTab(IZ)V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinTabNavigationBar",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.components.events.GuiEventListener",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "after_setCurrentTab_in_setFocused_FancyMenu",
              "raw": "after_setCurrentTab_in_setFocused_FancyMenu(Lnet/minecraft/client/gui/components/events/GuiEventListener;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/components/tabs/TabManager;setCurrentTab(Lnet/minecraft/client/gui/components/tabs/Tab;Z)V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinTabNavigationBar",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "after_disableBlend_in_render_FancyMenu",
              "raw": "after_disableBlend_in_render_FancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/mojang/blaze3d/systems/RenderSystem;disableBlend()V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinTabNavigationBar",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "head_render_FancyMenu",
              "raw": "head_render_FancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinStringDecomposer",
            "method": {
              "argTypes": [
                "java.lang.String",
                "int",
                "net.minecraft.network.chat.Style",
                "net.minecraft.network.chat.Style",
                "net.minecraft.util.FormattedCharSink",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "beforeIterateFormattedFancyMenu",
              "raw": "beforeIterateFormattedFancyMenu(Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinSoundEngine",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterReloadSoundEngineFancyMenu",
              "raw": "afterReloadSoundEngineFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "atReturnChildrenFancyMenu",
              "raw": "atReturnChildrenFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterSetInitialFocus_2_FancyMenu",
              "raw": "afterSetInitialFocus_2_FancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeSetInitialFocus_2_FancyMenu",
              "raw": "beforeSetInitialFocus_2_FancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinScreen",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.components.events.GuiEventListener",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterSetInitialFocusFancyMenu",
              "raw": "afterSetInitialFocusFancyMenu(Lnet/minecraft/client/gui/components/events/GuiEventListener;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinScreen",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.components.events.GuiEventListener",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeSetInitialFocusFancyMenu",
              "raw": "beforeSetInitialFocusFancyMenu(Lnet/minecraft/client/gui/components/events/GuiEventListener;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinScreen",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "afterNextFocusPathInKeyPressedFancyMenu",
              "raw": "afterNextFocusPathInKeyPressedFancyMenu(IIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/components/events/AbstractContainerEventHandler;nextFocusPath(Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath;}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinScreen",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "beforeNextFocusPathInKeyPressedFancyMenu",
              "raw": "beforeNextFocusPathInKeyPressedFancyMenu(IIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/components/events/AbstractContainerEventHandler;nextFocusPath(Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath;}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinResourceLoadStateTracker",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterFinishReloadFancyMenu",
              "raw": "afterFinishReloadFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinResourceLoadStateTracker",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeStartReloadFancyMenu",
              "raw": "beforeStartReloadFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinRealmsNotificationsScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onConstructFancyMenu",
              "raw": "onConstructFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinProgressScreen",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onProgressStagePercentageFancyMenu",
              "raw": "onProgressStagePercentageFancyMenu(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinProgressScreen",
            "method": {
              "argTypes": [
                "net.minecraft.network.chat.Component",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onProgressStageFancyMenu",
              "raw": "onProgressStageFancyMenu(Lnet/minecraft/network/chat/Component;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinProgressScreen",
            "method": {
              "argTypes": [
                "net.minecraft.network.chat.Component",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onProgressStartFancyMenu",
              "raw": "onProgressStartFancyMenu(Lnet/minecraft/network/chat/Component;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinPauseScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "after_createPauseMenu_FancyMenu",
              "raw": "after_createPauseMenu_FancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinOnlineServerEntry",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onDrawIconFancyMenu",
              "raw": "onDrawIconFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMusicManager",
            "method": {
              "argTypes": [
                "net.minecraft.sounds.Music",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "stopMusicIfDisabledInConfigFancyMenu",
              "raw": "stopMusicIfDisabledInConfigFancyMenu(Lnet/minecraft/sounds/Music;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMusicManager",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cancelTickIfMusicDisabledViaController_FancyMenu",
              "raw": "cancelTickIfMusicDisabledViaController_FancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMouseHandler",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "before_Screen_mouseMoved_FancyMenu",
              "raw": "before_Screen_mouseMoved_FancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;wrapScreenError(Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMouseHandler",
            "method": {
              "argTypes": [
                "long",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "headOnPressFancyMenu",
              "raw": "headOnPressFancyMenu(JIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMouseHandler",
            "method": {
              "argTypes": [
                "long",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterMouseScrollScreenFancyMenu",
              "raw": "afterMouseScrollScreenFancyMenu(JDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;mouseScrolled(DDDD)Z}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMouseHandler",
            "method": {
              "argTypes": [
                "long",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeMouseScrollScreenFancyMenu",
              "raw": "beforeMouseScrollScreenFancyMenu(JDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;mouseScrolled(DDDD)Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "registerResourceReloadListenerInResizeDisplayFancyMenu",
              "raw": "registerResourceReloadListenerInResizeDisplayFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterResizeCurrentScreenFancyMenu",
              "raw": "afterResizeCurrentScreenFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/Minecraft;getMainRenderTarget()Lcom/mojang/blaze3d/pipeline/RenderTarget;}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeResizeCurrentScreenFancyMenu",
              "raw": "beforeResizeCurrentScreenFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/mojang/blaze3d/platform/Window;setGuiScale(D)V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeScreenAddedFancyMenu",
              "raw": "beforeScreenAddedFancyMenu(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;added()V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeScreenRemovedFancyMenu",
              "raw": "beforeScreenRemovedFancyMenu(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;removed()V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterInitCurrentScreenFancyMenu",
              "raw": "afterInitCurrentScreenFancyMenu(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/Minecraft;updateTitle()V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeInitCurrentScreenFancyMenu",
              "raw": "beforeInitCurrentScreenFancyMenu(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/mojang/blaze3d/vertex/BufferUploader;reset()V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "after_setScreen_FancyMenu",
              "raw": "after_setScreen_FancyMenu(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "headSetScreenFancyMenu",
              "raw": "headSetScreenFancyMenu(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "changeWindowTitleFancyMenu",
              "raw": "changeWindowTitleFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterScreenTickFancyMenu",
              "raw": "afterScreenTickFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;wrapScreenError(Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeScreenTickFancyMenu",
              "raw": "beforeScreenTickFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;wrapScreenError(Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterGameTickFancyMenu",
              "raw": "afterGameTickFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeGameTickFancyMenu",
              "raw": "beforeGameTickFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Overlay",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeSetOverlayFancyMenu",
              "raw": "beforeSetOverlayFancyMenu(Lnet/minecraft/client/gui/screens/Overlay;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinLoadingOverlay",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterRenderScreenFancyMenu",
              "raw": "afterRenderScreenFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;render(Lnet/minecraft/client/gui/GuiGraphics;IIF)V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinLoadingOverlay",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeRenderScreenFancyMenu",
              "raw": "beforeRenderScreenFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;render(Lnet/minecraft/client/gui/GuiGraphics;IIF)V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinLevelStorageAccess",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.storage.LevelStorageSource",
                "java.lang.String",
                "java.nio.file.Path",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onConstructFancyMenu",
              "raw": "onConstructFancyMenu(Lnet/minecraft/world/level/storage/LevelStorageSource;Ljava/lang/String;Ljava/nio/file/Path;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinLevelLoadingScreen",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterRenderFancyMenu",
              "raw": "afterRenderFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinImageButton",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterRenderWidgetFancyMenu",
              "raw": "afterRenderWidgetFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinGenericMessageScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "return_init_FancyMenu",
              "raw": "return_init_FancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinGameRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "before_render_FancyMenu",
              "raw": "before_render_FancyMenu(Lnet/minecraft/client/DeltaTracker;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinGameLoadCookie",
            "method": {
              "argTypes": [
                "com.mojang.realmsclient.client.RealmsClient",
                "net.minecraft.client.main.GameConfig$QuickPlayData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "after_construct_FancyMenu",
              "raw": "after_construct_FancyMenu(Lcom/mojang/realmsclient/client/RealmsClient;Lnet/minecraft/client/main/GameConfig$QuickPlayData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinDisconnectedScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "at_return_screen_init_FancyMenu",
              "raw": "at_return_screen_init_FancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinCreativeModeInventoryScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "before_render_FancyMenu",
              "raw": "before_render_FancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinCreateWorldScreen_WorldTab",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterInitTab_FancyMenu",
              "raw": "afterInitTab_FancyMenu(Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinCreateWorldScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "head_render_FancyMenu",
              "raw": "head_render_FancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinConnectScreen",
            "method": {
              "argTypes": [
                "net.minecraft.network.chat.Component",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterUpdateStatusFancyMenu",
              "raw": "afterUpdateStatusFancyMenu(Lnet/minecraft/network/chat/Component;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinConnectScreen",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "net.minecraft.client.multiplayer.resolver.ServerAddress",
                "net.minecraft.client.multiplayer.ServerData",
                "net.minecraft.client.multiplayer.TransferState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onConnectFancyMenu",
              "raw": "onConnectFancyMenu(Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;Lnet/minecraft/client/multiplayer/ServerData;Lnet/minecraft/client/multiplayer/TransferState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinConnectScreen",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "net.minecraft.client.Minecraft",
                "net.minecraft.client.multiplayer.resolver.ServerAddress",
                "net.minecraft.client.multiplayer.ServerData",
                "boolean",
                "net.minecraft.client.multiplayer.TransferState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onStartConnectingFancyMenu",
              "raw": "onStartConnectingFancyMenu(Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;Lnet/minecraft/client/multiplayer/ServerData;ZLnet/minecraft/client/multiplayer/TransferState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinConnectScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterInitFancyMenu",
              "raw": "afterInitFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractWidget",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "atReturnGetHeightFancyMenu",
              "raw": "atReturnGetHeightFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractWidget",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "atReturnGetWidthFancyMenu",
              "raw": "atReturnGetWidthFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractWidget",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "atReturnGetYFancyMenu",
              "raw": "atReturnGetYFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractWidget",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "atReturnGetXFancyMenu",
              "raw": "atReturnGetXFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractWidget",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.navigation.FocusNavigationEvent",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "beforeNextFocusPathFancyMenu",
              "raw": "beforeNextFocusPathFancyMenu(Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractWidget",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "beforeIsValidClickButtonFancyMenu",
              "raw": "beforeIsValidClickButtonFancyMenu(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractWidget",
            "method": {
              "argTypes": [
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "beforeIsMouseOverFancyMenu",
              "raw": "beforeIsMouseOverFancyMenu(DDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractWidget",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetMessageFancyMenu",
              "raw": "onGetMessageFancyMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractWidget",
            "method": {
              "argTypes": [
                "net.minecraft.client.sounds.SoundManager",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeWidgetClickSoundFancyMenu",
              "raw": "beforeWidgetClickSoundFancyMenu(Lnet/minecraft/client/sounds/SoundManager;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractWidget",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterRenderFancyMenu",
              "raw": "afterRenderFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractWidget",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeRenderFancyMenu",
              "raw": "beforeRenderFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractSliderButton",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeRenderWidgetFancyMenu",
              "raw": "beforeRenderWidgetFancyMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractSelectionList",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "before_blit_in_renderListBackground_FancyMenu",
              "raw": "before_blit_in_renderListBackground_FancyMenu(Lnet/minecraft/client/gui/GuiGraphics;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/GuiGraphics;blit(Lnet/minecraft/resources/ResourceLocation;IIFFIIII)V}]"
            }
          },
          {
            "class": "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinAbstractContainerEventHandler",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.components.events.GuiEventListener",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeSetFocusedFancyMenu",
              "raw": "beforeSetFocusedFancyMenu(Lnet/minecraft/client/gui/components/events/GuiEventListener;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "drippyloadingscreen": "[3.0.0,)",
        "findme": "[1.0.0,)",
        "konkrete": "[1.9.4,)",
        "melody": "[1.0.6,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.47,)",
        "rrls": "[4.0.1,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyPressed$Post": [
          "de.keksuccino.fancymenu.FancyMenuNeoForgeClientEvents#afterScreenKeyPress"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "de.keksuccino.fancymenu.FancyMenuNeoForgeServerEvents#onRegisterServerCommands"
        ]
      },
      "info": {
        "authors": "Keksuccino",
        "classes": "1035",
        "description": "Customize Minecraft's menus with ease!",
        "displayName": "FancyMenu",
        "file": "fancymenu_neoforge_3.4.3_MC_1.21.1.jar",
        "license": "DSMSLv2 (DON'T SNATCH MA STUFF LICENSE v2)",
        "package": "de.keksuccino.fancymenu",
        "version": "3.4.3"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "de.keksuccino.fancymenu.util.resource.preload.ManageResourcePreLoadScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.texteditor.TextEditorScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.resource.ResourceChooserScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.filebrowser.SaveFileScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.filebrowser.ChooseFileScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.filebrowser.AbstractFileBrowserScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.TextInputScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.StringListChooserScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.StringBuilderScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.RangeSliderScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.NotificationScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.ConfirmationScreen",
          "de.keksuccino.fancymenu.util.rendering.ui.screen.CellScreen",
          "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinTitleScreen",
          "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinReceivingLevelScreen",
          "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinProgressScreen",
          "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinPauseScreen",
          "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinLevelLoadingScreen",
          "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinGenericMessageScreen",
          "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinDisconnectedScreen",
          "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinCreativeModeInventoryScreen",
          "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinCreateWorldScreen",
          "de.keksuccino.fancymenu.mixin.mixins.common.client.MixinConnectScreen",
          "de.keksuccino.fancymenu.customization.variables.ManageVariablesScreen",
          "de.keksuccino.fancymenu.customization.screen.ExecuteOnRenderScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.world.player.IsPlayerInDimensionRequirement$IsPlayerInDimensionValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.world.player.IsPlayerInBiomeRequirement$IsPlayerInBiomeValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.world.player.IsGameModeRequirement$IsGameModeValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.world.player.IsEntityNearbyRequirement$IsEntityNearbyValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.world.player.IsEffectActiveRequirement$IsEffectActiveValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.world.player.IsDifficultyRequirement$IsDifficultyValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.gui.IsMenuTitleRequirement$IsMenuTitleValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.gui.IsKeyPressedRequirement$IsKeyPressedValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.IsVariableValueRequirement$IsVariableValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.IsTextRequirement$IsTextValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.IsNumberRequirement$IsNumberValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.IsModLoadedRequirement$IsModLoadedValueConfigScreen",
          "de.keksuccino.fancymenu.customization.loadingrequirement.requirements.IsLanguageRequirement$IsLanguageValueConfigScreen",
          "de.keksuccino.fancymenu.customization.layout.editor.loadingrequirements.ManageRequirementsScreen",
          "de.keksuccino.fancymenu.customization.layout.editor.loadingrequirements.BuildRequirementScreen",
          "de.keksuccino.fancymenu.customization.layout.editor.loadingrequirements.BuildRequirementGroupScreen",
          "de.keksuccino.fancymenu.customization.layout.editor.actions.ManageActionsScreen",
          "de.keksuccino.fancymenu.customization.layout.editor.actions.BuildActionScreen",
          "de.keksuccino.fancymenu.customization.layout.editor.LayoutEditorScreen",
          "de.keksuccino.fancymenu.customization.layout.editor.ChooseSlideshowScreen",
          "de.keksuccino.fancymenu.customization.layout.editor.ChoosePanoramaScreen",
          "de.keksuccino.fancymenu.customization.layout.editor.ChooseAnimationScreen",
          "de.keksuccino.fancymenu.customization.layout.editor.AutoScalingScreen",
          "de.keksuccino.fancymenu.customization.layout.ManageLayoutsScreen",
          "de.keksuccino.fancymenu.customization.element.elements.playerentity.PlayerEntityPoseScreen",
          "de.keksuccino.fancymenu.customization.element.elements.item.ItemKeyScreen",
          "de.keksuccino.fancymenu.customization.element.elements.audio.SetAudioWeightScreen",
          "de.keksuccino.fancymenu.customization.element.elements.audio.SetAudioVolumeScreen",
          "de.keksuccino.fancymenu.customization.element.elements.audio.ManageAudiosScreen",
          "de.keksuccino.fancymenu.customization.element.elements.animationcontroller.TargetElementManagerScreen",
          "de.keksuccino.fancymenu.customization.element.elements.animationcontroller.KeyframeManagerScreen",
          "de.keksuccino.fancymenu.customization.element.elements.animationcontroller.ElementSelectorScreen",
          "de.keksuccino.fancymenu.customization.customgui.ManageOverriddenGuisScreen",
          "de.keksuccino.fancymenu.customization.customgui.ManageCustomGuisScreen",
          "de.keksuccino.fancymenu.customization.customgui.CustomGuiBaseScreen",
          "de.keksuccino.fancymenu.customization.customgui.BuildCustomGuiScreen",
          "de.keksuccino.fancymenu.customization.background.backgrounds.image.ImageMenuBackgroundConfigScreen",
          "de.keksuccino.fancymenu.customization.background.backgrounds.animation.AnimationMenuBackgroundConfigScreen",
          "de.keksuccino.fancymenu.customization.background.ChooseMenuBackgroundScreen",
          "de.keksuccino.fancymenu.customization.action.actions.other.PasteToChatAction$PasteToChatActionValueScreen",
          "de.keksuccino.fancymenu.customization.action.actions.other.EditMinecraftOptionAction$EditMinecraftOptionActionValueScreen",
          "de.keksuccino.fancymenu.WelcomeScreen",
          "de.keksuccino.fancymenu.CreditsScreen"
        ]
      },
      "modifies": [
        "com.mojang.realmsclient.gui.screens.RealmsNotificationsScreen",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.Minecraft$GameLoadCookie",
        "net.minecraft.client.MouseHandler",
        "net.minecraft.client.Options",
        "net.minecraft.client.ResourceLoadStateTracker",
        "net.minecraft.client.gui.Gui",
        "net.minecraft.client.gui.GuiGraphics",
        "net.minecraft.client.gui.components.AbstractButton",
        "net.minecraft.client.gui.components.AbstractSelectionList",
        "net.minecraft.client.gui.components.AbstractSliderButton",
        "net.minecraft.client.gui.components.AbstractWidget",
        "net.minecraft.client.gui.components.BossHealthOverlay",
        "net.minecraft.client.gui.components.Button",
        "net.minecraft.client.gui.components.CommandSuggestions",
        "net.minecraft.client.gui.components.CommandSuggestions$SuggestionsList",
        "net.minecraft.client.gui.components.CycleButton",
        "net.minecraft.client.gui.components.EditBox",
        "net.minecraft.client.gui.components.ImageButton",
        "net.minecraft.client.gui.components.SplashRenderer",
        "net.minecraft.client.gui.components.events.AbstractContainerEventHandler",
        "net.minecraft.client.gui.components.tabs.TabNavigationBar",
        "net.minecraft.client.gui.screens.ChatScreen",
        "net.minecraft.client.gui.screens.ConnectScreen",
        "net.minecraft.client.gui.screens.DisconnectedScreen",
        "net.minecraft.client.gui.screens.GenericMessageScreen",
        "net.minecraft.client.gui.screens.LevelLoadingScreen",
        "net.minecraft.client.gui.screens.LoadingOverlay",
        "net.minecraft.client.gui.screens.PauseScreen",
        "net.minecraft.client.gui.screens.ProgressScreen",
        "net.minecraft.client.gui.screens.ReceivingLevelScreen",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.client.gui.screens.TitleScreen",
        "net.minecraft.client.gui.screens.inventory.CreativeModeInventoryScreen",
        "net.minecraft.client.gui.screens.multiplayer.ServerSelectionList$OnlineServerEntry",
        "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen",
        "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen$GameTab",
        "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen$MoreTab",
        "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen$WorldTab",
        "net.minecraft.client.gui.screens.worldselection.SwitchGrid$SwitchBuilder",
        "net.minecraft.client.gui.screens.worldselection.WorldSelectionList$WorldListEntry",
        "net.minecraft.client.model.PlayerModel",
        "net.minecraft.client.multiplayer.ServerList",
        "net.minecraft.client.renderer.GameRenderer",
        "net.minecraft.client.resources.language.ClientLanguage",
        "net.minecraft.client.sounds.MusicManager",
        "net.minecraft.client.sounds.SoundEngine",
        "net.minecraft.util.StringDecomposer",
        "net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess",
        "net.neoforged.neoforge.client.loading.NeoForgeLoadingOverlay"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom Server Commands",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "farmersdelight": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "vectorwing.farmersdelight.common.mixin.KeepRichSoilTreeMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.LevelSimulatedReader",
                "java.util.function.BiConsumer",
                "net.minecraft.util.RandomSource",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cancelSetDirtIfRichSoil",
              "raw": "cancelSetDirtIfRichSoil(Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "vectorwing.farmersdelight.common.mixin.KeepRichSoilGiantTreeMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.LevelSimulatedReader",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "keepRichSoil",
              "raw": "keepRichSoil(Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "vectorwing.farmersdelight.common.mixin.HideBlockBreakProgressMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.BlockAndTintGetter",
                "com.mojang.blaze3d.vertex.PoseStack",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "net.neoforged.neoforge.client.model.data.ModelData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "hideBlockDamage",
              "raw": "hideBlockDamage(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/neoforged/neoforge/client/model/data/ModelData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "vectorwing.farmersdelight.common.mixin.CuttingBoardDispenserMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.entity.DispenserBlockEntity",
                "net.minecraft.core.dispenser.BlockSource",
                "int",
                "net.minecraft.world.item.ItemStack"
              ],
              "name": "onCuttingBoardDispenseFromInject",
              "raw": "onCuttingBoardDispenseFromInject(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/entity/DispenserBlockEntity;Lnet/minecraft/core/dispenser/BlockSource;ILnet/minecraft/world/item/ItemStack;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/block/DispenserBlock;getDispenseMethod(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "vectorwing.farmersdelight.common.mixin.CanvasSignEditScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.entity.SignBlockEntity",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "openCanvasSignEditScreen",
              "raw": "openCanvasSignEditScreen(Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "vectorwing.farmersdelight.common.mixin.CampfireBaleMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "isFDSmokeSource",
              "raw": "isFDSmokeSource(Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "crafttweaker": "[14.0.6,)",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.4,)"
      },
      "events": {
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "vectorwing.farmersdelight.common.block.entity.CuttingBoardBlockEntity#registerCapabilities",
          "vectorwing.farmersdelight.common.block.entity.CookingPotBlockEntity#registerCapabilities"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "vectorwing.farmersdelight.client.event.ClientSetupEvents#onRegisterRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientTooltipComponentFactoriesEvent": [
          "vectorwing.farmersdelight.client.event.ClientSetupEvents#registerCustomTooltipRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "vectorwing.farmersdelight.client.event.ClientSetupEvents#registerGuiLayers"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "vectorwing.farmersdelight.client.event.ClientSetupEvents#registerMenuScreens"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "vectorwing.farmersdelight.client.event.ClientSetupEvents#registerParticles"
        ],
        "net.neoforged.neoforge.client.event.RegisterRecipeBookCategoriesEvent": [
          "vectorwing.farmersdelight.client.event.ClientSetupEvents#registerRecipeBookCategories"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "vectorwing.farmersdelight.client.event.ClientSetupEvents#registerClientExtensions"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "vectorwing.farmersdelight.data.DataGenerators#gatherData"
        ],
        "net.neoforged.neoforge.event.ModifyDefaultComponentsEvent": [
          "vectorwing.farmersdelight.common.event.CommonModBusEvents#onModifyDefaultComponents"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Pre": [
          "vectorwing.farmersdelight.common.item.SkilletItem$SkilletEvents#playSkilletAttackSound"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent$Finish": [
          "vectorwing.farmersdelight.common.event.CommonEvents#handleVanillaSoupEffects"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "vectorwing.farmersdelight.common.item.enchantment.BackstabbingEnchantment$BackstabbingEvent#onKnifeBackstab"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingKnockBackEvent": [
          "vectorwing.farmersdelight.common.item.KnifeItem$KnifeEvents#onKnifeKnockback"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "vectorwing.farmersdelight.client.event.TooltipEvents#addTooltipToVanillaSoups"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "vectorwing.farmersdelight.common.item.HorseFeedItem$HorseFeedEvent#onHorseFeedApplied",
          "vectorwing.farmersdelight.common.item.DogFoodItem$DogFoodEvent#onDogFoodApplied"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "vectorwing.farmersdelight.common.item.KnifeItem$KnifeEvents#onCakeInteraction",
          "vectorwing.farmersdelight.common.block.CuttingBoardBlock$ToolCarvingEvent#onSneakPlaceTool"
        ],
        "net.neoforged.neoforge.event.village.VillagerTradesEvent": [
          "vectorwing.farmersdelight.common.event.VillagerEvents#onVillagerTrades"
        ],
        "net.neoforged.neoforge.event.village.WandererTradesEvent": [
          "vectorwing.farmersdelight.common.event.VillagerEvents#onWandererTrades"
        ]
      },
      "info": {
        "authors": "vectorwing",
        "classes": "244",
        "description": "A cozy farming and cooking expansion for Minecraft!",
        "displayName": "Farmer's Delight",
        "file": "FarmersDelight-1.21.1-1.2.7.jar",
        "license": "MIT License",
        "package": "vectorwing.farmersdelight",
        "version": "1.2.7"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "vectorwing.farmersdelight.client.gui.HangingCanvasSignEditScreen",
          "vectorwing.farmersdelight.client.gui.CookingPotScreen",
          "vectorwing.farmersdelight.client.gui.CanvasSignEditScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "vectorwing.farmersdelight.client.particle.SteamParticle",
          "vectorwing.farmersdelight.client.particle.StarParticle"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "vectorwing.farmersdelight.client.renderer.SkilletItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "vectorwing.farmersdelight.client.renderer.StoveRenderer",
          "vectorwing.farmersdelight.client.renderer.SkilletRenderer",
          "vectorwing.farmersdelight.client.renderer.HangingCanvasSignRenderer",
          "vectorwing.farmersdelight.client.renderer.CuttingBoardRenderer",
          "vectorwing.farmersdelight.client.renderer.CanvasSignRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "vectorwing.farmersdelight.client.model.WrappedItemModel"
        ],
        "net.minecraft.data.DataProvider": [
          "vectorwing.farmersdelight.data.tools.StructureUpdater",
          "vectorwing.farmersdelight.data.Recipes",
          "vectorwing.farmersdelight.data.ItemTags",
          "vectorwing.farmersdelight.data.ItemModels",
          "vectorwing.farmersdelight.data.EntityTags",
          "vectorwing.farmersdelight.data.EnchantmentTags",
          "vectorwing.farmersdelight.data.DataMaps",
          "vectorwing.farmersdelight.data.DamageTypeTags",
          "vectorwing.farmersdelight.data.BlockTags",
          "vectorwing.farmersdelight.data.BlockStates",
          "vectorwing.farmersdelight.data.Advancements"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "vectorwing.farmersdelight.common.effect.NourishmentEffect",
          "vectorwing.farmersdelight.common.effect.ComfortEffect"
        ],
        "net.minecraft.world.entity.Entity": [
          "vectorwing.farmersdelight.common.entity.RottenTomatoEntity"
        ],
        "net.minecraft.world.item.Item": [
          "vectorwing.farmersdelight.common.registry.ModItems$1",
          "vectorwing.farmersdelight.common.item.SkilletItem",
          "vectorwing.farmersdelight.common.item.RottenTomatoItem",
          "vectorwing.farmersdelight.common.item.RopeItem",
          "vectorwing.farmersdelight.common.item.RiceItem",
          "vectorwing.farmersdelight.common.item.PopsicleItem",
          "vectorwing.farmersdelight.common.item.MushroomColonyItem",
          "vectorwing.farmersdelight.common.item.MilkBottleItem",
          "vectorwing.farmersdelight.common.item.MelonJuiceItem",
          "vectorwing.farmersdelight.common.item.KnifeItem",
          "vectorwing.farmersdelight.common.item.HotCocoaItem",
          "vectorwing.farmersdelight.common.item.HorseFeedItem",
          "vectorwing.farmersdelight.common.item.FuelItem",
          "vectorwing.farmersdelight.common.item.FuelBlockItem",
          "vectorwing.farmersdelight.common.item.DrinkableItem",
          "vectorwing.farmersdelight.common.item.DogFoodItem",
          "vectorwing.farmersdelight.common.item.CookingPotItem",
          "vectorwing.farmersdelight.common.item.ConsumableItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "vectorwing.farmersdelight.common.crafting.FoodServingRecipe",
          "vectorwing.farmersdelight.common.crafting.CuttingBoardRecipe",
          "vectorwing.farmersdelight.common.crafting.CookingPotRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "vectorwing.farmersdelight.common.block.WildRiceBlock",
          "vectorwing.farmersdelight.common.block.WildCropBlock",
          "vectorwing.farmersdelight.common.block.WallHangingCanvasSignBlock",
          "vectorwing.farmersdelight.common.block.WallCanvasSignBlock",
          "vectorwing.farmersdelight.common.block.TomatoVineBlock",
          "vectorwing.farmersdelight.common.block.TatamiMatBlock",
          "vectorwing.farmersdelight.common.block.TatamiHalfMatBlock",
          "vectorwing.farmersdelight.common.block.TatamiBlock",
          "vectorwing.farmersdelight.common.block.StrawBaleBlock",
          "vectorwing.farmersdelight.common.block.StoveBlock",
          "vectorwing.farmersdelight.common.block.StandingCanvasSignBlock",
          "vectorwing.farmersdelight.common.block.SkilletBlock",
          "vectorwing.farmersdelight.common.block.ShepherdsPieBlock",
          "vectorwing.farmersdelight.common.block.SandyShrubBlock",
          "vectorwing.farmersdelight.common.block.SafetyNetBlock",
          "vectorwing.farmersdelight.common.block.RopeBlock",
          "vectorwing.farmersdelight.common.block.RoastChickenBlock",
          "vectorwing.farmersdelight.common.block.RichSoilFarmlandBlock",
          "vectorwing.farmersdelight.common.block.RichSoilBlock",
          "vectorwing.farmersdelight.common.block.RiceRollMedleyBlock",
          "vectorwing.farmersdelight.common.block.RicePaniclesBlock",
          "vectorwing.farmersdelight.common.block.RiceBlock",
          "vectorwing.farmersdelight.common.block.RiceBaleBlock",
          "vectorwing.farmersdelight.common.block.PieBlock",
          "vectorwing.farmersdelight.common.block.OrganicCompostBlock",
          "vectorwing.farmersdelight.common.block.OnionBlock",
          "vectorwing.farmersdelight.common.block.MushroomColonyBlock",
          "vectorwing.farmersdelight.common.block.HoneyGlazedHamBlock",
          "vectorwing.farmersdelight.common.block.FeastBlock",
          "vectorwing.farmersdelight.common.block.CuttingBoardBlock",
          "vectorwing.farmersdelight.common.block.CookingPotBlock",
          "vectorwing.farmersdelight.common.block.CeilingHangingCanvasSignBlock",
          "vectorwing.farmersdelight.common.block.CanvasRugBlock",
          "vectorwing.farmersdelight.common.block.CabinetBlock",
          "vectorwing.farmersdelight.common.block.CabbageBlock",
          "vectorwing.farmersdelight.common.block.BuddingTomatoBlock",
          "vectorwing.farmersdelight.common.block.BuddingBushBlock",
          "vectorwing.farmersdelight.common.block.BasketBlock"
        ]
      },
      "modifies": [
        "net.minecraft.client.player.LocalPlayer",
        "net.minecraft.client.renderer.block.BlockRenderDispatcher",
        "net.minecraft.world.level.block.CampfireBlock",
        "net.minecraft.world.level.block.DispenserBlock",
        "net.minecraft.world.level.levelgen.feature.Feature",
        "net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacer"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Structures",
        "Custom Tag Assignments",
        "Custom Tooltip Components",
        "Custom World Generation",
        "Has Capability Providers",
        "Listens to Entity Damage Events",
        "Listens to Entity Interaction Events",
        "Listens to Entity Knockback Events",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Default Components",
        "Modifies Methods",
        "Modifies Villager Trades",
        "Modifies Wandering Trader Trades",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "farmingforblockheads": {
      "dependencies": {
        "balm": "[21.0.0,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21-beta,)"
      },
      "info": {
        "authors": "BlayTheNinth",
        "classes": "81",
        "description": "Adds a seed market with a search bar and a scrolling grid and more farming utilities.",
        "displayName": "Farming for Blockheads",
        "file": "farmingforblockheads-neoforge-1.21.1-21.1.7.jar",
        "license": "All Rights Reserved",
        "package": "net.blay09.mods.farmingforblockheads",
        "version": "21.1.7"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.blay09.mods.farmingforblockheads.client.gui.screen.MarketScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "net.blay09.mods.farmingforblockheads.client.render.FeedingTroughRenderer",
          "net.blay09.mods.farmingforblockheads.client.render.ChickenNestRenderer"
        ],
        "net.minecraft.world.entity.Entity": [
          "net.blay09.mods.farmingforblockheads.entity.MerchantEntity"
        ],
        "net.minecraft.world.entity.Mob": [
          "net.blay09.mods.farmingforblockheads.entity.MerchantEntity"
        ],
        "net.minecraft.world.item.Item": [
          "net.blay09.mods.farmingforblockheads.item.FertilizerItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "net.blay09.mods.farmingforblockheads.recipe.MarketRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.blay09.mods.farmingforblockheads.block.FeedingTroughBlock",
          "net.blay09.mods.farmingforblockheads.block.MarketBlock",
          "net.blay09.mods.farmingforblockheads.block.FertilizedFarmlandBlock",
          "net.blay09.mods.farmingforblockheads.block.ChickenNestBlock"
        ]
      },
      "modifies": [
        "net.minecraft.world.level.block.FarmBlock"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "farsight_view": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.farsight.mixin.ClientWorldMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientPacketListener",
                "net.minecraft.client.multiplayer.ClientLevel$ClientLevelData",
                "net.minecraft.resources.ResourceKey",
                "net.minecraft.core.Holder",
                "int",
                "int",
                "java.util.function.Supplier",
                "net.minecraft.client.renderer.LevelRenderer",
                "boolean",
                "long",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lnet/minecraft/client/multiplayer/ClientPacketListener;Lnet/minecraft/client/multiplayer/ClientLevel$ClientLevelData;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Holder;IILjava/util/function/Supplier;Lnet/minecraft/client/renderer/LevelRenderer;ZJLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.farsight.mixin.ClientPlayNetHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundForgetLevelChunkPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onChunkUnload",
              "raw": "onChunkUnload(Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.farsight.mixin.ClientOptionsMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "cupboard": "[1.21-1.4,)",
        "minecraft": "[1.21,1.30)",
        "neoforge": "[20,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.farsight.FarsightMod#clientSetup"
        ]
      },
      "info": {
        "authors": "Someaddon",
        "classes": "8",
        "description": "Simple efficient mod to yield higher view distances on client side, regardless of serverside settings\n",
        "displayName": "Farsight mod",
        "file": "farsight-1.21-3.8.jar",
        "license": "ARR",
        "package": "com.farsight",
        "version": "3.8"
      },
      "modifies": [
        "net.caffeinemc.mods.sodium.client.gui.SodiumGameOptionPages",
        "net.minecraft.client.Options",
        "net.minecraft.client.multiplayer.ClientLevel",
        "net.minecraft.client.multiplayer.ClientPacketListener"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "ferritecore": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "malte0811.ferritecore.mixin.threaddetec.PalettedContainerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "redirectBuildThreadingDetector",
              "raw": "redirectBuildThreadingDetector(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "malte0811.ferritecore.mixin.mrl.ModelResourceLocationMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "constructTail",
              "raw": "constructTail(Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "malte0811.ferritecore.mixin.modelsides.SimpleBakedModelMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "minimizeFaceLists",
              "raw": "minimizeFaceLists(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "malte0811.ferritecore.mixin.dedupbakedquad.SimpleModelBuilderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.Direction",
                "net.minecraft.client.renderer.block.model.BakedQuad",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "deduplicate",
              "raw": "deduplicate(Lnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BakedQuad;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "malte0811.ferritecore.mixin.dedupbakedquad.SimpleModelBuilderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.block.model.BakedQuad",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "deduplicate",
              "raw": "deduplicate(Lnet/minecraft/client/renderer/block/model/BakedQuad;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "malte0811.ferritecore.mixin.blockstatecache.BlockStateBaseMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cacheStateTail",
              "raw": "cacheStateTail(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "malte0811.ferritecore.mixin.blockstatecache.BlockStateBaseMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cacheStateHead",
              "raw": "cacheStateHead(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.51,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent$RegisterStageEvent": [
          "malte0811.ferritecore.ModClientForge#registerReloadListener"
        ]
      },
      "info": {
        "authors": "malte0811",
        "classes": "75",
        "description": "Reduces memory usage.\n",
        "displayName": "Ferrite Core",
        "file": "ferritecore-7.0.2-neoforge.jar",
        "license": "MIT",
        "package": "malte0811.ferritecore",
        "version": "7.0.2"
      },
      "modifies": [
        "net.minecraft.client.renderer.block.model.BakedQuad",
        "net.minecraft.client.renderer.block.model.multipart.AndCondition",
        "net.minecraft.client.renderer.block.model.multipart.KeyValueCondition",
        "net.minecraft.client.renderer.block.model.multipart.OrCondition",
        "net.minecraft.client.resources.model.ModelResourceLocation",
        "net.minecraft.client.resources.model.MultiPartBakedModel",
        "net.minecraft.client.resources.model.MultiPartBakedModel$Builder",
        "net.minecraft.client.resources.model.SimpleBakedModel",
        "net.minecraft.client.resources.model.SimpleBakedModel$Builder",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase$Cache",
        "net.minecraft.world.level.block.state.StateHolder",
        "net.minecraft.world.level.chunk.PalettedContainer",
        "net.minecraft.world.phys.shapes.ArrayVoxelShape",
        "net.minecraft.world.phys.shapes.BitSetDiscreteVoxelShape",
        "net.minecraft.world.phys.shapes.DiscreteVoxelShape",
        "net.minecraft.world.phys.shapes.SliceShape",
        "net.minecraft.world.phys.shapes.SubShape",
        "net.minecraft.world.phys.shapes.VoxelShape"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "findme": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.buuz135.findme.mixin.ParticleEngineAccessor",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "registerProviders",
              "raw": "registerProviders(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.buuz135.findme.mixin.MixinSlotRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "net.minecraft.world.inventory.Slot",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderSlot",
              "raw": "renderSlot(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/inventory/Slot;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "architectury": "[2.3.23,)",
        "minecraft": "[1.19.1,)",
        "neoforge": "[1,)"
      },
      "info": {
        "authors": "Buuz135",
        "classes": "24",
        "description": "FindMe allows you to search for items in nearby inventories by pressing a key.\"\n",
        "displayName": "FindMe",
        "file": "findme-3.3.1-neoforge.jar",
        "license": "MIT",
        "package": "com.buuz135.findme",
        "version": "3.3.1"
      },
      "inheritance": {
        "net.minecraft.client.particle.Particle": [
          "com.buuz135.findme.client.ParticlePosition"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen",
        "net.minecraft.client.particle.ParticleEngine"
      ],
      "summary": [
        "Custom Particles",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "fishingreal": {
      "dependencies": {
        "aquaculture": "[1.21-2.7.5,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21.0,)"
      },
      "info": {
        "authors": "ExpensiveKoala, ThatGravyBoat, AlexNijjar",
        "classes": "9",
        "description": "A mod which allows you to reel in real fish instead of the fish in item form.\n",
        "displayName": "Fishingreal",
        "file": "Fishingreal-1.21-1.9.0.jar",
        "license": "MIT",
        "package": "koala.fishingreal",
        "version": "1.21-1.9.0"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "koala.fishingreal.forge.compat.AquacultureCompat$1"
        ]
      },
      "modifies": [
        "com.teammetallurgy.aquaculture.entity.AquaFishingBobberEntity"
      ],
      "summary": [
        "Custom Entities"
      ]
    },
    "flatbedrock": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.sunekaer.flatbedrock.mixin.FlatBedrockMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "trueAtAndBelow",
              "raw": "trueAtAndBelow(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.sunekaer.flatbedrock.mixin.FlatBedrockMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "falseAtAndAbove",
              "raw": "falseAtAndAbove(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21,)"
      },
      "info": {
        "classes": "6",
        "description": "This mod changes the vanilia bedrock generator to make flat bedrock in the overworld and nether",
        "displayName": "Flat Bedrock",
        "file": "flatbedrock-neoforge-87.0.0.jar",
        "license": "MIT License",
        "package": "com.sunekaer.flatbedrock",
        "version": "87.0.0"
      },
      "modifies": [
        "biomesoplenty.common.worldgen.BOPSurfaceRuleData",
        "net.minecraft.world.level.levelgen.SurfaceRules$VerticalGradientConditionSource",
        "terrablender.worldgen.TBSurfaceRuleData"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "flopper": {
      "annotations": {
        "net.minecraft.gametest.framework.GameTest": [
          {
            "class": "org.cyclops.flopper.gametest.GameTestsCommon",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFillFromWorldWaterLava",
              "raw": "testFillFromWorldWaterLava(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "flopper:empty10"
            }
          },
          {
            "class": "org.cyclops.flopper.gametest.GameTestsCommon",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFillFromInfiniteWaterPool",
              "raw": "testFillFromInfiniteWaterPool(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "flopper:empty10"
            }
          },
          {
            "class": "org.cyclops.flopper.gametest.GameTestsCommon",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testEmptyToFlopper",
              "raw": "testEmptyToFlopper(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "flopper:empty10"
            }
          },
          {
            "class": "org.cyclops.flopper.gametest.GameTestsCommon",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFillFromFlopper",
              "raw": "testFillFromFlopper(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "flopper:empty10"
            }
          },
          {
            "class": "org.cyclops.flopper.gametest.GameTestsCommon",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testEmptyToWorld",
              "raw": "testEmptyToWorld(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "flopper:empty10"
            }
          },
          {
            "class": "org.cyclops.flopper.gametest.GameTestsCommon",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFillFromWorldLava",
              "raw": "testFillFromWorldLava(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "flopper:empty10"
            }
          },
          {
            "class": "org.cyclops.flopper.gametest.GameTestsCommon",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFillFromWorld",
              "raw": "testFillFromWorld(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "flopper:empty10"
            }
          },
          {
            "class": "org.cyclops.flopper.gametest.GameTestsCommon",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testEmptyToBucket",
              "raw": "testEmptyToBucket(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "flopper:empty10"
            }
          },
          {
            "class": "org.cyclops.flopper.gametest.GameTestsCommon",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFillFromBucket",
              "raw": "testFillFromBucket(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "flopper:empty10"
            }
          },
          {
            "class": "org.cyclops.flopper.gametest.GameTestsCommon",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testPlacementDirectionDown",
              "raw": "testPlacementDirectionDown(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "flopper:empty10"
            }
          },
          {
            "class": "org.cyclops.flopper.gametest.GameTestsCommon",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testPlacementDirection",
              "raw": "testPlacementDirection(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "flopper:empty10"
            }
          }
        ]
      },
      "dependencies": {
        "cyclopscore": "[1.25.2,)",
        "minecraft": "[1.21.1,]",
        "neoforge": "[21.1.2,)"
      },
      "events": {
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "org.cyclops.flopper.block.BlockFlopperNeoForge#onRightClick"
        ]
      },
      "info": {
        "classes": "21",
        "description": "The Flopper is an early-game block to move around fluids, just like the Hopper does for items.",
        "displayName": "Flopper",
        "file": "flopper-1.21.1-neoforge-1.1.8-174.jar",
        "license": "MIT",
        "package": "org.cyclops.flopper",
        "updateUrl": "https://raw.githubusercontent.com/CyclopsMC/Versions/master/neoforge_update/flopper.json",
        "version": "1.1.8"
      },
      "inheritance": {
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "org.cyclops.flopper.client.render.blockentity.RenderBlockEntityFlopperNeoForge"
        ],
        "net.minecraft.world.level.block.Block": [
          "org.cyclops.flopper.block.BlockFlopper",
          "org.cyclops.flopper.block.BlockFlopperNeoForge"
        ]
      },
      "summary": [
        "Automatic Testing",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Loot Tables",
        "Listens to Right Click Block Events",
        "Localization"
      ]
    },
    "fluxnetworks": {
      "dependencies": {
        "jei": "[19,)",
        "minecraft": "[1.21.1,1.22)",
        "modernui": "[3.11,)",
        "neoforge": "[21.1.0,)",
        "the_one_probe": "[12,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "sonar.fluxnetworks.register.ClientRegistration#setup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "sonar.fluxnetworks.register.Registration#setup"
        ],
        "net.neoforged.fml.event.lifecycle.InterModEnqueueEvent": [
          "sonar.fluxnetworks.register.Registration#enqueueIMC"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "sonar.fluxnetworks.register.Registration#registerCapabilities"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingOut": [
          "sonar.fluxnetworks.register.ClientEventHandler#onPlayerLoggedOut"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "sonar.fluxnetworks.register.ClientRegistration#registerEntityRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "sonar.fluxnetworks.register.ClientRegistration#registerBlockColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "sonar.fluxnetworks.register.ClientRegistration#registerItemColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "sonar.fluxnetworks.register.ClientRegistration#registerMenuScreens"
        ],
        "net.neoforged.neoforge.common.world.chunk.RegisterTicketControllersEvent": [
          "sonar.fluxnetworks.register.Registration#registerTicketControllers"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "sonar.fluxnetworks.register.Registration#gatherData"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "sonar.fluxnetworks.register.EventHandler#onRegisterCommands"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$Clone": [
          "sonar.fluxnetworks.register.EventHandler#onPlayerClone"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "sonar.fluxnetworks.register.EventHandler#onPlayerJoined"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickBlock": [
          "sonar.fluxnetworks.register.EventHandler#onPlayerInteract"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppedEvent": [
          "sonar.fluxnetworks.register.EventHandler#onServerStopped"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "sonar.fluxnetworks.register.EventHandler#onServerTick"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "sonar.fluxnetworks.register.Registration#registerPayloadHandler"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "sonar.fluxnetworks.register.Registration#register"
        ]
      },
      "info": {
        "authors": "Sonar Sonic, BloCamLimb",
        "classes": "222",
        "description": "Wireless Energy Networks",
        "displayName": "Flux Networks",
        "file": "FluxNetworks-1.21.1-8.0.0.jar",
        "license": "MIT",
        "package": "sonar.fluxnetworks",
        "version": "8.0.0"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "sonar.fluxnetworks.client.gui.tab.GuiTabWireless",
          "sonar.fluxnetworks.client.gui.tab.GuiTabStatistics",
          "sonar.fluxnetworks.client.gui.tab.GuiTabSettings",
          "sonar.fluxnetworks.client.gui.tab.GuiTabSelection",
          "sonar.fluxnetworks.client.gui.tab.GuiTabMembers",
          "sonar.fluxnetworks.client.gui.tab.GuiTabEditAbstract",
          "sonar.fluxnetworks.client.gui.tab.GuiTabDetailedSelection",
          "sonar.fluxnetworks.client.gui.tab.GuiTabCreate",
          "sonar.fluxnetworks.client.gui.tab.GuiTabConnections",
          "sonar.fluxnetworks.client.gui.popup.PopupNetworkPassword",
          "sonar.fluxnetworks.client.gui.popup.PopupMemberEdit",
          "sonar.fluxnetworks.client.gui.popup.PopupCustomColor",
          "sonar.fluxnetworks.client.gui.popup.PopupConnectionEdit",
          "sonar.fluxnetworks.client.gui.GuiFluxDeviceHome",
          "sonar.fluxnetworks.client.gui.GuiFluxAdminHome",
          "sonar.fluxnetworks.client.gui.basic.GuiTabPages",
          "sonar.fluxnetworks.client.gui.basic.GuiTabCore",
          "sonar.fluxnetworks.client.gui.basic.GuiPopupHost",
          "sonar.fluxnetworks.client.gui.basic.GuiPopupCore",
          "sonar.fluxnetworks.client.gui.basic.GuiFocusable",
          "sonar.fluxnetworks.client.gui.basic.GuiFluxCore"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "sonar.fluxnetworks.client.render.FluxStorageItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "sonar.fluxnetworks.client.render.FluxStorageEntityRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "sonar.fluxnetworks.data.tags.FluxItemTagsProvider",
          "sonar.fluxnetworks.data.tags.FluxBlockTagsProvider",
          "sonar.fluxnetworks.data.loot.FluxLootTableProvider"
        ],
        "net.minecraft.world.item.Item": [
          "sonar.fluxnetworks.common.item.ItemFluxConfigurator",
          "sonar.fluxnetworks.common.item.ItemAdminConfigurator",
          "sonar.fluxnetworks.common.item.FluxStorageItem",
          "sonar.fluxnetworks.common.item.FluxDustItem",
          "sonar.fluxnetworks.common.item.FluxDeviceItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "sonar.fluxnetworks.common.crafting.FluxStorageRecipe",
          "sonar.fluxnetworks.common.crafting.ConfigWipeRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "sonar.fluxnetworks.common.block.FluxStorageBlock",
          "sonar.fluxnetworks.common.block.FluxStorageBlock$Herculean",
          "sonar.fluxnetworks.common.block.FluxStorageBlock$Gargantuan",
          "sonar.fluxnetworks.common.block.FluxStorageBlock$Basic",
          "sonar.fluxnetworks.common.block.FluxPointBlock",
          "sonar.fluxnetworks.common.block.FluxPlugBlock",
          "sonar.fluxnetworks.common.block.FluxDeviceBlock",
          "sonar.fluxnetworks.common.block.FluxControllerBlock",
          "sonar.fluxnetworks.common.block.FluxConnectorBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "sonar.fluxnetworks.common.connection.FluxNetworkData"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Network Packets",
        "Custom Recipe Types",
        "Custom Server Commands",
        "Custom Tag Assignments",
        "Has Capability Providers",
        "Listens to Left Click Block Events",
        "Listens to Player Login Events",
        "Listens to Server Stopped Events",
        "Localization",
        "Runs Server Tick Logic",
        "Stores Data in World Saves",
        "Uses Data Generators"
      ]
    },
    "framedblocks": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "xfacthd.framedblocks.mixin.MixinMapItemSavedData",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "net.minecraft.core.HolderLookup$Provider",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "framedblocks$saveCustomMapMarkers",
              "raw": "framedblocks$saveCustomMapMarkers(Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/HolderLookup$Provider;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "xfacthd.framedblocks.mixin.MixinMapItemSavedData",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "net.minecraft.core.HolderLookup$Provider",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "framedblocks$loadCustomMapMarkers",
              "raw": "framedblocks$loadCustomMapMarkers(Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/HolderLookup$Provider;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "xfacthd.framedblocks.mixin.MixinMapItemSavedData",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "framedblocks$updateFramedItemFrameMarker",
              "raw": "framedblocks$updateFramedItemFrameMarker(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/item/ItemStack;getOrDefault(Lnet/minecraft/core/component/DataComponentType;Ljava/lang/Object;)Ljava/lang/Object;}]"
            }
          },
          {
            "class": "xfacthd.framedblocks.mixin.client.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "framedblocks$handleRedrawOnGraphicsModeChange",
              "raw": "framedblocks$handleRedrawOnGraphicsModeChange(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "xfacthd.framedblocks.mixin.client.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "net.minecraft.client.renderer.entity.EntityRenderDispatcher",
                "net.minecraft.client.renderer.blockentity.BlockEntityRenderDispatcher",
                "net.minecraft.client.renderer.RenderBuffers",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "framedblocks$captureInitialGraphicsMode",
              "raw": "framedblocks$captureInitialGraphicsMode(Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher;Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher;Lnet/minecraft/client/renderer/RenderBuffers;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "xfacthd.framedblocks.mixin.client.DevMixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.mojang.blaze3d.vertex.PoseStack"
              ],
              "name": "framedblocks$renderAfterBlockEntitiesBeforeBatchEnd",
              "raw": "framedblocks$renderAfterBlockEntitiesBeforeBatchEnd(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/mojang/blaze3d/vertex/PoseStack;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;checkPoseStack(Lcom/mojang/blaze3d/vertex/PoseStack;)V, ordinal=1}]"
            }
          }
        ]
      },
      "dependencies": {
        "ae2": "[19.0.19-beta,)",
        "athena": "[4.0.0,)",
        "atlasviewer": "[9.1.0,)",
        "buildinggadgets": "[3.14.0,)",
        "create": "[0.5.1.d-11,)",
        "diagonalblocks": "[21.1.0,)",
        "emi": "[1.1.10,)",
        "guidebook": "[3.8.0,)",
        "jei": "[19.16.4.159,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21.1.51,)",
        "rei": "[16.0.744,)",
        "supplementaries": "[1.20-2.5.18,)"
      },
      "events": {
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "xfacthd.framedblocks.common.datagen.GeneratorHandler#onGatherData"
        ]
      },
      "info": {
        "authors": "XFactHD",
        "classes": "1511",
        "description": "Fancy building blocks",
        "displayName": "FramedBlocks",
        "file": "FramedBlocks-10.2.4.jar",
        "license": "LGPL v3",
        "package": "xfacthd.framedblocks",
        "version": "10.2.4"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "xfacthd.framedblocks.client.screen.PoweredFramingSawScreen",
          "xfacthd.framedblocks.client.screen.FramingSawWithEncoderScreen",
          "xfacthd.framedblocks.client.screen.FramingSawScreen",
          "xfacthd.framedblocks.client.screen.FramedStorageScreen",
          "xfacthd.framedblocks.client.screen.FramedSignScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "xfacthd.framedblocks.client.render.particle.FluidSpriteParticle"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "xfacthd.framedblocks.client.render.item.TankItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "xfacthd.framedblocks.client.render.block.FramedTankRenderer",
          "xfacthd.framedblocks.client.render.block.FramedSignRenderer",
          "xfacthd.framedblocks.client.render.block.FramedItemFrameRenderer",
          "xfacthd.framedblocks.client.render.block.FramedHangingSignRenderer",
          "xfacthd.framedblocks.client.render.block.FramedChestRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "xfacthd.framedblocks.client.model.FramedTankItemModel",
          "xfacthd.framedblocks.client.model.FramedDoubleBlockModel",
          "xfacthd.framedblocks.client.model.FramedBlockModel",
          "xfacthd.framedblocks.client.model.FluidModel",
          "xfacthd.framedblocks.client.loader.overlay.OverlayModel",
          "xfacthd.framedblocks.api.model.DataAwareItemModel",
          "xfacthd.framedblocks.api.model.AbstractFramedBlockModel"
        ],
        "net.minecraft.data.DataProvider": [
          "xfacthd.framedblocks.common.datagen.providers.FramingSawRecipeProvider",
          "xfacthd.framedblocks.common.datagen.providers.FramedSpriteSourceProvider",
          "xfacthd.framedblocks.common.datagen.providers.FramedRecipeProvider",
          "xfacthd.framedblocks.common.datagen.providers.FramedLootTableProvider",
          "xfacthd.framedblocks.common.datagen.providers.FramedLanguageProvider",
          "xfacthd.framedblocks.common.datagen.providers.FramedItemTagProvider",
          "xfacthd.framedblocks.common.datagen.providers.FramedItemModelProvider",
          "xfacthd.framedblocks.common.datagen.providers.FramedBlockTagProvider",
          "xfacthd.framedblocks.common.datagen.providers.FramedBlockStateProvider",
          "xfacthd.framedblocks.common.datagen.builders.book.GuidebookProvider"
        ],
        "net.minecraft.world.item.Item": [
          "xfacthd.framedblocks.common.item.VerticalAndWallBlockItem",
          "xfacthd.framedblocks.common.item.PhantomPasteItem",
          "xfacthd.framedblocks.common.item.FramedToolItem",
          "xfacthd.framedblocks.common.item.FramedSpecialDoubleBlockItem",
          "xfacthd.framedblocks.common.item.FramedSignItem",
          "xfacthd.framedblocks.common.item.FramedHangingSignItem",
          "xfacthd.framedblocks.common.item.FramedBlueprintItem",
          "xfacthd.framedblocks.common.block.slab.FramedSlabBlock$1",
          "xfacthd.framedblocks.common.block.slab.FramedPanelBlock$1"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "xfacthd.framedblocks.common.crafting.FramingSawRecipe",
          "xfacthd.framedblocks.common.crafting.CamoApplicationRecipe",
          "xfacthd.framedblocks.common.compat.jei.camo.JeiCamoApplicationRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "xfacthd.framedblocks.common.block.torch.FramedWallTorchBlock",
          "xfacthd.framedblocks.common.block.torch.FramedTorchBlock",
          "xfacthd.framedblocks.common.block.torch.FramedSoulWallTorchBlock",
          "xfacthd.framedblocks.common.block.torch.FramedSoulTorchBlock",
          "xfacthd.framedblocks.common.block.torch.FramedRedstoneWallTorchBlock",
          "xfacthd.framedblocks.common.block.torch.FramedRedstoneTorchBlock",
          "xfacthd.framedblocks.common.block.torch.FramedLanternBlock",
          "xfacthd.framedblocks.common.block.stairs.vertical.FramedVerticalStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.vertical.FramedVerticalSlopedStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.vertical.FramedVerticalSlicedStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.vertical.FramedVerticalHalfStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.vertical.FramedVerticalDoubleStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.vertical.FramedVerticalDoubleHalfStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.vertical.FramedVerticalDividedStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.standard.FramedStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.standard.FramedSlopedStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.standard.FramedSlicedStairsSlabBlock",
          "xfacthd.framedblocks.common.block.stairs.standard.FramedSlicedStairsPanelBlock",
          "xfacthd.framedblocks.common.block.stairs.standard.FramedLadderBlock",
          "xfacthd.framedblocks.common.block.stairs.standard.FramedHalfStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.standard.FramedDoubleStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.standard.FramedDoubleHalfStairsBlock",
          "xfacthd.framedblocks.common.block.stairs.standard.FramedDividedStairsBlock",
          "xfacthd.framedblocks.common.block.special.PoweredFramingSawBlock",
          "xfacthd.framedblocks.common.block.special.FramingSawBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedStackedSlopeSlabBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedSlopeSlabBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedInverseDoubleSlopeSlabBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedFlatStackedSlopeSlabCornerBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedFlatSlopeSlabCornerBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedFlatInverseDoubleSlopeSlabCornerBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedFlatElevatedSlopeSlabCornerBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedFlatElevatedDoubleSlopeSlabCornerBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedFlatDoubleSlopeSlabCornerBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedElevatedSlopeSlabBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedElevatedDoubleSlopeSlabBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedDoubleSlopeSlabBlock",
          "xfacthd.framedblocks.common.block.slopeslab.FramedCompoundSlopeSlabBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedStackedCornerSlopePanelWallBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedStackedCornerSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedSmallDoubleCornerSlopePanelWallBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedSmallDoubleCornerSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedLargeInnerCornerSlopePanelWallBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedLargeInnerCornerSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedInverseDoubleCornerSlopePanelWallBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedInverseDoubleCornerSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedExtendedDoubleCornerSlopePanelWallBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedExtendedDoubleCornerSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedExtendedCornerSlopePanelWallBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedExtendedCornerSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedDoubleCornerSlopePanelWallBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedDoubleCornerSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedCornerSlopePanelWallBlock",
          "xfacthd.framedblocks.common.block.slopepanelcorner.FramedCornerSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedStackedSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedInverseDoubleSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedFlatStackedSlopePanelCornerBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedFlatSlopePanelCornerBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedFlatInverseDoubleSlopePanelCornerBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedFlatExtendedSlopePanelCornerBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedFlatExtendedDoubleSlopePanelCornerBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedFlatDoubleSlopePanelCornerBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedExtendedSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedExtendedDoubleSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedDoubleSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopepanel.FramedCompoundSlopePanelBlock",
          "xfacthd.framedblocks.common.block.slopeedge.FramedThreewayCornerSlopeEdgeBlock",
          "xfacthd.framedblocks.common.block.slopeedge.FramedStackedSlopeEdgeBlock",
          "xfacthd.framedblocks.common.block.slopeedge.FramedStackedInnerCornerSlopeEdgeBlock",
          "xfacthd.framedblocks.common.block.slopeedge.FramedStackedCornerSlopeEdgeBlock",
          "xfacthd.framedblocks.common.block.slopeedge.FramedSlopeEdgeBlock",
          "xfacthd.framedblocks.common.block.slopeedge.FramedElevatedSlopeEdgeBlock",
          "xfacthd.framedblocks.common.block.slopeedge.FramedElevatedDoubleSlopeEdgeBlock",
          "xfacthd.framedblocks.common.block.slopeedge.FramedElevatedDoubleInnerCornerSlopeEdgeBlock",
          "xfacthd.framedblocks.common.block.slopeedge.FramedElevatedDoubleCornerSlopeEdgeBlock",
          "xfacthd.framedblocks.common.block.slopeedge.FramedElevatedCornerSlopeEdgeBlock",
          "xfacthd.framedblocks.common.block.slopeedge.FramedCornerSlopeEdgeBlock",
          "xfacthd.framedblocks.common.block.slope.FramedVerticalHalfSlopeBlock",
          "xfacthd.framedblocks.common.block.slope.FramedVerticalDoubleHalfSlopeBlock",
          "xfacthd.framedblocks.common.block.slope.FramedThreewayCornerBlock",
          "xfacthd.framedblocks.common.block.slope.FramedSlopeBlock",
          "xfacthd.framedblocks.common.block.slope.FramedPyramidBlock",
          "xfacthd.framedblocks.common.block.slope.FramedPrismCornerBlock",
          "xfacthd.framedblocks.common.block.slope.FramedInnerThreewayCornerBlock",
          "xfacthd.framedblocks.common.block.slope.FramedInnerPrismCornerBlock",
          "xfacthd.framedblocks.common.block.slope.FramedHalfSlopeBlock",
          "xfacthd.framedblocks.common.block.slope.FramedDoubleThreewayCornerBlock",
          "xfacthd.framedblocks.common.block.slope.FramedDoubleSlopeBlock",
          "xfacthd.framedblocks.common.block.slope.FramedDoublePrismCornerBlock",
          "xfacthd.framedblocks.common.block.slope.FramedDoubleHalfSlopeBlock",
          "xfacthd.framedblocks.common.block.slope.FramedDoubleCornerBlock",
          "xfacthd.framedblocks.common.block.slope.FramedDividedSlopeBlock",
          "xfacthd.framedblocks.common.block.slope.FramedCornerSlopeBlock",
          "xfacthd.framedblocks.common.block.slab.FramedSlabEdgeBlock",
          "xfacthd.framedblocks.common.block.slab.FramedSlabCornerBlock",
          "xfacthd.framedblocks.common.block.slab.FramedSlabBlock",
          "xfacthd.framedblocks.common.block.slab.FramedPanelBlock",
          "xfacthd.framedblocks.common.block.slab.FramedMasonryCornerSegmentBlock",
          "xfacthd.framedblocks.common.block.slab.FramedMasonryCornerBlock",
          "xfacthd.framedblocks.common.block.slab.FramedDoubleSlabBlock",
          "xfacthd.framedblocks.common.block.slab.FramedDoublePanelBlock",
          "xfacthd.framedblocks.common.block.slab.FramedDividedSlabBlock",
          "xfacthd.framedblocks.common.block.slab.FramedDividedPanelBlock",
          "xfacthd.framedblocks.common.block.slab.FramedCheckeredSlabSegmentBlock",
          "xfacthd.framedblocks.common.block.slab.FramedCheckeredSlabBlock",
          "xfacthd.framedblocks.common.block.slab.FramedCheckeredPanelSegmentBlock",
          "xfacthd.framedblocks.common.block.slab.FramedCheckeredPanelBlock",
          "xfacthd.framedblocks.common.block.slab.FramedCheckeredCubeSegmentBlock",
          "xfacthd.framedblocks.common.block.slab.FramedCheckeredCubeBlock",
          "xfacthd.framedblocks.common.block.slab.FramedCenteredSlabBlock",
          "xfacthd.framedblocks.common.block.slab.FramedCenteredPanelBlock",
          "xfacthd.framedblocks.common.block.slab.FramedAdjustableDoubleSlabBlock",
          "xfacthd.framedblocks.common.block.slab.FramedAdjustableDoublePanelBlock",
          "xfacthd.framedblocks.common.block.slab.FramedAdjustableDoubleBlock",
          "xfacthd.framedblocks.common.block.sign.FramedWallSignBlock",
          "xfacthd.framedblocks.common.block.sign.FramedWallHangingSignBlock",
          "xfacthd.framedblocks.common.block.sign.FramedStandingSignBlock",
          "xfacthd.framedblocks.common.block.sign.FramedCeilingHangingSignBlock",
          "xfacthd.framedblocks.common.block.sign.AbstractFramedSignBlock",
          "xfacthd.framedblocks.common.block.sign.AbstractFramedHangingSignBlock",
          "xfacthd.framedblocks.common.block.rail.vanillaslope.FramedRailSlopeBlock",
          "xfacthd.framedblocks.common.block.rail.vanillaslope.FramedPoweredRailSlopeBlock",
          "xfacthd.framedblocks.common.block.rail.vanillaslope.FramedDetectorRailSlopeBlock",
          "xfacthd.framedblocks.common.block.rail.fancyslope.FramedFancyRailSlopeBlock",
          "xfacthd.framedblocks.common.block.rail.fancyslope.FramedFancyPoweredRailSlopeBlock",
          "xfacthd.framedblocks.common.block.rail.fancyslope.FramedFancyDetectorRailSlopeBlock",
          "xfacthd.framedblocks.common.block.rail.fancy.FramedFancyRailBlock",
          "xfacthd.framedblocks.common.block.rail.fancy.FramedFancyPoweredRailBlock",
          "xfacthd.framedblocks.common.block.rail.fancy.FramedFancyDetectorRailBlock",
          "xfacthd.framedblocks.common.block.prism.FramedSlopedPrismBlock",
          "xfacthd.framedblocks.common.block.prism.FramedPrismBlock",
          "xfacthd.framedblocks.common.block.prism.FramedElevatedSlopedPrismBlock",
          "xfacthd.framedblocks.common.block.prism.FramedElevatedPrismBlock",
          "xfacthd.framedblocks.common.block.prism.FramedElevatedDoubleSlopedPrismBlock",
          "xfacthd.framedblocks.common.block.prism.FramedElevatedDoublePrismBlock",
          "xfacthd.framedblocks.common.block.pillar.FramedWallBlock",
          "xfacthd.framedblocks.common.block.pillar.FramedThreewayCornerPillarBlock",
          "xfacthd.framedblocks.common.block.pillar.FramedPillarBlock",
          "xfacthd.framedblocks.common.block.pillar.FramedLatticeBlock",
          "xfacthd.framedblocks.common.block.pillar.FramedHalfPillarBlock",
          "xfacthd.framedblocks.common.block.pillar.FramedFenceBlock",
          "xfacthd.framedblocks.common.block.pillar.FramedDoubleThreewayCornerPillarBlock",
          "xfacthd.framedblocks.common.block.pillar.FramedCornerPillarBlock",
          "xfacthd.framedblocks.common.block.pillar.FramedChainBlock",
          "xfacthd.framedblocks.common.block.pane.FramedWallBoardBlock",
          "xfacthd.framedblocks.common.block.pane.FramedPaneBlock",
          "xfacthd.framedblocks.common.block.pane.FramedHorizontalPaneBlock",
          "xfacthd.framedblocks.common.block.pane.FramedFloorBlock",
          "xfacthd.framedblocks.common.block.pane.FramedCornerStripBlock",
          "xfacthd.framedblocks.common.block.interactive.pressureplate.FramedWeightedPressurePlateBlock",
          "xfacthd.framedblocks.common.block.interactive.pressureplate.FramedWaterloggableWeightedPressurePlateBlock",
          "xfacthd.framedblocks.common.block.interactive.pressureplate.FramedWaterloggablePressurePlateBlock",
          "xfacthd.framedblocks.common.block.interactive.pressureplate.FramedPressurePlateBlock",
          "xfacthd.framedblocks.common.block.interactive.FramedLeverBlock",
          "xfacthd.framedblocks.common.block.interactive.FramedItemFrameBlock",
          "xfacthd.framedblocks.common.block.interactive.FramedFlowerPotBlock",
          "xfacthd.framedblocks.common.block.interactive.FramedChiseledBookshelfBlock",
          "xfacthd.framedblocks.common.block.interactive.button.FramedLargeButtonBlock",
          "xfacthd.framedblocks.common.block.interactive.button.FramedButtonBlock",
          "xfacthd.framedblocks.common.block.FramedBlock",
          "xfacthd.framedblocks.common.block.door.FramedTrapDoorBlock",
          "xfacthd.framedblocks.common.block.door.FramedGateBlock",
          "xfacthd.framedblocks.common.block.door.FramedFenceGateBlock",
          "xfacthd.framedblocks.common.block.door.FramedDoorBlock",
          "xfacthd.framedblocks.common.block.cube.FramedTubeBlock",
          "xfacthd.framedblocks.common.block.cube.FramedTargetBlock",
          "xfacthd.framedblocks.common.block.cube.FramedTankBlock",
          "xfacthd.framedblocks.common.block.cube.FramedStorageBlock",
          "xfacthd.framedblocks.common.block.cube.FramedRedstoneBlock",
          "xfacthd.framedblocks.common.block.cube.FramedOneWayWindowBlock",
          "xfacthd.framedblocks.common.block.cube.FramedMiniCubeBlock",
          "xfacthd.framedblocks.common.block.cube.FramedGlowingCubeBlock",
          "xfacthd.framedblocks.common.block.cube.FramedCubeBlock",
          "xfacthd.framedblocks.common.block.cube.FramedCollapsibleCopycatBlock",
          "xfacthd.framedblocks.common.block.cube.FramedCollapsibleBlock",
          "xfacthd.framedblocks.common.block.cube.FramedChestBlock",
          "xfacthd.framedblocks.common.block.cube.FramedBouncyCubeBlock",
          "xfacthd.framedblocks.common.block.cube.FramedBookshelfBlock",
          "xfacthd.framedblocks.common.block.AbstractFramedDoubleBlock",
          "xfacthd.framedblocks.api.block.AbstractFramedBlock"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "xfacthd.framedblocks.client.loader.overlay.OverlayLoader",
          "xfacthd.framedblocks.client.loader.fallback.FallbackLoader"
        ]
      },
      "modifies": [
        "net.minecraft.client.multiplayer.MultiPlayerGameMode",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.resources.model.WeightedBakedModel",
        "net.minecraft.world.inventory.TransientCraftingContainer",
        "net.minecraft.world.item.BlockItem",
        "net.minecraft.world.item.crafting.Ingredient",
        "net.minecraft.world.level.block.StairBlock",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "net.minecraft.world.level.block.state.StateDefinition$Builder",
        "net.minecraft.world.level.saveddata.maps.MapItemSavedData"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Model Loaders",
        "Custom Particles",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "ftbauxilium": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.ftb.mods.ftbauxilium.mixins.CrashMixin",
            "method": {
              "argTypes": [
                "java.lang.StringBuilder",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "addPackData",
              "raw": "addPackData(Ljava/lang/StringBuilder;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/SystemReport;appendToCrashReportString(Ljava/lang/StringBuilder;)V, ordinal=0}]"
            }
          },
          {
            "class": "dev.ftb.mods.ftbauxilium.mixins.CrashMixin",
            "method": {
              "argTypes": [
                "java.nio.file.Path",
                "net.minecraft.ReportType",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "saveToFile",
              "raw": "saveToFile(Ljava/nio/file/Path;Lnet/minecraft/ReportType;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "architectury": "[13.0.3,)",
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0,)"
      },
      "info": {
        "authors": "FTB Team",
        "classes": "25",
        "description": "Stats!\n",
        "displayName": "FTB Auxilium",
        "file": "ftb-auxilium-neoforge-21.0.1.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftbauxilium",
        "version": "21.0.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.ftb.mods.ftbauxilium.screens.OptOutScreen"
        ]
      },
      "modifies": [
        "net.minecraft.CrashReport"
      ],
      "summary": [
        "Custom GUI Screens",
        "Localization",
        "Modifies Methods"
      ]
    },
    "ftbchunks": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.ftb.mods.ftbchunks.core.mixin.UtilMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "shutdownExecutorsFTBC",
              "raw": "shutdownExecutorsFTBC(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.ftb.mods.ftbchunks.core.mixin.PistonBaseBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.Direction",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.level.block.piston.PistonStructureResolver"
              ],
              "name": "onMoveBlocks",
              "raw": "onMoveBlocks(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/level/block/piston/PistonStructureResolver;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/block/piston/PistonStructureResolver;getToPush()Ljava/util/List;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.ftb.mods.ftbchunks.core.mixin.GuiMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "net.minecraft.client.DeltaTracker",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRenderEffectsReturn",
              "raw": "onRenderEffectsReturn(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/DeltaTracker;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.ftb.mods.ftbchunks.core.mixin.GuiMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "net.minecraft.client.DeltaTracker",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRenderEffectsEnter",
              "raw": "onRenderEffectsEnter(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/DeltaTracker;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "dev.ftb.mods.ftbchunks.core.mixin.ClientPacketListenerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundBlockUpdatePacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "handleBlockUpdateFTBC",
              "raw": "handleBlockUpdateFTBC(Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.ftb.mods.ftbchunks.core.mixin.ClientPacketListenerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundLevelChunkWithLightPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "handleLevelChunkFTBC",
              "raw": "handleLevelChunkFTBC(Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.ftb.mods.ftbchunks.core.mixin.ClientPacketListenerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundSectionBlocksUpdatePacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "handleChunkBlocksUpdateFTBC",
              "raw": "handleChunkBlocksUpdateFTBC(Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.ftb.mods.ftbchunks.core.mixin.ChunkMapMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.ChunkPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "anyPlayerCloseEnoughForSpawningFTBC",
              "raw": "anyPlayerCloseEnoughForSpawningFTBC(Lnet/minecraft/world/level/ChunkPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.ftb.mods.ftbchunks.core.mixin.ArmorStandMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.phys.Vec3",
                "net.minecraft.world.InteractionHand",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onInteractAt",
              "raw": "onInteractAt(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "architectury": "[13.0.6,)",
        "ftblibrary": "[2101.1.7,)",
        "ftbteams": "[2101.1.2,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "dev.ftb.mods.ftbchunks.client.neoforge.FTBChunksClientImpl#renderLevelStageForge"
        ]
      },
      "info": {
        "authors": "FTB Team",
        "classes": "224",
        "description": "Claim chunks to protect your base from griefers!\n",
        "displayName": "FTB Chunks",
        "file": "ftb-chunks-neoforge-2101.1.7.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftbchunks",
        "version": "2101.1.7"
      },
      "modifies": [
        "net.minecraft.Util",
        "net.minecraft.client.gui.Gui",
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.server.level.ChunkMap",
        "net.minecraft.world.entity.decoration.ArmorStand",
        "net.minecraft.world.level.biome.Biome",
        "net.minecraft.world.level.block.piston.PistonBaseBlock",
        "net.minecraft.world.level.block.state.BlockState"
      ],
      "summary": [
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods",
        "Modifies World Rendering",
        "Uses Access Transformers"
      ]
    },
    "ftbessentials": {
      "dependencies": {
        "ftblibrary": "[2101.1.4,)",
        "ftbranks": "[2100.1.0,)",
        "luckperms": "[5.4.83,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)"
      },
      "info": {
        "authors": "FTB Team",
        "classes": "85",
        "description": "Adds many essential utility commands for servers\n",
        "displayName": "FTB Essentials",
        "file": "ftb-essentials-neoforge-2101.1.6.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftbessentials",
        "version": "2101.1.6"
      },
      "modifies": [
        "net.minecraft.server.players.PlayerList"
      ],
      "summary": [
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "ftbfiltersystem": {
      "dependencies": {
        "architectury": "[13.0.6,)",
        "ftblibrary": "[2100.1.4,)",
        "jei": "[19.5.0.40,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.143,)"
      },
      "info": {
        "authors": "FTB Team",
        "classes": "97",
        "description": "Smart and highly configurable item filtering system with useful GUI configuration\n",
        "displayName": "FTB Filter System",
        "file": "ftb-filter-system-neoforge-21.0.0.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftbfiltersystem",
        "version": "21.0.0"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.ftb.mods.ftbfiltersystem.client.gui.StackSizeConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.client.gui.ModConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.client.gui.MaxCountConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.client.gui.ItemTagConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.client.gui.ItemConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.client.gui.FoodValueConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.client.gui.FilterScreen",
          "dev.ftb.mods.ftbfiltersystem.client.gui.ExpressionConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.client.gui.DurabilityConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.client.gui.CustomConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.client.gui.ComponentConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.client.gui.AbstractItemEditorConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.api.client.gui.AbstractFilterScreen",
          "dev.ftb.mods.ftbfiltersystem.api.client.gui.AbstractFilterConfigScreen",
          "dev.ftb.mods.ftbfiltersystem.api.client.gui.AbstractComparisonConfigScreen"
        ],
        "net.minecraft.world.item.Item": [
          "dev.ftb.mods.ftbfiltersystem.registry.item.SmartFilterItem"
        ]
      },
      "summary": [
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "ftblibrary": {
      "dependencies": {
        "architectury": "[13.0.6,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)"
      },
      "info": {
        "authors": "FTB Team",
        "classes": "344",
        "description": "FTB Library adds nothing.\n",
        "displayName": "FTB Library",
        "file": "ftb-library-neoforge-2101.1.9.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftblibrary",
        "version": "2101.1.9"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.ftb.mods.ftblibrary.ui.ScreenWrapper",
          "dev.ftb.mods.ftblibrary.ui.MenuScreenWrapper"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.components.MultilineTextField",
        "net.minecraft.resources.ResourceLocation",
        "net.minecraft.world.CompoundContainer",
        "net.minecraft.world.item.Item"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "ftbmaterials": {
      "dependencies": {
        "architectury": "[13.0.2,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21.0,)"
      },
      "info": {
        "authors": "Me!",
        "classes": "14",
        "description": "This is an example description! Tell everyone what your mod is about!\n",
        "displayName": "FTB Materials",
        "file": "ftbmaterials-neoforge-21.1.0-beta.7.jar",
        "license": "Insert License Here",
        "package": "dev.ftb.mods.ftbmaterials",
        "version": "21.1.0-beta.7"
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "ftboceanmobs": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.ftb.mods.ftboceanmobs.mixin.PlayerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "wantsToStopRiding",
              "raw": "wantsToStopRiding(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "geckolib": "[4.7.3,)",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "dev.ftb.mods.ftboceanmobs.Config#onLoad"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "dev.ftb.mods.ftboceanmobs.entity.riftweaver.RiftWeaverBoss$Listener#onEntityJoin"
        ],
        "net.neoforged.neoforge.event.entity.ProjectileImpactEvent": [
          "dev.ftb.mods.ftboceanmobs.entity.riftweaver.RiftWeaverBoss$Listener#onProjectileImpact"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "dev.ftb.mods.ftboceanmobs.entity.riftweaver.RiftWeaverBoss$Listener#onIncomingDamage",
          "dev.ftb.mods.ftboceanmobs.entity.TentacledHorror$Listener#onHurt"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "dev.ftb.mods.ftboceanmobs.network.NetworkHandler#register"
        ]
      },
      "info": {
        "authors": "FTB Team",
        "classes": "122",
        "description": "A collection of interesting and dangerous mobs.",
        "displayName": "FTB Ocean Mobs",
        "file": "ftboceanmobs-21.1.1.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftboceanmobs",
        "version": "21.1.1"
      },
      "inheritance": {
        "net.minecraft.client.particle.Particle": [
          "dev.ftb.mods.ftboceanmobs.client.particle.ItemParticleProvider$ItemParticle"
        ],
        "net.minecraft.data.DataProvider": [
          "dev.ftb.mods.ftboceanmobs.datagen.ModLangProvider",
          "dev.ftb.mods.ftboceanmobs.datagen.ModBlockStateProvider",
          "dev.ftb.mods.ftboceanmobs.datagen.ModTagsProvider$Block",
          "dev.ftb.mods.ftboceanmobs.datagen.ModTagsProvider$EntityType",
          "dev.ftb.mods.ftboceanmobs.datagen.ModTagsProvider$Enchantment",
          "dev.ftb.mods.ftboceanmobs.datagen.ModLootTableProvider",
          "dev.ftb.mods.ftboceanmobs.datagen.ModItemModelProvider",
          "dev.ftb.mods.ftboceanmobs.datagen.ModSoundProvider"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "dev.ftb.mods.ftboceanmobs.mobeffects.DrowningShadowsEffect"
        ],
        "net.minecraft.world.entity.Entity": [
          "dev.ftb.mods.ftboceanmobs.entity.riftweaver.RiftWeaverBoss",
          "dev.ftb.mods.ftboceanmobs.entity.riftweaver.RiftWeaverPart",
          "dev.ftb.mods.ftboceanmobs.entity.RiftMinotaur",
          "dev.ftb.mods.ftboceanmobs.entity.AbyssalSludge",
          "dev.ftb.mods.ftboceanmobs.entity.ShadowBeast",
          "dev.ftb.mods.ftboceanmobs.entity.AbyssalWinged",
          "dev.ftb.mods.ftboceanmobs.entity.Sludgeling",
          "dev.ftb.mods.ftboceanmobs.entity.RiftDemon",
          "dev.ftb.mods.ftboceanmobs.entity.RiftlingObserver",
          "dev.ftb.mods.ftboceanmobs.entity.TentacledHorror",
          "dev.ftb.mods.ftboceanmobs.entity.MossbackGoliath",
          "dev.ftb.mods.ftboceanmobs.entity.TumblingBlockEntity",
          "dev.ftb.mods.ftboceanmobs.entity.BaseRiftMob",
          "dev.ftb.mods.ftboceanmobs.entity.CorrosiveCraig"
        ],
        "net.minecraft.world.entity.Mob": [
          "dev.ftb.mods.ftboceanmobs.entity.riftweaver.RiftWeaverBoss",
          "dev.ftb.mods.ftboceanmobs.entity.RiftMinotaur",
          "dev.ftb.mods.ftboceanmobs.entity.AbyssalSludge",
          "dev.ftb.mods.ftboceanmobs.entity.ShadowBeast",
          "dev.ftb.mods.ftboceanmobs.entity.AbyssalWinged",
          "dev.ftb.mods.ftboceanmobs.entity.Sludgeling",
          "dev.ftb.mods.ftboceanmobs.entity.RiftDemon",
          "dev.ftb.mods.ftboceanmobs.entity.RiftlingObserver",
          "dev.ftb.mods.ftboceanmobs.entity.TentacledHorror",
          "dev.ftb.mods.ftboceanmobs.entity.MossbackGoliath",
          "dev.ftb.mods.ftboceanmobs.entity.BaseRiftMob",
          "dev.ftb.mods.ftboceanmobs.entity.CorrosiveCraig"
        ],
        "net.minecraft.world.level.block.Block": [
          "dev.ftb.mods.ftboceanmobs.block.SludgeBlock",
          "dev.ftb.mods.ftboceanmobs.block.AbyssalWaterBlock",
          "dev.ftb.mods.ftboceanmobs.block.EnergyGeyserBlock"
        ]
      },
      "modifies": [
        "net.minecraft.world.entity.player.Player"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Network Packets",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Tag Assignments",
        "Listens to Entity Damage Events",
        "Listens to Entity Join World Events",
        "Localization",
        "Modifies Methods",
        "Uses Data Generators"
      ]
    },
    "ftbpromoter": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.ftb.mods.promoter.mixin.AbstractSelectionListMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.components.AbstractSelectionList$Entry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "addEntryToTop",
              "raw": "addEntryToTop(Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.ftb.mods.promoter.mixin.AbstractSelectionListMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.components.AbstractSelectionList$Entry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "addEntry",
              "raw": "addEntry(Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.97,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "dev.ftb.mods.promoter.screen.ScreenInitEvent#onScreenInit"
        ]
      },
      "info": {
        "authors": "FTB Team",
        "classes": "19",
        "description": "Promotes our partners via GUI hits in-game.\n",
        "displayName": "FTB Promoter",
        "file": "ftbpromoter-21.1.18.jar",
        "license": "ARR",
        "package": "dev.ftb.mods.promoter",
        "version": "21.1.18"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.ftb.mods.promoter.screen.AdScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.components.AbstractSelectionList"
      ],
      "summary": [
        "Custom GUI Screens",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "ftbquests": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.ftb.mods.ftbquests.mixin.ServerGamePacketListenerImplMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.common.ServerboundClientInformationPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "handleClientInformation",
              "raw": "handleClientInformation(Lnet/minecraft/network/protocol/common/ServerboundClientInformationPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/network/protocol/PacketUtils;ensureRunningOnSameThread(Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/server/level/ServerLevel;)V}]"
            }
          }
        ]
      },
      "dependencies": {
        "architectury": "[13.0.6,)",
        "ftblibrary": "[2101.1.9,)",
        "ftbteams": "[2101.1.2,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)"
      },
      "info": {
        "authors": "FTB Team",
        "classes": "397",
        "description": "Lets you easily create and play with quests\n",
        "displayName": "FTB Quests",
        "file": "ftb-quests-neoforge-2101.1.5.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftbquests",
        "version": "2101.1.5"
      },
      "inheritance": {
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "dev.ftb.mods.ftbquests.neoforge.NeoForgeTaskScreenRenderer",
          "dev.ftb.mods.ftbquests.client.TaskScreenRenderer"
        ],
        "net.minecraft.world.item.Item": [
          "dev.ftb.mods.ftbquests.item.TaskScreenConfiguratorItem",
          "dev.ftb.mods.ftbquests.item.StageBarrierBlockItem",
          "dev.ftb.mods.ftbquests.item.ScreenBlockItem",
          "dev.ftb.mods.ftbquests.item.QuestBookItem",
          "dev.ftb.mods.ftbquests.item.QuestBarrierBlockItem",
          "dev.ftb.mods.ftbquests.item.MissingItem",
          "dev.ftb.mods.ftbquests.item.LootCrateItem",
          "dev.ftb.mods.ftbquests.item.CustomIconItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "dev.ftb.mods.ftbquests.block.TaskScreenBlock",
          "dev.ftb.mods.ftbquests.block.TaskScreenBlock$Aux",
          "dev.ftb.mods.ftbquests.block.StageBarrierBlock",
          "dev.ftb.mods.ftbquests.block.QuestBarrierBlock",
          "dev.ftb.mods.ftbquests.block.LootCrateOpenerBlock",
          "dev.ftb.mods.ftbquests.block.DetectorBlock"
        ]
      },
      "modifies": [
        "net.minecraft.server.network.ServerGamePacketListenerImpl"
      ],
      "summary": [
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods"
      ]
    },
    "ftbranks": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.ftb.mods.ftbranks.core.mixin.CommandsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.commands.Commands$CommandSelection",
                "net.minecraft.commands.CommandBuildContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initFTBR",
              "raw": "initFTBR(Lnet/minecraft/commands/Commands$CommandSelection;Lnet/minecraft/commands/CommandBuildContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "architectury": "[13.0.6,)",
        "ftblibrary": "[2101.1.3,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)"
      },
      "info": {
        "authors": "FTB Team",
        "classes": "52",
        "description": "A simple mod that lets you create ranks for players, similar to Discord roles, and manage permissions for them\n",
        "displayName": "FTB Ranks",
        "file": "ftb-ranks-neoforge-2101.1.1.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftbranks",
        "version": "2101.1.1"
      },
      "modifies": [
        "net.minecraft.commands.Commands"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "ftbrifthelper": {
      "dependencies": {
        "ftbteambases": "[21.1.1,)",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.93,)"
      },
      "info": {
        "authors": "FTB Dev Team",
        "classes": "9",
        "description": "A small addon mod to FTB Team Bases to provide some functionality for FTB Ocean Block 2",
        "displayName": "FTB Rift Helper",
        "file": "ftbrifthelper-21.1.0.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftbrifthelper",
        "version": "21.1.0"
      },
      "inheritance": {
        "net.minecraft.world.level.saveddata.SavedData": [
          "dev.ftb.mods.ftbrifthelper.RiftRegionManager"
        ]
      },
      "modifies": [
        "net.minecraft.server.level.ChunkMap",
        "net.minecraft.world.level.chunk.storage.ChunkStorage",
        "net.minecraft.world.level.chunk.storage.IOWorker",
        "net.minecraft.world.level.chunk.storage.RegionFileStorage"
      ],
      "summary": [
        "Localization",
        "Stores Data in World Saves"
      ]
    },
    "ftbstuff": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.ftb.mods.ftbstuffnthings.mixin.PaintingMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "dropItem",
              "raw": "dropItem(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/decoration/Painting;spawnAtLocation(Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/entity/item/ItemEntity;}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "jei": "[19.19.0,)",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RecipesUpdatedEvent": [
          "dev.ftb.mods.ftbstuffnthings.crafting.ToolsRecipeCache#recipesSetup"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "dev.ftb.mods.ftbstuffnthings.data.DataGenerators#gatherData"
        ],
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "dev.ftb.mods.ftbstuffnthings.crafting.ToolsRecipeCache#onAddReloadListeners"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "dev.ftb.mods.ftbstuffnthings.items.WaterBowlItem$Listener#onItemRightClick"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppingEvent": [
          "dev.ftb.mods.ftbstuffnthings.tubes.TubeNetwork$Listener#onServerShutdown"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "dev.ftb.mods.ftbstuffnthings.network.NetworkHandler#register"
        ]
      },
      "info": {
        "authors": "FTB Team",
        "classes": "261",
        "description": "The essential building blocks for any Ocean based modpack.",
        "displayName": "FTB Stuff & Things",
        "file": "ftbstuff-21.1.4.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftbstuffnthings",
        "version": "21.1.4"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.ftb.mods.ftbstuffnthings.client.screens.WaterStrainerScreen",
          "dev.ftb.mods.ftbstuffnthings.client.screens.SuperCoolerScreen",
          "dev.ftb.mods.ftbstuffnthings.client.screens.BaseFluidAndEnergyScreen",
          "dev.ftb.mods.ftbstuffnthings.client.screens.TemperedJarScreen",
          "dev.ftb.mods.ftbstuffnthings.client.screens.FusingMachineScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "dev.ftb.mods.ftbstuffnthings.client.renders.TemperedJarBlockEntityRenderer",
          "dev.ftb.mods.ftbstuffnthings.client.renders.JarBlockEntityRenderer",
          "dev.ftb.mods.ftbstuffnthings.client.renders.CobblegenBlockEntityRenderer",
          "dev.ftb.mods.ftbstuffnthings.client.renders.SluiceBlockEntityRenderer",
          "dev.ftb.mods.ftbstuffnthings.client.renders.AutoHammerRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "dev.ftb.mods.ftbstuffnthings.client.model.TubeModel"
        ],
        "net.minecraft.data.DataProvider": [
          "dev.ftb.mods.ftbstuffnthings.data.ItemModelsGenerator",
          "dev.ftb.mods.ftbstuffnthings.data.RecipesGenerator",
          "dev.ftb.mods.ftbstuffnthings.data.LootModifiersGenerator",
          "dev.ftb.mods.ftbstuffnthings.data.I18nGenerator",
          "dev.ftb.mods.ftbstuffnthings.data.AdvancementsGenerator",
          "dev.ftb.mods.ftbstuffnthings.data.BlockStatesGenerators",
          "dev.ftb.mods.ftbstuffnthings.data.DamageTypeTagsGenerator",
          "dev.ftb.mods.ftbstuffnthings.data.LootTablesGenerator",
          "dev.ftb.mods.ftbstuffnthings.data.ItemTagsGenerator",
          "dev.ftb.mods.ftbstuffnthings.data.BlockTagsGenerator"
        ],
        "net.minecraft.world.entity.Entity": [
          "dev.ftb.mods.ftbstuffnthings.mixin.PaintingMixin"
        ],
        "net.minecraft.world.item.Item": [
          "dev.ftb.mods.ftbstuffnthings.items.CrookItem",
          "dev.ftb.mods.ftbstuffnthings.items.HammerItem",
          "dev.ftb.mods.ftbstuffnthings.items.MeshItem",
          "dev.ftb.mods.ftbstuffnthings.items.WaterBowlItem",
          "dev.ftb.mods.ftbstuffnthings.items.FluidCapsuleItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "dev.ftb.mods.ftbstuffnthings.crafting.BaseRecipe",
          "dev.ftb.mods.ftbstuffnthings.crafting.recipe.JarRecipe",
          "dev.ftb.mods.ftbstuffnthings.crafting.recipe.HammerRecipe",
          "dev.ftb.mods.ftbstuffnthings.crafting.recipe.SluiceRecipe",
          "dev.ftb.mods.ftbstuffnthings.crafting.recipe.TemperatureSourceRecipe",
          "dev.ftb.mods.ftbstuffnthings.crafting.recipe.DripperRecipe",
          "dev.ftb.mods.ftbstuffnthings.crafting.recipe.CrookRecipe",
          "dev.ftb.mods.ftbstuffnthings.crafting.recipe.SuperCoolerRecipe",
          "dev.ftb.mods.ftbstuffnthings.crafting.recipe.FusingMachineRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "dev.ftb.mods.ftbstuffnthings.blocks.sluice.SluiceBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.strainer.WaterStrainerBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.lootdroppers.BarrelBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.lootdroppers.CrateBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.lootdroppers.SmallCrateBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.cobblegen.CobblegenBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.pump.PumpBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.tube.TubeBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.SimpleFallingBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.dripper.DripperBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.jar.CreativeTemperatureSourceBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.jar.JarAutomaterBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.jar.JarBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.jar.TemperedJarBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.supercooler.SuperCoolerBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.fusingmachine.FusingMachineBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.hammer.AutoHammerBlock",
          "dev.ftb.mods.ftbstuffnthings.blocks.AbstractMachineBlock"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "dev.ftb.mods.ftbstuffnthings.client.model.TubeModel$Loader"
        ]
      },
      "modifies": [
        "net.minecraft.world.entity.decoration.Painting"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Model Loaders",
        "Custom Network Packets",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Handles Right Clicks with Items",
        "Listens to Recipe Updates",
        "Listens to Server Stopping Events",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "ftbteambases": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.ftb.mods.ftbteambases.mixin.client.ClientLevelDataMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetClearColorScale",
              "raw": "onGetClearColorScale(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.ftb.mods.ftbteambases.mixin.client.ClientLevelDataMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetHorizonHeight",
              "raw": "onGetHorizonHeight(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.ftb.mods.ftbteambases.mixin.NetherPortalBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.entity.Entity",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetPortalDestination",
              "raw": "onGetPortalDestination(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.ftb.mods.ftbteambases.mixin.BaseFireBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onInPortalDimension",
              "raw": "onInPortalDimension(Lnet/minecraft/world/level/Level;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "architectury": "[13.0.6,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)"
      },
      "info": {
        "authors": "FTB Team",
        "classes": "110",
        "description": "An extension to FTB Teams to provide multi-dimension support for FTB modpacks\n",
        "displayName": "FTB Team Bases",
        "file": "ftb-team-bases-neoforge-21.1.2.jar",
        "license": "Insert License Here",
        "package": "dev.ftb.mods.ftbteambases",
        "version": "21.1.2"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.ftb.mods.ftbteambases.client.gui.VisitScreen",
          "dev.ftb.mods.ftbteambases.client.gui.BaseSelectionScreen"
        ],
        "net.minecraft.world.level.block.Block": [
          "dev.ftb.mods.ftbteambases.block.BasesPortalBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "dev.ftb.mods.ftbteambases.data.bases.BaseInstanceManager"
        ]
      },
      "modifies": [
        "net.minecraft.client.multiplayer.ClientLevel$ClientLevelData",
        "net.minecraft.server.level.ServerLevel",
        "net.minecraft.world.level.Level",
        "net.minecraft.world.level.block.BaseFireBlock",
        "net.minecraft.world.level.block.NetherPortalBlock",
        "net.minecraft.world.level.chunk.ChunkGenerator",
        "net.minecraft.world.level.entity.PersistentEntitySectionManager"
      ],
      "summary": [
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Dimension Types",
        "Custom Dimensions",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Structures",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Localization",
        "Modifies Methods",
        "Stores Data in World Saves",
        "Uses Access Transformers"
      ]
    },
    "ftbteams": {
      "dependencies": {
        "architectury": "[13.0.6,)",
        "ftblibrary": "[2101.1.7,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)"
      },
      "info": {
        "authors": "FTB Team",
        "classes": "118",
        "description": "FTB Teams adds ability to create your own teams that can be used for quests etc.\n",
        "displayName": "FTB Teams",
        "file": "ftb-teams-neoforge-2101.1.2.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftbteams",
        "version": "2101.1.2"
      },
      "summary": [
        "Localization"
      ]
    },
    "ftbultimine": {
      "dependencies": {
        "architectury": "[13.0.6,)",
        "ftblibrary": "[2101.1.1,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)"
      },
      "info": {
        "authors": "FTB Team",
        "classes": "56",
        "description": "Allows you to break multiple blocks at once\n",
        "displayName": "FTB Ultimine",
        "file": "ftb-ultimine-neoforge-2101.1.1.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftbultimine",
        "version": "2101.1.1"
      },
      "modifies": [
        "net.minecraft.world.item.AxeItem",
        "net.minecraft.world.item.ShovelItem"
      ],
      "summary": [
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "ftbxmodcompat": {
      "dependencies": {
        "architectury": "[13.0.6,)",
        "ftbchunks": "[2101.1.0,)",
        "ftblibrary": "[2101.1.1,)",
        "ftbquests": "[2101.1.0,)",
        "ftbranks": "[2100.1.0,)",
        "jei": "[19,)",
        "kubejs": "[2100.7.0,)",
        "luckperms": "[5.4.112,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)",
        "waystones": "[21.1.5,)"
      },
      "info": {
        "authors": "FTB Team",
        "classes": "86",
        "description": "Provides cross-mod compatibilty/integration for all main FTB mods\n",
        "displayName": "FTB XMod Compat",
        "file": "ftb-xmod-compat-neoforge-21.1.2.jar",
        "license": "All Rights Reserved",
        "package": "dev.ftb.mods.ftbxmodcompat",
        "version": "21.1.2"
      },
      "summary": [
        "Localization"
      ]
    },
    "fulleng": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "gripe._90.fulleng.mixin.PartLeftClickPacketMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerPlayer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "handleConversionMonitorClick",
              "raw": "handleConversionMonitorClick(Lnet/minecraft/server/level/ServerPlayer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "gripe._90.fulleng.mixin.extendedae.GlodUtilMixin",
            "method": {
              "argTypes": [
                "java.lang.Class",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "jesusWept",
              "raw": "jesusWept(Ljava/lang/Class;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "gripe._90.fulleng.mixin.extendedae.ItemPatternAccessTerminalUpgradeMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "addFullblock",
              "raw": "addFullblock(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {},
      "info": {
        "classes": "30",
        "description": "A more retrospective feel for AE2.",
        "displayName": "Fullblock Energistics",
        "file": "fulleng-2.2.2.jar",
        "license": "LGPLv3.0",
        "package": "gripe._90.fulleng",
        "version": "2.2.2"
      },
      "inheritance": {
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "gripe._90.fulleng.client.MonitorBERenderer"
        ],
        "net.minecraft.world.item.Item": [
          "gripe._90.fulleng.integration.IntegrationBlockItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "gripe._90.fulleng.block.MonitorBlock",
          "gripe._90.fulleng.block.TerminalBlock",
          "gripe._90.fulleng.block.FullBlock"
        ]
      },
      "modifies": [
        "appeng.core.network.serverbound.PartLeftClickPacket",
        "com.glodblock.github.extendedae.common.items.ItemPatternAccessTerminalUpgrade",
        "com.glodblock.github.glodium.util.GlodUtil",
        "gripe._90.fulleng.integration.requester.RequesterTerminalBlockEntity"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "functionalstorage": {
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21,)",
        "titanium": "[1.20.4-4,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "com.buuz135.functionalstorage.client.FramedColors#blockColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "com.buuz135.functionalstorage.client.FramedColors#itemColors"
        ]
      },
      "info": {
        "authors": "Buuz135, Rid",
        "classes": "164",
        "description": "Functional Storage\n",
        "displayName": "Functional Storage",
        "file": "functionalstorage-1.21.1-1.4.1.jar",
        "license": "MIT",
        "package": "com.buuz135.functionalstorage",
        "version": "1.21.1-1.4.1"
      },
      "inheritance": {
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "com.buuz135.functionalstorage.client.item.FunctionalStorageISTER",
          "com.buuz135.functionalstorage.client.item.DrawerISTER",
          "com.buuz135.functionalstorage.client.item.CompactingDrawerISTER",
          "com.buuz135.functionalstorage.client.item.FluidDrawerISTER"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.buuz135.functionalstorage.client.ControllerRenderer",
          "com.buuz135.functionalstorage.client.DrawerRenderer",
          "com.buuz135.functionalstorage.client.CompactingDrawerRenderer",
          "com.buuz135.functionalstorage.client.EnderDrawerRenderer",
          "com.buuz135.functionalstorage.client.SimpleCompactingDrawerRenderer",
          "com.buuz135.functionalstorage.client.FluidDrawerRenderer",
          "com.buuz135.functionalstorage.client.BaseDrawerRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "com.buuz135.functionalstorage.client.loader.FramedModel$ItemModel",
          "com.buuz135.functionalstorage.client.loader.FramedModel$Baked"
        ],
        "net.minecraft.data.DataProvider": [
          "com.buuz135.functionalstorage.data.FunctionalStorageBlockTagsProvider",
          "com.buuz135.functionalstorage.data.FunctionalStorageBlockstateProvider",
          "com.buuz135.functionalstorage.data.FunctionalStorageItemTagsProvider",
          "com.buuz135.functionalstorage.data.FunctionalStorageRecipesProvider",
          "com.buuz135.functionalstorage.data.FunctionalStorageLangProvider",
          "com.buuz135.functionalstorage.FunctionalStorage$3"
        ],
        "net.minecraft.world.item.Item": [
          "com.buuz135.functionalstorage.item.StorageUpgradeItem",
          "com.buuz135.functionalstorage.item.FSItem",
          "com.buuz135.functionalstorage.item.ConfigurationToolItem",
          "com.buuz135.functionalstorage.item.FunctionalUpgradeItem",
          "com.buuz135.functionalstorage.item.LinkingToolItem",
          "com.buuz135.functionalstorage.item.UpgradeItem",
          "com.buuz135.functionalstorage.block.DrawerBlock$DrawerItem",
          "com.buuz135.functionalstorage.block.FluidDrawerBlock$FluidDrawerItem",
          "com.buuz135.functionalstorage.block.CompactingDrawerBlock$CompactingDrawerItem",
          "com.buuz135.functionalstorage.FunctionalStorage$1"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.buuz135.functionalstorage.recipe.CopyComponentsRecipe",
          "com.buuz135.functionalstorage.recipe.FramedDrawerRecipe",
          "com.buuz135.functionalstorage.recipe.CustomCompactingRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.buuz135.functionalstorage.block.CompactingDrawerBlock",
          "com.buuz135.functionalstorage.block.FramedSimpleCompactingDrawerBlock",
          "com.buuz135.functionalstorage.block.Drawer",
          "com.buuz135.functionalstorage.block.FramedFluidDrawerBlock",
          "com.buuz135.functionalstorage.block.ArmoryCabinetBlock",
          "com.buuz135.functionalstorage.block.CompactingFramedDrawerBlock",
          "com.buuz135.functionalstorage.block.FramedControllerExtensionBlock",
          "com.buuz135.functionalstorage.block.ControllerExtensionBlock",
          "com.buuz135.functionalstorage.block.DrawerControllerBlock",
          "com.buuz135.functionalstorage.block.StorageControllerBlock",
          "com.buuz135.functionalstorage.block.DrawerBlock",
          "com.buuz135.functionalstorage.block.FramedDrawerControllerBlock",
          "com.buuz135.functionalstorage.block.SimpleCompactingDrawerBlock",
          "com.buuz135.functionalstorage.block.FluidDrawerBlock",
          "com.buuz135.functionalstorage.block.StorageControllerExtensionBlock",
          "com.buuz135.functionalstorage.block.FramedDrawerBlock",
          "com.buuz135.functionalstorage.block.EnderDrawerBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.buuz135.functionalstorage.world.EnderSavedData"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "com.buuz135.functionalstorage.client.loader.FramedModel$Loader"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Model Loaders",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "fusion": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.supermartijn642.fusion.mixin.WeightedBakedModelMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.TerrainParticleMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientLevel",
                "double",
                "double",
                "double",
                "double",
                "double",
                "double",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tintQuad",
              "raw": "tintQuad(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.SpriteResourceLoaderMixin",
            "method": {
              "argTypes": [
                "java.util.Collection",
                "net.minecraft.resources.ResourceLocation",
                "net.minecraft.server.packs.resources.Resource",
                "net.neoforged.neoforge.client.textures.SpriteContentsConstructor",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.server.packs.resources.ResourceMetadata",
                "com.mojang.blaze3d.platform.NativeImage",
                "net.minecraft.client.resources.metadata.animation.AnimationMetadataSection",
                "net.minecraft.client.resources.metadata.animation.FrameSize"
              ],
              "name": "modifyFrameSize",
              "raw": "modifyFrameSize(Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/Resource;Lnet/neoforged/neoforge/client/textures/SpriteContentsConstructor;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/server/packs/resources/ResourceMetadata;Lcom/mojang/blaze3d/platform/NativeImage;Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection;Lnet/minecraft/client/resources/metadata/animation/FrameSize;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE_ASSIGN, target=Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection;calculateFrameSize(II)Lnet/minecraft/client/resources/metadata/animation/FrameSize;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.SpriteLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.resources.ResourceLocation",
                "int",
                "java.util.concurrent.Executor",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "initializeTextures",
              "raw": "initializeTextures(Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;ILjava/util/concurrent/Executor;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.SpriteContentsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "net.minecraft.client.resources.metadata.animation.FrameSize",
                "com.mojang.blaze3d.platform.NativeImage",
                "net.minecraft.server.packs.resources.ResourceMetadata",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initMetadata",
              "raw": "initMetadata(Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/metadata/animation/FrameSize;Lcom/mojang/blaze3d/platform/NativeImage;Lnet/minecraft/server/packs/resources/ResourceMetadata;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Ljava/lang/Object;<init>()V}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.sodium.BlockRendererMixinSodium",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.client.render.frapi.mesh.MutableQuadViewImpl",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "getBlockTint",
              "raw": "getBlockTint(Lnet/caffeinemc/mods/sodium/client/render/frapi/mesh/MutableQuadViewImpl;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.PathPackResourcesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.PackType",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getNamespaces",
              "raw": "getNamespaces(Lnet/minecraft/server/packs/PackType;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.PathPackResourcesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.PackType",
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getResource",
              "raw": "getResource(Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.PathPackResourcesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.PackLocationInfo",
                "java.nio.file.Path",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lnet/minecraft/server/packs/PackLocationInfo;Ljava/nio/file/Path;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.PackMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "open",
              "raw": "open(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.PackMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.PackLocationInfo",
                "net.minecraft.server.packs.repository.Pack$ResourcesSupplier",
                "net.minecraft.server.packs.repository.Pack$Metadata",
                "net.minecraft.server.packs.PackSelectionConfig",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lnet/minecraft/server/packs/PackLocationInfo;Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/server/packs/repository/Pack$Metadata;Lnet/minecraft/server/packs/PackSelectionConfig;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.PackEntryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "showFusionWarningScreen",
              "raw": "showFusionWarningScreen(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.PackEntryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "boolean",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderIcon",
              "raw": "renderIcon(Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/GuiGraphics;blit(Lnet/minecraft/resources/ResourceLocation;IIFFIIII)V}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.PackEntryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "boolean",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderBackground",
              "raw": "renderBackground(Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/gui/GuiGraphics;blit(Lnet/minecraft/resources/ResourceLocation;IIFFIIII)V}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.PackEntryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cacheFusionMetadata",
              "raw": "cacheFusionMetadata(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.OutlineBufferSourceMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.RenderType",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getBuffer",
              "raw": "getBuffer(Lnet/minecraft/client/renderer/RenderType;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.neoforge.DatagenModLoaderMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "begin",
              "raw": "begin(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/neoforged/neoforge/data/event/GatherDataEvent$DataGeneratorConfig;runAll()V}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.ModelManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.util.profiling.ProfilerFiller",
                "java.util.Map",
                "net.minecraft.client.resources.model.ModelBakery",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "applyBlockModelOverlays",
              "raw": "applyBlockModelOverlays(Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/Map;Lnet/minecraft/client/resources/model/ModelBakery;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/resources/model/ModelBakery;getBakedTopLevelModels()Ljava/util/Map;, ordinal=1}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.ModelManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.util.profiling.ProfilerFiller",
                "java.util.Map",
                "net.minecraft.client.resources.model.ModelBakery",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "registerBlockModelOverlays",
              "raw": "registerBlockModelOverlays(Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/Map;Lnet/minecraft/client/resources/model/ModelBakery;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.MinecraftMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "registerBlockModelOverlayReloadListener",
              "raw": "registerBlockModelOverlayReloadListener(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/resources/model/ModelManager;<init>(Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/client/color/block/BlockColors;I)V}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.ItemRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef",
                "com.llamalad7.mixinextras.sugar.ref.LocalIntRef"
              ],
              "name": "renderQuadList",
              "raw": "renderQuadList(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;Lcom/llamalad7/mixinextras/sugar/ref/LocalIntRef;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE_ASSIGN, target=Lnet/minecraft/client/color/item/ItemColors;getColor(Lnet/minecraft/world/item/ItemStack;I)I}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.ItemModelShaperMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "resolveItemPredicatesModel",
              "raw": "resolveItemPredicatesModel(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.FilePackResourcesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.PackType",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getNamespaces",
              "raw": "getNamespaces(Lnet/minecraft/server/packs/PackType;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.FilePackResourcesMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getResource",
              "raw": "getResource(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.EntityRenderersMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.entity.EntityRendererProvider$Context",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "resetProviderMap",
              "raw": "resetProviderMap(Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.EntityRenderersMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.entity.EntityRendererProvider$Context",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "interceptRendererCreation",
              "raw": "interceptRendererCreation(Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.EntityRenderDispatcherMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "double",
                "double",
                "double",
                "float",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.client.renderer.entity.EntityRenderer"
              ],
              "name": "renderTail",
              "raw": "renderTail(Lnet/minecraft/world/entity/Entity;DDDFFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/client/renderer/entity/EntityRenderer;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.EntityRenderDispatcherMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "double",
                "double",
                "double",
                "float",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.client.renderer.entity.EntityRenderer"
              ],
              "name": "renderHead",
              "raw": "renderHead(Lnet/minecraft/world/entity/Entity;DDDFFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/client/renderer/entity/EntityRenderer;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/renderer/entity/EntityRenderer;render(Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.EntityModelSetMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "loadFusionEntityModels",
              "raw": "loadFusionEntityModels(Lnet/minecraft/server/packs/resources/ResourceManager;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.EntityModelSetMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.model.geom.ModelLayerLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "trackBakedModel",
              "raw": "trackBakedModel(Lnet/minecraft/client/model/geom/ModelLayerLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.embeddium.BlockRendererMixinEmbeddium",
            "method": {
              "argTypes": [
                "org.embeddedt.embeddium.api.render.chunk.BlockRenderContext",
                "org.embeddedt.embeddium.impl.model.color.ColorProvider",
                "org.embeddedt.embeddium.impl.model.quad.BakedQuadView",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getBlockTint",
              "raw": "getBlockTint(Lorg/embeddedt/embeddium/api/render/chunk/BlockRenderContext;Lorg/embeddedt/embeddium/impl/model/color/ColorProvider;Lorg/embeddedt/embeddium/impl/model/quad/BakedQuadView;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.BufferSourceMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.RenderType",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getBuffer",
              "raw": "getBuffer(Lnet/minecraft/client/renderer/RenderType;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.BlockModelDeserializerMixin",
            "method": {
              "argTypes": [
                "com.google.gson.JsonElement",
                "java.lang.reflect.Type",
                "com.google.gson.JsonDeserializationContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "deserialize",
              "raw": "deserialize(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.fusion.mixin.AgeableMobMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setAge",
              "raw": "setAge(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/AgeableMob;ageBoundaryReached()V}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.78-beta,)"
      },
      "info": {
        "authors": "SuperMartijn642",
        "classes": "257",
        "description": "Fusion allows resource packs to use additional texture and model types such as connected textures!",
        "displayName": "Fusion",
        "file": "fusion-1.2.4-neoforge-mc1.21.jar",
        "license": "All rights reserved",
        "package": "com.supermartijn642.fusion",
        "version": "1.2.4"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.supermartijn642.fusion.resources.MinimumVersionWarningScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "com.supermartijn642.fusion.mixin.TerrainParticleMixin"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "com.supermartijn642.fusion.model.WrappedBakedModel",
          "com.supermartijn642.fusion.model.types.connecting.ConnectingBakedModel",
          "com.supermartijn642.fusion.model.types.connecting.ConnectingBakedModel$1",
          "com.supermartijn642.fusion.model.types.base.BaseBakedModel",
          "com.supermartijn642.fusion.model.types.base.BaseBakedModel$1",
          "com.supermartijn642.fusion.model.modifiers.item.ItemModelModifierBakedModel",
          "com.supermartijn642.fusion.model.modifiers.block.PaneCullingBakedModel",
          "com.supermartijn642.fusion.model.modifiers.block.BlockModelModifierBakedModel",
          "com.supermartijn642.fusion.model.ItemBakedModel"
        ],
        "net.minecraft.data.DataProvider": [
          "com.supermartijn642.fusion.api.provider.FusionTextureMetadataProvider",
          "com.supermartijn642.fusion.api.provider.FusionModelProvider"
        ]
      },
      "modifies": [
        "net.caffeinemc.mods.sodium.client.render.chunk.compile.pipeline.BlockRenderer",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.screens.packs.TransferableSelectionList$PackEntry",
        "net.minecraft.client.model.geom.EntityModelSet",
        "net.minecraft.client.particle.TerrainParticle",
        "net.minecraft.client.renderer.ItemModelShaper",
        "net.minecraft.client.renderer.MultiBufferSource$BufferSource",
        "net.minecraft.client.renderer.OutlineBufferSource",
        "net.minecraft.client.renderer.block.ModelBlockRenderer",
        "net.minecraft.client.renderer.block.model.BlockModel",
        "net.minecraft.client.renderer.entity.EntityRenderDispatcher",
        "net.minecraft.client.renderer.entity.EntityRenderer",
        "net.minecraft.client.renderer.entity.EntityRenderers",
        "net.minecraft.client.renderer.entity.ItemRenderer",
        "net.minecraft.client.renderer.texture.SpriteContents",
        "net.minecraft.client.renderer.texture.SpriteLoader",
        "net.minecraft.client.renderer.texture.TextureAtlasSprite",
        "net.minecraft.client.renderer.texture.atlas.SpriteResourceLoader",
        "net.minecraft.client.resources.model.ModelManager",
        "net.minecraft.client.resources.model.WeightedBakedModel",
        "net.minecraft.server.packs.FilePackResources",
        "net.minecraft.server.packs.PathPackResources",
        "net.minecraft.server.packs.repository.Pack",
        "net.minecraft.world.entity.AgeableMob",
        "net.minecraft.world.entity.Entity",
        "net.neoforged.neoforge.client.model.ExtendedBlockModelDeserializer",
        "net.neoforged.neoforge.client.model.lighting.QuadLighter",
        "net.neoforged.neoforge.data.loading.DatagenModLoader",
        "org.embeddedt.embeddium.impl.render.chunk.compile.pipeline.BlockRenderer"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom GUI Screens",
        "Custom Particles",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "fzzy_config": {
      "dependencies": {
        "kotlinforforge": "[5.3.0,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.0-beta,)"
      },
      "info": {
        "authors": "fzzyhmstrs",
        "classes": "608",
        "description": "Configuration engine with automatic GUI generation, client-server syncing, powerful validation and error handling, and much more.\n",
        "displayName": "Fzzy Config",
        "file": "fzzy_config-0.6.4+1.21+neoforge.jar",
        "license": "TDL-M (https://github.com/fzzyhmstrs/Timefall-Development-Licence-Modified)",
        "package": "me.fzzyhmstrs.fzzy_config",
        "version": "0.6.4+1.21+neoforge"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "me.fzzyhmstrs.fzzy_config.screen.internal.RestartScreen",
          "me.fzzyhmstrs.fzzy_config.screen.internal.ConfigScreen",
          "me.fzzyhmstrs.fzzy_config.screen.PopupWidgetScreen"
        ]
      },
      "summary": [
        "Custom GUI Screens",
        "Localization"
      ]
    },
    "gag": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "ky.someone.mods.gag.mixin.WanderingTraderSpawnerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.core.BlockPos",
                "int",
                "net.minecraft.world.entity.ai.village.poi.PoiManager",
                "java.util.Optional",
                "net.minecraft.core.BlockPos"
              ],
              "name": "stopSpawn",
              "raw": "stopSpawn(Lnet/minecraft/server/level/ServerLevel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager;Ljava/util/Optional;Lnet/minecraft/core/BlockPos;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/EntityType;spawn(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;)Lnet/minecraft/world/entity/Entity;}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.114-beta,)",
        "placebo": "[9.5.0,)"
      },
      "events": {
        "dev.shadowsoffire.placebo.events.ResourceReloadEvent": [
          "ky.someone.mods.gag.config.GAGClientConfig#onClientPlayerDisconnect"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "ky.someone.mods.gag.client.GAGClient#setup"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingOut": [
          "ky.someone.mods.gag.config.GAGConfig#onClientPlayerDisconnect"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "ky.someone.mods.gag.client.GAGClient#registerEntityRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "ky.someone.mods.gag.client.GAGClient#registerColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "ky.someone.mods.gag.client.GAGClient#onRegisterMenuScreens"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "ky.someone.mods.gag.client.GAGClient#registerParticles"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiEvent$Post": [
          "ky.someone.mods.gag.client.GAGClientEvents#renderHUD"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "ky.someone.mods.gag.data.GAGData#onGatherData"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "ky.someone.mods.gag.command.GAGCommands#onRegisterCommands"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "ky.someone.mods.gag.GAG#onEntityJoinLevel"
        ],
        "net.neoforged.neoforge.event.entity.EntityStruckByLightningEvent": [
          "ky.someone.mods.gag.GAG#entityLightning"
        ],
        "net.neoforged.neoforge.event.entity.living.FinalizeSpawnEvent": [
          "ky.someone.mods.gag.GAG#checkSpawn"
        ],
        "net.neoforged.neoforge.network.event.RegisterConfigurationTasksEvent": [
          "ky.someone.mods.gag.network.GAGConfigPhase#configureModdedClient"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "ky.someone.mods.gag.network.GAGNetwork#onRegisterPayloadHandlers"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "ky.someone.mods.gag.GAGRegistry#register"
        ]
      },
      "info": {
        "authors": "MaxNeedsSnacks",
        "classes": "76",
        "description": "A Minecraft mod that adds various different utility items and blocks!\n",
        "displayName": "Gadgets Against Grind",
        "file": "gag-5.0.1.jar",
        "license": "MIT",
        "package": "ky.someone.mods.gag",
        "version": "5.0.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "ky.someone.mods.gag.client.screen.LabelingMenuScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "ky.someone.mods.gag.particle.client.MagicParticle"
        ],
        "net.minecraft.data.DataProvider": [
          "ky.someone.mods.gag.data.GAGRecipesProvider",
          "ky.someone.mods.gag.data.GAGLangProvider",
          "ky.someone.mods.gag.data.loot.GAGLootTableProvider",
          "ky.someone.mods.gag.data.GAGBlockModelProvider",
          "ky.someone.mods.gag.data.GAGItemModelProvider"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "ky.someone.mods.gag.effect.RepellingEffect"
        ],
        "net.minecraft.world.entity.Entity": [
          "ky.someone.mods.gag.entity.FishingDynamiteEntity",
          "ky.someone.mods.gag.entity.MiningDynamiteEntity",
          "ky.someone.mods.gag.entity.AbstractDynamiteEntity",
          "ky.someone.mods.gag.entity.TimeAcceleratorEntity"
        ],
        "net.minecraft.world.item.Item": [
          "ky.someone.mods.gag.item.DynamiteItem",
          "ky.someone.mods.gag.item.TemporalPouchItem",
          "ky.someone.mods.gag.item.GAGItem",
          "ky.someone.mods.gag.item.RepellingItem",
          "ky.someone.mods.gag.item.HearthstoneItem",
          "ky.someone.mods.gag.item.PigmentJarItem",
          "ky.someone.mods.gag.item.EnergizedHearthstoneItem",
          "ky.someone.mods.gag.item.EscapeRopeItem",
          "ky.someone.mods.gag.item.LabelingToolItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "ky.someone.mods.gag.recipe.pigment.PigmentJarSplittingRecipe",
          "ky.someone.mods.gag.recipe.pigment.PigmentJarMixingRecipe",
          "ky.someone.mods.gag.recipe.pigment.PigmentJarFromDyeRecipe",
          "ky.someone.mods.gag.recipe.pigment.PigmentJarLeatherDyingRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "ky.someone.mods.gag.block.NoSolicitorsSign"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "ky.someone.mods.gag.world.GAGPointOfInterestStorage"
        ]
      },
      "modifies": [
        "net.minecraft.world.entity.npc.WanderingTraderSpawner"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Network Packets",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Recipe Types",
        "Custom Server Commands",
        "Custom Tag Assignments",
        "Listens to Entity Join World Events",
        "Localization",
        "Modifies Entity Spawning",
        "Modifies Methods",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "gateways": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.shadowsoffire.gateways.mixin.SpawnerBlockEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "gateways_allowSetNbt",
              "raw": "gateways_allowSetNbt(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "apothic_attributes": "[2.4.0,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.61,)",
        "placebo": "[9.5.1,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "dev.shadowsoffire.gateways.client.GatewaysClient#setup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "dev.shadowsoffire.gateways.Gateways#setup"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "dev.shadowsoffire.gateways.client.GatewaysClient#eRenders"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "dev.shadowsoffire.gateways.client.GatewaysClient#colors"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "dev.shadowsoffire.gateways.client.GatewaysClient#factories"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "dev.shadowsoffire.gateways.GatewayEvents#commands"
        ],
        "net.neoforged.neoforge.event.entity.EntityTeleportEvent": [
          "dev.shadowsoffire.gateways.GatewayEvents#teleport"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingConversionEvent$Post": [
          "dev.shadowsoffire.gateways.GatewayEvents#convert"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "dev.shadowsoffire.gateways.GatewayEvents#hurt"
        ],
        "net.neoforged.neoforge.event.entity.living.MobDespawnEvent": [
          "dev.shadowsoffire.gateways.GatewayEvents#despawn"
        ]
      },
      "info": {
        "authors": "Shadows_of_Fire",
        "classes": "73",
        "description": "Adds combat-based events which provide various rewards and challenges.",
        "displayName": "Gateways To Eternity",
        "file": "GatewaysToEternity-1.21.1-5.0.2.jar",
        "license": "MIT License",
        "package": "dev.shadowsoffire.gateways",
        "version": "5.0.2"
      },
      "inheritance": {
        "net.minecraft.client.particle.Particle": [
          "dev.shadowsoffire.gateways.client.GatewayParticle"
        ],
        "net.minecraft.world.entity.Entity": [
          "dev.shadowsoffire.gateways.entity.NormalGatewayEntity",
          "dev.shadowsoffire.gateways.entity.GatewayEntity",
          "dev.shadowsoffire.gateways.entity.EndlessGatewayEntity"
        ],
        "net.minecraft.world.item.Item": [
          "dev.shadowsoffire.gateways.item.GatePearlItem"
        ]
      },
      "modifies": [
        "net.minecraft.world.level.block.entity.SpawnerBlockEntity"
      ],
      "summary": [
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Particles",
        "Custom Recipes",
        "Custom Server Commands",
        "Listens to Entity Damage Events",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "geckolib": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "software.bernie.geckolib.mixin.client.LevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "geckolib$captureRenderedEntities",
              "raw": "geckolib$captureRenderedEntities(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "software.bernie.geckolib.mixin.client.BlockEntityWithoutLevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemDisplayContext",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "geckolib$renderGeckolibItem",
              "raw": "geckolib$renderGeckolibItem(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.1.62,)"
      },
      "info": {
        "authors": "Gecko, Eliot, AzureDoom, DerToaster, Tslat, Witixin",
        "classes": "238",
        "description": "GeckoLib is an animation engine for Minecraft Mods, with support for complex 3D keyframe-based animations, 30+ easings, concurrent animation support, sound and particle keyframes, event keyframes, and more.\n",
        "displayName": "GeckoLib 4",
        "file": "geckolib-neoforge-1.21.1-4.7.3.jar",
        "license": "MIT",
        "package": "software.bernie.geckolib",
        "version": "4.7.3"
      },
      "inheritance": {
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "software.bernie.geckolib.renderer.specialty.DynamicGeoItemRenderer",
          "software.bernie.geckolib.renderer.GeoItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "software.bernie.geckolib.renderer.specialty.DynamicGeoBlockRenderer",
          "software.bernie.geckolib.renderer.GeoBlockRenderer"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "software.bernie.geckolib.cache.AnimatableIdCache"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.entity.layers.HumanoidArmorLayer",
        "net.minecraft.client.renderer.texture.TextureManager"
      ],
      "summary": [
        "Custom Block Renderer",
        "Custom Item Renderer",
        "Modifies Methods",
        "Stores Data in World Saves"
      ]
    },
    "glassential": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.bigenergy.glassential.mixin.MixinTitleScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.bigenergy.glassential.mixin.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "fusion": "[1.2.2,)",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.73,)"
      },
      "info": {
        "authors": "Big_Energy",
        "classes": "33",
        "description": "Various glasses for all your decorative needs.",
        "displayName": "Glassential-renewed",
        "file": "Glassential-renewed-neoforge-1.21.1-3.1.5.jar",
        "license": "MIT",
        "package": "com.bigenergy.glassential",
        "version": "3.1.5"
      },
      "inheritance": {
        "net.minecraft.world.level.block.Block": [
          "com.bigenergy.glassential.panes.RedstonePaneBlock",
          "com.bigenergy.glassential.panes.EtherealPaneBlock",
          "com.bigenergy.glassential.panes.DarkEtherealPaneBlock",
          "com.bigenergy.glassential.panes.BasicPaneBlock",
          "com.bigenergy.glassential.doors.ObsidianGlassTrapDoor",
          "com.bigenergy.glassential.doors.ObsidianGlassDoor",
          "com.bigenergy.glassential.doors.GlassTrapDoor",
          "com.bigenergy.glassential.doors.GlassLightTrapDoor",
          "com.bigenergy.glassential.doors.GlassLightDoor",
          "com.bigenergy.glassential.doors.GlassDoor",
          "com.bigenergy.glassential.blocks.TooltipGlassBlock",
          "com.bigenergy.glassential.blocks.slabs.GlassSlabBlock",
          "com.bigenergy.glassential.blocks.SimpleGlassBlock",
          "com.bigenergy.glassential.blocks.RedstoneGlassBlock",
          "com.bigenergy.glassential.blocks.EtherealGlassBlock",
          "com.bigenergy.glassential.blocks.DarkGlassBlock",
          "com.bigenergy.glassential.blocks.DarkEtherealGlassBlock"
        ]
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.screens.TitleScreen"
      ],
      "summary": [
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods"
      ]
    },
    "glodium": {
      "dependencies": {
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.1,)"
      },
      "info": {
        "authors": "GlodBlock",
        "classes": "31",
        "description": "Codelib",
        "displayName": "Glodium",
        "file": "Glodium-1.21-2.2-neoforge.jar",
        "license": "MIT",
        "package": "com.glodblock.github.glodium",
        "version": "1.21-2.2-neoforge"
      },
      "summary": [
        "Uses Access Transformers"
      ]
    },
    "guideme": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.1,)"
      },
      "info": {
        "classes": "5079",
        "description": "GuideME offers the foundation for your mods or modpacks guidebook.",
        "displayName": "GuideME",
        "file": "guideme-21.1.0.jar",
        "license": "See GitHub repository for details",
        "package": "guideme",
        "version": "21.1.0"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "guideme.internal.screen.DocumentScreen",
          "guideme.internal.screen.IndepentScaleScreen",
          "guideme.internal.screen.GuideScreen",
          "guideme.internal.screen.GuideSearchScreen"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "guideme.internal.item.GuideItemDispatchModel"
        ],
        "net.minecraft.data.DataProvider": [
          "guideme.internal.data.GuideMEModelProvider",
          "guideme.internal.data.GuideMELanguageProvider"
        ],
        "net.minecraft.world.item.Item": [
          "guideme.internal.item.GuideItem"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "guideme.internal.item.GuideItemDispatchModelLoader"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Block Textures",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Model Loaders",
        "Localization",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "holosigns": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.mrbysco.holosigns.mixin.SignRendererMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "net.minecraft.world.level.block.state.properties.WoodType",
                "net.minecraft.client.model.Model",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "holosigns$renderSign",
              "raw": "holosigns$renderSign(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/world/level/block/state/properties/WoodType;Lnet/minecraft/client/model/Model;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.mrbysco.holosigns.mixin.SignRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.entity.SignBlockEntity",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.block.SignBlock",
                "net.minecraft.world.level.block.state.properties.WoodType",
                "net.minecraft.client.model.Model",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "holosigns$renderSignWithText",
              "raw": "holosigns$renderSignWithText(Lnet/minecraft/world/level/block/entity/SignBlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/SignBlock;Lnet/minecraft/world/level/block/state/properties/WoodType;Lnet/minecraft/client/model/Model;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/blockentity/SignRenderer;translateSign(Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/level/block/state/BlockState;)V, ordinal=0}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.1.1,)"
      },
      "events": {
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.mrbysco.holosigns.datagen.SignDataGenerator#gatherData"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.mrbysco.holosigns.handler.SignHandler#onSignInteract"
        ]
      },
      "info": {
        "authors": "Mrbysco, ShyNieke",
        "classes": "14",
        "description": "Adds the ability to turn not render signs and add glass signs\n",
        "displayName": "HoloSigns",
        "file": "HoloSigns-1.21.1-1.0.0.jar",
        "license": "MIT",
        "package": "com.mrbysco.holosigns",
        "version": "1.0.0"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "com.mrbysco.holosigns.datagen.client.SignLanguageProvider",
          "com.mrbysco.holosigns.datagen.client.SignBlockstateProvider",
          "com.mrbysco.holosigns.datagen.server.SignBlockTagProvider",
          "com.mrbysco.holosigns.datagen.server.SignLootProvider",
          "com.mrbysco.holosigns.datagen.server.SignRecipeProvider",
          "com.mrbysco.holosigns.datagen.server.SignItemTagProvider"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.blockentity.SignRenderer"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Methods",
        "Uses Data Generators"
      ]
    },
    "hostilenetworks": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.shadowsoffire.hostilenetworks.mixin.client.MixinRenderType",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.MeshData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "hnn_cleanNoLighting",
              "raw": "hnn_cleanNoLighting(Lcom/mojang/blaze3d/vertex/MeshData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/renderer/RenderType;clearRenderState()V}]"
            }
          },
          {
            "class": "dev.shadowsoffire.hostilenetworks.mixin.client.MixinRenderType",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.MeshData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "hnn_setupNoLighting",
              "raw": "hnn_setupNoLighting(Lcom/mojang/blaze3d/vertex/MeshData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/RenderType;setupRenderState()V}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.90,)",
        "placebo": "[9.6.4,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileNetworks#setup"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileNetworks#caps"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "dev.shadowsoffire.hostilenetworks.HostileClient$GameBusEvents#tick"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "dev.shadowsoffire.hostilenetworks.util.ClientEntityCache#tick"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "dev.shadowsoffire.hostilenetworks.HostileClient#mrl"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientCommandsEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileClient$GameBusEvents#commands"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientTooltipComponentFactoriesEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileClient#tooltipComps"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "dev.shadowsoffire.hostilenetworks.HostileClient#colors"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileClient#overlays"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileClient#keys"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileClient#screens"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$Color": [
          "dev.shadowsoffire.hostilenetworks.HostileClient$GameBusEvents#tooltipColors"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$GatherComponents": [
          "dev.shadowsoffire.hostilenetworks.HostileClient$GameBusEvents#comps"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileNetworks#data"
        ],
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileEvents#reload"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileEvents#sync"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileEvents#cmds"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "dev.shadowsoffire.hostilenetworks.HostileEvents#kill"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteractSpecific": [
          "dev.shadowsoffire.hostilenetworks.HostileEvents#modelAttunement"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "dev.shadowsoffire.hostilenetworks.util.ClientEntityCache#unload"
        ]
      },
      "info": {
        "authors": "Shadows_of_Fire",
        "classes": "75",
        "description": "Defeating hostile entities - but in simulations!",
        "displayName": "Hostile Neural Networks",
        "file": "HostileNeuralNetworks-1.21.1-6.1.3.jar",
        "license": "MIT License",
        "package": "dev.shadowsoffire.hostilenetworks",
        "version": "6.1.3"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.shadowsoffire.hostilenetworks.gui.SimChamberScreen",
          "dev.shadowsoffire.hostilenetworks.gui.LootFabScreen",
          "dev.shadowsoffire.hostilenetworks.gui.DeepLearnerScreen"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "dev.shadowsoffire.hostilenetworks.client.DataModelItemStackRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "dev.shadowsoffire.hostilenetworks.datagen.LootProvider"
        ],
        "net.minecraft.world.item.Item": [
          "dev.shadowsoffire.hostilenetworks.item.MobPredictionItem",
          "dev.shadowsoffire.hostilenetworks.item.DeepLearnerItem",
          "dev.shadowsoffire.hostilenetworks.item.DataModelItem",
          "dev.shadowsoffire.hostilenetworks.item.BlankDataModelItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "dev.shadowsoffire.hostilenetworks.block.SimChamberBlock",
          "dev.shadowsoffire.hostilenetworks.block.LootFabBlock"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.RenderType"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Client Commands",
        "Custom Data Pack Sync",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Loot Tables",
        "Custom Recipes",
        "Custom Server Commands",
        "Custom Tag Assignments",
        "Custom Tooltip Components",
        "Has Capability Providers",
        "Listens to Entity Death Events",
        "Listens to Entity Interaction Events with Click Positions",
        "Localization",
        "Modifies Methods",
        "Modifies Tooltips",
        "Runs Client Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "hpm": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.12,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "hal.studios.hpm.network.SailspeedupMessage#registerMessage",
          "hal.studios.hpm.network.SailspeeddownMessage#registerMessage",
          "hal.studios.hpm.network.RotateshiprightMessage#registerMessage",
          "hal.studios.hpm.network.RotateshipleftMessage#registerMessage",
          "hal.studios.hpm.network.HpmModVariables#init",
          "hal.studios.hpm.network.FireMessage#registerMessage",
          "hal.studios.hpm.network.CannonLeftMessage#registerMessage"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "hal.studios.hpm.init.HpmModEntities#registerCapabilities"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "hal.studios.hpm.init.HpmModKeyMappings$KeyEventListener#onClientTick"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "hal.studios.hpm.init.HpmModModels#registerLayerDefinitions"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "hal.studios.hpm.init.HpmModEntityRenderers#registerEntityRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "hal.studios.hpm.init.HpmModKeyMappings#registerKeyMappings"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "hal.studios.hpm.init.HpmModScreens#clientLoad"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "hal.studios.hpm.command.ShipSpeedMultiplierCommand#registerCommand"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeCreationEvent": [
          "hal.studios.hpm.init.HpmModEntities#registerAttributes"
        ],
        "net.neoforged.neoforge.event.entity.RegisterSpawnPlacementsEvent": [
          "hal.studios.hpm.init.HpmModEntities#init"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$Clone": [
          "hal.studios.hpm.network.HpmModVariables$EventBusVariableHandlers#clonePlayer"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": [
          "hal.studios.hpm.network.HpmModVariables$EventBusVariableHandlers#onPlayerChangedDimension",
          "hal.studios.hpm.network.HpmModVariables$EventBusVariableHandlers#onPlayerChangedDimensionSyncPlayerVariables"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "hal.studios.hpm.network.HpmModVariables$EventBusVariableHandlers#onPlayerLoggedIn",
          "hal.studios.hpm.network.HpmModVariables$EventBusVariableHandlers#onPlayerLoggedInSyncPlayerVariables"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerRespawnEvent": [
          "hal.studios.hpm.network.HpmModVariables$EventBusVariableHandlers#onPlayerRespawnedSyncPlayerVariables"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "hal.studios.hpm.procedures.ShipyawtickProcedure#onPlayerTick",
          "hal.studios.hpm.procedures.ShipYawProcedure#onPlayerTick",
          "hal.studios.hpm.procedures.ShipspeedsettingsProcedure#onPlayerTick",
          "hal.studios.hpm.procedures.ShipmovementProcedure#onPlayerTick",
          "hal.studios.hpm.procedures.SailspeedProcedure#onPlayerTick"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "hal.studios.hpm.HpmMod#tick"
        ]
      },
      "info": {
        "authors": "Halbear",
        "classes": "574",
        "description": "a small ship mod",
        "displayName": "HalsPirateMod",
        "file": "Swashbucklers! 2.6.5 1.21.1.jar",
        "license": "Academic Free License v3.0",
        "package": "hal.studios.hpm",
        "version": "2.6.5"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "hal.studios.hpm.client.gui.SwashbucklerinventoryScreen",
          "hal.studios.hpm.client.gui.RaftinventoryScreen",
          "hal.studios.hpm.client.gui.CutterinventoryScreen"
        ],
        "net.minecraft.world.entity.Entity": [
          "hal.studios.hpm.procedures.FirerightProcedure$2$1",
          "hal.studios.hpm.procedures.FirerightProcedure$1$1",
          "hal.studios.hpm.procedures.FireOnKeyReleasedProcedure$2$1",
          "hal.studios.hpm.procedures.FireOnKeyReleasedProcedure$1$1",
          "hal.studios.hpm.procedures.CannonLeftOnKeyReleasedProcedure$1$1",
          "hal.studios.hpm.entity.WreckedswashbucklerupgradeEntity",
          "hal.studios.hpm.entity.SwashbucklerupgradedEntity",
          "hal.studios.hpm.entity.SwashbucklerEntity",
          "hal.studios.hpm.entity.ShipwreckswashbucklerEntity",
          "hal.studios.hpm.entity.ShipwreckedraftEntity",
          "hal.studios.hpm.entity.RaftEntity",
          "hal.studios.hpm.entity.HandCannonProjectileEntity",
          "hal.studios.hpm.entity.CutterwreckfrontEntity",
          "hal.studios.hpm.entity.CutterwreckbackEntity",
          "hal.studios.hpm.entity.CutterpiratewreckEntity",
          "hal.studios.hpm.entity.CutterPirateEntity",
          "hal.studios.hpm.entity.CutterpiratedamagedEntity",
          "hal.studios.hpm.entity.CuttermilitarisedEntity",
          "hal.studios.hpm.entity.CuttermilitariseddamagedEntity",
          "hal.studios.hpm.entity.CutterEntity",
          "hal.studios.hpm.entity.CutterdamagedEntity",
          "hal.studios.hpm.entity.CorvetteSteamshipEntity",
          "hal.studios.hpm.entity.CorvettesteamshipdamagedEntity"
        ],
        "net.minecraft.world.entity.Mob": [
          "hal.studios.hpm.entity.WreckedswashbucklerupgradeEntity",
          "hal.studios.hpm.entity.SwashbucklerupgradedEntity",
          "hal.studios.hpm.entity.SwashbucklerEntity",
          "hal.studios.hpm.entity.ShipwreckswashbucklerEntity",
          "hal.studios.hpm.entity.ShipwreckedraftEntity",
          "hal.studios.hpm.entity.RaftEntity",
          "hal.studios.hpm.entity.CutterwreckfrontEntity",
          "hal.studios.hpm.entity.CutterwreckbackEntity",
          "hal.studios.hpm.entity.CutterpiratewreckEntity",
          "hal.studios.hpm.entity.CutterPirateEntity",
          "hal.studios.hpm.entity.CutterpiratedamagedEntity",
          "hal.studios.hpm.entity.CuttermilitarisedEntity",
          "hal.studios.hpm.entity.CuttermilitariseddamagedEntity",
          "hal.studios.hpm.entity.CutterEntity",
          "hal.studios.hpm.entity.CutterdamagedEntity",
          "hal.studios.hpm.entity.CorvetteSteamshipEntity",
          "hal.studios.hpm.entity.CorvettesteamshipdamagedEntity"
        ],
        "net.minecraft.world.item.Item": [
          "hal.studios.hpm.item.SwashbucklerupgradeItem",
          "hal.studios.hpm.item.SwashbuckleritemItem",
          "hal.studios.hpm.item.SpannerItem",
          "hal.studios.hpm.item.SmallMastItem",
          "hal.studios.hpm.item.SmallhullItem",
          "hal.studios.hpm.item.RaftitemItem",
          "hal.studios.hpm.item.LargemastItem",
          "hal.studios.hpm.item.LargehullItem",
          "hal.studios.hpm.item.HandCannonItem",
          "hal.studios.hpm.item.CuttermilitariseditemItem",
          "hal.studios.hpm.item.CutteritemItem",
          "hal.studios.hpm.item.CannonballItem"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "hal.studios.hpm.network.HpmModVariables$WorldVariables",
          "hal.studios.hpm.network.HpmModVariables$MapVariables"
        ]
      },
      "summary": [
        "Custom Block Textures",
        "Custom Entities",
        "Custom Entity Attributes",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Mobs",
        "Custom Server Commands",
        "Custom Tag Assignments",
        "Has Capability Providers",
        "Listens to Dimension Change Events",
        "Listens to Player Login Events",
        "Localization",
        "Runs Client Tick Logic",
        "Runs Player Tick Logic",
        "Runs Server Tick Logic",
        "Stores Data in World Saves"
      ]
    },
    "ibicf": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.unrealdinnerbone.ibicf.mixin.DimensionRenderInfoMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "init",
              "raw": "init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[1.0,)",
        "trenzalore": "[6.1.1,)"
      },
      "info": {
        "authors": "UnRealDinnerbone",
        "classes": "4",
        "description": "Change cloud height\n",
        "displayName": "I Believe I Can Fly",
        "file": "ibicf-neo-7.0.0+mc1.21.1.jar",
        "license": "All Rights Reserved unless stated otherwise. Distribution permission is given to FeedTheBeast and CurseForge for use in modpacks",
        "package": "com.unrealdinnerbone.ibicf",
        "version": "7.0.0"
      },
      "modifies": [
        "net.minecraft.client.renderer.DimensionSpecialEffects"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "iceberg": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.anthonyhilyard.iceberg.neoforge.mixin.TooltipRenderUtilMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "icebergRenderRectangle",
              "raw": "icebergRenderRectangle(Lnet/minecraft/client/gui/GuiGraphics;IIIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.neoforge.mixin.TooltipRenderUtilMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "icebergRenderTooltipBackgroundTwo",
              "raw": "icebergRenderTooltipBackgroundTwo(Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/gui/screens/inventory/tooltip/TooltipRenderUtil;renderHorizontalLine(Lnet/minecraft/client/gui/GuiGraphics;IIIII)V, ordinal=1, remap=false}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.neoforge.mixin.TooltipRenderUtilMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "icebergRenderTooltipBackgroundOne",
              "raw": "icebergRenderTooltipBackgroundOne(Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/gui/screens/inventory/tooltip/TooltipRenderUtil;renderHorizontalLine(Lnet/minecraft/client/gui/GuiGraphics;IIIII)V, ordinal=0, remap=false}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.neoforge.mixin.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.Font",
                "java.util.List",
                "int",
                "int",
                "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderTooltipInternalTail",
              "raw": "renderTooltipInternalTail(Lnet/minecraft/client/gui/Font;Ljava/util/List;IILnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.neoforge.mixin.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.Font",
                "java.util.List",
                "int",
                "int",
                "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.neoforged.neoforge.client.event.RenderTooltipEvent$Pre",
                "int",
                "int",
                "int",
                "int",
                "org.joml.Vector2ic"
              ],
              "name": "storeLocals",
              "raw": "storeLocals(Lnet/minecraft/client/gui/Font;Ljava/util/List;IILnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/neoforged/neoforge/client/event/RenderTooltipEvent$Pre;IIIILorg/joml/Vector2ic;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lorg/joml/Vector2ic;x()I, remap=false}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.TooltipRenderUtilMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "icebergRenderVerticalLineGradient",
              "raw": "icebergRenderVerticalLineGradient(Lnet/minecraft/client/gui/GuiGraphics;IIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.TooltipRenderUtilMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "icebergRenderVerticalLine",
              "raw": "icebergRenderVerticalLine(Lnet/minecraft/client/gui/GuiGraphics;IIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.TooltipRenderUtilMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "icebergRenderRectangle",
              "raw": "icebergRenderRectangle(Lnet/minecraft/client/gui/GuiGraphics;IIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.TooltipRenderUtilMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "icebergRenderHorizontalLine",
              "raw": "icebergRenderHorizontalLine(Lnet/minecraft/client/gui/GuiGraphics;IIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.TooltipRenderUtilMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "icebergRenderFrameGradientTwo",
              "raw": "icebergRenderFrameGradientTwo(Lnet/minecraft/client/gui/GuiGraphics;IIIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/gui/screens/inventory/tooltip/TooltipRenderUtil;renderHorizontalLine(Lnet/minecraft/client/gui/GuiGraphics;IIIII)V, ordinal=1}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.TooltipRenderUtilMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "icebergRenderFrameGradientOne",
              "raw": "icebergRenderFrameGradientOne(Lnet/minecraft/client/gui/GuiGraphics;IIIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/gui/screens/inventory/tooltip/TooltipRenderUtil;renderHorizontalLine(Lnet/minecraft/client/gui/GuiGraphics;IIIII)V, ordinal=0}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.TextColorMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "icebergParseColor",
              "raw": "icebergParseColor(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.TextColorMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "icebergConstructor2",
              "raw": "icebergConstructor2(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.TextColorMixin",
            "method": {
              "argTypes": [
                "int",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "icebergConstructor1",
              "raw": "icebergConstructor1(ILjava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.ScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getTooltipFromItem",
              "raw": "getTooltipFromItem(Lnet/minecraft/client/Minecraft;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)Ljava/util/List;",
              "returnType": "java.util.List"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.PlayerAdvancementsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.advancements.AdvancementHolder",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "boolean"
              ],
              "name": "onAward",
              "raw": "onAward(Lnet/minecraft/advancements/AdvancementHolder;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Z)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.MinecraftMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "runTick",
              "raw": "runTick(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{args=[ldc=gameRenderer], value=INVOKE_STRING, target=Lnet/minecraft/util/profiling/ProfilerFiller;popPush(Ljava/lang/String;)V}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.item.ItemEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onItemPickup",
              "raw": "onItemPickup(Lnet/minecraft/world/entity/item/ItemEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.level.ClipContext$Fluid",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "icebergGetPlayerPOVHitResult",
              "raw": "icebergGetPlayerPOVHitResult(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/ClipContext$Fluid;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.anthonyhilyard.iceberg.mixin.ClientPacketListenerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundTakeItemEntityPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.entity.Entity",
                "net.minecraft.world.entity.LivingEntity"
              ],
              "name": "handleTakeItemEntity",
              "raw": "handleTakeItemEntity(Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/item/ItemStack;shrink(I)V}]"
            }
          }
        ]
      },
      "dependencies": {
        "advancementplaques": "[1.6.3,)",
        "equipmentcompare": "[1.3.11,)",
        "itemborders": "[1.2.4,)",
        "legendarytooltips": "[1.4.10,)",
        "merchantmarkers": "[1.3.4,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "com.anthonyhilyard.iceberg.neoforge.client.IcebergNeoForgeClient$ModEvents#configLoadEvent"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "com.anthonyhilyard.iceberg.neoforge.client.IcebergNeoForgeClient$ModEvents#configReloadEvent"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientReloadListenersEvent": [
          "com.anthonyhilyard.iceberg.neoforge.services.NeoForgeReloadListenerRegistrar#addListeners"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientTooltipComponentFactoriesEvent": [
          "com.anthonyhilyard.iceberg.neoforge.client.IcebergNeoForgeClient$ModEvents#registerTooltipComponentsEvent"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "com.anthonyhilyard.iceberg.neoforge.services.NeoForgeKeyMappingRegistrar#onRegisterKeyMappings"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$Color": [
          "com.anthonyhilyard.iceberg.neoforge.client.IcebergNeoForgeClient$NeoForgeEvents#tooltipColorEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$GatherComponents": [
          "com.anthonyhilyard.iceberg.neoforge.client.IcebergNeoForgeClient$NeoForgeEvents#tooltipGatherEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$Pre": [
          "com.anthonyhilyard.iceberg.neoforge.client.IcebergNeoForgeClient$NeoForgeEvents#tooltipPreRenderEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "com.anthonyhilyard.iceberg.neoforge.client.IcebergNeoForgeClient$NeoForgeEvents#itemTooltipEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "com.anthonyhilyard.iceberg.neoforge.server.IcebergNeoForgeServer#event"
        ]
      },
      "info": {
        "authors": "Grend",
        "classes": "100",
        "description": "A library containing events, helpers, and utilities to make modding easier.",
        "displayName": "Iceberg",
        "file": "Iceberg-1.21.1-neoforge-1.2.9.2.jar",
        "license": "CC BY-NC-ND 4.0",
        "package": "com.anthonyhilyard.iceberg",
        "updateUrl": "https://mc-update-check.anthonyhilyard.com/520110",
        "version": "1.2.9.2"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "com.anthonyhilyard.iceberg.util.EntityCollector$2"
        ]
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.GuiGraphics",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.client.gui.screens.inventory.tooltip.TooltipRenderUtil",
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.network.chat.TextColor",
        "net.minecraft.server.PlayerAdvancements",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.item.Item"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom Entities",
        "Custom Key Mappings",
        "Custom Tooltip Components",
        "Listens to Player Login Events",
        "Modifies Methods",
        "Modifies Tooltips",
        "Uses Access Transformers"
      ]
    },
    "illagerwarship": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.12,)"
      },
      "events": {
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "illagerwarship.IllagerwarshipMod#tick"
        ]
      },
      "info": {
        "authors": "Wario",
        "classes": "2",
        "description": "adds a big illager warship",
        "displayName": "Illager-Warship",
        "file": "illagerwarship-1.0.0-neoforge-1.21.1.jar",
        "license": "Academic Free License v3.0",
        "package": "illagerwarship",
        "version": "1.0.0"
      },
      "summary": [
        "Custom World Generation",
        "Localization",
        "Runs Server Tick Logic"
      ]
    },
    "immediatelyfast": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.raphimc.immediatelyfast.neoforge.injection.mixins.screen_batching.MixinHandledScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endDrawSlotHighlightOnTop",
              "raw": "endDrawSlotHighlightOnTop(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.neoforge.injection.mixins.screen_batching.MixinHandledScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginDrawSlotHighlightOnTop",
              "raw": "beginDrawSlotHighlightOnTop(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.neoforge.injection.mixins.hud_batching.compat.appleskin.MixinAppleSkin_HUDOverlayHandler",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "forceDrawBatch",
              "raw": "forceDrawBatch(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.neoforge.injection.mixins.hud_batching.MixinInGameHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endBatching",
              "raw": "endBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.neoforge.injection.mixins.hud_batching.MixinInGameHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginBatching",
              "raw": "beginBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.neoforge.injection.mixins.core.MixinNeoForgeRenderTypes",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "changeTranslucency",
              "raw": "changeTranslucency(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.sign_text_buffering.MixinSignText",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "invalidateCache",
              "raw": "invalidateCache(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{opcode=181, value=FIELD, target=Lnet/minecraft/world/level/block/entity/SignText;renderMessages:[Lnet/minecraft/util/FormattedCharSequence;}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.sign_text_buffering.MixinSignText",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "checkShouldCache",
              "raw": "checkShouldCache(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.sign_text_buffering.MixinSignBlockEntityRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.entity.SignText",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "int",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderBufferedSignText",
              "raw": "renderBufferedSignText(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/SignText;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IIIZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.screen_batching.MixinHandledScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endBatching",
              "raw": "endBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/gui/screens/inventory/AbstractContainerScreen;renderLabels(Lnet/minecraft/client/gui/GuiGraphics;II)V}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.screen_batching.MixinHandledScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginBatching",
              "raw": "beginBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=FIELD, target=Lnet/minecraft/client/gui/screens/inventory/AbstractContainerScreen;hoveredSlot:Lnet/minecraft/world/inventory/Slot;, ordinal=0}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.screen_batching.MixinChatScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endBatching",
              "raw": "endBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.screen_batching.MixinChatScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginBatching",
              "raw": "beginBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.screen_batching.MixinChatInputSuggestor",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endBatching",
              "raw": "endBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.screen_batching.MixinChatInputSuggestor",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginBatching",
              "raw": "beginBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.map_atlas_generation.MixinMapRenderer_MapTexture",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "dontCloseDummyTexture",
              "raw": "dontCloseDummyTexture(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.map_atlas_generation.MixinMapRenderer_MapTexture",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "updateAtlasTexture",
              "raw": "updateAtlasTexture(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.map_atlas_generation.MixinMapRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.saveddata.maps.MapId",
                "net.minecraft.world.level.saveddata.maps.MapItemSavedData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "createMapAtlasTexture",
              "raw": "createMapAtlasTexture(Lnet/minecraft/world/level/saveddata/maps/MapId;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.map_atlas_generation.MixinMapRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "clearMapAtlasTextures",
              "raw": "clearMapAtlasTextures(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.consumer.MixinDrawContext",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "forceDrawBatch",
              "raw": "forceDrawBatch(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.consumer.MixinDrawContext",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "dontDrawIfBatching",
              "raw": "dontDrawIfBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.consumer.MixinDrawContext",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderItemOverlayIntoBufferEnd",
              "raw": "renderItemOverlayIntoBufferEnd(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.consumer.MixinDrawContext",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderItemOverlayIntoBufferStart",
              "raw": "renderItemOverlayIntoBufferStart(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.consumer.MixinDrawContext",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderItemIntoBufferEnd",
              "raw": "renderItemIntoBufferEnd(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.consumer.MixinDrawContext",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderItemIntoBufferStart",
              "raw": "renderItemIntoBufferStart(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.consumer.MixinDrawContext",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "int",
                "int",
                "int",
                "int",
                "int",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "drawTexturedQuadIntoBuffer",
              "raw": "drawTexturedQuadIntoBuffer(Lnet/minecraft/resources/ResourceLocation;IIIIIFFFFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.consumer.MixinDrawContext",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "int",
                "int",
                "int",
                "int",
                "int",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "drawTexturedQuadIntoBuffer",
              "raw": "drawTexturedQuadIntoBuffer(Lnet/minecraft/resources/ResourceLocation;IIIIIFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.consumer.MixinDrawContext",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.RenderType",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "fillIntoBuffer",
              "raw": "fillIntoBuffer(Lnet/minecraft/client/renderer/RenderType;IIIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.consumer.MixinDrawContext",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.RenderType",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "fillIntoBuffer",
              "raw": "fillIntoBuffer(Lnet/minecraft/client/renderer/RenderType;IIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.consumer.MixinDrawContext",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "storeOriginalVertexConsumers",
              "raw": "storeOriginalVertexConsumers(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.compat.itemborders.MixinItemBorders_ItemBorders",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderItemOverlayIntoBufferEnd",
              "raw": "renderItemOverlayIntoBufferEnd(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.compat.itemborders.MixinItemBorders_ItemBorders",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderItemOverlayIntoBufferStart",
              "raw": "renderItemOverlayIntoBufferStart(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.compat.highlighter.MixinHighlighter_Highlighter",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderItemOverlayIntoBufferEnd",
              "raw": "renderItemOverlayIntoBufferEnd(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.compat.highlighter.MixinHighlighter_Highlighter",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderItemOverlayIntoBufferStart",
              "raw": "renderItemOverlayIntoBufferStart(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.compat.armorchroma.MixinArmorChroma_GuiArmor",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginHudBatching",
              "raw": "beginHudBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.compat.armorchroma.MixinArmorChroma_GuiArmor",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endHudBatching",
              "raw": "endHudBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.compat.MixinBufferRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "checkForDrawCallWhileBatching",
              "raw": "checkForDrawCallWhileBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinSubtitlesHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endBatching",
              "raw": "endBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinSubtitlesHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginBatching",
              "raw": "beginBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinSpectatorHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endBatching",
              "raw": "endBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinSpectatorHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginBatching",
              "raw": "beginBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinPlayerListHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endBatching",
              "raw": "endBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinPlayerListHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginBatching",
              "raw": "beginBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinDebugHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endBatching",
              "raw": "endBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinDebugHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginBatching",
              "raw": "beginBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinChatHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endBatching",
              "raw": "endBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinChatHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginBatching",
              "raw": "beginBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinBossBarHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endBatching",
              "raw": "endBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.hud_batching.MixinBossBarHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beginBatching",
              "raw": "beginBatching(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.core.compat.MixinTextDisplayEntityRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Display$TextDisplay",
                "net.minecraft.world.entity.Display$TextDisplay$TextRenderState",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "drawBackgroundImmediately",
              "raw": "drawBackgroundImmediately(Lnet/minecraft/world/entity/Display$TextDisplay;Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/Display$TextDisplay$CachedInfo;lines()Ljava/util/List;, ordinal=1}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.core.compat.MixinGameRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceProvider",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "checkForCoreShaderModifications",
              "raw": "checkForCoreShaderModifications(Lnet/minecraft/server/packs/resources/ResourceProvider;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.core.MixinWindow",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "endFrame",
              "raw": "endFrame(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.core.MixinWindow",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initImmediatelyFast",
              "raw": "initImmediatelyFast(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.core.MixinTextureManager",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "removeDestroyedTexture",
              "raw": "removeDestroyedTexture(Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.core.MixinMinecraftClient",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "callOnWorldJoin",
              "raw": "callOnWorldJoin(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.core.MixinMinecraftClient",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initImmediatelyFast",
              "raw": "initImmediatelyFast(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.core.MixinGlDebug",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "printAdditionalInfo",
              "raw": "printAdditionalInfo(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.raphimc.immediatelyfast.injection.mixins.core.MixinDebugHud",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "appendAllocationInfo",
              "raw": "appendAllocationInfo(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.21.1]",
        "neoforge": "[21.0.0,)"
      },
      "info": {
        "authors": "RK_01",
        "classes": "82",
        "description": "Speed up and optimize immediate mode rendering in Minecraft\n",
        "displayName": "ImmediatelyFast",
        "file": "ImmediatelyFast-NeoForge-1.3.4+1.21.1.jar",
        "license": "LGPL-3.0",
        "package": "net.raphimc.immediatelyfast",
        "version": "1.3.4+1.21.1"
      },
      "modifies": [
        "com.anthonyhilyard.highlighter.Highlighter",
        "com.anthonyhilyard.itemborders.ItemBorders",
        "com.mojang.blaze3d.platform.GlDebug",
        "com.mojang.blaze3d.platform.Window",
        "com.mojang.blaze3d.vertex.BufferUploader",
        "com.mojang.blaze3d.vertex.VertexBuffer",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.Font$StringRenderOutput",
        "net.minecraft.client.gui.Gui",
        "net.minecraft.client.gui.GuiGraphics",
        "net.minecraft.client.gui.LayeredDraw",
        "net.minecraft.client.gui.MapRenderer",
        "net.minecraft.client.gui.MapRenderer$MapInstance",
        "net.minecraft.client.gui.components.BossHealthOverlay",
        "net.minecraft.client.gui.components.ChatComponent",
        "net.minecraft.client.gui.components.CommandSuggestions",
        "net.minecraft.client.gui.components.DebugScreenOverlay",
        "net.minecraft.client.gui.components.PlayerTabOverlay",
        "net.minecraft.client.gui.components.SubtitleOverlay",
        "net.minecraft.client.gui.components.spectator.SpectatorGui",
        "net.minecraft.client.gui.font.FontTexture",
        "net.minecraft.client.gui.screens.ChatScreen",
        "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen",
        "net.minecraft.client.renderer.GameRenderer",
        "net.minecraft.client.renderer.MultiBufferSource",
        "net.minecraft.client.renderer.blockentity.SignRenderer",
        "net.minecraft.client.renderer.entity.DisplayRenderer$TextDisplayRenderer",
        "net.minecraft.client.renderer.texture.TextureManager",
        "net.minecraft.world.level.block.entity.SignText",
        "net.neoforged.neoforge.client.NeoForgeRenderTypes$Internal",
        "nukeduck.armorchroma.GuiArmor",
        "org.lwjgl.opengl.GL11",
        "squeek.appleskin.client.HUDOverlayHandler"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "immersiveengineering": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "blusunrize.immersiveengineering.mixin.coremods.WaterwheelBoundsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.world.level.material.Fluid",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.Direction",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.material.FluidState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "canPassThrough",
              "raw": "canPassThrough(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "blusunrize.immersiveengineering.mixin.coremods.TemplateMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.HolderGetter",
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "readConnectionsFromNBT",
              "raw": "readConnectionsFromNBT(Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "blusunrize.immersiveengineering.mixin.coremods.TemplateMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "writeConnectionsToNBT",
              "raw": "writeConnectionsToNBT(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "blusunrize.immersiveengineering.mixin.coremods.TemplateMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.ServerLevelAccessor",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings",
                "net.minecraft.util.RandomSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "addConnectionsToWorld",
              "raw": "addConnectionsToWorld(Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/util/RandomSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "blusunrize.immersiveengineering.mixin.coremods.TemplateMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.Vec3i",
                "boolean",
                "net.minecraft.world.level.block.Block",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "takeConnectionsFromWorld",
              "raw": "takeConnectionsFromWorld(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;ZLnet/minecraft/world/level/block/Block;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "blusunrize.immersiveengineering.mixin.coremods.ServerWorldMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.block.state.BlockState",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "wireBlockCallback",
              "raw": "wireBlockCallback(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/Set;iterator()Ljava/util/Iterator;}]"
            }
          },
          {
            "class": "blusunrize.immersiveengineering.mixin.coremods.client.MinecartRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.vehicle.AbstractMinecart",
                "float",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterRender",
              "raw": "afterRender(Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "blusunrize.immersiveengineering.mixin.coremods.client.BipedModelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "rotationAngleCallback",
              "raw": "rotationAngleCallback(Lnet/minecraft/world/entity/LivingEntity;FFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "blusunrize.immersiveengineering.mixin.coremods.AbstractBlockStateMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onBlockCollision",
              "raw": "onBlockCollision(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "jei": "[19.10.0.126,)",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.51,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "blusunrize.immersiveengineering.common.config.IEClientConfig#onConfigChange"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "blusunrize.immersiveengineering.common.config.IEServerConfig#onConfigLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "blusunrize.immersiveengineering.common.config.IEServerConfig#onConfigReload"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "blusunrize.immersiveengineering.client.ClientProxy#clientSetup",
          "blusunrize.immersiveengineering.client.BlockRenderLayers#clientSetup"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "blusunrize.immersiveengineering.common.items.ItemCapabilityRegistration#registerBlockCapabilities",
          "blusunrize.immersiveengineering.common.entities.EntityCapabilityRegistration#registerCapabilities",
          "blusunrize.immersiveengineering.common.blocks.BlockCapabilityRegistration#registerBlockCapabilities"
        ],
        "net.neoforged.neoforge.client.event.AddSectionGeometryEvent": [
          "blusunrize.immersiveengineering.client.render.ConnectionRenderer#onSectionRender"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "blusunrize.immersiveengineering.client.EarmuffHandler#updateEarmuffMultipliers",
          "blusunrize.immersiveengineering.client.ClientEventHandler#onClientTick"
        ],
        "net.neoforged.neoforge.client.event.ComputeFovModifierEvent": [
          "blusunrize.immersiveengineering.client.ClientEventHandler#onFOVUpdate"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$AddLayers": [
          "blusunrize.immersiveengineering.client.ClientProxy#registerLayers"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "blusunrize.immersiveengineering.client.render.entity.IEModelLayers#registerDefinitions"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "blusunrize.immersiveengineering.client.ClientProxy#registerRenders"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseScrollingEvent": [
          "blusunrize.immersiveengineering.client.ClientEventHandler#onMouseEvent"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$BakingCompleted": [
          "blusunrize.immersiveengineering.client.models.ModelConveyor$RawConveyorModel#onModelBakingDone"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "blusunrize.immersiveengineering.client.render.tile.DynamicModel#registerModels"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "blusunrize.immersiveengineering.client.ClientProxy#registerModelLoaders"
        ],
        "net.neoforged.neoforge.client.event.RecipesUpdatedEvent": [
          "blusunrize.immersiveengineering.api.crafting.cache.CachedRecipeList#onRecipeUpdatedClient"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientCommandsEvent": [
          "blusunrize.immersiveengineering.common.util.commands.ClientCommands#registerClientCommands"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientTooltipComponentFactoriesEvent": [
          "blusunrize.immersiveengineering.client.ClientProxy#registerTooltips"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "blusunrize.immersiveengineering.client.IEDefaultColourHandlers#registerBlockColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "blusunrize.immersiveengineering.client.IEDefaultColourHandlers#registerItemColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "blusunrize.immersiveengineering.client.ItemOverlayUtils#register",
          "blusunrize.immersiveengineering.client.BlockOverlayUtils#register"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "blusunrize.immersiveengineering.client.IEKeybinds#registerKeybinds"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "blusunrize.immersiveengineering.client.ClientProxy#registerContainersAndScreens"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "blusunrize.immersiveengineering.common.register.IEParticles$Client#registerParticleFactories"
        ],
        "net.neoforged.neoforge.client.event.RegisterShadersEvent": [
          "blusunrize.immersiveengineering.client.utils.IEGLShaders#registerShaders"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiLayerEvent$Pre": [
          "blusunrize.immersiveengineering.client.ClientEventHandler#onRenderOverlayPre"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "blusunrize.immersiveengineering.client.ClientEventHandler#renderAdditionalBlockBounds"
        ],
        "net.neoforged.neoforge.client.event.RenderItemInFrameEvent": [
          "blusunrize.immersiveengineering.client.ClientEventHandler#onRenderItemFrame"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "blusunrize.immersiveengineering.client.utils.VertexBufferHolder#afterTERRendering",
          "blusunrize.immersiveengineering.client.LevelStageRenders#onRenderLevelStage"
        ],
        "net.neoforged.neoforge.client.event.RenderLivingEvent$Post": [
          "blusunrize.immersiveengineering.client.ClientEventHandler#onRenderLivingPost"
        ],
        "net.neoforged.neoforge.client.event.RenderLivingEvent$Pre": [
          "blusunrize.immersiveengineering.client.ClientEventHandler#onRenderLivingPre"
        ],
        "net.neoforged.neoforge.client.event.TextureAtlasStitchedEvent": [
          "blusunrize.immersiveengineering.client.ClientProxy#textureStichPost"
        ],
        "net.neoforged.neoforge.client.event.ViewportEvent$ComputeFogColor": [
          "blusunrize.immersiveengineering.client.ClientEventHandler#onFogColourUpdate"
        ],
        "net.neoforged.neoforge.client.event.ViewportEvent$RenderFog": [
          "blusunrize.immersiveengineering.client.ClientEventHandler#onFogUpdate"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "blusunrize.immersiveengineering.client.ClientExtensions#registerClientExtensions"
        ],
        "net.neoforged.neoforge.event.AnvilUpdateEvent": [
          "blusunrize.immersiveengineering.common.EventHandler#onAnvilChange"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "blusunrize.immersiveengineering.common.register.IECreativeTabs#fillTab"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "blusunrize.immersiveengineering.common.crafting.ArcRecyclingCalculator$1#onDatapackSync"
        ],
        "net.neoforged.neoforge.event.TagsUpdatedEvent": [
          "blusunrize.immersiveengineering.api.crafting.cache.CachedRecipeList#onTagsUpdated",
          "blusunrize.immersiveengineering.common.world.Villages#onTagsUpdated"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeCreationEvent": [
          "blusunrize.immersiveengineering.common.IEContent#registerCaps"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "blusunrize.immersiveengineering.common.EventHandler#onMobSpawn",
          "blusunrize.immersiveengineering.client.ClientEventHandler#onEntityJoiningWorld"
        ],
        "net.neoforged.neoforge.event.entity.EntityTeleportEvent$ChorusFruit": [
          "blusunrize.immersiveengineering.common.util.SpawnInterdictionHandler#onChorusTeleport"
        ],
        "net.neoforged.neoforge.event.entity.EntityTeleportEvent$EnderEntity": [
          "blusunrize.immersiveengineering.common.util.SpawnInterdictionHandler#onEnderTeleport"
        ],
        "net.neoforged.neoforge.event.entity.EntityTeleportEvent$EnderPearl": [
          "blusunrize.immersiveengineering.common.util.SpawnInterdictionHandler#onEnderpearlTeleport"
        ],
        "net.neoforged.neoforge.event.entity.living.FinalizeSpawnEvent": [
          "blusunrize.immersiveengineering.common.util.SpawnInterdictionHandler#onEntitySpawnCheck"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Pre": [
          "blusunrize.immersiveengineering.common.EventHandler#onLivingAttacked"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "blusunrize.immersiveengineering.common.EventHandler#onLivingDeath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "blusunrize.immersiveengineering.common.EventHandler#onLivingDrops",
          "blusunrize.immersiveengineering.common.EventHandler#onLivingDropsLowest"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEvent$LivingJumpEvent": [
          "blusunrize.immersiveengineering.common.EventHandler#onLivingJump"
        ],
        "net.neoforged.neoforge.event.entity.player.CriticalHitEvent": [
          "blusunrize.immersiveengineering.common.items.SkyhookItem#criticalHit"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Post": [
          "blusunrize.immersiveengineering.common.EventHandler#onItemPickup"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "blusunrize.lib.manual.gui.ManualScreen#appendLinkToTooltip",
          "blusunrize.immersiveengineering.client.ClientEventHandler#onItemTooltip"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerContainerEvent$Close": [
          "blusunrize.immersiveengineering.common.gui.IEContainerMenu#onContainerClosed"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerContainerEvent$Open": [
          "blusunrize.immersiveengineering.common.gui.IEContainerMenu#onContainerOpened"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$BreakSpeed": [
          "blusunrize.immersiveengineering.common.EventHandler#digSpeedEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$HarvestCheck": [
          "blusunrize.immersiveengineering.common.items.DrillItem#handleUnderwaterDrill"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "blusunrize.immersiveengineering.common.blocks.multiblocks.TemplateSyncManager#onLogin"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteractSpecific": [
          "blusunrize.immersiveengineering.common.EventHandler#onMinecartInteraction"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "blusunrize.immersiveengineering.common.EventHandler#onBlockRightclick"
        ],
        "net.neoforged.neoforge.event.entity.player.TradeWithVillagerEvent": [
          "blusunrize.immersiveengineering.common.world.Villages$Events#onTrade"
        ],
        "net.neoforged.neoforge.event.level.ChunkDataEvent$Load": [
          "blusunrize.immersiveengineering.common.world.IEWorldGen#chunkDataLoad"
        ],
        "net.neoforged.neoforge.event.level.ChunkDataEvent$Save": [
          "blusunrize.immersiveengineering.common.world.IEWorldGen#chunkDataSave"
        ],
        "net.neoforged.neoforge.event.level.ChunkEvent$Load": [
          "blusunrize.immersiveengineering.api.wires.NetworkSanitizer#chunkLoad"
        ],
        "net.neoforged.neoforge.event.level.ChunkEvent$Unload": [
          "blusunrize.immersiveengineering.api.wires.NetworkSanitizer#chunkUnload"
        ],
        "net.neoforged.neoforge.event.level.ChunkWatchEvent$UnWatch": [
          "blusunrize.immersiveengineering.common.wires.WireSyncManager#onChunkUnWatch"
        ],
        "net.neoforged.neoforge.event.level.ChunkWatchEvent$Watch": [
          "blusunrize.immersiveengineering.common.wires.WireSyncManager#onChunkWatch"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Load": [
          "blusunrize.immersiveengineering.common.EventHandler#onLoad"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "blusunrize.immersiveengineering.api.wires.GlobalWireNetwork#onWorldUnload",
          "blusunrize.immersiveengineering.common.util.SpawnInterdictionHandler#onWorldUnload",
          "blusunrize.immersiveengineering.common.util.FakePlayerUtil#onUnload",
          "blusunrize.immersiveengineering.common.blocks.metal.FluidPipeBlockEntity#onWorldUnload"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "blusunrize.immersiveengineering.common.crafting.ArcRecyclingCalculator$1#onServerStarted"
        ],
        "net.neoforged.neoforge.event.tick.EntityTickEvent$Pre": [
          "blusunrize.immersiveengineering.common.EventHandler#onLivingUpdate"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Post": [
          "blusunrize.immersiveengineering.common.world.IEWorldGen#serverWorldTick"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Pre": [
          "blusunrize.immersiveengineering.common.items.BuzzsawItem$1#onTick",
          "blusunrize.immersiveengineering.common.EventHandler#onWorldTick"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "blusunrize.immersiveengineering.client.ClientEventHandler#onPlayerTick"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Pre": [
          "blusunrize.immersiveengineering.common.crafting.ArcRecyclingCalculator$1#onServerTick"
        ],
        "net.neoforged.neoforge.event.village.VillagerTradesEvent": [
          "blusunrize.immersiveengineering.common.world.Villages$Events#registerTrades"
        ],
        "net.neoforged.neoforge.registries.NewRegistryEvent": [
          "blusunrize.immersiveengineering.common.IEContent#addMissingRegistrations",
          "blusunrize.immersiveengineering.common.blocks.metal.ConveyorBeltBlockEntity#registerConveyorBEsAndBlocks"
        ]
      },
      "info": {
        "authors": "BluSunrize and Damien A.W. Hazard",
        "classes": "1766",
        "description": "A tech based mod focused on realism.",
        "displayName": "Immersive Engineering",
        "file": "ImmersiveEngineering-1.21.1-12.0.0-182.jar",
        "license": "Blu's License of Common Sense",
        "package": "blusunrize.lib.manual",
        "updateUrl": "https://raw.githubusercontent.com/BluSunrize/ImmersiveEngineering/1.21.1/changelog.json",
        "version": "12.0.0-182"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "blusunrize.lib.manual.gui.ManualScreen",
          "blusunrize.immersiveengineering.client.gui.TurretScreen",
          "blusunrize.immersiveengineering.client.gui.ToolModificationScreen",
          "blusunrize.immersiveengineering.client.gui.ToolboxScreen",
          "blusunrize.immersiveengineering.client.gui.SqueezerScreen",
          "blusunrize.immersiveengineering.client.gui.SorterScreen",
          "blusunrize.immersiveengineering.client.gui.SirenScreen",
          "blusunrize.immersiveengineering.client.gui.RevolverScreen",
          "blusunrize.immersiveengineering.client.gui.RefineryScreen",
          "blusunrize.immersiveengineering.client.gui.RedstoneTimerScreen",
          "blusunrize.immersiveengineering.client.gui.RedstoneSwitchboardScreen",
          "blusunrize.immersiveengineering.client.gui.RedstoneStateCellScreen",
          "blusunrize.immersiveengineering.client.gui.RedstoneProbeScreen",
          "blusunrize.immersiveengineering.client.gui.RedstoneConnectorScreen",
          "blusunrize.immersiveengineering.client.gui.RadioTowerScreen",
          "blusunrize.immersiveengineering.client.gui.ModWorkbenchScreen",
          "blusunrize.immersiveengineering.client.gui.MixerScreen",
          "blusunrize.immersiveengineering.client.gui.MaintenanceKitScreen",
          "blusunrize.immersiveengineering.client.gui.MachineInterfaceScreen",
          "blusunrize.immersiveengineering.client.gui.LogicUnitScreen",
          "blusunrize.immersiveengineering.client.gui.ItemBatcherScreen",
          "blusunrize.immersiveengineering.client.gui.IEContainerScreen",
          "blusunrize.immersiveengineering.client.gui.GunTurretScreen",
          "blusunrize.immersiveengineering.client.gui.FluidSorterScreen",
          "blusunrize.immersiveengineering.client.gui.FermenterScreen",
          "blusunrize.immersiveengineering.client.gui.CrateScreen",
          "blusunrize.immersiveengineering.client.gui.CrateScreen$StandardCrate",
          "blusunrize.immersiveengineering.client.gui.CrateScreen$EntityCrate",
          "blusunrize.immersiveengineering.client.gui.CraftingTableScreen",
          "blusunrize.immersiveengineering.client.gui.CokeOvenScreen",
          "blusunrize.immersiveengineering.client.gui.ClocheScreen",
          "blusunrize.immersiveengineering.client.gui.ClientBlockEntityScreen",
          "blusunrize.immersiveengineering.client.gui.CircuitTableScreen",
          "blusunrize.immersiveengineering.client.gui.ChemTurretScreen",
          "blusunrize.immersiveengineering.client.gui.BlastFurnaceScreen",
          "blusunrize.immersiveengineering.client.gui.BlastFurnaceScreen$Advanced",
          "blusunrize.immersiveengineering.client.gui.AutoWorkbenchScreen",
          "blusunrize.immersiveengineering.client.gui.AssemblerScreen",
          "blusunrize.immersiveengineering.client.gui.ArcFurnaceScreen",
          "blusunrize.immersiveengineering.client.gui.AlloySmelterScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "blusunrize.immersiveengineering.client.fx.SparksParticle",
          "blusunrize.immersiveengineering.client.fx.IEBubbleParticle",
          "blusunrize.immersiveengineering.client.fx.FractalParticle",
          "blusunrize.immersiveengineering.client.fx.FluidSplashParticle"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "blusunrize.immersiveengineering.client.render.IEOBJItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "blusunrize.immersiveengineering.api.multiblocks.blocks.util.MultiblockRenderer",
          "blusunrize.immersiveengineering.client.render.tile.WindmillRenderer",
          "blusunrize.immersiveengineering.client.render.tile.WatermillRenderer",
          "blusunrize.immersiveengineering.client.render.tile.TurretRenderer",
          "blusunrize.immersiveengineering.client.render.tile.TeslaCoilRenderer",
          "blusunrize.immersiveengineering.client.render.tile.SqueezerRenderer",
          "blusunrize.immersiveengineering.client.render.tile.SiloRenderer",
          "blusunrize.immersiveengineering.client.render.tile.SheetmetalTankRenderer",
          "blusunrize.immersiveengineering.client.render.tile.ShaderBannerRenderer",
          "blusunrize.immersiveengineering.client.render.tile.SawmillRenderer",
          "blusunrize.immersiveengineering.client.render.tile.SampleDrillRenderer",
          "blusunrize.immersiveengineering.client.render.tile.ModWorkbenchRenderer",
          "blusunrize.immersiveengineering.client.render.tile.MixerRenderer",
          "blusunrize.immersiveengineering.client.render.tile.MetalPressRenderer",
          "blusunrize.immersiveengineering.client.render.tile.IEMultiblockRenderer",
          "blusunrize.immersiveengineering.client.render.tile.IEBlockEntityRenderer",
          "blusunrize.immersiveengineering.client.render.tile.DieselGeneratorRenderer",
          "blusunrize.immersiveengineering.client.render.tile.CrusherRenderer",
          "blusunrize.immersiveengineering.client.render.tile.CoresampleRenderer",
          "blusunrize.immersiveengineering.client.render.tile.ClocheRenderer",
          "blusunrize.immersiveengineering.client.render.tile.ChargingStationRenderer",
          "blusunrize.immersiveengineering.client.render.tile.BucketWheelRenderer",
          "blusunrize.immersiveengineering.client.render.tile.BottlingMachineRenderer",
          "blusunrize.immersiveengineering.client.render.tile.BlastFurnacePreheaterRenderer",
          "blusunrize.immersiveengineering.client.render.tile.AutoWorkbenchRenderer",
          "blusunrize.immersiveengineering.client.render.tile.ArcFurnaceRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "blusunrize.immersiveengineering.api.client.ICacheKeyProvider",
          "blusunrize.immersiveengineering.client.models.split.BakedDynamicSplitModel",
          "blusunrize.immersiveengineering.client.models.split.BakedBasicSplitModel",
          "blusunrize.immersiveengineering.client.models.split.AbstractSplitModel",
          "blusunrize.immersiveengineering.client.models.obj.SpecificIEOBJModel",
          "blusunrize.immersiveengineering.client.models.obj.GeneralIEOBJModel",
          "blusunrize.immersiveengineering.client.models.ModelCoresample",
          "blusunrize.immersiveengineering.client.models.ModelConveyor",
          "blusunrize.immersiveengineering.client.models.ModelConfigurableSides",
          "blusunrize.immersiveengineering.client.models.mirror.CachedMirroredModel",
          "blusunrize.immersiveengineering.client.models.connection.FeedthroughModel",
          "blusunrize.immersiveengineering.client.models.connection.FeedthroughModel$SpecificFeedthroughModel",
          "blusunrize.immersiveengineering.client.models.CompositeBakedModel",
          "blusunrize.immersiveengineering.client.models.BakedIEModel"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "blusunrize.immersiveengineering.common.register.IEPotions$IEPotion"
        ],
        "net.minecraft.world.entity.Entity": [
          "blusunrize.immersiveengineering.common.entities.WolfpackShotEntity",
          "blusunrize.immersiveengineering.common.entities.SkylineHookEntity",
          "blusunrize.immersiveengineering.common.entities.SawbladeEntity",
          "blusunrize.immersiveengineering.common.entities.RevolvershotHomingEntity",
          "blusunrize.immersiveengineering.common.entities.RevolvershotFlareEntity",
          "blusunrize.immersiveengineering.common.entities.RevolvershotEntity",
          "blusunrize.immersiveengineering.common.entities.ReinforcedCrateMinecartEntity",
          "blusunrize.immersiveengineering.common.entities.RailgunShotEntity",
          "blusunrize.immersiveengineering.common.entities.MetalBarrelMinecartEntity",
          "blusunrize.immersiveengineering.common.entities.illager.Fusilier",
          "blusunrize.immersiveengineering.common.entities.illager.EngineerIllager",
          "blusunrize.immersiveengineering.common.entities.illager.Commando",
          "blusunrize.immersiveengineering.common.entities.illager.Bulwark",
          "blusunrize.immersiveengineering.common.entities.IEProjectileEntity",
          "blusunrize.immersiveengineering.common.entities.IEMinecartEntity",
          "blusunrize.immersiveengineering.common.entities.IEExplosiveEntity",
          "blusunrize.immersiveengineering.common.entities.FluorescentTubeEntity",
          "blusunrize.immersiveengineering.common.entities.CrateMinecartEntity",
          "blusunrize.immersiveengineering.common.entities.ChemthrowerShotEntity",
          "blusunrize.immersiveengineering.common.entities.BarrelMinecartEntity"
        ],
        "net.minecraft.world.entity.Mob": [
          "blusunrize.immersiveengineering.common.entities.illager.Fusilier",
          "blusunrize.immersiveengineering.common.entities.illager.EngineerIllager",
          "blusunrize.immersiveengineering.common.entities.illager.Commando",
          "blusunrize.immersiveengineering.common.entities.illager.Bulwark"
        ],
        "net.minecraft.world.item.Item": [
          "blusunrize.immersiveengineering.api.multiblocks.blocks.registry.MultiblockItem",
          "blusunrize.immersiveengineering.common.register.IEFluids$FluidEntry$1",
          "blusunrize.immersiveengineering.common.items.WirecutterItem",
          "blusunrize.immersiveengineering.common.items.WireCoilItem",
          "blusunrize.immersiveengineering.common.items.VoltmeterItem",
          "blusunrize.immersiveengineering.common.items.upgrades.ToolUpgradeItem",
          "blusunrize.immersiveengineering.common.items.UpgradeableToolItem",
          "blusunrize.immersiveengineering.common.items.ToolboxItem",
          "blusunrize.immersiveengineering.common.items.SurveyToolsItem",
          "blusunrize.immersiveengineering.common.items.SpeedloaderItem",
          "blusunrize.immersiveengineering.common.items.SkyhookItem",
          "blusunrize.immersiveengineering.common.items.ShaderItem",
          "blusunrize.immersiveengineering.common.items.ShaderBagItem",
          "blusunrize.immersiveengineering.common.items.ScrewdriverItem",
          "blusunrize.immersiveengineering.common.items.SawbladeItem",
          "blusunrize.immersiveengineering.common.items.RockcutterItem",
          "blusunrize.immersiveengineering.common.items.RevolverpartItem",
          "blusunrize.immersiveengineering.common.items.RevolverItem",
          "blusunrize.immersiveengineering.common.items.RailgunItem",
          "blusunrize.immersiveengineering.common.items.PowerpackItem",
          "blusunrize.immersiveengineering.common.items.PotionBucketItem",
          "blusunrize.immersiveengineering.common.items.ManualItem",
          "blusunrize.immersiveengineering.common.items.MaintenanceKitItem",
          "blusunrize.immersiveengineering.common.items.LogicCircuitBoardItem",
          "blusunrize.immersiveengineering.common.items.JerrycanItem",
          "blusunrize.immersiveengineering.common.items.InternalStorageItem",
          "blusunrize.immersiveengineering.common.items.IEShieldItem",
          "blusunrize.immersiveengineering.common.items.IESeedItem",
          "blusunrize.immersiveengineering.common.items.IEMinecartItem",
          "blusunrize.immersiveengineering.common.items.IEBaseItem",
          "blusunrize.immersiveengineering.common.items.HammerItem",
          "blusunrize.immersiveengineering.common.items.GrindingDiskItem",
          "blusunrize.immersiveengineering.common.items.GraphiteElectrodeItem",
          "blusunrize.immersiveengineering.common.items.GliderItem",
          "blusunrize.immersiveengineering.common.items.FluorescentTubeItem",
          "blusunrize.immersiveengineering.common.items.FertilizerItem",
          "blusunrize.immersiveengineering.common.items.FaradaySuitItem",
          "blusunrize.immersiveengineering.common.items.FakeIconItem",
          "blusunrize.immersiveengineering.common.items.EngineersBlueprintItem",
          "blusunrize.immersiveengineering.common.items.EarmuffsItem",
          "blusunrize.immersiveengineering.common.items.DrillItem",
          "blusunrize.immersiveengineering.common.items.DrillheadItem",
          "blusunrize.immersiveengineering.common.items.DieselToolItem",
          "blusunrize.immersiveengineering.common.items.CoresampleItem",
          "blusunrize.immersiveengineering.common.items.ChemthrowerItem",
          "blusunrize.immersiveengineering.common.items.BuzzsawItem",
          "blusunrize.immersiveengineering.common.items.BulletItem",
          "blusunrize.immersiveengineering.common.blocks.metal.TransformerBlockItem",
          "blusunrize.immersiveengineering.common.blocks.cloth.BlockItemBalloon",
          "blusunrize.immersiveengineering.common.blocks.BlockItemIE"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "blusunrize.immersiveengineering.api.excavator.MineralMix",
          "blusunrize.immersiveengineering.api.energy.WindmillBiome",
          "blusunrize.immersiveengineering.api.energy.ThermoelectricSource",
          "blusunrize.immersiveengineering.api.energy.GeneratorFuel",
          "blusunrize.immersiveengineering.api.crafting.SqueezerRecipe",
          "blusunrize.immersiveengineering.api.crafting.SawmillRecipe",
          "blusunrize.immersiveengineering.api.crafting.RefineryRecipe",
          "blusunrize.immersiveengineering.api.crafting.MultiblockRecipe",
          "blusunrize.immersiveengineering.api.crafting.MixerRecipe",
          "blusunrize.immersiveengineering.api.crafting.MetalPressRecipe",
          "blusunrize.immersiveengineering.api.crafting.IESerializableRecipe",
          "blusunrize.immersiveengineering.api.crafting.FermenterRecipe",
          "blusunrize.immersiveengineering.api.crafting.CrusherRecipe",
          "blusunrize.immersiveengineering.api.crafting.CokeOvenRecipe",
          "blusunrize.immersiveengineering.api.crafting.ClocheRecipe",
          "blusunrize.immersiveengineering.api.crafting.ClocheFertilizer",
          "blusunrize.immersiveengineering.api.crafting.BottlingMachineRecipe",
          "blusunrize.immersiveengineering.api.crafting.BlueprintCraftingRecipe",
          "blusunrize.immersiveengineering.api.crafting.BlastFurnaceRecipe",
          "blusunrize.immersiveengineering.api.crafting.BlastFurnaceFuel",
          "blusunrize.immersiveengineering.api.crafting.ArcFurnaceRecipe",
          "blusunrize.immersiveengineering.api.crafting.AlloyRecipe",
          "blusunrize.immersiveengineering.common.crafting.SpeedloaderLoadRecipe",
          "blusunrize.immersiveengineering.common.crafting.ShaderBagRecipe",
          "blusunrize.immersiveengineering.common.crafting.RGBColourationRecipe",
          "blusunrize.immersiveengineering.common.crafting.RevolverCycleRecipe",
          "blusunrize.immersiveengineering.common.crafting.RevolverAssemblyRecipe",
          "blusunrize.immersiveengineering.common.crafting.PowerpackRecipe",
          "blusunrize.immersiveengineering.common.crafting.PotionBulletFillRecipe",
          "blusunrize.immersiveengineering.common.crafting.NoContainersShapedRecipe",
          "blusunrize.immersiveengineering.common.crafting.NoContainersRecipe",
          "blusunrize.immersiveengineering.common.crafting.MetalPressPackingRecipes$RecipeDelegate",
          "blusunrize.immersiveengineering.common.crafting.MetalPressPackingRecipes$MetalPressPackingRecipe",
          "blusunrize.immersiveengineering.common.crafting.MetalPressPackingRecipes$MetalPressContainerRecipe",
          "blusunrize.immersiveengineering.common.crafting.MetalPressPackingRecipes$1",
          "blusunrize.immersiveengineering.common.crafting.LazyShapelessRecipe",
          "blusunrize.immersiveengineering.common.crafting.JerrycanRefillRecipe",
          "blusunrize.immersiveengineering.common.crafting.INoContainersRecipe",
          "blusunrize.immersiveengineering.common.crafting.IERepairItemRecipe",
          "blusunrize.immersiveengineering.common.crafting.GeneratedListRecipe",
          "blusunrize.immersiveengineering.common.crafting.fluidaware.TurnAndCopyRecipe",
          "blusunrize.immersiveengineering.common.crafting.fluidaware.ShapelessFluidAwareRecipe",
          "blusunrize.immersiveengineering.common.crafting.fluidaware.IFluidAwareRecipe",
          "blusunrize.immersiveengineering.common.crafting.fluidaware.BasicShapedRecipe",
          "blusunrize.immersiveengineering.common.crafting.fluidaware.AbstractShapedRecipe",
          "blusunrize.immersiveengineering.common.crafting.fluidaware.AbstractFluidAwareRecipe",
          "blusunrize.immersiveengineering.common.crafting.FlareBulletColorRecipe",
          "blusunrize.immersiveengineering.common.crafting.EarmuffsRecipe",
          "blusunrize.immersiveengineering.common.crafting.DamageToolRecipe",
          "blusunrize.immersiveengineering.common.crafting.ArcRecyclingRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "blusunrize.immersiveengineering.api.multiblocks.blocks.registry.MultiblockPartBlock",
          "blusunrize.immersiveengineering.api.multiblocks.blocks.registry.MultiblockPartBlock$WithMirrorState",
          "blusunrize.immersiveengineering.common.fluids.IEFluidBlock",
          "blusunrize.immersiveengineering.common.blocks.wooden.WindmillBlock",
          "blusunrize.immersiveengineering.common.blocks.wooden.WatermillBlock",
          "blusunrize.immersiveengineering.common.blocks.wooden.TurntableBlock",
          "blusunrize.immersiveengineering.common.blocks.wooden.SawdustBlock",
          "blusunrize.immersiveengineering.common.blocks.wooden.ItemBatcherBlock",
          "blusunrize.immersiveengineering.common.blocks.wooden.GunpowderBarrelBlock",
          "blusunrize.immersiveengineering.common.blocks.wooden.DeskBlock",
          "blusunrize.immersiveengineering.common.blocks.wooden.CraftingTableBlock",
          "blusunrize.immersiveengineering.common.blocks.wooden.BlueprintShelfBlock",
          "blusunrize.immersiveengineering.common.blocks.stone.SlagGravelBlock",
          "blusunrize.immersiveengineering.common.blocks.stone.PartialConcreteBlock",
          "blusunrize.immersiveengineering.common.blocks.plant.PottedHempBlock",
          "blusunrize.immersiveengineering.common.blocks.plant.HempBlock",
          "blusunrize.immersiveengineering.common.blocks.multiblocks.logic.NonMirrorableWithActiveBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.WarningSignBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.TurretBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.TransformerHVBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.TransformerBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.TeslaCoilBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.StructuralArmBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.SampleDrillBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.RazorWireBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.PostTransformerBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.PipeValveBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.MetalLadderBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.LanternBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.FurnaceHeaterBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.FluidPumpBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.FluidPipeBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.FloodlightBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.FeedthroughBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.EnergyMeterBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.ElectricLanternBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.ConveyorBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.ClocheBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.ChuteBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.CagelampBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.BreakerSwitchBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.BlastFurnacePreheaterBlock",
          "blusunrize.immersiveengineering.common.blocks.metal.BasicConnectorBlock",
          "blusunrize.immersiveengineering.common.blocks.IEWallBlock",
          "blusunrize.immersiveengineering.common.blocks.IETrapDoorBlock",
          "blusunrize.immersiveengineering.common.blocks.IEStairsBlock",
          "blusunrize.immersiveengineering.common.blocks.IEEntityBlock",
          "blusunrize.immersiveengineering.common.blocks.IEDoorBlock",
          "blusunrize.immersiveengineering.common.blocks.IEBaseBlock",
          "blusunrize.immersiveengineering.common.blocks.IEBaseBlock$IELadderBlock",
          "blusunrize.immersiveengineering.common.blocks.generic.WindowBlock",
          "blusunrize.immersiveengineering.common.blocks.generic.WallmountBlock",
          "blusunrize.immersiveengineering.common.blocks.generic.ScaffoldingBlock",
          "blusunrize.immersiveengineering.common.blocks.generic.PostBlock",
          "blusunrize.immersiveengineering.common.blocks.generic.HorizontalFacingEntityBlock",
          "blusunrize.immersiveengineering.common.blocks.generic.HorizontalFacingBlock",
          "blusunrize.immersiveengineering.common.blocks.generic.ConnectorBlock",
          "blusunrize.immersiveengineering.common.blocks.generic.CatwalkStairsBlock",
          "blusunrize.immersiveengineering.common.blocks.generic.CatwalkBlock",
          "blusunrize.immersiveengineering.common.blocks.generic.AnyFacingEntityBlock",
          "blusunrize.immersiveengineering.common.blocks.FakeLightBlock",
          "blusunrize.immersiveengineering.common.blocks.CrateBlock",
          "blusunrize.immersiveengineering.common.blocks.cloth.StripCurtainBlock",
          "blusunrize.immersiveengineering.common.blocks.cloth.ShaderBannerWallBlock",
          "blusunrize.immersiveengineering.common.blocks.cloth.ShaderBannerStandingBlock",
          "blusunrize.immersiveengineering.common.blocks.cloth.ShaderBannerBlock",
          "blusunrize.immersiveengineering.common.blocks.cloth.CushionBlock",
          "blusunrize.immersiveengineering.common.blocks.cloth.BalloonBlock",
          "blusunrize.immersiveengineering.common.blocks.BlockIESlab"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "blusunrize.immersiveengineering.api.wires.GlobalWireNetwork",
          "blusunrize.immersiveengineering.common.IESaveData"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "blusunrize.immersiveengineering.client.models.split.SplitModelLoader",
          "blusunrize.immersiveengineering.client.models.PotionBucketModel$Loader",
          "blusunrize.immersiveengineering.client.models.obj.IEOBJLoader",
          "blusunrize.immersiveengineering.client.models.ModelCoresample$CoresampleLoader",
          "blusunrize.immersiveengineering.client.models.ModelConveyor$ConveyorLoader",
          "blusunrize.immersiveengineering.client.models.ModelConfigurableSides$Loader",
          "blusunrize.immersiveengineering.client.models.mirror.MirroredModelLoader",
          "blusunrize.immersiveengineering.client.models.connection.FeedthroughLoader"
        ]
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.Gui",
        "net.minecraft.client.gui.components.ChatComponent",
        "net.minecraft.client.gui.font.FontManager",
        "net.minecraft.client.model.HumanoidModel",
        "net.minecraft.client.multiplayer.MultiPlayerGameMode",
        "net.minecraft.client.particle.ParticleEngine",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.RenderStateShard",
        "net.minecraft.client.renderer.chunk.SectionRenderDispatcher$CompiledSection",
        "net.minecraft.client.renderer.entity.MinecartRenderer",
        "net.minecraft.client.resources.model.SimpleBakedModel",
        "net.minecraft.client.sounds.SoundEngine",
        "net.minecraft.data.models.ItemModelGenerators",
        "net.minecraft.data.models.ItemModelGenerators$TrimModelData",
        "net.minecraft.server.level.ServerLevel",
        "net.minecraft.server.network.ServerGamePacketListenerImpl",
        "net.minecraft.world.damagesource.DamageSources",
        "net.minecraft.world.entity.ai.behavior.GiveGiftToHero",
        "net.minecraft.world.entity.item.ItemEntity",
        "net.minecraft.world.entity.item.PrimedTnt",
        "net.minecraft.world.entity.projectile.AbstractArrow",
        "net.minecraft.world.inventory.AbstractContainerMenu",
        "net.minecraft.world.inventory.TransientCraftingContainer",
        "net.minecraft.world.item.alchemy.PotionBrewing",
        "net.minecraft.world.item.alchemy.PotionBrewing$Mix",
        "net.minecraft.world.item.crafting.ShapedRecipe",
        "net.minecraft.world.item.crafting.ShapedRecipePattern",
        "net.minecraft.world.level.Explosion",
        "net.minecraft.world.level.block.ConcretePowderBlock",
        "net.minecraft.world.level.block.CropBlock",
        "net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity",
        "net.minecraft.world.level.block.entity.BaseContainerBlockEntity",
        "net.minecraft.world.level.block.entity.BlockEntityType",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool",
        "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate",
        "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$Palette",
        "net.minecraft.world.level.material.FlowingFluid",
        "net.minecraft.world.level.storage.DimensionDataStorage"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Anvil Recipes",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Client Commands",
        "Custom Data Pack Sync",
        "Custom Entities",
        "Custom Entity Attributes",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Model Loaders",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Shaders",
        "Custom Structures",
        "Custom Tag Assignments",
        "Custom Tooltip Components",
        "Custom World Generation",
        "Handles Block Harvesting",
        "Has Capability Providers",
        "Listens to Chunk Load Events",
        "Listens to Chunk Unload Events",
        "Listens to Entity Death Events",
        "Listens to Entity Drop Events",
        "Listens to Entity Interaction Events with Click Positions",
        "Listens to Entity Join World Events",
        "Listens to Entity Jump Events",
        "Listens to Item Pickup Events",
        "Listens to Player Login Events",
        "Listens to Recipe Updates",
        "Listens to Right Click Block Events",
        "Listens to Server Started Events",
        "Listens to Tag Updates",
        "Localization",
        "Modifies Block Breaking Speed",
        "Modifies Entity Spawning",
        "Modifies Methods",
        "Modifies Villager Trades",
        "Modifies World Rendering",
        "Runs Client Tick Logic",
        "Runs Entity Tick Logic",
        "Runs Player Tick Logic",
        "Runs Server Tick Logic",
        "Runs World Tick Logic",
        "Stores Data in World Saves",
        "Uses Loot Modifiers"
      ]
    },
    "immersivemessages": {
      "dependencies": {
        "minecraft": "[1.21.1,)",
        "txnilib": "*"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "toni.immersivemessages.config.AllConfigs#onLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "toni.immersivemessages.config.AllConfigs#onReload"
        ]
      },
      "info": {
        "authors": "Toni",
        "classes": "22",
        "description": "Adds an API for mod developers to show in-game help messages",
        "displayName": "Immersive Messages API",
        "file": "immersivemessages-neoforge-1.0.16-1.21.1.jar",
        "license": "Toni's MMC License",
        "package": "toni",
        "version": "1.0.16"
      },
      "summary": [
        "Auto-reloads Config Files",
        "Uses Access Transformers"
      ]
    },
    "immersivetips": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "toni.immersivetips.mixins.ScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderWithTooltip",
              "raw": "renderWithTooltip(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "toni.immersivetips.foundation.config.AllConfigs#onLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "toni.immersivetips.foundation.config.AllConfigs#onReload"
        ]
      },
      "info": {
        "authors": "Toni",
        "classes": "17",
        "description": "Adds loading screen tips with deep customization for modpack authors.",
        "displayName": "Immersive Tips",
        "file": "immersivetips-neoforge-1.0.0-1.21.1.jar",
        "license": "LGPL",
        "package": "toni.immersivetips",
        "version": "1.0.0"
      },
      "modifies": [
        "net.minecraft.client.gui.screens.Screen"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "insomniacharm": {
      "dependencies": {
        "curios": "[3.2,)",
        "minecraft": "${minecraft_version_range}",
        "neoforge": "${neo_version_range}"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "net.treyvon.insomniacharm.Config#onLoad"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "net.treyvon.insomniacharm.InsomniaCharm$ClientModEvents#onClientSetup"
        ],
        "net.neoforged.neoforge.event.server.ServerStartingEvent": [
          "net.treyvon.insomniacharm.InsomniaCharm#onServerStarting"
        ]
      },
      "info": {
        "authors": "Treyvon",
        "classes": "7",
        "description": "Adds an item that stops phantoms from spawning",
        "displayName": "Insomnia Charm",
        "file": "insomniacharm-0.0.1.jar",
        "license": "${mod_license}",
        "package": "net.treyvon.insomniacharm",
        "version": "1.0"
      },
      "inheritance": {
        "net.minecraft.world.effect.MobEffect": [
          "net.treyvon.insomniacharm.effect.PhantomsGrace"
        ],
        "net.minecraft.world.item.Item": [
          "net.treyvon.insomniacharm.item.custom.CharmItem"
        ]
      },
      "summary": [
        "Auto-reloads Config Files",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Potion Effects",
        "Custom Tag Assignments",
        "Listens to Server Starting Events",
        "Localization"
      ]
    },
    "integratedcrafting": {
      "annotations": {
        "net.minecraft.gametest.framework.GameTest": [
          {
            "class": "org.cyclops.integratedcrafting.gametest.GameTestsItemsCraft",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsCraftDeadBushTagReusable",
              "raw": "testItemsCraftDeadBushTagReusable(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedcrafting.gametest.GameTestsItemsCraft",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsCraftDeadBushTag",
              "raw": "testItemsCraftDeadBushTag(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedcrafting.gametest.GameTestsItemsCraft",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsCraftPlanksAndExtractFromStorage",
              "raw": "testItemsCraftPlanksAndExtractFromStorage(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedcrafting.gametest.GameTestsItemsCraft",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsCraftCrafterComplex",
              "raw": "testItemsCraftCrafterComplex(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedcrafting.gametest.GameTestsItemsCraft",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsCraftIronIngotsParallelMultipleNonBlocking",
              "raw": "testItemsCraftIronIngotsParallelMultipleNonBlocking(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedcrafting.gametest.GameTestsItemsCraft",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsCraftIronIngotsParallel",
              "raw": "testItemsCraftIronIngotsParallel(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedcrafting.gametest.GameTestsItemsCraft",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsCraftChestFromLogs",
              "raw": "testItemsCraftChestFromLogs(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedcrafting.gametest.GameTestsItemsCraft",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsCraftIronIngotRecipeWithEmptySpaces",
              "raw": "testItemsCraftIronIngotRecipeWithEmptySpaces(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedcrafting.gametest.GameTestsItemsCraft",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsCraftIronIngot",
              "raw": "testItemsCraftIronIngot(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedcrafting.gametest.GameTestsItemsCraft",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsCraftChestAll",
              "raw": "testItemsCraftChestAll(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedcrafting.gametest.GameTestsItemsCraft",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsCraftChestOne",
              "raw": "testItemsCraftChestOne(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          }
        ]
      },
      "dependencies": {
        "commoncapabilities": "[2.9.7,)",
        "cyclopscore": "[1.25.5,)",
        "integrateddynamics": "[1.24.1,)",
        "minecraft": "[1.21.1,]",
        "neoforge": "[21.1.62,)"
      },
      "events": {
        "org.cyclops.integrateddynamics.api.network.AttachCapabilitiesEventNetwork": [
          "org.cyclops.integratedcrafting.capability.network.CraftingNetworkCapabilityConstructors#onNetworkLoad"
        ]
      },
      "info": {
        "classes": "77",
        "description": "Craft stuff in Integrated Dynamics networks.",
        "displayName": "IntegratedCrafting",
        "file": "integratedcrafting-1.21.1-neoforge-1.1.15.jar",
        "latest": "1.1.16",
        "license": "MIT",
        "package": "org.cyclops.integratedcrafting",
        "updateUrl": "https://raw.githubusercontent.com/CyclopsMC/Versions/master/neoforge_update/integrated-crafting.json",
        "version": "1.1.15"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "org.cyclops.integratedcrafting.client.gui.ContainerScreenPartInterfaceCrafting",
          "org.cyclops.integratedcrafting.client.gui.ContainerScreenPartInterfaceCraftingSettings"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "org.cyclops.integratedcrafting.recipe.type.RecipeDeadBush"
        ]
      },
      "summary": [
        "Automatic Testing",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "integrateddynamics": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "org.cyclops.integrateddynamics.mixin.MixinBlockStateBase",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.Direction",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getDirectSignal",
              "raw": "getDirectSignal(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.cyclops.integrateddynamics.mixin.MixinBlockStateBase",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.Direction",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getSignal",
              "raw": "getSignal(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "commoncapabilities": "[2.9.3,)",
        "cyclopscore": "[1.25.5,)",
        "minecraft": "[1.21.1,]",
        "neoforge": "[21.1.2,)"
      },
      "events": {
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "org.cyclops.integrateddynamics.item.ItemVariableConfig#registerCapability"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "org.cyclops.integrateddynamics.item.ItemVariableConfig#onModelLoading"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "org.cyclops.integrateddynamics.item.ItemVariableConfig#onModelLoading"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "org.cyclops.integrateddynamics.client.render.level.PartOffsetsOverlayRenderer#onRender",
          "org.cyclops.integrateddynamics.core.network.diagnostics.NetworkDiagnosticsPartOverlayRenderer#onRender"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "org.cyclops.integrateddynamics.item.ItemOnTheDynamicsOfIntegration#onPlayerLoggedIn",
          "org.cyclops.integrateddynamics.core.persist.world.LabelsWorldStorage#onPlayerLoggedIn"
        ],
        "net.neoforged.neoforge.event.level.NoteBlockEvent$Play": [
          "org.cyclops.integrateddynamics.core.NoteBlockEventReceiver#onNoteEvent"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "org.cyclops.integrateddynamics.core.TickHandler#onTick"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Pre": [
          "org.cyclops.integrateddynamics.core.NoteBlockEventReceiver#onTick"
        ],
        "org.cyclops.integrateddynamics.api.network.AttachCapabilitiesEventNetwork": [
          "org.cyclops.integrateddynamics.capability.network.NetworkCapabilityConstructors#onNetworkLoad"
        ],
        "org.cyclops.integrateddynamics.core.logicprogrammer.event.LogicProgrammerVariableFacadeCreatedEvent": [
          "org.cyclops.integrateddynamics.advancement.criterion.VariableCreatedTrigger#onEvent"
        ],
        "org.cyclops.integrateddynamics.core.network.event.NetworkInitializedEvent": [
          "org.cyclops.integrateddynamics.advancement.criterion.NetworkInitializedTrigger#onCrafted"
        ],
        "org.cyclops.integrateddynamics.core.part.event.PartReaderAspectEvent": [
          "org.cyclops.integrateddynamics.advancement.criterion.PartReaderAspectTrigger#onEvent"
        ],
        "org.cyclops.integrateddynamics.core.part.event.PartVariableDrivenVariableContentsUpdatedEvent": [
          "org.cyclops.integrateddynamics.advancement.criterion.PartVariableDrivenAspectTrigger#onEvent"
        ],
        "org.cyclops.integrateddynamics.core.part.event.PartWriterAspectEvent": [
          "org.cyclops.integrateddynamics.advancement.criterion.PartWriterAspectTrigger#onEvent"
        ]
      },
      "info": {
        "classes": "1646",
        "description": "Take full and automated control of your appliances.",
        "displayName": "IntegratedDynamics",
        "file": "integrateddynamics-1.21.1-neoforge-1.25.4-1079.jar",
        "latest": "1.25.6",
        "license": "MIT",
        "package": "vendors.com.google.re2j",
        "updateUrl": "https://raw.githubusercontent.com/CyclopsMC/Versions/master/neoforge_update/integrated-dynamics.json",
        "version": "1.25.4"
      },
      "inheritance": {
        "com.mojang.brigadier.Command": [
          "org.cyclops.integrateddynamics.command.CommandNetworkDiagnostics",
          "org.cyclops.integrateddynamics.command.CommandTest",
          "org.cyclops.integrateddynamics.command.CommandCrash"
        ],
        "net.minecraft.client.gui.screens.Screen": [
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenLabeller",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenLogicProgrammerBase",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenMechanicalSqueezer",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenCoalGenerator",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenPartDisplay",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenOnTheDynamicsOfIntegration",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenDelay",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenLogicProgrammerPortable",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenPartReader",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenPartWriter",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenMaterializer",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenVariablestore",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenMechanicalDryingBasin",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenProxy",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenLogicProgrammer",
          "org.cyclops.integrateddynamics.core.client.gui.ContainerScreenActiveVariableBase",
          "org.cyclops.integrateddynamics.core.client.gui.container.ContainerScreenAspectSettings",
          "org.cyclops.integrateddynamics.core.client.gui.container.ContainerScreenPartSettings",
          "org.cyclops.integrateddynamics.core.client.gui.container.ContainerScreenMultipart",
          "org.cyclops.integrateddynamics.core.client.gui.container.ContainerScreenPartOffset",
          "org.cyclops.integrateddynamics.core.client.gui.container.ContainerScreenMultipartAspects",
          "org.cyclops.integrateddynamics.core.client.gui.ContainerScreenMechanicalMachine"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "org.cyclops.integrateddynamics.client.render.blockentity.ItemStackBlockEntityEnergyBatteryRender",
          "org.cyclops.integrateddynamics.client.render.blockentity.ItemStackBlockEntityVariableRender"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "org.cyclops.integrateddynamics.client.render.blockentity.RenderBlockEntityDryingBasin",
          "org.cyclops.integrateddynamics.client.render.blockentity.RenderCable",
          "org.cyclops.integrateddynamics.client.render.blockentity.RenderBlockEntitySqueezer",
          "org.cyclops.integrateddynamics.client.render.blockentity.RenderBlockEntityEnergyBattery"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "org.cyclops.integrateddynamics.client.render.model.FacadeModel",
          "org.cyclops.integrateddynamics.client.model.CableModel",
          "org.cyclops.integrateddynamics.client.model.CableModelBase",
          "org.cyclops.integrateddynamics.core.client.model.VariableModelBaked",
          "org.cyclops.integrateddynamics.api.client.model.IVariableModelBaked"
        ],
        "net.minecraft.world.entity.Entity": [
          "org.cyclops.integrateddynamics.entity.item.EntityItemTargetted"
        ],
        "net.minecraft.world.item.Item": [
          "org.cyclops.integrateddynamics.item.ItemWrench",
          "org.cyclops.integrateddynamics.item.ItemPortableLogicProgrammer",
          "org.cyclops.integrateddynamics.item.ItemVariable",
          "org.cyclops.integrateddynamics.item.ItemEnhancement",
          "org.cyclops.integrateddynamics.item.ItemOnTheDynamicsOfIntegration",
          "org.cyclops.integrateddynamics.item.ItemBlockCable",
          "org.cyclops.integrateddynamics.item.ItemLabeller",
          "org.cyclops.integrateddynamics.item.ItemBlockDelay",
          "org.cyclops.integrateddynamics.item.ItemBlockProxy",
          "org.cyclops.integrateddynamics.item.ItemFacade",
          "org.cyclops.integrateddynamics.core.item.ItemPart",
          "org.cyclops.integrateddynamics.core.item.ItemBlockEnergyContainer",
          "org.cyclops.integrateddynamics.core.item.ItemBlockEnergyContainerAutoSupply",
          "org.cyclops.integrateddynamics.block.BlockCreativeEnergyBatteryConfig$1",
          "org.cyclops.integrateddynamics.block.BlockEnergyBatteryConfig$1"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeNbtClear",
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeMechanicalSqueezer",
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeDryingBasin",
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeMechanicalDryingBasin",
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeEnergyContainerCombination",
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeSqueezer",
          "org.cyclops.integrateddynamics.recipe.ItemVariableCopyRecipe",
          "org.cyclops.integrateddynamics.recipe.ItemFacadeRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "org.cyclops.integrateddynamics.core.block.BlockContainerCabled",
          "org.cyclops.integrateddynamics.core.block.IgnoredBlockStatus",
          "org.cyclops.integrateddynamics.core.block.BlockMechanicalMachine",
          "org.cyclops.integrateddynamics.core.block.IgnoredBlock",
          "org.cyclops.integrateddynamics.core.block.BlockWithEntityGuiCabled",
          "org.cyclops.integrateddynamics.block.BlockMechanicalSqueezer",
          "org.cyclops.integrateddynamics.block.BlockLogicProgrammer",
          "org.cyclops.integrateddynamics.block.BlockMenrilWoodConfig$1",
          "org.cyclops.integrateddynamics.block.BlockMechanicalDryingBasin",
          "org.cyclops.integrateddynamics.block.BlockMenrilPlanksConfig$1",
          "org.cyclops.integrateddynamics.block.BlockMenrilLogStrippedConfig$1",
          "org.cyclops.integrateddynamics.block.BlockEnergyBattery",
          "org.cyclops.integrateddynamics.block.BlockMenrilSlabConfig$1",
          "org.cyclops.integrateddynamics.block.BlockEnergyBatteryBase",
          "org.cyclops.integrateddynamics.block.BlockInvisibleLight",
          "org.cyclops.integrateddynamics.block.BlockMenrilTorchWallConfig$1",
          "org.cyclops.integrateddynamics.block.BlockCoalGenerator",
          "org.cyclops.integrateddynamics.block.BlockMenrilTorchConfig$1",
          "org.cyclops.integrateddynamics.block.BlockMenrilLogConfig$1",
          "org.cyclops.integrateddynamics.block.BlockMenrilLeavesConfig$1",
          "org.cyclops.integrateddynamics.block.BlockProxy",
          "org.cyclops.integrateddynamics.block.BlockMenrilWoodStrippedConfig$1",
          "org.cyclops.integrateddynamics.block.BlockMenrilTorchStoneConfig$1",
          "org.cyclops.integrateddynamics.block.BlockCreativeEnergyBattery",
          "org.cyclops.integrateddynamics.block.BlockMenrilLogFilled",
          "org.cyclops.integrateddynamics.block.BlockSqueezer",
          "org.cyclops.integrateddynamics.block.BlockMenrilTorchStoneWallConfig$1",
          "org.cyclops.integrateddynamics.block.BlockFluidLiquidChorus",
          "org.cyclops.integrateddynamics.block.BlockVariablestore",
          "org.cyclops.integrateddynamics.block.BlockDelay",
          "org.cyclops.integrateddynamics.block.BlockMaterializer",
          "org.cyclops.integrateddynamics.block.BlockMenrilFenceGateConfig$1",
          "org.cyclops.integrateddynamics.block.BlockDryingBasin",
          "org.cyclops.integrateddynamics.block.BlockCable",
          "org.cyclops.integrateddynamics.block.BlockMenrilPlanksStairsConfig$1",
          "org.cyclops.integrateddynamics.block.BlockFluidMenrilResin",
          "org.cyclops.integrateddynamics.block.BlockMenrilFenceConfig$1"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "org.cyclops.integrateddynamics.core.client.model.ModelLoaderVariable"
        ]
      },
      "modifies": [
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Model Loaders",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Has Capability Providers",
        "Has Commands",
        "Listens to Player Login Events",
        "Localization",
        "Modifies Methods",
        "Modifies World Rendering",
        "Runs Server Tick Logic",
        "Uses Access Transformers"
      ]
    },
    "integrateddynamicscompat": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "org.cyclops.integrateddynamics.mixin.MixinBlockStateBase",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.Direction",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getDirectSignal",
              "raw": "getDirectSignal(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.cyclops.integrateddynamics.mixin.MixinBlockStateBase",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.Direction",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getSignal",
              "raw": "getSignal(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "cyclopscore": "[1.25.1,)",
        "integrateddynamics": "[1.24.1,)",
        "minecraft": "[1.21.1,]",
        "neoforge": "[21.1.2,)"
      },
      "events": {
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "org.cyclops.integrateddynamics.item.ItemVariableConfig#registerCapability"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "org.cyclops.integrateddynamics.item.ItemVariableConfig#onModelLoading"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "org.cyclops.integrateddynamics.item.ItemVariableConfig#onModelLoading"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "org.cyclops.integrateddynamics.client.render.level.PartOffsetsOverlayRenderer#onRender",
          "org.cyclops.integrateddynamics.core.network.diagnostics.NetworkDiagnosticsPartOverlayRenderer#onRender"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "org.cyclops.integrateddynamics.item.ItemOnTheDynamicsOfIntegration#onPlayerLoggedIn",
          "org.cyclops.integrateddynamics.core.persist.world.LabelsWorldStorage#onPlayerLoggedIn"
        ],
        "net.neoforged.neoforge.event.level.NoteBlockEvent$Play": [
          "org.cyclops.integrateddynamics.core.NoteBlockEventReceiver#onNoteEvent"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "org.cyclops.integrateddynamics.core.TickHandler#onTick"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Pre": [
          "org.cyclops.integrateddynamics.core.NoteBlockEventReceiver#onTick"
        ],
        "org.cyclops.integrateddynamics.api.network.AttachCapabilitiesEventNetwork": [
          "org.cyclops.integrateddynamics.capability.network.NetworkCapabilityConstructors#onNetworkLoad"
        ],
        "org.cyclops.integrateddynamics.core.logicprogrammer.event.LogicProgrammerVariableFacadeCreatedEvent": [
          "org.cyclops.integrateddynamics.advancement.criterion.VariableCreatedTrigger#onEvent"
        ],
        "org.cyclops.integrateddynamics.core.network.event.NetworkInitializedEvent": [
          "org.cyclops.integrateddynamics.advancement.criterion.NetworkInitializedTrigger#onCrafted"
        ],
        "org.cyclops.integrateddynamics.core.part.event.PartReaderAspectEvent": [
          "org.cyclops.integrateddynamics.advancement.criterion.PartReaderAspectTrigger#onEvent"
        ],
        "org.cyclops.integrateddynamics.core.part.event.PartVariableDrivenVariableContentsUpdatedEvent": [
          "org.cyclops.integrateddynamics.advancement.criterion.PartVariableDrivenAspectTrigger#onEvent"
        ],
        "org.cyclops.integrateddynamics.core.part.event.PartWriterAspectEvent": [
          "org.cyclops.integrateddynamics.advancement.criterion.PartWriterAspectTrigger#onEvent"
        ]
      },
      "info": {
        "classes": "1646",
        "description": "Integrated Dynamics compatibility with other mods.",
        "displayName": "IntegratedDynamics-Compat",
        "file": "integrateddynamics-1.21.1-neoforge-1.25.4-1079.jar",
        "license": "MIT",
        "package": "vendors.com.google.re2j",
        "version": "1.0.0"
      },
      "inheritance": {
        "com.mojang.brigadier.Command": [
          "org.cyclops.integrateddynamics.command.CommandNetworkDiagnostics",
          "org.cyclops.integrateddynamics.command.CommandTest",
          "org.cyclops.integrateddynamics.command.CommandCrash"
        ],
        "net.minecraft.client.gui.screens.Screen": [
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenLabeller",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenLogicProgrammerBase",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenMechanicalSqueezer",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenCoalGenerator",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenPartDisplay",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenOnTheDynamicsOfIntegration",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenDelay",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenLogicProgrammerPortable",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenPartReader",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenPartWriter",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenMaterializer",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenVariablestore",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenMechanicalDryingBasin",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenProxy",
          "org.cyclops.integrateddynamics.client.gui.container.ContainerScreenLogicProgrammer",
          "org.cyclops.integrateddynamics.core.client.gui.ContainerScreenActiveVariableBase",
          "org.cyclops.integrateddynamics.core.client.gui.container.ContainerScreenAspectSettings",
          "org.cyclops.integrateddynamics.core.client.gui.container.ContainerScreenPartSettings",
          "org.cyclops.integrateddynamics.core.client.gui.container.ContainerScreenMultipart",
          "org.cyclops.integrateddynamics.core.client.gui.container.ContainerScreenPartOffset",
          "org.cyclops.integrateddynamics.core.client.gui.container.ContainerScreenMultipartAspects",
          "org.cyclops.integrateddynamics.core.client.gui.ContainerScreenMechanicalMachine"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "org.cyclops.integrateddynamics.client.render.blockentity.ItemStackBlockEntityEnergyBatteryRender",
          "org.cyclops.integrateddynamics.client.render.blockentity.ItemStackBlockEntityVariableRender"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "org.cyclops.integrateddynamics.client.render.blockentity.RenderBlockEntityDryingBasin",
          "org.cyclops.integrateddynamics.client.render.blockentity.RenderCable",
          "org.cyclops.integrateddynamics.client.render.blockentity.RenderBlockEntitySqueezer",
          "org.cyclops.integrateddynamics.client.render.blockentity.RenderBlockEntityEnergyBattery"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "org.cyclops.integrateddynamics.client.render.model.FacadeModel",
          "org.cyclops.integrateddynamics.client.model.CableModel",
          "org.cyclops.integrateddynamics.client.model.CableModelBase",
          "org.cyclops.integrateddynamics.core.client.model.VariableModelBaked",
          "org.cyclops.integrateddynamics.api.client.model.IVariableModelBaked"
        ],
        "net.minecraft.world.entity.Entity": [
          "org.cyclops.integrateddynamics.entity.item.EntityItemTargetted"
        ],
        "net.minecraft.world.item.Item": [
          "org.cyclops.integrateddynamics.item.ItemWrench",
          "org.cyclops.integrateddynamics.item.ItemPortableLogicProgrammer",
          "org.cyclops.integrateddynamics.item.ItemVariable",
          "org.cyclops.integrateddynamics.item.ItemEnhancement",
          "org.cyclops.integrateddynamics.item.ItemOnTheDynamicsOfIntegration",
          "org.cyclops.integrateddynamics.item.ItemBlockCable",
          "org.cyclops.integrateddynamics.item.ItemLabeller",
          "org.cyclops.integrateddynamics.item.ItemBlockDelay",
          "org.cyclops.integrateddynamics.item.ItemBlockProxy",
          "org.cyclops.integrateddynamics.item.ItemFacade",
          "org.cyclops.integrateddynamics.core.item.ItemPart",
          "org.cyclops.integrateddynamics.core.item.ItemBlockEnergyContainer",
          "org.cyclops.integrateddynamics.core.item.ItemBlockEnergyContainerAutoSupply",
          "org.cyclops.integrateddynamics.block.BlockCreativeEnergyBatteryConfig$1",
          "org.cyclops.integrateddynamics.block.BlockEnergyBatteryConfig$1"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeNbtClear",
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeMechanicalSqueezer",
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeDryingBasin",
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeMechanicalDryingBasin",
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeEnergyContainerCombination",
          "org.cyclops.integrateddynamics.core.recipe.type.RecipeSqueezer",
          "org.cyclops.integrateddynamics.recipe.ItemVariableCopyRecipe",
          "org.cyclops.integrateddynamics.recipe.ItemFacadeRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "org.cyclops.integrateddynamics.core.block.BlockContainerCabled",
          "org.cyclops.integrateddynamics.core.block.IgnoredBlockStatus",
          "org.cyclops.integrateddynamics.core.block.BlockMechanicalMachine",
          "org.cyclops.integrateddynamics.core.block.IgnoredBlock",
          "org.cyclops.integrateddynamics.core.block.BlockWithEntityGuiCabled",
          "org.cyclops.integrateddynamics.block.BlockMechanicalSqueezer",
          "org.cyclops.integrateddynamics.block.BlockLogicProgrammer",
          "org.cyclops.integrateddynamics.block.BlockMenrilWoodConfig$1",
          "org.cyclops.integrateddynamics.block.BlockMechanicalDryingBasin",
          "org.cyclops.integrateddynamics.block.BlockMenrilPlanksConfig$1",
          "org.cyclops.integrateddynamics.block.BlockMenrilLogStrippedConfig$1",
          "org.cyclops.integrateddynamics.block.BlockEnergyBattery",
          "org.cyclops.integrateddynamics.block.BlockMenrilSlabConfig$1",
          "org.cyclops.integrateddynamics.block.BlockEnergyBatteryBase",
          "org.cyclops.integrateddynamics.block.BlockInvisibleLight",
          "org.cyclops.integrateddynamics.block.BlockMenrilTorchWallConfig$1",
          "org.cyclops.integrateddynamics.block.BlockCoalGenerator",
          "org.cyclops.integrateddynamics.block.BlockMenrilTorchConfig$1",
          "org.cyclops.integrateddynamics.block.BlockMenrilLogConfig$1",
          "org.cyclops.integrateddynamics.block.BlockMenrilLeavesConfig$1",
          "org.cyclops.integrateddynamics.block.BlockProxy",
          "org.cyclops.integrateddynamics.block.BlockMenrilWoodStrippedConfig$1",
          "org.cyclops.integrateddynamics.block.BlockMenrilTorchStoneConfig$1",
          "org.cyclops.integrateddynamics.block.BlockCreativeEnergyBattery",
          "org.cyclops.integrateddynamics.block.BlockMenrilLogFilled",
          "org.cyclops.integrateddynamics.block.BlockSqueezer",
          "org.cyclops.integrateddynamics.block.BlockMenrilTorchStoneWallConfig$1",
          "org.cyclops.integrateddynamics.block.BlockFluidLiquidChorus",
          "org.cyclops.integrateddynamics.block.BlockVariablestore",
          "org.cyclops.integrateddynamics.block.BlockDelay",
          "org.cyclops.integrateddynamics.block.BlockMaterializer",
          "org.cyclops.integrateddynamics.block.BlockMenrilFenceGateConfig$1",
          "org.cyclops.integrateddynamics.block.BlockDryingBasin",
          "org.cyclops.integrateddynamics.block.BlockCable",
          "org.cyclops.integrateddynamics.block.BlockMenrilPlanksStairsConfig$1",
          "org.cyclops.integrateddynamics.block.BlockFluidMenrilResin",
          "org.cyclops.integrateddynamics.block.BlockMenrilFenceConfig$1"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "org.cyclops.integrateddynamics.core.client.model.ModelLoaderVariable"
        ]
      },
      "modifies": [
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Model Loaders",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Has Capability Providers",
        "Has Commands",
        "Listens to Player Login Events",
        "Localization",
        "Modifies Methods",
        "Modifies World Rendering",
        "Runs Server Tick Logic",
        "Uses Access Transformers"
      ]
    },
    "integratedterminals": {
      "dependencies": {
        "commoncapabilities": "[2.9.3,)",
        "cyclopscore": "[1.25.1,)",
        "integrateddynamics": "[1.24.1,)",
        "minecraft": "[1.21.1,]",
        "neoforge": "[21.1.89,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyReleased$Post": [
          "org.cyclops.integratedterminalscompat.modcompat.jei.JEIIntegratedTerminalsConfig#onKeyTyped",
          "org.cyclops.integratedterminalscompat.modcompat.rei.ReiIntegratedTerminalsConfig#onKeyTyped",
          "org.cyclops.integratedterminalscompat.modcompat.emi.EmiIntegratedTerminalsConfig#onKeyTyped"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "org.cyclops.integratedterminals.core.terminalstorage.TerminalStorageTabIngredientComponentClient#onToolTip"
        ],
        "org.cyclops.commoncapabilities.api.ingredient.capability.AttachCapabilitiesEventIngredientComponent": [
          "org.cyclops.integratedterminals.core.terminalstorage.TerminalStorageTabs#afterIngredientComponentCapabilitiesRegistration"
        ],
        "org.cyclops.integratedterminals.api.terminalstorage.event.TerminalStorageScreenSizeEvent": [
          "org.cyclops.integratedterminalscompat.modcompat.jei.JEIIntegratedTerminalsConfig#onTerminalStorageScreenSize",
          "org.cyclops.integratedterminalscompat.modcompat.rei.ReiIntegratedTerminalsConfig#onTerminalStorageScreenSize",
          "org.cyclops.integratedterminalscompat.modcompat.emi.EmiIntegratedTerminalsConfig#onTerminalStorageScreenSize"
        ],
        "org.cyclops.integratedterminals.api.terminalstorage.event.TerminalStorageTabClientLoadButtonsEvent": [
          "org.cyclops.integratedterminalscompat.modcompat.jei.JEIIntegratedTerminalsConfig#onTerminalStorageButtons",
          "org.cyclops.integratedterminalscompat.modcompat.rei.ReiIntegratedTerminalsConfig#onTerminalStorageButtons",
          "org.cyclops.integratedterminalscompat.modcompat.emi.EmiIntegratedTerminalsConfig#onTerminalStorageButtons"
        ],
        "org.cyclops.integratedterminals.api.terminalstorage.event.TerminalStorageTabClientSearchFieldUpdateEvent": [
          "org.cyclops.integratedterminalscompat.modcompat.jei.JEIIntegratedTerminalsConfig#onSearchFieldUpdated",
          "org.cyclops.integratedterminalscompat.modcompat.rei.ReiIntegratedTerminalsConfig#onSearchFieldUpdated",
          "org.cyclops.integratedterminalscompat.modcompat.emi.EmiIntegratedTerminalsConfig#onSearchFieldUpdated"
        ]
      },
      "info": {
        "classes": "223",
        "description": "Terminals for managing and overviewing Integrated Dynamics networks.",
        "displayName": "IntegratedTerminals",
        "file": "integratedterminals-1.21.1-neoforge-1.6.8-466.jar",
        "latest": "1.6.9",
        "license": "MIT",
        "package": "org.cyclops.integratedterminals",
        "updateUrl": "https://raw.githubusercontent.com/CyclopsMC/Versions/master/neoforge_update/integrated-terminals.json",
        "version": "1.6.8"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "org.cyclops.integratedterminals.client.gui.container.ContainerScreenTerminalCraftingJobsPlan",
          "org.cyclops.integratedterminals.client.gui.container.ContainerScreenTerminalCraftingJobs",
          "org.cyclops.integratedterminals.client.gui.container.ContainerScreenTerminalStorageCraftingOptionAmount",
          "org.cyclops.integratedterminals.client.gui.container.ContainerScreenTerminalStorage",
          "org.cyclops.integratedterminals.client.gui.container.ContainerScreenTerminalStorageCraftingPlan"
        ],
        "net.minecraft.world.item.Item": [
          "org.cyclops.integratedterminals.item.ItemTerminalStoragePortable"
        ],
        "net.minecraft.world.level.block.Block": [
          "org.cyclops.integratedterminals.block.BlockChorusGlassConfig$1"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "integratedterminalscompat": {
      "dependencies": {
        "cyclopscore": "[1.25.1,)",
        "integratedterminals": "[1.6.5,)",
        "minecraft": "[1.21.1,]",
        "neoforge": "[21.1.2,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyReleased$Post": [
          "org.cyclops.integratedterminalscompat.modcompat.jei.JEIIntegratedTerminalsConfig#onKeyTyped",
          "org.cyclops.integratedterminalscompat.modcompat.rei.ReiIntegratedTerminalsConfig#onKeyTyped",
          "org.cyclops.integratedterminalscompat.modcompat.emi.EmiIntegratedTerminalsConfig#onKeyTyped"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "org.cyclops.integratedterminals.core.terminalstorage.TerminalStorageTabIngredientComponentClient#onToolTip"
        ],
        "org.cyclops.commoncapabilities.api.ingredient.capability.AttachCapabilitiesEventIngredientComponent": [
          "org.cyclops.integratedterminals.core.terminalstorage.TerminalStorageTabs#afterIngredientComponentCapabilitiesRegistration"
        ],
        "org.cyclops.integratedterminals.api.terminalstorage.event.TerminalStorageScreenSizeEvent": [
          "org.cyclops.integratedterminalscompat.modcompat.jei.JEIIntegratedTerminalsConfig#onTerminalStorageScreenSize",
          "org.cyclops.integratedterminalscompat.modcompat.rei.ReiIntegratedTerminalsConfig#onTerminalStorageScreenSize",
          "org.cyclops.integratedterminalscompat.modcompat.emi.EmiIntegratedTerminalsConfig#onTerminalStorageScreenSize"
        ],
        "org.cyclops.integratedterminals.api.terminalstorage.event.TerminalStorageTabClientLoadButtonsEvent": [
          "org.cyclops.integratedterminalscompat.modcompat.jei.JEIIntegratedTerminalsConfig#onTerminalStorageButtons",
          "org.cyclops.integratedterminalscompat.modcompat.rei.ReiIntegratedTerminalsConfig#onTerminalStorageButtons",
          "org.cyclops.integratedterminalscompat.modcompat.emi.EmiIntegratedTerminalsConfig#onTerminalStorageButtons"
        ],
        "org.cyclops.integratedterminals.api.terminalstorage.event.TerminalStorageTabClientSearchFieldUpdateEvent": [
          "org.cyclops.integratedterminalscompat.modcompat.jei.JEIIntegratedTerminalsConfig#onSearchFieldUpdated",
          "org.cyclops.integratedterminalscompat.modcompat.rei.ReiIntegratedTerminalsConfig#onSearchFieldUpdated",
          "org.cyclops.integratedterminalscompat.modcompat.emi.EmiIntegratedTerminalsConfig#onSearchFieldUpdated"
        ]
      },
      "info": {
        "classes": "223",
        "description": "Integrated Terminals compatibility with other mods. This mod is automatically packaged with Integrated Terminals.",
        "displayName": "IntegratedTerminals-Compat",
        "file": "integratedterminals-1.21.1-neoforge-1.6.8-466.jar",
        "license": "MIT",
        "package": "org.cyclops.integratedterminals",
        "version": "1.0.0"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "org.cyclops.integratedterminals.client.gui.container.ContainerScreenTerminalCraftingJobsPlan",
          "org.cyclops.integratedterminals.client.gui.container.ContainerScreenTerminalCraftingJobs",
          "org.cyclops.integratedterminals.client.gui.container.ContainerScreenTerminalStorageCraftingOptionAmount",
          "org.cyclops.integratedterminals.client.gui.container.ContainerScreenTerminalStorage",
          "org.cyclops.integratedterminals.client.gui.container.ContainerScreenTerminalStorageCraftingPlan"
        ],
        "net.minecraft.world.item.Item": [
          "org.cyclops.integratedterminals.item.ItemTerminalStoragePortable"
        ],
        "net.minecraft.world.level.block.Block": [
          "org.cyclops.integratedterminals.block.BlockChorusGlassConfig$1"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "integratedtunnels": {
      "annotations": {
        "net.minecraft.gametest.framework.GameTest": [
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsPlayerSimulator",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testPlayerSimulatorPlaceWaterBucket",
              "raw": "testPlayerSimulatorPlaceWaterBucket(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsPlayerSimulator",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testPlayerSimulatorFlipLever",
              "raw": "testPlayerSimulatorFlipLever(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsPlayerSimulator",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testPlayerSimulatorKillCow",
              "raw": "testPlayerSimulatorKillCow(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsPlayerSimulator",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testPlayerSimulatorMilkCow",
              "raw": "testPlayerSimulatorMilkCow(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldItem",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldItemImporterToInterfaceToExporterBlockIncorrect",
              "raw": "testWorldItemImporterToInterfaceToExporterBlockIncorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldItem",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldItemImporterToInterfaceToExporterBlockCorrect",
              "raw": "testWorldItemImporterToInterfaceToExporterBlockCorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldItem",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldItemImporterToInterfaceToExporterBoolean",
              "raw": "testWorldItemImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldFluid",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldFluidImporterToInterfaceToExporterBlockIncorrect",
              "raw": "testWorldFluidImporterToInterfaceToExporterBlockIncorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldFluid",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldFluidImporterToInterfaceToExporterBlockCorrect",
              "raw": "testWorldFluidImporterToInterfaceToExporterBlockCorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldFluid",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldFluidImporterToInterfaceToExporterBoolean",
              "raw": "testWorldFluidImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsEnergy",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testEnergyImporterToInterfaceLong",
              "raw": "testEnergyImporterToInterfaceLong(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsEnergy",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testEnergyImporterToInterfaceToExporterBoolean",
              "raw": "testEnergyImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsEnergy",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testEnergyInterfaceToExporterBoolean",
              "raw": "testEnergyInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsEnergy",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testEnergyImporterToInterfaceBoolean",
              "raw": "testEnergyImporterToInterfaceBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldBlock",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldBlockImporterToInterfaceToExporterBlockIncorrect",
              "raw": "testWorldBlockImporterToInterfaceToExporterBlockIncorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldBlock",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldBlockImporterToInterfaceToExporterBlockCorrect",
              "raw": "testWorldBlockImporterToInterfaceToExporterBlockCorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldBlock",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldBlockImporterToInterfaceToExporterBoolean",
              "raw": "testWorldBlockImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsNoMoveDisconnectedFakeCable",
              "raw": "testItemsNoMoveDisconnectedFakeCable(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsImporterToInterfaceBooleanReducedRate",
              "raw": "testItemsImporterToInterfaceBooleanReducedRate(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsImporterToInterfaceItem",
              "raw": "testItemsImporterToInterfaceItem(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsImporterToInterfaceToExporterBoolean",
              "raw": "testItemsImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsInterfaceToExporterBoolean",
              "raw": "testItemsInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsImporterToInterfaceBoolean",
              "raw": "testItemsImporterToInterfaceBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsFluids",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFluidsImporterToInterfaceFluidIncorrect",
              "raw": "testFluidsImporterToInterfaceFluidIncorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsFluids",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFluidsImporterToInterfaceFluidCorrect",
              "raw": "testFluidsImporterToInterfaceFluidCorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsFluids",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFluidImporterToInterfaceToExporterBoolean",
              "raw": "testFluidImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsFluids",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFluidInterfaceToExporterBoolean",
              "raw": "testFluidInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsFluids",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFluidImporterToInterfaceBoolean",
              "raw": "testFluidImporterToInterfaceBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          }
        ]
      },
      "dependencies": {
        "commoncapabilities": "[2.9.3,)",
        "cyclopscore": "[1.25.5,)",
        "integrateddynamics": "[1.24.1,)",
        "minecraft": "[1.21.1,]",
        "neoforge": "[21.1.2,)"
      },
      "events": {
        "org.cyclops.integrateddynamics.api.network.AttachCapabilitiesEventNetwork": [
          "org.cyclops.integratedtunnels.capability.network.TunnelNetworkCapabilityConstructors#onNetworkLoad"
        ]
      },
      "info": {
        "classes": "191",
        "description": "Transfer other stuff over Integrated Dynamics networks.",
        "displayName": "IntegratedTunnels",
        "file": "integratedtunnels-1.21.1-neoforge-1.8.33-373.jar",
        "latest": "1.8.35",
        "license": "MIT",
        "package": "org.cyclops.integratedtunnels",
        "updateUrl": "https://raw.githubusercontent.com/CyclopsMC/Versions/master/neoforge_update/integrated-tunnels.json",
        "version": "1.8.33"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "org.cyclops.integratedtunnels.core.part.ContainerScreenInterfaceSettings"
        ],
        "net.minecraft.world.entity.Entity": [
          "org.cyclops.integratedtunnels.core.ExtendedFakePlayer"
        ],
        "net.minecraft.world.item.Item": [
          "org.cyclops.integratedtunnels.item.ItemDummyPickAxe"
        ]
      },
      "summary": [
        "Automatic Testing",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Items",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "integratedtunnelscompat": {
      "annotations": {
        "net.minecraft.gametest.framework.GameTest": [
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsPlayerSimulator",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testPlayerSimulatorPlaceWaterBucket",
              "raw": "testPlayerSimulatorPlaceWaterBucket(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsPlayerSimulator",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testPlayerSimulatorFlipLever",
              "raw": "testPlayerSimulatorFlipLever(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsPlayerSimulator",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testPlayerSimulatorKillCow",
              "raw": "testPlayerSimulatorKillCow(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsPlayerSimulator",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testPlayerSimulatorMilkCow",
              "raw": "testPlayerSimulatorMilkCow(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldItem",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldItemImporterToInterfaceToExporterBlockIncorrect",
              "raw": "testWorldItemImporterToInterfaceToExporterBlockIncorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldItem",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldItemImporterToInterfaceToExporterBlockCorrect",
              "raw": "testWorldItemImporterToInterfaceToExporterBlockCorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldItem",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldItemImporterToInterfaceToExporterBoolean",
              "raw": "testWorldItemImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldFluid",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldFluidImporterToInterfaceToExporterBlockIncorrect",
              "raw": "testWorldFluidImporterToInterfaceToExporterBlockIncorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldFluid",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldFluidImporterToInterfaceToExporterBlockCorrect",
              "raw": "testWorldFluidImporterToInterfaceToExporterBlockCorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldFluid",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldFluidImporterToInterfaceToExporterBoolean",
              "raw": "testWorldFluidImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsEnergy",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testEnergyImporterToInterfaceLong",
              "raw": "testEnergyImporterToInterfaceLong(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsEnergy",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testEnergyImporterToInterfaceToExporterBoolean",
              "raw": "testEnergyImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsEnergy",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testEnergyInterfaceToExporterBoolean",
              "raw": "testEnergyInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsEnergy",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testEnergyImporterToInterfaceBoolean",
              "raw": "testEnergyImporterToInterfaceBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldBlock",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldBlockImporterToInterfaceToExporterBlockIncorrect",
              "raw": "testWorldBlockImporterToInterfaceToExporterBlockIncorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldBlock",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldBlockImporterToInterfaceToExporterBlockCorrect",
              "raw": "testWorldBlockImporterToInterfaceToExporterBlockCorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsWorldBlock",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testWorldBlockImporterToInterfaceToExporterBoolean",
              "raw": "testWorldBlockImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsNoMoveDisconnectedFakeCable",
              "raw": "testItemsNoMoveDisconnectedFakeCable(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsImporterToInterfaceBooleanReducedRate",
              "raw": "testItemsImporterToInterfaceBooleanReducedRate(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsImporterToInterfaceItem",
              "raw": "testItemsImporterToInterfaceItem(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsImporterToInterfaceToExporterBoolean",
              "raw": "testItemsImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsInterfaceToExporterBoolean",
              "raw": "testItemsInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsItems",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testItemsImporterToInterfaceBoolean",
              "raw": "testItemsImporterToInterfaceBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsFluids",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFluidsImporterToInterfaceFluidIncorrect",
              "raw": "testFluidsImporterToInterfaceFluidIncorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsFluids",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFluidsImporterToInterfaceFluidCorrect",
              "raw": "testFluidsImporterToInterfaceFluidCorrect(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsFluids",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFluidImporterToInterfaceToExporterBoolean",
              "raw": "testFluidImporterToInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsFluids",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFluidInterfaceToExporterBoolean",
              "raw": "testFluidInterfaceToExporterBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          },
          {
            "class": "org.cyclops.integratedtunnels.gametest.GameTestsFluids",
            "method": {
              "argTypes": [
                "net.minecraft.gametest.framework.GameTestHelper"
              ],
              "name": "testFluidImporterToInterfaceBoolean",
              "raw": "testFluidImporterToInterfaceBoolean(Lnet/minecraft/gametest/framework/GameTestHelper;)V"
            },
            "params": {
              "template": "empty10"
            }
          }
        ]
      },
      "dependencies": {
        "cyclopscore": "[1.19.10,)",
        "integratedtunnels": "[1.8.11,)",
        "minecraft": "[1.21.1,]",
        "neoforge": "[21.1.2,)"
      },
      "events": {
        "org.cyclops.integrateddynamics.api.network.AttachCapabilitiesEventNetwork": [
          "org.cyclops.integratedtunnels.capability.network.TunnelNetworkCapabilityConstructors#onNetworkLoad"
        ]
      },
      "info": {
        "classes": "191",
        "description": "Integrated Tunnels compatibility with other mods.\n",
        "displayName": "IntegratedTunnels-Compat",
        "file": "integratedtunnels-1.21.1-neoforge-1.8.33-373.jar",
        "license": "MIT",
        "package": "org.cyclops.integratedtunnels",
        "version": "1.8.33"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "org.cyclops.integratedtunnels.core.part.ContainerScreenInterfaceSettings"
        ],
        "net.minecraft.world.entity.Entity": [
          "org.cyclops.integratedtunnels.core.ExtendedFakePlayer"
        ],
        "net.minecraft.world.item.Item": [
          "org.cyclops.integratedtunnels.item.ItemDummyPickAxe"
        ]
      },
      "summary": [
        "Automatic Testing",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Items",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "inventoryessentials": {
      "dependencies": {
        "balm": "[21.0.0,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21-beta,)"
      },
      "info": {
        "authors": "BlayTheNinth",
        "classes": "21",
        "description": "Basic inventory tweaks. Lightweight and compatible.",
        "displayName": "Inventory Essentials",
        "file": "inventoryessentials-neoforge-1.21.1-21.1.2.jar",
        "license": "All Rights Reserved",
        "package": "net.blay09.mods.inventoryessentials",
        "version": "21.1.2"
      },
      "modifies": [
        "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen",
        "net.minecraft.client.gui.screens.inventory.CreativeModeInventoryScreen",
        "net.minecraft.client.gui.screens.inventory.CreativeModeInventoryScreen$SlotWrapper"
      ],
      "summary": [
        "Localization"
      ]
    },
    "inventorysorter": {
      "dependencies": {},
      "info": {
        "classes": "22",
        "description": "Simple inventory sorting.\n\nMiddle click to sort your inventory.\nScroll wheel on a stack to move in and out.\n",
        "displayName": "Simple Inventory Sorter",
        "file": "inventorysorter-1.21-24.0.19.jar",
        "license": "GPLv3",
        "package": "cpw.mods.inventorysorter",
        "version": "24.0.19"
      },
      "summary": [
        "Localization"
      ]
    },
    "iris": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.irisshaders.iris.mixin.vertices.MixinVertexFormatElement",
            "method": {
              "argTypes": [
                "int",
                "com.mojang.blaze3d.vertex.VertexFormatElement$Usage",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$fixGenericAttributes",
              "raw": "iris$fixGenericAttributes(ILcom/mojang/blaze3d/vertex/VertexFormatElement$Usage;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.vertices.MixinVertexFormat",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onClearBufferState",
              "raw": "iris$onClearBufferState(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.vertices.MixinVertexFormat",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onSetupBufferState",
              "raw": "iris$onSetupBufferState(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.vertices.MixinBufferBuilder",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$beforeNext",
              "raw": "iris$beforeNext(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.vertices.MixinBufferBuilder",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$skipSodiumChange",
              "raw": "iris$skipSodiumChange(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.vertices.MixinBufferBuilder",
            "method": {
              "argTypes": [
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "injectMidBlock",
              "raw": "injectMidBlock(FFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.vertices.immediate.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$immediateStateEndLevelRender",
              "raw": "iris$immediateStateEndLevelRender(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.vertices.immediate.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$immediateStateBeginLevelRender",
              "raw": "iris$immediateStateBeginLevelRender(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.vertices.immediate.MixinBufferSource",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.RenderType",
                "com.mojang.blaze3d.vertex.BufferBuilder",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$afterFlushBuffer",
              "raw": "iris$afterFlushBuffer(Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/BufferBuilder;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/RenderType;draw(Lcom/mojang/blaze3d/vertex/MeshData;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.vertices.immediate.MixinBufferSource",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.RenderType",
                "com.mojang.blaze3d.vertex.BufferBuilder",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$beforeFlushBuffer",
              "raw": "iris$beforeFlushBuffer(Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/BufferBuilder;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/RenderType;draw(Lcom/mojang/blaze3d/vertex/MeshData;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.pbr.MixinTextureAtlas",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onTailCycleAnimationFrames",
              "raw": "iris$onTailCycleAnimationFrames(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.pbr.MixinSpriteContents",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onTailMarkActive",
              "raw": "iris$onTailMarkActive(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.pbr.MixinSpriteContents",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onTailClose",
              "raw": "iris$onTailClose(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.MixinTextureManager",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onTailClose",
              "raw": "iris$onTailClose(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.MixinTextureManager",
            "method": {
              "argTypes": [
                "java.nio.file.Path",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onInnerDumpTextures",
              "raw": "iris$onInnerDumpTextures(Ljava/nio/file/Path;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.MixinTextureManager",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "java.util.concurrent.Executor",
                "java.util.concurrent.CompletableFuture",
                "java.lang.Void",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onTailReloadLambda",
              "raw": "iris$onTailReloadLambda(Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.MixinSpriteContents",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onReturnCreateTicker",
              "raw": "onReturnCreateTicker(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.MixinResourceLocation",
            "method": {
              "argTypes": [
                "char",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$allowInvalidPaths",
              "raw": "iris$allowInvalidPaths(CLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.MixinResourceLocation",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$blockDUMMY",
              "raw": "iris$blockDUMMY(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.MixinGlStateManager",
            "method": {
              "argTypes": [
                "[",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onDeleteTextures",
              "raw": "iris$onDeleteTextures([ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.MixinGlStateManager",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onDeleteTexture",
              "raw": "iris$onDeleteTexture(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.texture.MixinGlStateManager",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "java.nio.IntBuffer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onTexImage2D",
              "raw": "iris$onTexImage2D(IIIIIIIILjava/nio/IntBuffer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.statelisteners.MixinRenderSystem",
            "method": {
              "argTypes": [
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onFogEnd",
              "raw": "iris$onFogEnd(FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=FIELD, target=Lcom/mojang/blaze3d/systems/RenderSystem;shaderFogEnd:F}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.statelisteners.MixinRenderSystem",
            "method": {
              "argTypes": [
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onFogStart",
              "raw": "iris$onFogStart(FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=FIELD, target=Lcom/mojang/blaze3d/systems/RenderSystem;shaderFogStart:F}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.statelisteners.MixinGlStateManager",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onBlendFuncSeparate",
              "raw": "iris$onBlendFuncSeparate(IIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.statelisteners.MixinGlStateManager",
            "method": {
              "argTypes": [
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onBlendFunc",
              "raw": "iris$onBlendFunc(IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.state_tracking.MixinRenderTarget",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onBindFramebuffer",
              "raw": "iris$onBindFramebuffer(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.sky.MixinOptions_CloudsOverride",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideCloudsType",
              "raw": "iris$overrideCloudsType(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.sky.MixinDimensionSpecialEffects",
            "method": {
              "argTypes": [
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$getSunriseColor",
              "raw": "iris$getSunriseColor(FFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.sky.MixinClientLevelData_DisableVoidPlane",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$getHorizonHeight",
              "raw": "iris$getHorizonHeight(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.shadows.MixinPreventRebuildNearInShadowPass",
            "method": {
              "argTypes": [
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.culling.Frustum",
                "boolean",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$preventRebuildNearInShadowPass",
              "raw": "iris$preventRebuildNearInShadowPass(Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/culling/Frustum;ZZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.shadows.MixinBeaconRenderer",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "net.minecraft.resources.ResourceLocation",
                "float",
                "float",
                "long",
                "int",
                "int",
                "int",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$noLightBeamInShadowPass",
              "raw": "iris$noLightBeamInShadowPass(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/resources/ResourceLocation;FFJIIIFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinWindow",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.platform.WindowEventHandler",
                "com.mojang.blaze3d.platform.ScreenManager",
                "com.mojang.blaze3d.platform.DisplayData",
                "java.lang.String",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$enableDebugContext",
              "raw": "iris$enableDebugContext(Lcom/mojang/blaze3d/platform/WindowEventHandler;Lcom/mojang/blaze3d/platform/ScreenManager;Lcom/mojang/blaze3d/platform/DisplayData;Ljava/lang/String;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lorg/lwjgl/glfw/GLFW;glfwDefaultWindowHints()V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinVertexBuffer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "bindHelper",
              "raw": "bindHelper(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinVertexBuffer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "unbindHelper",
              "raw": "unbindHelper(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinUniform",
            "method": {
              "argTypes": [
                "int",
                "java.lang.CharSequence",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$glGetUniformLocation",
              "raw": "iris$glGetUniformLocation(ILjava/lang/CharSequence;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinTitleScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$firstInit",
              "raw": "iris$firstInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinTheEndPortalRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.entity.TheEndPortalBlockEntity",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onRender",
              "raw": "iris$onRender(Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinSystemReport",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "fillSystemDetails",
              "raw": "fillSystemDetails(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinShaderInstance",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceProvider",
                "java.lang.String",
                "com.mojang.blaze3d.vertex.VertexFormat",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setupGeometryShader",
              "raw": "iris$setupGeometryShader(Lnet/minecraft/server/packs/resources/ResourceProvider;Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/util/GsonHelper;parse(Ljava/io/Reader;)Lcom/google/gson/JsonObject;}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinShaderInstance",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$unlockDepthColorState",
              "raw": "iris$unlockDepthColorState(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinShaderInstance",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onTail",
              "raw": "onTail(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinShaderInstance",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$lockDepthColorState",
              "raw": "iris$lockDepthColorState(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinShaderInstance",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceProvider",
                "java.lang.String",
                "com.mojang.blaze3d.vertex.VertexFormat",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "name",
              "raw": "name(Lnet/minecraft/server/packs/resources/ResourceProvider;Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinShaderInstance",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceProvider",
                "net.minecraft.resources.ResourceLocation",
                "com.mojang.blaze3d.vertex.VertexFormat",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iriss$storeSkip",
              "raw": "iriss$storeSkip(Lnet/minecraft/server/packs/resources/ResourceProvider;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/VertexFormat;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinScreenEffectRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "com.mojang.blaze3d.vertex.PoseStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$disableUnderWaterOverlayRendering",
              "raw": "iris$disableUnderWaterOverlayRendering(Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinRenderTarget",
            "method": {
              "argTypes": [
                "int",
                "int",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "nameDepthBuffer",
              "raw": "nameDepthBuffer(IIZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinRenderTarget",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onDestroyBuffers",
              "raw": "iris$onDestroyBuffers(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinRenderSystem",
            "method": {
              "argTypes": [
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "_setShaderTexture",
              "raw": "_setShaderTexture(IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinRenderSystem",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.client.renderer.texture.AbstractTexture"
              ],
              "name": "_setShaderTexture",
              "raw": "_setShaderTexture(ILnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/texture/AbstractTexture;getId()I}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinRenderSystem",
            "method": {
              "argTypes": [
                "int",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onRendererInit",
              "raw": "iris$onRendererInit(IZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinQuickPlayDev",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$createWorldIfDev",
              "raw": "iris$createWorldIfDev(Lnet/minecraft/client/Minecraft;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinProgramManager",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.shaders.Shader",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$releaseGeometry",
              "raw": "iris$releaseGeometry(Lcom/mojang/blaze3d/shaders/Shader;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/systems/RenderSystem;assertOnRenderThread()V, remap=false}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinProgram",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.shaders.Program$Type",
                "java.lang.String",
                "java.io.InputStream",
                "java.lang.String",
                "com.mojang.blaze3d.preprocessor.GlslPreprocessor",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "int"
              ],
              "name": "iris$causeException",
              "raw": "iris$causeException(Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;I)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/platform/GlStateManager;glGetShaderInfoLog(II)Ljava/lang/String;, remap=false}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinParticleEngine",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.LightTexture",
                "net.minecraft.client.Camera",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$finishDrawingParticles",
              "raw": "iris$finishDrawingParticles(Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinParticleEngine",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.LightTexture",
                "net.minecraft.client.Camera",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$beginDrawingParticles",
              "raw": "iris$beginDrawingParticles(Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinOptions_Entrypoint",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$beforeLoadOptions",
              "raw": "iris$beforeLoadOptions(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinModelViewBobbing",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$saveShadersOn",
              "raw": "iris$saveShadersOn(Lnet/minecraft/client/DeltaTracker;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinMinecraft_PipelineManagement",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientLevel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$resetPipeline",
              "raw": "iris$resetPipeline(Lnet/minecraft/client/multiplayer/ClientLevel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinMinecraft_PipelineManagement",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientLevel",
                "net.minecraft.client.gui.screens.ReceivingLevelScreen$Reason",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$trackLastDimensionOnLevelChange",
              "raw": "iris$trackLastDimensionOnLevelChange(Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/client/gui/screens/ReceivingLevelScreen$Reason;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinMinecraft_PipelineManagement",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$trackLastDimensionOnLeave",
              "raw": "iris$trackLastDimensionOnLeave(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinMinecraft_Keybinds",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onTick",
              "raw": "iris$onTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinMinecraft_Images",
            "method": {
              "argTypes": [
                "net.minecraft.client.main.GameConfig",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setupImages",
              "raw": "iris$setupImages(Lnet/minecraft/client/main/GameConfig;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLightTexture",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "storeDarknessValue",
              "raw": "storeDarknessValue(Lnet/minecraft/world/entity/LivingEntity;FFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLightTexture",
            "method": {
              "argTypes": [
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "resetDarknessValue",
              "raw": "resetDarknessValue(FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/multiplayer/ClientLevel;getSkyDarken(F)F}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer_Sky",
            "method": {
              "argTypes": [
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "net.minecraft.client.Camera",
                "boolean",
                "java.lang.Runnable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preRenderSky",
              "raw": "preRenderSky(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$beginTranslucents",
              "raw": "iris$beginTranslucents(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{args=[stringValue=translucent], value=CONSTANT}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$resetDebugRenderStage",
              "raw": "iris$resetDebugRenderStage(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/debug/DebugRenderer;render(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDD)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setDebugRenderStage",
              "raw": "iris$setDebugRenderStage(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/debug/DebugRenderer;render(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDD)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$endWorldBorder",
              "raw": "iris$endWorldBorder(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderWorldBorder(Lnet/minecraft/client/Camera;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$beginWorldBorder",
              "raw": "iris$beginWorldBorder(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderWorldBorder(Lnet/minecraft/client/Camera;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$endWeather",
              "raw": "iris$endWeather(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderSnowAndRain(Lnet/minecraft/client/renderer/LightTexture;FDDD)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$beginWeather",
              "raw": "iris$beginWeather(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderSnowAndRain(Lnet/minecraft/client/renderer/LightTexture;FDDD)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.RenderType",
                "double",
                "double",
                "double",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$endTerrainLayer",
              "raw": "iris$endTerrainLayer(Lnet/minecraft/client/renderer/RenderType;DDDLorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.RenderType",
                "double",
                "double",
                "double",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$beginTerrainLayer",
              "raw": "iris$beginTerrainLayer(Lnet/minecraft/client/renderer/RenderType;DDDLorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$endClouds",
              "raw": "iris$endClouds(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderClouds(Lcom/mojang/blaze3d/vertex/PoseStack;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FDDD)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$beginClouds",
              "raw": "iris$beginClouds(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderClouds(Lcom/mojang/blaze3d/vertex/PoseStack;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FDDD)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$endSky",
              "raw": "iris$endSky(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderSky(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "net.minecraft.client.Camera",
                "boolean",
                "java.lang.Runnable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.mojang.blaze3d.vertex.PoseStack"
              ],
              "name": "iris$renderSky$tiltSun",
              "raw": "iris$renderSky$tiltSun(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/mojang/blaze3d/vertex/PoseStack;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/multiplayer/ClientLevel;getTimeOfDay(F)F}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "net.minecraft.client.Camera",
                "boolean",
                "java.lang.Runnable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setVoidRenderStage",
              "raw": "iris$setVoidRenderStage(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/player/LocalPlayer;getEyePosition(F)Lnet/minecraft/world/phys/Vec3;}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "net.minecraft.client.Camera",
                "boolean",
                "java.lang.Runnable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setStarRenderStage",
              "raw": "iris$setStarRenderStage(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/multiplayer/ClientLevel;getStarBrightness(F)F}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "net.minecraft.client.Camera",
                "boolean",
                "java.lang.Runnable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setMoonRenderStage",
              "raw": "iris$setMoonRenderStage(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=FIELD, target=Lnet/minecraft/client/renderer/LevelRenderer;MOON_LOCATION:Lnet/minecraft/resources/ResourceLocation;}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "net.minecraft.client.Camera",
                "boolean",
                "java.lang.Runnable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setSunsetRenderStage",
              "raw": "iris$setSunsetRenderStage(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/DimensionSpecialEffects;getSunriseColor(FF)[F}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "net.minecraft.client.Camera",
                "boolean",
                "java.lang.Runnable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setSunRenderStage",
              "raw": "iris$setSunRenderStage(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=FIELD, target=Lnet/minecraft/client/renderer/LevelRenderer;SUN_LOCATION:Lnet/minecraft/resources/ResourceLocation;}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "net.minecraft.client.Camera",
                "boolean",
                "java.lang.Runnable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$renderSky$beginNormalSky",
              "raw": "iris$renderSky$beginNormalSky(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/FogRenderer;levelFogColor()V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$beginSky",
              "raw": "iris$beginSky(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderSky(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$renderTerrainShadows",
              "raw": "iris$renderTerrainShadows(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderSky(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$endLevelRender",
              "raw": "iris$endLevelRender(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$beginLevelRender",
              "raw": "iris$beginLevelRender(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/mojang/blaze3d/systems/RenderSystem;clear(IZ)V, remap=false}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setupPipeline",
              "raw": "iris$setupPipeline(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinItemInHandRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.player.AbstractClientPlayer",
                "float",
                "float",
                "net.minecraft.world.InteractionHand",
                "float",
                "net.minecraft.world.item.ItemStack",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$skipTranslucentHands",
              "raw": "iris$skipTranslucentHands(Lnet/minecraft/client/player/AbstractClientPlayer;FFLnet/minecraft/world/InteractionHand;FLnet/minecraft/world/item/ItemStack;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinItemBlockRenderTypes",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$setCustomRenderType",
              "raw": "iris$setCustomRenderType(Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGlStateManager_FramebufferBinding",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$trackFramebufferDelete",
              "raw": "iris$trackFramebufferDelete(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGlStateManager_FramebufferBinding",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$avoidRedundantBind2",
              "raw": "iris$avoidRedundantBind2(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGlStateManager_FramebufferBinding",
            "method": {
              "argTypes": [
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$avoidRedundantBind",
              "raw": "iris$avoidRedundantBind(IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGlStateManager_DepthColorOverride",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$resetTessellation",
              "raw": "iris$resetTessellation(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGlStateManager_DepthColorOverride",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$depthMaskLock",
              "raw": "iris$depthMaskLock(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGlStateManager_DepthColorOverride",
            "method": {
              "argTypes": [
                "boolean",
                "boolean",
                "boolean",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$colorMaskLock",
              "raw": "iris$colorMaskLock(ZZZZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGlStateManager_BlendOverride",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$blendFuncSeparateLock",
              "raw": "iris$blendFuncSeparateLock(IIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGlStateManager_BlendOverride",
            "method": {
              "argTypes": [
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$blendFuncLock",
              "raw": "iris$blendFuncLock(IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGlStateManager_BlendOverride",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$blendEnableLock",
              "raw": "iris$blendEnableLock(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGlStateManager_BlendOverride",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$blendDisableLock",
              "raw": "iris$blendDisableLock(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer_NightVisionCompat",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$safecheckNightvisionStrength",
              "raw": "iris$safecheckNightvisionStrength(Lnet/minecraft/world/entity/LivingEntity;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/effect/MobEffectInstance;endsWithin(I)Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$runColorSpace",
              "raw": "iris$runColorSpace(Lnet/minecraft/client/DeltaTracker;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "net.minecraft.client.renderer.ItemInHandRenderer",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.client.renderer.RenderBuffers",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$logSystem",
              "raw": "iris$logSystem(Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/renderer/ItemInHandRenderer;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/RenderBuffers;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$startFrame",
              "raw": "iris$startFrame(Lnet/minecraft/client/DeltaTracker;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideLinesShader",
              "raw": "iris$overrideLinesShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideTextIntensityShader",
              "raw": "iris$overrideTextIntensityShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideTextBackgroundShader",
              "raw": "iris$overrideTextBackgroundShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideTextShader",
              "raw": "iris$overrideTextShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideCrumblingShader",
              "raw": "iris$overrideCrumblingShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideLightningShader",
              "raw": "iris$overrideLightningShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideLeashShader",
              "raw": "iris$overrideLeashShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideEntityTranslucentEmissiveShader",
              "raw": "iris$overrideEntityTranslucentEmissiveShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideEntityEyesShader",
              "raw": "iris$overrideEntityEyesShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideEntityAlphaShader",
              "raw": "iris$overrideEntityAlphaShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideBeaconBeamShader",
              "raw": "iris$overrideBeaconBeamShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideEntitySolidShader",
              "raw": "iris$overrideEntitySolidShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideEntitySolidDiffuseShader",
              "raw": "iris$overrideEntitySolidDiffuseShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideGlintShader",
              "raw": "iris$overrideGlintShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideEnergySwirlShadowShader",
              "raw": "iris$overrideEnergySwirlShadowShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideEntityTranslucentShader",
              "raw": "iris$overrideEntityTranslucentShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideEntityCutoutShader",
              "raw": "iris$overrideEntityCutoutShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideTranslucentShader",
              "raw": "iris$overrideTranslucentShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideCutoutShader",
              "raw": "iris$overrideCutoutShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideSolidShader",
              "raw": "iris$overrideSolidShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overridePositionTexColorNormalShader",
              "raw": "iris$overridePositionTexColorNormalShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideParticleShader",
              "raw": "iris$overrideParticleShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overridePositionTexColorShader",
              "raw": "iris$overridePositionTexColorShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overridePositionTexShader",
              "raw": "iris$overridePositionTexShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overridePositionColorShader",
              "raw": "iris$overridePositionColorShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overridePositionShader",
              "raw": "iris$overridePositionShader(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinFogRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.Camera",
                "float",
                "net.minecraft.client.multiplayer.ClientLevel",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "render",
              "raw": "render(Lnet/minecraft/client/Camera;FLnet/minecraft/client/multiplayer/ClientLevel;IFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinFogRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.FogRenderer$FogMode",
                "float",
                "boolean",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setupLegacyWaterFog",
              "raw": "iris$setupLegacyWaterFog(Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/FogRenderer$FogMode;FZFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinEntityRenderDispatcher",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "net.minecraft.world.entity.Entity",
                "org.joml.Quaternionf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "restoreFlameId",
              "raw": "restoreFlameId(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;Lorg/joml/Quaternionf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinEntityRenderDispatcher",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "net.minecraft.world.entity.Entity",
                "org.joml.Quaternionf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setFlameId",
              "raw": "iris$setFlameId(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;Lorg/joml/Quaternionf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinEntityRenderDispatcher",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "net.minecraft.world.entity.Entity",
                "float",
                "float",
                "net.minecraft.world.level.LevelReader",
                "float",
                "net.minecraft.world.phys.Vec3",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$maybeSuppressEntityShadow",
              "raw": "iris$maybeSuppressEntityShadow(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/LevelReader;FLnet/minecraft/world/phys/Vec3;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinEntityRenderDispatcher",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack$Pose",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "net.minecraft.world.level.chunk.ChunkAccess",
                "net.minecraft.world.level.LevelReader",
                "net.minecraft.core.BlockPos",
                "double",
                "double",
                "double",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderBlockShadow",
              "raw": "renderBlockShadow(Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;DDDFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinEntityRenderDispatcher",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "net.minecraft.world.entity.Entity",
                "float",
                "float",
                "net.minecraft.world.level.LevelReader",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "restoreShadow",
              "raw": "restoreShadow(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/LevelReader;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinEntityRenderDispatcher",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "net.minecraft.world.entity.Entity",
                "float",
                "float",
                "net.minecraft.world.level.LevelReader",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$maybeSuppressEntityShadow",
              "raw": "iris$maybeSuppressEntityShadow(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/LevelReader;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinDebugScreenOverlay",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$appendShadowDebugText",
              "raw": "iris$appendShadowDebugText(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinDebugScreenOverlay",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$appendShaderPackText",
              "raw": "iris$appendShaderPackText(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinClientPacketListener",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundLoginPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$showUpdateMessage",
              "raw": "iris$showUpdateMessage(Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinClientLanguage",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$addLanguageEntriesToTranslationChecks",
              "raw": "iris$addLanguageEntriesToTranslationChecks(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinClientLanguage",
            "method": {
              "argTypes": [
                "java.lang.String",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$addLanguageEntries",
              "raw": "iris$addLanguageEntries(Ljava/lang/String;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinClientLanguage",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "java.util.List",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "check",
              "raw": "check(Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinClientLanguage",
            "method": {
              "argTypes": [
                "java.lang.String",
                "java.util.List",
                "java.util.Map",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "injectFrom",
              "raw": "injectFrom(Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinChainedJsonException",
            "method": {
              "argTypes": [
                "java.lang.Exception",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$changeShaderParseException",
              "raw": "iris$changeShaderParseException(Ljava/lang/Exception;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinBooleanState",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setUnknownState",
              "raw": "iris$setUnknownState(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinBlockStateBehavior",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getShadeBrightness",
              "raw": "getShadeBrightness(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinBiomes",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$registerBiome",
              "raw": "iris$registerBiome(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.MixinBiomeAmbientSoundsHandler",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.biome.AmbientMoodSettings",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.core.BlockPos"
              ],
              "name": "calculateConstantMoodiness",
              "raw": "calculateConstantMoodiness(Lnet/minecraft/world/level/biome/AmbientMoodSettings;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/core/BlockPos;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/Level;getBrightness(Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/BlockPos;)I, ordinal=0}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.gui.MixinGui",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$disableVignetteRendering",
              "raw": "iris$disableVignetteRendering(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.forge.MixinShadowRenderer",
            "method": {
              "argTypes": [
                "net.irisshaders.iris.mixin.LevelRendererAccessor",
                "net.minecraft.client.Camera",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.mojang.blaze3d.vertex.PoseStack",
                "org.joml.Matrix4f"
              ],
              "name": "render",
              "raw": "render(Lnet/irisshaders/iris/mixin/LevelRendererAccessor;Lnet/minecraft/client/Camera;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/mojang/blaze3d/vertex/PoseStack;Lorg/joml/Matrix4f;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/irisshaders/batchedentityrendering/impl/FullyBufferedMultiBufferSource;readyUp()V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.forge.MixinShadowRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.forge.MixinShaderInstance",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceProvider",
                "net.minecraft.resources.ResourceLocation",
                "com.mojang.blaze3d.vertex.VertexFormat",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$setupGeometryShader",
              "raw": "iris$setupGeometryShader(Lnet/minecraft/server/packs/resources/ResourceProvider;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/VertexFormat;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/util/GsonHelper;parse(Ljava/io/Reader;)Lcom/google/gson/JsonObject;}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.forge.MixinItemBlockRenderTypes",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$setCustomRenderType",
              "raw": "iris$setCustomRenderType(Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.forge.MixinHumanoidArmorLayer",
            "method": {
              "argTypes": [
                "net.minecraft.core.Holder",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "net.minecraft.world.item.armortrim.ArmorTrim",
                "net.minecraft.client.model.Model",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeTrimTemp2Forge",
              "raw": "changeTrimTemp2Forge(Lnet/minecraft/core/Holder;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/armortrim/ArmorTrim;Lnet/minecraft/client/model/Model;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.forge.MixinHumanoidArmorLayer",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "net.minecraft.world.entity.LivingEntity",
                "net.minecraft.world.entity.EquipmentSlot",
                "int",
                "net.minecraft.client.model.HumanoidModel",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.item.ArmorItem"
              ],
              "name": "changeIdF",
              "raw": "changeIdF(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;ILnet/minecraft/client/model/HumanoidModel;FFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/item/ArmorItem;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/model/HumanoidModel;copyPropertiesTo(Lnet/minecraft/client/model/HumanoidModel;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.forge.MixinHumanoidArmorLayer",
            "method": {
              "argTypes": [
                "net.minecraft.core.Holder",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "net.minecraft.world.item.armortrim.ArmorTrim",
                "net.minecraft.client.model.Model",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeTrimTempForge",
              "raw": "changeTrimTempForge(Lnet/minecraft/core/Holder;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/armortrim/ArmorTrim;Lnet/minecraft/client/model/Model;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.forge.MixinGameClientEvents",
            "method": {
              "argTypes": [
                "net.neoforged.neoforge.client.event.AddSectionGeometryEvent$SectionRenderingContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.state.BlockState",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "net.minecraft.core.BlockPos"
              ],
              "name": "iris$removeId",
              "raw": "iris$removeId(Lnet/neoforged/neoforge/client/event/AddSectionGeometryEvent$SectionRenderingContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/core/BlockPos;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/block/BlockRenderDispatcher;renderBatched(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;Lnet/neoforged/neoforge/client/model/data/ModelData;Lnet/minecraft/client/renderer/RenderType;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.forge.MixinGameClientEvents",
            "method": {
              "argTypes": [
                "net.neoforged.neoforge.client.event.AddSectionGeometryEvent$SectionRenderingContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.state.BlockState",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "net.minecraft.core.BlockPos"
              ],
              "name": "iris$setId",
              "raw": "iris$setId(Lnet/neoforged/neoforge/client/event/AddSectionGeometryEvent$SectionRenderingContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/core/BlockPos;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/block/BlockRenderDispatcher;renderBatched(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;Lnet/neoforged/neoforge/client/model/data/ModelData;Lnet/minecraft/client/renderer/RenderType;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.fantastic.MixinTerrainParticle",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideParticleSheet",
              "raw": "iris$overrideParticleSheet(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.fantastic.MixinTerrainParticle",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientLevel",
                "double",
                "double",
                "double",
                "double",
                "double",
                "double",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$resolveTranslucency",
              "raw": "iris$resolveTranslucency(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.fantastic.MixinStationaryItemParticle",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iris$overrideParticleRenderType",
              "raw": "iris$overrideParticleRenderType(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.fantastic.MixinStationaryItemParticle",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientLevel",
                "double",
                "double",
                "double",
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$resolveTranslucency",
              "raw": "iris$resolveTranslucency(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.fabulous.MixinDisableFabulousGraphics",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$disableFabulousGraphicsOnLevelRendererReload",
              "raw": "iris$disableFabulousGraphicsOnLevelRendererReload(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.fabulous.MixinDisableFabulousGraphics",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$disableFabulousGraphicsOnResourceReload",
              "raw": "iris$disableFabulousGraphicsOnResourceReload(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinItemRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeId3",
              "raw": "changeId3(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinItemRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemDisplayContext",
                "boolean",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "net.minecraft.client.resources.model.BakedModel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeId",
              "raw": "changeId(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinHumanoidArmorLayer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeId2",
              "raw": "changeId2(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinHumanoidArmorLayer",
            "method": {
              "argTypes": [
                "net.minecraft.core.Holder",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "net.minecraft.world.item.armortrim.ArmorTrim",
                "net.minecraft.client.model.HumanoidModel",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeTrimTemp2",
              "raw": "changeTrimTemp2(Lnet/minecraft/core/Holder;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/armortrim/ArmorTrim;Lnet/minecraft/client/model/HumanoidModel;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinHumanoidArmorLayer",
            "method": {
              "argTypes": [
                "net.minecraft.core.Holder",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "net.minecraft.world.item.armortrim.ArmorTrim",
                "net.minecraft.client.model.HumanoidModel",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeTrimTemp",
              "raw": "changeTrimTemp(Lnet/minecraft/core/Holder;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/armortrim/ArmorTrim;Lnet/minecraft/client/model/HumanoidModel;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinHumanoidArmorLayer",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "net.minecraft.world.entity.LivingEntity",
                "net.minecraft.world.entity.EquipmentSlot",
                "int",
                "net.minecraft.client.model.HumanoidModel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.item.ArmorItem"
              ],
              "name": "changeId",
              "raw": "changeId(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;ILnet/minecraft/client/model/HumanoidModel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/item/ArmorItem;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/model/HumanoidModel;copyPropertiesTo(Lnet/minecraft/client/model/HumanoidModel;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinHorseArmorLayer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeId2",
              "raw": "changeId2(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinHorseArmorLayer",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "net.minecraft.world.entity.animal.horse.Horse",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeId",
              "raw": "changeId(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinEntityRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.network.chat.Component",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "resetId",
              "raw": "resetId(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinEntityRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.network.chat.Component",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setNameTagId",
              "raw": "setNameTagId(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/Entity;getViewYRot(F)F}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinEntityRenderDispatcher",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "double",
                "double",
                "double",
                "float",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$endEntityRender",
              "raw": "iris$endEntityRender(Lnet/minecraft/world/entity/Entity;DDDFFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/vertex/PoseStack;popPose()V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinEnderDragonRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeId2",
              "raw": "changeId2(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinEnderDragonRenderer",
            "method": {
              "argTypes": [
                "float",
                "float",
                "float",
                "float",
                "int",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeId",
              "raw": "changeId(FFFFILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/vertex/PoseStack;pushPose()V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinElytraLayer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeId2",
              "raw": "changeId2(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinElytraLayer",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "net.minecraft.world.entity.LivingEntity",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeId",
              "raw": "changeId(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/vertex/PoseStack;pushPose()V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinCapeLayer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeId2",
              "raw": "changeId2(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinCapeLayer",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "net.minecraft.client.player.AbstractClientPlayer",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "changeId",
              "raw": "changeId(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/vertex/PoseStack;pushPose()V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.mixin.entity_render_context.MixinBlockEntityRenderDispatcher",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.entity.BlockEntity",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$afterRender",
              "raw": "iris$afterRender(Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher;tryRender(Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/lang/Runnable;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinSodiumWorldRenderer",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.RenderBuffers",
                "it.unimi.dsi.fastutil.longs.Long2ObjectMap",
                "float",
                "net.minecraft.client.renderer.MultiBufferSource$BufferSource",
                "double",
                "double",
                "double",
                "net.minecraft.client.renderer.blockentity.BlockEntityRenderDispatcher",
                "net.minecraft.world.level.block.entity.BlockEntity",
                "net.minecraft.client.player.LocalPlayer",
                "com.llamalad7.mixinextras.sugar.ref.LocalBooleanRef",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "checkRenderShadow",
              "raw": "checkRenderShadow(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/RenderBuffers;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;FLnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDDLnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/client/player/LocalPlayer;Lcom/llamalad7/mixinextras/sugar/ref/LocalBooleanRef;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinSodiumOptionsGUI",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.client.gui.options.OptionPage",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onSetPage",
              "raw": "iris$onSetPage(Lnet/caffeinemc/mods/sodium/client/gui/options/OptionPage;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinSodiumOptionsGUI",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$onInit",
              "raw": "iris$onInit(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinSodiumGameOptions",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$writeIrisConfig",
              "raw": "iris$writeIrisConfig(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinRenderSectionManagerShadow",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "doNotUploadDuringShadow",
              "raw": "doNotUploadDuringShadow(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinRenderSectionManagerShadow",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "doNotUpdateDuringShadow",
              "raw": "doNotUpdateDuringShadow(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinRenderSectionManagerShadow",
            "method": {
              "argTypes": [
                "net.minecraft.client.Camera",
                "net.caffeinemc.mods.sodium.client.render.viewport.Viewport",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cancelIfShadow",
              "raw": "cancelIfShadow(Lnet/minecraft/client/Camera;Lnet/caffeinemc/mods/sodium/client/render/viewport/Viewport;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/caffeinemc/mods/sodium/client/render/chunk/RenderSectionManager;createTerrainRenderList(Lnet/minecraft/client/Camera;Lnet/caffeinemc/mods/sodium/client/render/viewport/Viewport;IZ)V}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinRenderSectionManagerShadow",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientLevel",
                "int",
                "net.caffeinemc.mods.sodium.client.gl.device.CommandList",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "create",
              "raw": "create(Lnet/minecraft/client/multiplayer/ClientLevel;ILnet/caffeinemc/mods/sodium/client/gl/device/CommandList;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinCloudRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "changeGeometry2",
              "raw": "changeGeometry2(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD, remap=false}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinCloudRenderer",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.api.vertex.buffer.VertexBufferWriter",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "computeNormal3DPosZ",
              "raw": "computeNormal3DPosZ(Lnet/caffeinemc/mods/sodium/api/vertex/buffer/VertexBufferWriter;IIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/caffeinemc/mods/sodium/client/render/immediate/CloudRenderer;writeVertex(JFFFI)J, ordinal=20}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinCloudRenderer",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.api.vertex.buffer.VertexBufferWriter",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "computeNormal3DNegZ",
              "raw": "computeNormal3DNegZ(Lnet/caffeinemc/mods/sodium/api/vertex/buffer/VertexBufferWriter;IIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/caffeinemc/mods/sodium/client/render/immediate/CloudRenderer;writeVertex(JFFFI)J, ordinal=16}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinCloudRenderer",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.api.vertex.buffer.VertexBufferWriter",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "computeNormal3DPosX",
              "raw": "computeNormal3DPosX(Lnet/caffeinemc/mods/sodium/api/vertex/buffer/VertexBufferWriter;IIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/caffeinemc/mods/sodium/client/render/immediate/CloudRenderer;writeVertex(JFFFI)J, ordinal=12, remap=false}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinCloudRenderer",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.api.vertex.buffer.VertexBufferWriter",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "computeNormal3DNegX",
              "raw": "computeNormal3DNegX(Lnet/caffeinemc/mods/sodium/api/vertex/buffer/VertexBufferWriter;IIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/caffeinemc/mods/sodium/client/render/immediate/CloudRenderer;writeVertex(JFFFI)J, ordinal=8, remap=false}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinCloudRenderer",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.api.vertex.buffer.VertexBufferWriter",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "computeNormal3DUp",
              "raw": "computeNormal3DUp(Lnet/caffeinemc/mods/sodium/api/vertex/buffer/VertexBufferWriter;IIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/caffeinemc/mods/sodium/api/util/ColorABGR;mulRGB(II)I, ordinal=1}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinCloudRenderer",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.api.vertex.buffer.VertexBufferWriter",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "computeNormal3D",
              "raw": "computeNormal3D(Lnet/caffeinemc/mods/sodium/api/vertex/buffer/VertexBufferWriter;IIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/caffeinemc/mods/sodium/api/util/ColorABGR;mulRGB(II)I, ordinal=0}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinCloudRenderer",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.api.vertex.buffer.VertexBufferWriter",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "computeNormal2D",
              "raw": "computeNormal2D(Lnet/caffeinemc/mods/sodium/api/vertex/buffer/VertexBufferWriter;IIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinCloudRenderer",
            "method": {
              "argTypes": [
                "long",
                "float",
                "float",
                "float",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "writeIrisVertex",
              "raw": "writeIrisVertex(JFFFILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinChunkMeshBuildTask",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.client.render.chunk.compile.ChunkBuildContext",
                "net.caffeinemc.mods.sodium.client.util.task.CancellationToken",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.caffeinemc.mods.sodium.client.render.chunk.compile.ChunkBuildBuffers",
                "net.minecraft.world.level.block.state.BlockState"
              ],
              "name": "iris$onEnd",
              "raw": "iris$onEnd(Lnet/caffeinemc/mods/sodium/client/render/chunk/compile/ChunkBuildContext;Lnet/caffeinemc/mods/sodium/client/util/task/CancellationToken;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/caffeinemc/mods/sodium/client/render/chunk/compile/ChunkBuildBuffers;Lnet/minecraft/world/level/block/state/BlockState;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/block/state/BlockState;isSolidRender(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinChunkMeshBuildTask",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.client.render.chunk.compile.ChunkBuildContext",
                "net.caffeinemc.mods.sodium.client.util.task.CancellationToken",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.caffeinemc.mods.sodium.client.render.chunk.compile.ChunkBuildBuffers",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.material.FluidState",
                "net.minecraft.core.BlockPos$MutableBlockPos"
              ],
              "name": "iris$onRenderLiquid",
              "raw": "iris$onRenderLiquid(Lnet/caffeinemc/mods/sodium/client/render/chunk/compile/ChunkBuildContext;Lnet/caffeinemc/mods/sodium/client/util/task/CancellationToken;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/caffeinemc/mods/sodium/client/render/chunk/compile/ChunkBuildBuffers;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/caffeinemc/mods/sodium/client/render/chunk/compile/pipeline/FluidRenderer;render(Lnet/caffeinemc/mods/sodium/client/world/LevelSlice;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/caffeinemc/mods/sodium/client/render/chunk/translucent_sorting/TranslucentGeometryCollector;Lnet/caffeinemc/mods/sodium/client/render/chunk/compile/ChunkBuildBuffers;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinChunkMeshBuildTask",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.client.render.chunk.compile.ChunkBuildContext",
                "net.caffeinemc.mods.sodium.client.util.task.CancellationToken",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.caffeinemc.mods.sodium.client.render.chunk.compile.ChunkBuildBuffers",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos$MutableBlockPos"
              ],
              "name": "iris$onRenderModel",
              "raw": "iris$onRenderModel(Lnet/caffeinemc/mods/sodium/client/render/chunk/compile/ChunkBuildContext;Lnet/caffeinemc/mods/sodium/client/util/task/CancellationToken;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/caffeinemc/mods/sodium/client/render/chunk/compile/ChunkBuildBuffers;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/caffeinemc/mods/sodium/client/render/chunk/compile/pipeline/BlockRenderer;renderModel(Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinChunkMeshBuildTask",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.client.render.chunk.compile.ChunkBuildContext",
                "net.caffeinemc.mods.sodium.client.util.task.CancellationToken",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.caffeinemc.mods.sodium.client.render.chunk.compile.ChunkBuildBuffers",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos$MutableBlockPos"
              ],
              "name": "iris$setLightBlock",
              "raw": "iris$setLightBlock(Lnet/caffeinemc/mods/sodium/client/render/chunk/compile/ChunkBuildContext;Lnet/caffeinemc/mods/sodium/client/util/task/CancellationToken;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/caffeinemc/mods/sodium/client/render/chunk/compile/ChunkBuildBuffers;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/core/BlockPos$MutableBlockPos;set(III)Lnet/minecraft/core/BlockPos$MutableBlockPos;, ordinal=1}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinBlockRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.resources.model.BakedModel",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$renderModelTail",
              "raw": "iris$renderModelTail(Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinBlockRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.resources.model.BakedModel",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$renderModelHead",
              "raw": "iris$renderModelHead(Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinBakedChunkModelBuilder",
            "method": {
              "argTypes": [
                "[",
                "net.caffeinemc.mods.sodium.client.render.chunk.vertex.builder.ChunkMeshBufferBuilder",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setupContextHolder",
              "raw": "setupContextHolder([Lnet/caffeinemc/mods/sodium/client/render/chunk/vertex/builder/ChunkMeshBufferBuilder;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinAbstractBlockRenderContext",
            "method": {
              "argTypes": [
                "net.minecraft.client.resources.model.BakedModel",
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "checkDirectionNeo",
              "raw": "checkDirectionNeo(Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.iris.compat.sodium.mixin.MixinAbstractBlockRenderContext",
            "method": {
              "argTypes": [
                "net.minecraft.client.resources.model.BakedModel",
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.core.Direction"
              ],
              "name": "checkDirectionNeo",
              "raw": "checkDirectionNeo(Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/core/Direction;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/caffeinemc/mods/sodium/client/services/PlatformModelAccess;getQuads(Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;Lnet/minecraft/client/renderer/RenderType;Lnet/caffeinemc/mods/sodium/client/services/SodiumModelData;)Ljava/util/List;}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinSheets",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setSheet",
              "raw": "setSheet(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinRenderBuffers",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "batchedentityrendering$replaceOutlineBufferSource",
              "raw": "batchedentityrendering$replaceOutlineBufferSource(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinRenderBuffers",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "batchedentityrendering$replaceCrumblingBufferSource",
              "raw": "batchedentityrendering$replaceCrumblingBufferSource(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinRenderBuffers",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "batchedentityrendering$replaceBufferSource",
              "raw": "batchedentityrendering$replaceBufferSource(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "batchedentityrendering$endLevelRender",
              "raw": "batchedentityrendering$endLevelRender(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "batchedentityrendering$endTranslucents",
              "raw": "batchedentityrendering$endTranslucents(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{args=[stringValue=translucent], shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=CONSTANT}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "batchedentityrendering$beginTranslucents",
              "raw": "batchedentityrendering$beginTranslucents(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{args=[stringValue=translucent], value=CONSTANT}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "batchedentityrendering$postRenderEntity",
              "raw": "batchedentityrendering$postRenderEntity(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderEntity(Lnet/minecraft/world/entity/Entity;DDDFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "batchedentityrendering$preRenderEntity",
              "raw": "batchedentityrendering$preRenderEntity(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/LevelRenderer;renderEntity(Lnet/minecraft/world/entity/Entity;DDDFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "batchedentityrendering$beginLevelRender",
              "raw": "batchedentityrendering$beginLevelRender(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinFishingHookRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.projectile.FishingHook",
                "float",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "capture",
              "raw": "capture(Lnet/minecraft/world/entity/projectile/FishingHook;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/vertex/PoseStack;popPose()V, ordinal=1}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinDebugScreenOverlay",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "batchedentityrendering$appendStats",
              "raw": "batchedentityrendering$appendStats(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinCompositeRenderType",
            "method": {
              "argTypes": [
                "java.lang.String",
                "com.mojang.blaze3d.vertex.VertexFormat",
                "com.mojang.blaze3d.vertex.VertexFormat$Mode",
                "int",
                "boolean",
                "boolean",
                "net.minecraft.client.renderer.RenderType$CompositeState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "batchedentityrendering$onCompositeInit",
              "raw": "batchedentityrendering$onCompositeInit(Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinBufferBuilder_SegmentRendering",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "batchedentityrendering$onNext",
              "raw": "batchedentityrendering$onNext(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.irisshaders.batchedentityrendering.mixin.MixinBannerRenderer",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "net.minecraft.client.model.geom.ModelPart",
                "net.minecraft.client.resources.model.Material",
                "boolean",
                "net.minecraft.world.item.DyeColor",
                "net.minecraft.world.level.block.entity.BannerPatternLayers",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "iris$endRenderingCanvas",
              "raw": "iris$endRenderingCanvas(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/level/block/entity/BannerPatternLayers;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "embeddium": "[0.0.1,)",
        "minecraft": "[1.21,1.21.1)"
      },
      "info": {
        "authors": "coderbot, IMS212",
        "classes": "942",
        "description": "Iris is a modern shaders mod for Minecraft intended to be compatible with existing OptiFine shader packs.\n",
        "displayName": "Iris",
        "file": "iris-neoforge-1.8.6+mc1.21.1.jar",
        "license": "LGPL-3.0-only",
        "package": "kroppeb.stareval",
        "version": "1.8.6+mc1.21.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.irisshaders.iris.mixin.MixinTitleScreen",
          "net.irisshaders.iris.mixin.gui.MixinVideoSettingsScreen",
          "net.irisshaders.iris.gui.screen.ShaderPackScreen",
          "net.irisshaders.iris.gui.FeatureMissingErrorScreen",
          "net.irisshaders.iris.gui.debug.DebugLoadFailedGridScreen",
          "net.irisshaders.iris.compat.sodium.mixin.MixinSodiumOptionsGUI"
        ],
        "net.minecraft.client.particle.Particle": [
          "net.irisshaders.iris.mixin.fantastic.MixinFireworkSparkParticle"
        ]
      },
      "modifies": [
        "blusunrize.immersiveengineering.client.utils.IEGLShaders",
        "com.direwolf20.justdirethings.client.renderers.OurRenderTypes",
        "com.mojang.blaze3d.pipeline.RenderTarget",
        "com.mojang.blaze3d.platform.GlStateManager",
        "com.mojang.blaze3d.platform.GlStateManager$BooleanState",
        "com.mojang.blaze3d.platform.Window",
        "com.mojang.blaze3d.shaders.Program",
        "com.mojang.blaze3d.shaders.Program$Type",
        "com.mojang.blaze3d.shaders.ProgramManager",
        "com.mojang.blaze3d.shaders.Uniform",
        "com.mojang.blaze3d.systems.RenderSystem",
        "com.mojang.blaze3d.vertex.BufferBuilder",
        "com.mojang.blaze3d.vertex.ByteBufferBuilder",
        "com.mojang.blaze3d.vertex.VertexBuffer",
        "com.mojang.blaze3d.vertex.VertexFormat",
        "com.mojang.blaze3d.vertex.VertexFormatElement",
        "com.portingdeadmods.cable_facades.events.GameClientEvents$2",
        "mekanism.client.render.armor.MekaSuitArmor",
        "mekanism.client.render.entity.RenderFlame",
        "mekanism.client.render.lib.effect.BillboardingEffectRenderer",
        "net.caffeinemc.mods.sodium.client.gl.device.GLRenderDevice$ImmediateDrawCommandList",
        "net.caffeinemc.mods.sodium.client.gui.SodiumGameOptionPages",
        "net.caffeinemc.mods.sodium.client.gui.SodiumGameOptions",
        "net.caffeinemc.mods.sodium.client.gui.SodiumOptionsGUI",
        "net.caffeinemc.mods.sodium.client.render.SodiumWorldRenderer",
        "net.caffeinemc.mods.sodium.client.render.chunk.DefaultChunkRenderer",
        "net.caffeinemc.mods.sodium.client.render.chunk.RenderSectionManager",
        "net.caffeinemc.mods.sodium.client.render.chunk.ShaderChunkRenderer",
        "net.caffeinemc.mods.sodium.client.render.chunk.compile.ChunkBuildBuffers",
        "net.caffeinemc.mods.sodium.client.render.chunk.compile.buffers.BakedChunkModelBuilder",
        "net.caffeinemc.mods.sodium.client.render.chunk.compile.buffers.ChunkVertexConsumer",
        "net.caffeinemc.mods.sodium.client.render.chunk.compile.pipeline.BlockRenderer",
        "net.caffeinemc.mods.sodium.client.render.chunk.compile.pipeline.DefaultFluidRenderer",
        "net.caffeinemc.mods.sodium.client.render.chunk.compile.tasks.ChunkBuilderMeshingTask",
        "net.caffeinemc.mods.sodium.client.render.chunk.region.RenderRegion$DeviceResources",
        "net.caffeinemc.mods.sodium.client.render.chunk.vertex.builder.ChunkMeshBufferBuilder",
        "net.caffeinemc.mods.sodium.client.render.frapi.render.AbstractBlockRenderContext",
        "net.caffeinemc.mods.sodium.client.render.immediate.CloudRenderer",
        "net.irisshaders.iris.shadows.ShadowRenderer",
        "net.irisshaders.iris.shadows.frustum.CullEverythingFrustum",
        "net.irisshaders.iris.shadows.frustum.advanced.AdvancedShadowCullingFrustum",
        "net.irisshaders.iris.shadows.frustum.fallback.BoxCullingFrustum",
        "net.irisshaders.iris.shadows.frustum.fallback.NonCullingFrustum",
        "net.minecraft.SystemReport",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.Options",
        "net.minecraft.client.gui.Gui",
        "net.minecraft.client.gui.components.DebugScreenOverlay",
        "net.minecraft.client.gui.screens.TitleScreen",
        "net.minecraft.client.gui.screens.options.VideoSettingsScreen",
        "net.minecraft.client.multiplayer.ClientLevel",
        "net.minecraft.client.multiplayer.ClientLevel$ClientLevelData",
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.client.particle.BlockMarker",
        "net.minecraft.client.particle.FireworkParticles$SparkParticle",
        "net.minecraft.client.particle.ParticleEngine",
        "net.minecraft.client.particle.TerrainParticle",
        "net.minecraft.client.player.LocalPlayer",
        "net.minecraft.client.quickplay.QuickPlay",
        "net.minecraft.client.renderer.DimensionSpecialEffects",
        "net.minecraft.client.renderer.FogRenderer",
        "net.minecraft.client.renderer.GameRenderer",
        "net.minecraft.client.renderer.ItemBlockRenderTypes",
        "net.minecraft.client.renderer.ItemInHandRenderer",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.LightTexture",
        "net.minecraft.client.renderer.MultiBufferSource$BufferSource",
        "net.minecraft.client.renderer.OutlineBufferSource",
        "net.minecraft.client.renderer.PostChain",
        "net.minecraft.client.renderer.RenderBuffers",
        "net.minecraft.client.renderer.RenderStateShard",
        "net.minecraft.client.renderer.RenderType",
        "net.minecraft.client.renderer.RenderType$CompositeRenderType",
        "net.minecraft.client.renderer.RenderType$CompositeState",
        "net.minecraft.client.renderer.ScreenEffectRenderer",
        "net.minecraft.client.renderer.SectionBufferBuilderPack",
        "net.minecraft.client.renderer.ShaderInstance",
        "net.minecraft.client.renderer.Sheets",
        "net.minecraft.client.renderer.blockentity.BannerRenderer",
        "net.minecraft.client.renderer.blockentity.BeaconRenderer",
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderDispatcher",
        "net.minecraft.client.renderer.blockentity.TheEndPortalRenderer",
        "net.minecraft.client.renderer.chunk.SectionRenderDispatcher$RenderSection$RebuildTask",
        "net.minecraft.client.renderer.debug.ChunkBorderRenderer",
        "net.minecraft.client.renderer.entity.EnderDragonRenderer",
        "net.minecraft.client.renderer.entity.EntityRenderDispatcher",
        "net.minecraft.client.renderer.entity.EntityRenderer",
        "net.minecraft.client.renderer.entity.FishingHookRenderer",
        "net.minecraft.client.renderer.entity.ItemRenderer",
        "net.minecraft.client.renderer.entity.LightningBoltRenderer",
        "net.minecraft.client.renderer.entity.layers.CapeLayer",
        "net.minecraft.client.renderer.entity.layers.ElytraLayer",
        "net.minecraft.client.renderer.entity.layers.HorseArmorLayer",
        "net.minecraft.client.renderer.entity.layers.HumanoidArmorLayer",
        "net.minecraft.client.renderer.texture.AbstractTexture",
        "net.minecraft.client.renderer.texture.MipmapGenerator",
        "net.minecraft.client.renderer.texture.SimpleTexture",
        "net.minecraft.client.renderer.texture.SpriteContents",
        "net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture",
        "net.minecraft.client.renderer.texture.SpriteContents$FrameInfo",
        "net.minecraft.client.renderer.texture.SpriteContents$Ticker",
        "net.minecraft.client.renderer.texture.TextureAtlas",
        "net.minecraft.client.renderer.texture.TextureManager",
        "net.minecraft.client.renderer.texture.atlas.sources.DirectoryLister",
        "net.minecraft.client.resources.language.ClientLanguage",
        "net.minecraft.client.resources.metadata.animation.AnimationMetadataSection",
        "net.minecraft.client.resources.sounds.BiomeAmbientSoundsHandler",
        "net.minecraft.resources.ResourceLocation",
        "net.minecraft.server.ChainedJsonException",
        "net.minecraft.world.item.Item",
        "net.minecraft.world.level.biome.Biome",
        "net.minecraft.world.level.biome.Biomes",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "net.minecraft.world.level.dimension.DimensionType"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Particles",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "ironchest": {
      "dependencies": {
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "com.progwml6.ironchest.client.IronChestsClientRegistration#registerLayer"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.progwml6.ironchest.client.IronChestsClientRegistration#registerEntityRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.progwml6.ironchest.client.IronChestsClientRegistration#registerScreens"
        ],
        "net.neoforged.neoforge.event.tick.EntityTickEvent$Post": [
          "com.progwml6.ironchest.common.ai.CatsSitOnChestsHandler#changeSittingTaskForOcelots"
        ]
      },
      "info": {
        "authors": "cpw, alexbegt, progwml6",
        "classes": "89",
        "description": "New chests with larger sizes, with in-place upgrade items.\nThe feature chest is the crystal chest, which is transparent - some inventory contents are visible without opening the chest.",
        "displayName": "Iron Chests",
        "file": "ironchest-1.21-neoforge-16.0.7.jar",
        "license": "GNU General Public License v3.0",
        "package": "com.progwml6.ironchest",
        "version": "1.21-neoforge-16.0.7"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.progwml6.ironchest.client.screen.IronChestScreen"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "com.progwml6.ironchest.client.model.inventory.IronChestItemStackRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.progwml6.ironchest.client.render.IronChestRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "com.progwml6.ironchest.common.data.IronChestsSpriteSourceProvider",
          "com.progwml6.ironchest.common.data.IronChestsBlockTags",
          "com.progwml6.ironchest.common.data.IronChestsLanguageProvider",
          "com.progwml6.ironchest.common.data.IronChestsRecipeProvider",
          "com.progwml6.ironchest.common.data.loot.IronChestsLootTableProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.progwml6.ironchest.common.item.IronChestBlockItem",
          "com.progwml6.ironchest.common.item.ChestUpgradeItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.progwml6.ironchest.common.block.regular.CrystalChestBlock",
          "com.progwml6.ironchest.common.block.regular.DirtChestBlock",
          "com.progwml6.ironchest.common.block.regular.ObsidianChestBlock",
          "com.progwml6.ironchest.common.block.regular.GoldChestBlock",
          "com.progwml6.ironchest.common.block.regular.CopperChestBlock",
          "com.progwml6.ironchest.common.block.regular.DiamondChestBlock",
          "com.progwml6.ironchest.common.block.regular.IronChestBlock",
          "com.progwml6.ironchest.common.block.regular.AbstractIronChestBlock",
          "com.progwml6.ironchest.common.block.trapped.TrappedDiamondChestBlock",
          "com.progwml6.ironchest.common.block.trapped.TrappedCopperChestBlock",
          "com.progwml6.ironchest.common.block.trapped.AbstractTrappedIronChestBlock",
          "com.progwml6.ironchest.common.block.trapped.TrappedObsidianChestBlock",
          "com.progwml6.ironchest.common.block.trapped.TrappedCrystalChestBlock",
          "com.progwml6.ironchest.common.block.trapped.TrappedGoldChestBlock",
          "com.progwml6.ironchest.common.block.trapped.TrappedDirtChestBlock",
          "com.progwml6.ironchest.common.block.trapped.TrappedIronChestBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Runs Entity Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "irons_jewelry": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "io.redspace.ironsjewelry.mixin.WanderingTraderMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "injectGemTrades",
              "raw": "injectGemTrades(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "io.redspace.ironsjewelry.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Explosion",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cancelExplosion",
              "raw": "cancelExplosion(Lnet/minecraft/world/level/Explosion;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "apothic_attributes": "[2.5.0,)",
        "atlas_api": "[1.0.0,2.0.0)",
        "curios": "[9.0.5+1.21.0,)",
        "minecraft": "[1.21.1,1.21.2)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "io.redspace.ironsjewelry.Config#onLoad"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "io.redspace.ironsjewelry.client.ClientSetup#clientSetup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "io.redspace.ironsjewelry.event.ModSetupEvents#commonSetup"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$Clone": [
          "io.redspace.ironsjewelry.client.ClientEvents#onClientClone"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "io.redspace.ironsjewelry.client.ClientEvents#onKeyInput"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "io.redspace.ironsjewelry.client.ClientSetup#registerMenuScreens"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "io.redspace.ironsjewelry.datagen.DataGenerators#gatherData"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "io.redspace.ironsjewelry.registry.CommandRegistry#registerCommand"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "io.redspace.ironsjewelry.event.ServerEvents#onLivingDamaged"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingKnockBackEvent": [
          "io.redspace.ironsjewelry.core.DamageHelper#cancelKnockback"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingShieldBlockEvent": [
          "io.redspace.ironsjewelry.event.ServerEvents#onShieldBlock"
        ],
        "net.neoforged.neoforge.event.entity.living.MobEffectEvent$Applicable": [
          "io.redspace.ironsjewelry.event.ServerEvents#onEffectApplication"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "io.redspace.ironsjewelry.event.ServerEvents#onPlayerLogin"
        ],
        "net.neoforged.neoforge.event.server.ServerAboutToStartEvent": [
          "io.redspace.ironsjewelry.core.VillageAddition#addNewVillageBuilding"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "io.redspace.ironsjewelry.event.ServerEvents#onPlayerTick"
        ],
        "net.neoforged.neoforge.event.village.VillagerTradesEvent": [
          "io.redspace.ironsjewelry.event.SetupEvents#setupProfessionTrades"
        ],
        "net.neoforged.neoforge.event.village.WandererTradesEvent": [
          "io.redspace.ironsjewelry.event.SetupEvents#addWanderingTrades"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "io.redspace.ironsjewelry.network.PacketHandler#register"
        ]
      },
      "info": {
        "authors": "Iron431",
        "classes": "120",
        "description": "Iron's Gems 'n Jewelry adds a dynamic jewelcrafting system with supporting content and mechanics",
        "displayName": "Iron's Gems 'n Jewelry",
        "file": "irons_jewelry-1.21.1-1.0.7.jar",
        "license": "All Rights Reserved",
        "package": "io.redspace.ironsjewelry",
        "version": "1.21.1-1.0.7"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "io.redspace.ironsjewelry.block.jewelcrafting_station.JewelcraftingStationScreen"
        ],
        "net.minecraft.data.DataProvider": [
          "io.redspace.ironsjewelry.datagen.ItemModelDataGenerator"
        ],
        "net.minecraft.world.item.Item": [
          "io.redspace.ironsjewelry.item.PatternRecipeItem",
          "io.redspace.ironsjewelry.item.CurioBaseItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "io.redspace.ironsjewelry.block.jewelcrafting_station.JewelcraftingStationBlock"
        ]
      },
      "modifies": [
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.npc.WanderingTrader"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Network Packets",
        "Custom Server Commands",
        "Custom Structures",
        "Custom Tag Assignments",
        "Listens to Entity Damage Events",
        "Listens to Entity Knockback Events",
        "Listens to Entity Shield Block Events",
        "Listens to Player Login Events",
        "Listens to Potion Effect Applicable Events",
        "Listens to Server About to Start Events",
        "Localization",
        "Modifies Methods",
        "Modifies Villager Trades",
        "Modifies Wandering Trader Trades",
        "Runs Player Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "jade": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "snownee.jade.mixin.StringRenderOutputMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.Font",
                "net.minecraft.client.renderer.MultiBufferSource",
                "float",
                "float",
                "int",
                "boolean",
                "org.joml.Matrix4f",
                "net.minecraft.client.gui.Font$DisplayMode",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "jade$init",
              "raw": "jade$init(Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/renderer/MultiBufferSource;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/gui/Font$DisplayMode;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "snownee.jade.mixin.SessionSearchTreesMixin",
            "method": {
              "argTypes": [
                "java.util.stream.Stream",
                "net.minecraft.world.item.Item$TooltipContext",
                "net.minecraft.world.item.TooltipFlag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "jade$preGet",
              "raw": "jade$preGet(Ljava/util/stream/Stream;Lnet/minecraft/world/item/Item$TooltipContext;Lnet/minecraft/world/item/TooltipFlag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "snownee.jade.mixin.FontMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.font.glyphs.BakedGlyph",
                "boolean",
                "boolean",
                "float",
                "float",
                "float",
                "org.joml.Matrix4f",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "float",
                "float",
                "float",
                "float",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "jade$renderChar",
              "raw": "jade$renderChar(Lnet/minecraft/client/gui/font/glyphs/BakedGlyph;ZZFFFLorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "neoforge": "[21.0.143,)"
      },
      "info": {
        "authors": "Snownee",
        "classes": "298",
        "description": "Minecraft mod shows what you are looking at. (Hwyla fork)",
        "displayName": "Jade",
        "file": "Jade-1.21.1-NeoForge-15.9.3.jar",
        "license": "CC-BY-NC-SA-4.0",
        "package": "snownee.jade",
        "version": "15.9.3+neoforge"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "snownee.jade.gui.WailaConfigScreen",
          "snownee.jade.gui.PreviewOptionsScreen",
          "snownee.jade.gui.PluginsConfigScreen",
          "snownee.jade.gui.HomeConfigScreen",
          "snownee.jade.gui.BaseOptionsScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.Font",
        "net.minecraft.client.gui.Font$StringRenderOutput",
        "net.minecraft.client.multiplayer.SessionSearchTrees",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity",
        "net.neoforged.neoforge.common.loot.CanItemPerformAbility"
      ],
      "summary": [
        "Custom GUI Screens",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "jags": {
      "dependencies": {},
      "info": {
        "authors": "UnRealDinnerbone",
        "classes": "5",
        "description": "Adds a grass seed.",
        "displayName": "Just Another Grass Seed",
        "file": "jags-neo-21.1.0+mc1.21.1.jar",
        "license": "All Rights Reserved unless stated otherwise. Distribution permission is given to FeedTheBeast and CurseForge for use in modpacks",
        "package": "com.unrealdinnerbone.jags",
        "version": "21.1.0"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "com.unrealdinnerbone.jags.data.LootModifierGenerator"
        ],
        "net.minecraft.world.item.Item": [
          "com.unrealdinnerbone.jags.item.GrassSeed"
        ]
      },
      "summary": [
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Localization",
        "Uses Data Generators"
      ]
    },
    "jamlib": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "io.github.jamalam360.jamlib.mixin.event.ConnectionMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "jamlib$callDisconnectEvent",
              "raw": "jamlib$callDisconnectEvent(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/network/PacketListener;onDisconnect(Lnet/minecraft/network/DisconnectionDetails;)V}]"
            }
          },
          {
            "class": "io.github.jamalam360.jamlib.mixin.event.ConnectionMixin",
            "method": {
              "argTypes": [
                "io.netty.channel.ChannelHandlerContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "jamlib$callDisconnectEvent",
              "raw": "jamlib$callDisconnectEvent(Lio/netty/channel/ChannelHandlerContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "io.github.jamalam360.jamlib.mixin.event.ClientPacketListenerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundLoginPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "jamlib$joinServer",
              "raw": "jamlib$joinServer(Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "architectury": "[13.0.6,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21,)"
      },
      "info": {
        "authors": "Jamalam",
        "classes": "36",
        "description": "The platform-agnostic library used in all of JamCore's mods",
        "displayName": "JamLib",
        "file": "jamlib-neoforge-1.2.2-build.2+1.21.1.jar",
        "license": "MIT",
        "package": "io.github.jamalam360.jamlib",
        "version": "1.2.2-build.2+1.21.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "io.github.jamalam360.jamlib.config.gui.SelectConfigScreen",
          "io.github.jamalam360.jamlib.config.gui.ConfigScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.network.Connection"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Localization",
        "Modifies Methods"
      ]
    },
    "jei": {
      "dependencies": {
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.118-beta,)"
      },
      "info": {
        "authors": "mezz",
        "classes": "879",
        "description": "JEI is an item and recipe viewing mod for Minecraft, built from the ground up for stability and performance.\n",
        "displayName": "Just Enough Items",
        "file": "jei-1.21.1-neoforge-19.21.0.247.jar",
        "license": "The MIT License (MIT)",
        "package": "mezz.jei",
        "version": "19.21.0.247"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "mezz.jei.gui.recipes.RecipesGui"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "mezz.jei.library.render.batch.LimitedQuadItemModel"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "mezz.jei.library.plugins.vanilla.crafting.JeiShapedRecipe"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom GUI Screens",
        "Custom Recipe Types",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "jumbofurnace": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.23-beta,)"
      },
      "info": {
        "authors": "Commoble",
        "classes": "40",
        "description": "Jumbo Furnaces are created when a player places 27 standard furnaces in a 3x3x3 cubes. Jumbo furnaces can smelt multiple items at once.\n",
        "displayName": "Jumbo Furnace",
        "file": "jumbofurnace-1.21.1-5.0.0.7.jar",
        "license": "MIT License",
        "package": "net.commoble.jumbofurnace",
        "version": "5.0.0.7"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.commoble.jumbofurnace.client.JumboFurnaceScreen"
        ],
        "net.minecraft.world.item.Item": [
          "net.commoble.jumbofurnace.jumbo_furnace.JumboFurnaceItem",
          "net.commoble.jumbofurnace.JumboFurnace$1"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "net.commoble.jumbofurnace.recipes.JumboFurnaceRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.commoble.jumbofurnace.jumbo_furnace.JumboFurnaceBlock"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "justaraftmod": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.1.1,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "com.mrbysco.justaraftmod.config.RaftConfig#onLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "com.mrbysco.justaraftmod.config.RaftConfig#onFileChange"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.mrbysco.justaraftmod.datagen.RaftDatagen#gatherData"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "com.mrbysco.justaraftmod.init.RaftTab#addTabContents"
        ]
      },
      "info": {
        "authors": "Mrbysco, ShyNieke",
        "classes": "20",
        "description": "Adding rafts since 2017\n",
        "displayName": "Just A Raft Mod",
        "file": "JustARaftMod-1.21.1-7.0.3.jar",
        "license": "MIT",
        "package": "com.mrbysco.justaraftmod",
        "version": "7.0.3"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "com.mrbysco.justaraftmod.datagen.RaftDatagen$ItemModels",
          "com.mrbysco.justaraftmod.datagen.RaftDatagen$Language",
          "com.mrbysco.justaraftmod.datagen.RaftDatagen$Recipes",
          "com.mrbysco.justaraftmod.datagen.RaftDatagen$RaftBlockTags",
          "com.mrbysco.justaraftmod.datagen.RaftDatagen$RaftEntityTags",
          "com.mrbysco.justaraftmod.datagen.RaftDatagen$RaftItemTags"
        ],
        "net.minecraft.world.entity.Entity": [
          "com.mrbysco.justaraftmod.entities.Raft"
        ],
        "net.minecraft.world.item.Item": [
          "com.mrbysco.justaraftmod.items.RaftItem"
        ]
      },
      "summary": [
        "Auto-reloads Config Files",
        "Custom Advancements",
        "Custom Entities",
        "Custom Item Models",
        "Custom Items",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "justdirethings": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.direwolf20.justdirethings.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onIsInWall",
              "raw": "onIsInWall(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.direwolf20.justdirethings.mixin.CollisionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.world.phys.AABB",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetBlockCollisions",
              "raw": "onGetBlockCollisions(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.direwolf20.justdirethings.mixin.CollisionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.world.phys.AABB",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "collidesWithSuffocatingBlock",
              "raw": "collidesWithSuffocatingBlock(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.138,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "com.direwolf20.justdirethings.client.events.EventKeyInput#handleEventInput"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "com.direwolf20.justdirethings.setup.ClientSetup#onRegisterLayers"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.direwolf20.justdirethings.setup.ClientSetup#registerRenderers"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "com.direwolf20.justdirethings.client.events.EventKeyInput#onKeyInput"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseButton$Post": [
          "com.direwolf20.justdirethings.client.events.EventKeyInput#onMouseInput"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "com.direwolf20.justdirethings.setup.ClientSetup#mrl"
        ],
        "net.neoforged.neoforge.client.event.RecipesUpdatedEvent": [
          "com.direwolf20.justdirethings.common.events.EntityEvents#onClientRecipesUpdated"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "com.direwolf20.justdirethings.setup.ClientSetup#itemColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "com.direwolf20.justdirethings.setup.ClientSetup#registerOverlays"
        ],
        "net.neoforged.neoforge.client.event.RegisterItemDecorationsEvent": [
          "com.direwolf20.justdirethings.setup.ClientSetup#registerItemDecorators"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "com.direwolf20.justdirethings.client.KeyBindings#registerKeyMappings"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.direwolf20.justdirethings.setup.ClientSetup#registerScreens"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "com.direwolf20.justdirethings.client.particles.ParticleRenderDispatcher#registerProviders"
        ],
        "net.neoforged.neoforge.client.event.RegisterShadersEvent": [
          "com.direwolf20.justdirethings.setup.ClientSetup#registerShaders"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "com.direwolf20.justdirethings.client.events.RenderHighlight#renderBlockHighlight"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.direwolf20.justdirethings.client.events.RenderLevelLast#renderWorldLastEvent"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "com.direwolf20.justdirethings.setup.ClientSetup#onRegisterClientExtensions"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.direwolf20.justdirethings.datagen.DataGenerators#gatherData"
        ],
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "com.direwolf20.justdirethings.common.events.EntityEvents#onReloadServerResources"
        ],
        "net.neoforged.neoforge.event.ItemAttributeModifierEvent": [
          "com.direwolf20.justdirethings.common.events.PlayerEvents#ItemAttributes"
        ],
        "net.neoforged.neoforge.event.entity.EntityInvulnerabilityCheckEvent": [
          "com.direwolf20.justdirethings.common.events.LivingEntityEvents#blockDamage"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "com.direwolf20.justdirethings.common.events.LivingEntityEvents#blockJoin"
        ],
        "net.neoforged.neoforge.event.entity.living.ArmorHurtEvent": [
          "com.direwolf20.justdirethings.common.events.LivingEntityEvents#onArmorDamage"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingChangeTargetEvent": [
          "com.direwolf20.justdirethings.common.events.LivingEntityEvents#changeTargets"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "com.direwolf20.justdirethings.common.events.LivingEntityEvents#onPlayerDeath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "com.direwolf20.justdirethings.common.events.LivingEntityEvents#LivingDropsEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent$Start": [
          "com.direwolf20.justdirethings.common.events.EntityEvents#livingUseItem"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEvent$LivingJumpEvent": [
          "com.direwolf20.justdirethings.common.events.LivingEntityEvents#jumpEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingFallEvent": [
          "com.direwolf20.justdirethings.common.events.LivingEntityEvents#LivingFallDamage"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerDestroyItemEvent": [
          "com.direwolf20.justdirethings.common.events.PlayerEvents#PlayerDestroyItem"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$BreakSpeed": [
          "com.direwolf20.justdirethings.common.events.PlayerEvents#BreakSpeed"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$Clone": [
          "com.direwolf20.justdirethings.common.events.LivingEntityEvents#onPlayerClone"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "com.direwolf20.justdirethings.common.events.PlayerEvents#CancelEntityInteraction"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickBlock": [
          "com.direwolf20.justdirethings.client.events.PlayerEvents#LeftClickBlock"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickEmpty": [
          "com.direwolf20.justdirethings.client.events.PlayerEvents#LeftClickEmpty"
        ],
        "net.neoforged.neoforge.event.level.BlockDropsEvent": [
          "com.direwolf20.justdirethings.common.events.BlockEvents#BlockDrops"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BlockToolModificationEvent": [
          "com.direwolf20.justdirethings.common.events.BlockEvents#BlockToolModificationEvent"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BreakEvent": [
          "com.direwolf20.justdirethings.common.events.BlockEvents#BlockBreakEvent"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "com.direwolf20.justdirethings.common.events.EntityEvents#onServerStarted"
        ],
        "net.neoforged.neoforge.event.tick.EntityTickEvent$Post": [
          "com.direwolf20.justdirethings.common.events.EntityEvents#entityTick"
        ]
      },
      "info": {
        "authors": "Direwolf20",
        "classes": "618",
        "description": "Just some things that Direwolf20 wanted.",
        "displayName": "Just Dire Things",
        "file": "justdirethings-1.5.4.jar",
        "license": "MIT",
        "package": "com.direwolf20.justdirethings",
        "version": "1.5.4"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.direwolf20.justdirethings.client.screens.ToolSettingScreen",
          "com.direwolf20.justdirethings.client.screens.SensorT2Screen",
          "com.direwolf20.justdirethings.client.screens.SensorT1Screen",
          "com.direwolf20.justdirethings.client.screens.PotionCanisterScreen",
          "com.direwolf20.justdirethings.client.screens.PocketGeneratorScreen",
          "com.direwolf20.justdirethings.client.screens.PlayerAccessorScreen",
          "com.direwolf20.justdirethings.client.screens.ParadoxMachineScreen",
          "com.direwolf20.justdirethings.client.screens.MachineSettingsCopierScreen",
          "com.direwolf20.justdirethings.client.screens.ItemCollectorScreen",
          "com.direwolf20.justdirethings.client.screens.InventoryHolderScreen",
          "com.direwolf20.justdirethings.client.screens.GeneratorT1Screen",
          "com.direwolf20.justdirethings.client.screens.GeneratorFluidT1Screen",
          "com.direwolf20.justdirethings.client.screens.FuelCanisterScreen",
          "com.direwolf20.justdirethings.client.screens.FluidPlacerT2Screen",
          "com.direwolf20.justdirethings.client.screens.FluidPlacerT1Screen",
          "com.direwolf20.justdirethings.client.screens.FluidCollectorT2Screen",
          "com.direwolf20.justdirethings.client.screens.FluidCollectorT1Screen",
          "com.direwolf20.justdirethings.client.screens.ExperienceHolderScreen",
          "com.direwolf20.justdirethings.client.screens.EnergyTransmitterScreen",
          "com.direwolf20.justdirethings.client.screens.DropperT2Screen",
          "com.direwolf20.justdirethings.client.screens.DropperT1Screen",
          "com.direwolf20.justdirethings.client.screens.ClickerT2Screen",
          "com.direwolf20.justdirethings.client.screens.ClickerT1Screen",
          "com.direwolf20.justdirethings.client.screens.BlockSwapperT2Screen",
          "com.direwolf20.justdirethings.client.screens.BlockSwapperT1Screen",
          "com.direwolf20.justdirethings.client.screens.BlockPlacerT2Screen",
          "com.direwolf20.justdirethings.client.screens.BlockPlacerT1Screen",
          "com.direwolf20.justdirethings.client.screens.BlockBreakerT2Screen",
          "com.direwolf20.justdirethings.client.screens.BlockBreakerT1Screen",
          "com.direwolf20.justdirethings.client.screens.basescreens.BaseScreen",
          "com.direwolf20.justdirethings.client.screens.basescreens.BaseMachineScreen",
          "com.direwolf20.justdirethings.client.screens.AdvPortalRadialMenu",
          "com.direwolf20.justdirethings.client.screens.AdvPortalEditMenu"
        ],
        "net.minecraft.client.particle.Particle": [
          "com.direwolf20.justdirethings.client.particles.paradoxparticle.ParadoxParticle",
          "com.direwolf20.justdirethings.client.particles.itemparticle.ItemFlowParticle",
          "com.direwolf20.justdirethings.client.particles.gooexplodeparticle.GooExplodeParticle",
          "com.direwolf20.justdirethings.client.particles.glitterparticle.GlitterParticle",
          "com.direwolf20.justdirethings.client.particles.alwaysvisibleparticle.AlwaysVisibleParticle"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "com.direwolf20.justdirethings.client.renderers.JustDireItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.direwolf20.justdirethings.client.blockentityrenders.SensorT2BER",
          "com.direwolf20.justdirethings.client.blockentityrenders.ParadoxMachineBER",
          "com.direwolf20.justdirethings.client.blockentityrenders.ItemCollectorRenderer",
          "com.direwolf20.justdirethings.client.blockentityrenders.InventoryHolderBER",
          "com.direwolf20.justdirethings.client.blockentityrenders.gooblocks.GooBlockRender_Tier4",
          "com.direwolf20.justdirethings.client.blockentityrenders.gooblocks.GooBlockRender_Tier3",
          "com.direwolf20.justdirethings.client.blockentityrenders.gooblocks.GooBlockRender_Tier2",
          "com.direwolf20.justdirethings.client.blockentityrenders.gooblocks.GooBlockRender_Tier1",
          "com.direwolf20.justdirethings.client.blockentityrenders.FluidPlacerT2BER",
          "com.direwolf20.justdirethings.client.blockentityrenders.FluidCollectorT2BER",
          "com.direwolf20.justdirethings.client.blockentityrenders.ExperienceHolderBER",
          "com.direwolf20.justdirethings.client.blockentityrenders.EnergyTransmitterRenderer",
          "com.direwolf20.justdirethings.client.blockentityrenders.EclipseGateRenderer",
          "com.direwolf20.justdirethings.client.blockentityrenders.DropperT2BER",
          "com.direwolf20.justdirethings.client.blockentityrenders.ClickerT2BER",
          "com.direwolf20.justdirethings.client.blockentityrenders.BlockSwapperT2BER",
          "com.direwolf20.justdirethings.client.blockentityrenders.BlockPlacerT2BER",
          "com.direwolf20.justdirethings.client.blockentityrenders.BlockBreakerT2BER",
          "com.direwolf20.justdirethings.client.blockentityrenders.baseber.GooBlockRender_Base",
          "com.direwolf20.justdirethings.client.blockentityrenders.baseber.AreaAffectingBER"
        ],
        "net.minecraft.data.DataProvider": [
          "com.direwolf20.justdirethings.datagen.JustDireSounds",
          "com.direwolf20.justdirethings.datagen.JustDireRecipes",
          "com.direwolf20.justdirethings.datagen.JustDireLanguageProvider",
          "com.direwolf20.justdirethings.datagen.JustDireItemTags",
          "com.direwolf20.justdirethings.datagen.JustDireItemModels",
          "com.direwolf20.justdirethings.datagen.JustDireFluidTags",
          "com.direwolf20.justdirethings.datagen.JustDireEntityTags",
          "com.direwolf20.justdirethings.datagen.JustDireDataMaps",
          "com.direwolf20.justdirethings.datagen.JustDireBlockTags",
          "com.direwolf20.justdirethings.datagen.JustDireBlockStates",
          "com.direwolf20.justdirethings.datagen.JustDireBiomeTags"
        ],
        "net.minecraft.world.entity.Entity": [
          "com.direwolf20.justdirethings.util.UsefulFakePlayer",
          "com.direwolf20.justdirethings.common.entities.TimeWandEntity",
          "com.direwolf20.justdirethings.common.entities.PortalProjectile",
          "com.direwolf20.justdirethings.common.entities.PortalEntity",
          "com.direwolf20.justdirethings.common.entities.ParadoxEntity",
          "com.direwolf20.justdirethings.common.entities.JustDireArrow",
          "com.direwolf20.justdirethings.common.entities.JustDireAreaEffectCloud",
          "com.direwolf20.justdirethings.common.entities.DecoyEntity",
          "com.direwolf20.justdirethings.common.entities.CreatureCatcherEntity",
          "com.direwolf20.justdirethings.client.blockentityrenders.InventoryHolderBER$1"
        ],
        "net.minecraft.world.item.Item": [
          "com.direwolf20.justdirethings.common.items.VoidshiftWand",
          "com.direwolf20.justdirethings.common.items.TotemOfDeathRecall",
          "com.direwolf20.justdirethings.common.items.tools.FerricoreSword",
          "com.direwolf20.justdirethings.common.items.tools.FerricoreShovel",
          "com.direwolf20.justdirethings.common.items.tools.FerricorePickaxe",
          "com.direwolf20.justdirethings.common.items.tools.FerricoreHoe",
          "com.direwolf20.justdirethings.common.items.tools.FerricoreBow",
          "com.direwolf20.justdirethings.common.items.tools.FerricoreAxe",
          "com.direwolf20.justdirethings.common.items.tools.EclipseAlloySword",
          "com.direwolf20.justdirethings.common.items.tools.EclipseAlloyShovel",
          "com.direwolf20.justdirethings.common.items.tools.EclipseAlloyPickaxe",
          "com.direwolf20.justdirethings.common.items.tools.EclipseAlloyPaxel",
          "com.direwolf20.justdirethings.common.items.tools.EclipseAlloyHoe",
          "com.direwolf20.justdirethings.common.items.tools.EclipseAlloyBow",
          "com.direwolf20.justdirethings.common.items.tools.EclipseAlloyAxe",
          "com.direwolf20.justdirethings.common.items.tools.CelestigemSword",
          "com.direwolf20.justdirethings.common.items.tools.CelestigemShovel",
          "com.direwolf20.justdirethings.common.items.tools.CelestigemPickaxe",
          "com.direwolf20.justdirethings.common.items.tools.CelestigemPaxel",
          "com.direwolf20.justdirethings.common.items.tools.CelestigemHoe",
          "com.direwolf20.justdirethings.common.items.tools.CelestigemBow",
          "com.direwolf20.justdirethings.common.items.tools.CelestigemAxe",
          "com.direwolf20.justdirethings.common.items.tools.BlazegoldSword",
          "com.direwolf20.justdirethings.common.items.tools.BlazegoldShovel",
          "com.direwolf20.justdirethings.common.items.tools.BlazegoldPickaxe",
          "com.direwolf20.justdirethings.common.items.tools.BlazegoldHoe",
          "com.direwolf20.justdirethings.common.items.tools.BlazegoldBow",
          "com.direwolf20.justdirethings.common.items.tools.BlazegoldAxe",
          "com.direwolf20.justdirethings.common.items.tools.basetools.BaseSword",
          "com.direwolf20.justdirethings.common.items.tools.basetools.BaseShovel",
          "com.direwolf20.justdirethings.common.items.tools.basetools.BasePickaxe",
          "com.direwolf20.justdirethings.common.items.tools.basetools.BasePaxel",
          "com.direwolf20.justdirethings.common.items.tools.basetools.BaseHoe",
          "com.direwolf20.justdirethings.common.items.tools.basetools.BaseBow",
          "com.direwolf20.justdirethings.common.items.tools.basetools.BaseAxe",
          "com.direwolf20.justdirethings.common.items.TimeWand",
          "com.direwolf20.justdirethings.common.items.resources.TimeCrystal",
          "com.direwolf20.justdirethings.common.items.resources.RawFerricore",
          "com.direwolf20.justdirethings.common.items.resources.RawEclipseAlloy",
          "com.direwolf20.justdirethings.common.items.resources.RawBlazegold",
          "com.direwolf20.justdirethings.common.items.resources.FerricoreIngot",
          "com.direwolf20.justdirethings.common.items.resources.EclipseAlloyIngot",
          "com.direwolf20.justdirethings.common.items.resources.Coal_T4",
          "com.direwolf20.justdirethings.common.items.resources.Coal_T3",
          "com.direwolf20.justdirethings.common.items.resources.Coal_T2",
          "com.direwolf20.justdirethings.common.items.resources.Coal_T1",
          "com.direwolf20.justdirethings.common.items.resources.Celestigem",
          "com.direwolf20.justdirethings.common.items.resources.BlazeGoldIngot",
          "com.direwolf20.justdirethings.common.items.PotionCanister",
          "com.direwolf20.justdirethings.common.items.PortalGunV2",
          "com.direwolf20.justdirethings.common.items.PortalGun",
          "com.direwolf20.justdirethings.common.items.PortalFluidCatalyst",
          "com.direwolf20.justdirethings.common.items.PolymorphicWandV2",
          "com.direwolf20.justdirethings.common.items.PolymorphicWand",
          "com.direwolf20.justdirethings.common.items.PolymorphicCatalyst",
          "com.direwolf20.justdirethings.common.items.PocketGenerator",
          "com.direwolf20.justdirethings.common.items.MachineSettingsCopier",
          "com.direwolf20.justdirethings.common.items.interfaces.BaseToggleableTool",
          "com.direwolf20.justdirethings.common.items.interfaces.BasePoweredItem",
          "com.direwolf20.justdirethings.common.items.FuelCanister",
          "com.direwolf20.justdirethings.common.items.FluidCanister",
          "com.direwolf20.justdirethings.common.items.FerricoreWrench",
          "com.direwolf20.justdirethings.common.items.EclipsegateWand",
          "com.direwolf20.justdirethings.common.items.CreatureCatcher",
          "com.direwolf20.justdirethings.common.items.BlazejetWand",
          "com.direwolf20.justdirethings.common.items.armors.FerricoreLeggings",
          "com.direwolf20.justdirethings.common.items.armors.FerricoreHelmet",
          "com.direwolf20.justdirethings.common.items.armors.FerricoreChestplate",
          "com.direwolf20.justdirethings.common.items.armors.FerricoreBoots",
          "com.direwolf20.justdirethings.common.items.armors.EclipseAlloyLeggings",
          "com.direwolf20.justdirethings.common.items.armors.EclipseAlloyHelmet",
          "com.direwolf20.justdirethings.common.items.armors.EclipseAlloyChestplate",
          "com.direwolf20.justdirethings.common.items.armors.EclipseAlloyBoots",
          "com.direwolf20.justdirethings.common.items.armors.CelestigemLeggings",
          "com.direwolf20.justdirethings.common.items.armors.CelestigemHelmet",
          "com.direwolf20.justdirethings.common.items.armors.CelestigemChestplate",
          "com.direwolf20.justdirethings.common.items.armors.CelestigemBoots",
          "com.direwolf20.justdirethings.common.items.armors.BlazegoldLeggings",
          "com.direwolf20.justdirethings.common.items.armors.BlazegoldHelmet",
          "com.direwolf20.justdirethings.common.items.armors.BlazegoldChestplate",
          "com.direwolf20.justdirethings.common.items.armors.BlazegoldBoots",
          "com.direwolf20.justdirethings.common.items.armors.basearmors.BaseLeggings",
          "com.direwolf20.justdirethings.common.items.armors.basearmors.BaseHelmet",
          "com.direwolf20.justdirethings.common.items.armors.basearmors.BaseChestplate",
          "com.direwolf20.justdirethings.common.items.armors.basearmors.BaseBoots",
          "com.direwolf20.justdirethings.common.items.abilityupgrades.UpgradeTemplate",
          "com.direwolf20.justdirethings.common.items.abilityupgrades.UpgradeBlank",
          "com.direwolf20.justdirethings.common.items.abilityupgrades.Upgrade",
          "com.direwolf20.justdirethings.common.blocks.gooblocks.GooBlock_Item"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.direwolf20.justdirethings.datagen.recipes.PaxelRecipe",
          "com.direwolf20.justdirethings.datagen.recipes.GooSpreadRecipeTag",
          "com.direwolf20.justdirethings.datagen.recipes.GooSpreadRecipe",
          "com.direwolf20.justdirethings.datagen.recipes.FluidDropRecipe",
          "com.direwolf20.justdirethings.datagen.recipes.AbilityRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.direwolf20.justdirethings.common.fluids.xpfluid.XPFluidBlock",
          "com.direwolf20.justdirethings.common.fluids.unstableportalfluid.UnstablePortalFluidBlock",
          "com.direwolf20.justdirethings.common.fluids.unrefinedt4fuel.UnrefinedT4FuelBlock",
          "com.direwolf20.justdirethings.common.fluids.unrefinedt3fuel.UnrefinedT3FuelBlock",
          "com.direwolf20.justdirethings.common.fluids.unrefinedt2fuel.UnrefinedT2FuelBlock",
          "com.direwolf20.justdirethings.common.fluids.timefluid.TimeFluidBlock",
          "com.direwolf20.justdirethings.common.fluids.refinedt4fuel.RefinedT4FuelBlock",
          "com.direwolf20.justdirethings.common.fluids.refinedt3fuel.RefinedT3FuelBlock",
          "com.direwolf20.justdirethings.common.fluids.refinedt2fuel.RefinedT2FuelBlock",
          "com.direwolf20.justdirethings.common.fluids.portalfluid.PortalFluidBlock",
          "com.direwolf20.justdirethings.common.fluids.polymorphicfluid.PolymorphicFluidBlock",
          "com.direwolf20.justdirethings.common.blocks.soil.GooSoilTier4",
          "com.direwolf20.justdirethings.common.blocks.soil.GooSoilTier3",
          "com.direwolf20.justdirethings.common.blocks.soil.GooSoilTier2",
          "com.direwolf20.justdirethings.common.blocks.soil.GooSoilTier1",
          "com.direwolf20.justdirethings.common.blocks.soil.GooSoilBase",
          "com.direwolf20.justdirethings.common.blocks.SensorT2",
          "com.direwolf20.justdirethings.common.blocks.SensorT1",
          "com.direwolf20.justdirethings.common.blocks.resources.TimeCrystalCluster",
          "com.direwolf20.justdirethings.common.blocks.resources.TimeCrystalBuddingBlock",
          "com.direwolf20.justdirethings.common.blocks.resources.TimeCrystalBlock",
          "com.direwolf20.justdirethings.common.blocks.resources.RawFerricoreOre",
          "com.direwolf20.justdirethings.common.blocks.resources.RawEclipseAlloyOre",
          "com.direwolf20.justdirethings.common.blocks.resources.RawCoal_T4",
          "com.direwolf20.justdirethings.common.blocks.resources.RawCoal_T3",
          "com.direwolf20.justdirethings.common.blocks.resources.RawCoal_T2",
          "com.direwolf20.justdirethings.common.blocks.resources.RawCoal_T1",
          "com.direwolf20.justdirethings.common.blocks.resources.RawCelestigemOre",
          "com.direwolf20.justdirethings.common.blocks.resources.RawBlazegoldOre",
          "com.direwolf20.justdirethings.common.blocks.resources.FerricoreBlock",
          "com.direwolf20.justdirethings.common.blocks.resources.EclipseAlloyBlock",
          "com.direwolf20.justdirethings.common.blocks.resources.CoalBlock_T4",
          "com.direwolf20.justdirethings.common.blocks.resources.CoalBlock_T3",
          "com.direwolf20.justdirethings.common.blocks.resources.CoalBlock_T2",
          "com.direwolf20.justdirethings.common.blocks.resources.CoalBlock_T1",
          "com.direwolf20.justdirethings.common.blocks.resources.CharcoalBlock",
          "com.direwolf20.justdirethings.common.blocks.resources.CelestigemBlock",
          "com.direwolf20.justdirethings.common.blocks.resources.BlazeGoldBlock",
          "com.direwolf20.justdirethings.common.blocks.PlayerAccessor",
          "com.direwolf20.justdirethings.common.blocks.ParadoxMachine",
          "com.direwolf20.justdirethings.common.blocks.ItemCollector",
          "com.direwolf20.justdirethings.common.blocks.InventoryHolder",
          "com.direwolf20.justdirethings.common.blocks.gooblocks.GooPatternBlock",
          "com.direwolf20.justdirethings.common.blocks.gooblocks.GooBlock_Tier4",
          "com.direwolf20.justdirethings.common.blocks.gooblocks.GooBlock_Tier3",
          "com.direwolf20.justdirethings.common.blocks.gooblocks.GooBlock_Tier2",
          "com.direwolf20.justdirethings.common.blocks.gooblocks.GooBlock_Tier1",
          "com.direwolf20.justdirethings.common.blocks.gooblocks.GooBlock_Base",
          "com.direwolf20.justdirethings.common.blocks.GeneratorT1",
          "com.direwolf20.justdirethings.common.blocks.GeneratorFluidT1",
          "com.direwolf20.justdirethings.common.blocks.FluidPlacerT2",
          "com.direwolf20.justdirethings.common.blocks.FluidPlacerT1",
          "com.direwolf20.justdirethings.common.blocks.FluidCollectorT2",
          "com.direwolf20.justdirethings.common.blocks.FluidCollectorT1",
          "com.direwolf20.justdirethings.common.blocks.ExperienceHolder",
          "com.direwolf20.justdirethings.common.blocks.EnergyTransmitter",
          "com.direwolf20.justdirethings.common.blocks.EclipseGateBlock",
          "com.direwolf20.justdirethings.common.blocks.DropperT2",
          "com.direwolf20.justdirethings.common.blocks.DropperT1",
          "com.direwolf20.justdirethings.common.blocks.ClickerT2",
          "com.direwolf20.justdirethings.common.blocks.ClickerT1",
          "com.direwolf20.justdirethings.common.blocks.BlockSwapperT2",
          "com.direwolf20.justdirethings.common.blocks.BlockSwapperT1",
          "com.direwolf20.justdirethings.common.blocks.BlockPlacerT2",
          "com.direwolf20.justdirethings.common.blocks.BlockPlacerT1",
          "com.direwolf20.justdirethings.common.blocks.BlockBreakerT2",
          "com.direwolf20.justdirethings.common.blocks.BlockBreakerT1",
          "com.direwolf20.justdirethings.common.blocks.baseblocks.BaseRawOre",
          "com.direwolf20.justdirethings.common.blocks.baseblocks.BaseMachineBlock"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.LightTexture",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.level.CollisionGetter"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Loot Tables",
        "Custom Particles",
        "Custom Recipe Types",
        "Custom Shaders",
        "Custom Tag Assignments",
        "Handles Left Clicks with Empty Hands (Client-side)",
        "Listens to Entity AI Target Change Events",
        "Listens to Entity Death Events",
        "Listens to Entity Drop Events",
        "Listens to Entity Fall Events",
        "Listens to Entity Interaction Events",
        "Listens to Entity Join World Events",
        "Listens to Entity Jump Events",
        "Listens to Left Click Block Events",
        "Listens to Recipe Updates",
        "Listens to Server Started Events",
        "Localization",
        "Modifies Block Breaking",
        "Modifies Block Breaking Speed",
        "Modifies Item Attributes",
        "Modifies Methods",
        "Modifies World Rendering",
        "Patchouli Guide Book",
        "Runs Client Tick Logic",
        "Runs Entity Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "justzoom": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "de.keksuccino.justzoom.mixin.mixins.common.client.MixinPauseScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "return_init_JustZoom",
              "raw": "return_init_JustZoom(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.justzoom.mixin.mixins.common.client.MixinMouseHandler",
            "method": {
              "argTypes": [
                "long",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "before_isSpectator_in_onScroll_JustZoom",
              "raw": "before_isSpectator_in_onScroll_JustZoom(JDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/player/LocalPlayer;isSpectator()Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.justzoom.mixin.mixins.common.client.MixinGameRenderer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "head_tickFov_JustZoom",
              "raw": "head_tickFov_JustZoom(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.justzoom.mixin.mixins.common.client.MixinGameRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.Camera",
                "float",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "return_getFov_JustZoom",
              "raw": "return_getFov_JustZoom(Lnet/minecraft/client/Camera;FZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.justzoom.mixin.mixins.common.client.MixinCameraType",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "head_isFirstPerson_JustZoom",
              "raw": "head_isFirstPerson_JustZoom(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "de.keksuccino.justzoom.mixin.mixins.common.client.MixinAbstractClientPlayer",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "head_getFieldOfViewModifier_JustZoom",
              "raw": "head_getFieldOfViewModifier_JustZoom(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "konkrete": "[1.9.0,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.20-beta,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "de.keksuccino.justzoom.JustZoomNeoForge#onRegisterKeybinds"
        ]
      },
      "info": {
        "authors": "Keksuccino",
        "classes": "24",
        "description": "Zoom by pressing a hotkey and adjust the zoom factor with your mouse wheel!",
        "displayName": "Just Zoom",
        "file": "justzoom_neoforge_2.0.0_MC_1.21-1.21.1.jar",
        "license": "DSMSLv2 (DON'T SNATCH MA STUFF LICENSE v2)",
        "package": "de.keksuccino.justzoom",
        "version": "2.0.0"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "de.keksuccino.justzoom.mixin.mixins.common.client.MixinPauseScreen",
          "de.keksuccino.justzoom.OptionsScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.CameraType",
        "net.minecraft.client.MouseHandler",
        "net.minecraft.client.gui.screens.PauseScreen",
        "net.minecraft.client.player.AbstractClientPlayer",
        "net.minecraft.client.renderer.GameRenderer"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom Key Mappings",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "konkrete": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "de.keksuccino.konkrete.mixin.mixins.client.MixinMouseHandler",
            "method": {
              "argTypes": [
                "long",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "headOnPress_Konkrete",
              "raw": "headOnPress_Konkrete(JIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.konkrete.mixin.mixins.client.MixinMouseHandler",
            "method": {
              "argTypes": [
                "long",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeOnScroll_Konkrete",
              "raw": "beforeOnScroll_Konkrete(JDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.konkrete.mixin.mixins.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "headResizeDisplay_Konkrete",
              "raw": "headResizeDisplay_Konkrete(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.konkrete.mixin.mixins.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "headSetScreen_Konkrete",
              "raw": "headSetScreen_Konkrete(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.konkrete.mixin.mixins.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeScreenAdded_Konkrete",
              "raw": "beforeScreenAdded_Konkrete(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;added()V}]"
            }
          },
          {
            "class": "de.keksuccino.konkrete.mixin.mixins.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeTick_Konkrete",
              "raw": "beforeTick_Konkrete(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "de.keksuccino.konkrete.mixin.mixins.client.MixinMinecraft",
            "method": {
              "argTypes": [
                "net.minecraft.client.main.GameConfig",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterConstruct_Konkrete",
              "raw": "afterConstruct_Konkrete(Lnet/minecraft/client/main/GameConfig;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.konkrete.mixin.mixins.client.MixinKeyboardHandler",
            "method": {
              "argTypes": [
                "long",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeCharTyped_Konkrete",
              "raw": "beforeCharTyped_Konkrete(JIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;wrapScreenError(Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V}]"
            }
          },
          {
            "class": "de.keksuccino.konkrete.mixin.mixins.client.MixinKeyboardHandler",
            "method": {
              "argTypes": [
                "long",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterScreenKeyPress_Konkrete",
              "raw": "afterScreenKeyPress_Konkrete(JIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;wrapScreenError(Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.20-beta,)"
      },
      "info": {
        "authors": "Keksuccino",
        "classes": "411",
        "description": "Library for Keksuccino's mods.",
        "displayName": "Konkrete",
        "file": "konkrete_neoforge_1.9.9_MC_1.21.jar",
        "license": "Apache-2.0",
        "package": "de.keksuccino.konkrete",
        "version": "1.9.9"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "de.keksuccino.konkrete.gui.screens.ConfigScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.KeyboardHandler",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.MouseHandler",
        "net.minecraft.client.gui.components.AbstractWidget",
        "net.minecraft.client.gui.components.EditBox",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.client.player.LocalPlayer",
        "net.minecraft.client.renderer.GameRenderer",
        "net.minecraft.client.renderer.texture.DynamicTexture",
        "net.minecraft.client.resources.language.ClientLanguage"
      ],
      "summary": [
        "Custom GUI Screens",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "kotlinforforge": {
      "dependencies": {
        "minecraft": "[1.20.6,1.22)"
      },
      "info": {
        "authors": "thedarkcolour",
        "classes": "2",
        "description": "Makes Kotlin forge-friendly\n",
        "displayName": "Kotlin For Forge",
        "file": "kotlinforforge-5.7.0-all.jar",
        "jarInJar": "kffmod-5.7.0.jar",
        "license": "LGPL",
        "loader": "kotlinforforge",
        "package": "thedarkcolour.kotlinforforge.test",
        "version": "5.7.0"
      }
    },
    "kubejs": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.TagLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "customTags",
              "raw": "customTags(Lnet/minecraft/server/packs/resources/ResourceManager;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.WorldOpenFlowsMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "printServerLogWarning",
              "raw": "printServerLogWarning(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/server/WorldLoader$PackConfig;createResourceManager()Lcom/mojang/datafixers/util/Pair;}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.TagEmptyConditionMixin",
            "method": {
              "argTypes": [
                "net.neoforged.neoforge.common.conditions.ICondition$IContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "kjs$test",
              "raw": "kjs$test(Lnet/neoforged/neoforge/common/conditions/ICondition$IContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.FallingBlockEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.Block",
                "net.minecraft.core.BlockPos",
                "boolean",
                "boolean",
                "double",
                "net.minecraft.world.level.block.state.BlockState"
              ],
              "name": "kjs$fallEnd",
              "raw": "kjs$fallEnd(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;ZZDLnet/minecraft/world/level/block/state/BlockState;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/server/level/ChunkMap;broadcast(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.FallingBlockEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.entity.item.FallingBlockEntity"
              ],
              "name": "kjs$fallStart",
              "raw": "kjs$fallStart(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/world/level/Level;setBlock(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.mod.REITooltipMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "kjs$modId",
              "raw": "kjs$modId(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.mod.ModNameTooltipMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "kjs$modId",
              "raw": "kjs$modId(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.BlockMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "kjs$getName",
              "raw": "kjs$getName(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.WorldLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.WorldLoader$InitConfig",
                "net.minecraft.server.WorldLoader$WorldDataSupplier",
                "net.minecraft.server.WorldLoader$ResultFactory",
                "java.util.concurrent.Executor",
                "java.util.concurrent.Executor",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "com.mojang.datafixers.util.Pair",
                "net.minecraft.server.packs.resources.CloseableResourceManager",
                "net.minecraft.core.LayeredRegistryAccess",
                "net.minecraft.core.LayeredRegistryAccess",
                "net.minecraft.core.RegistryAccess$Frozen",
                "net.minecraft.core.RegistryAccess$Frozen"
              ],
              "name": "kjs$load2",
              "raw": "kjs$load2(Lnet/minecraft/server/WorldLoader$InitConfig;Lnet/minecraft/server/WorldLoader$WorldDataSupplier;Lnet/minecraft/server/WorldLoader$ResultFactory;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lcom/mojang/datafixers/util/Pair;Lnet/minecraft/server/packs/resources/CloseableResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/core/RegistryAccess$Frozen;Lnet/minecraft/core/RegistryAccess$Frozen;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lcom/mojang/datafixers/util/Pair;getFirst()Ljava/lang/Object;}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.WorldLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.WorldLoader$InitConfig",
                "net.minecraft.server.WorldLoader$WorldDataSupplier",
                "net.minecraft.server.WorldLoader$ResultFactory",
                "java.util.concurrent.Executor",
                "java.util.concurrent.Executor",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "com.mojang.datafixers.util.Pair",
                "net.minecraft.server.packs.resources.CloseableResourceManager",
                "net.minecraft.core.LayeredRegistryAccess",
                "net.minecraft.core.LayeredRegistryAccess",
                "net.minecraft.core.RegistryAccess$Frozen"
              ],
              "name": "kjs$load",
              "raw": "kjs$load(Lnet/minecraft/server/WorldLoader$InitConfig;Lnet/minecraft/server/WorldLoader$WorldDataSupplier;Lnet/minecraft/server/WorldLoader$ResultFactory;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lcom/mojang/datafixers/util/Pair;Lnet/minecraft/server/packs/resources/CloseableResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/core/RegistryAccess$Frozen;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/resources/RegistryDataLoader;load(Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess;Ljava/util/List;)Lnet/minecraft/core/RegistryAccess$Frozen;}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.food.FoodProperties",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "foodEaten",
              "raw": "foodEaten(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/food/FoodProperties;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ReloadableServerResourcesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.core.LayeredRegistryAccess",
                "net.minecraft.world.flag.FeatureFlagSet",
                "net.minecraft.commands.Commands$CommandSelection",
                "int",
                "java.util.concurrent.Executor",
                "java.util.concurrent.Executor",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "injectKubeJSPacks",
              "raw": "injectKubeJSPacks(Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/commands/Commands$CommandSelection;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ReloadableServerResourcesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.RegistryAccess$Frozen",
                "net.minecraft.world.flag.FeatureFlagSet",
                "net.minecraft.commands.Commands$CommandSelection",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lnet/minecraft/core/RegistryAccess$Frozen;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/commands/Commands$CommandSelection;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "boolean",
                "net.minecraft.client.Minecraft$GameLoadCookie",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "kjs$endResourceReload",
              "raw": "kjs$endResourceReload(ZLnet/minecraft/client/Minecraft$GameLoadCookie;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$postTickClient",
              "raw": "kjs$postTickClient(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$startUseItem",
              "raw": "kjs$startUseItem(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/Minecraft;startUseItem()V, ordinal=0}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "kjs$startAttack",
              "raw": "kjs$startAttack(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/player/LocalPlayer;swing(Lnet/minecraft/world/InteractionHand;)V}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "kjs$createTitle",
              "raw": "kjs$createTitle(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$init",
              "raw": "kjs$init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.BlockStateBaseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.core.BlockPos",
                "net.minecraft.util.RandomSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$onRandomTick",
              "raw": "kjs$onRandomTick(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "addServerData",
              "raw": "addServerData(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.util.Map$Entry",
                "java.lang.RuntimeException"
              ],
              "name": "catchFailingRecipes",
              "raw": "catchFailingRecipes(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/util/Map$Entry;Ljava/lang/RuntimeException;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lorg/slf4j/Logger;error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "customRecipesHead",
              "raw": "customRecipesHead(Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.entity.LivingEntity",
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "hurtEnemy",
              "raw": "hurtEnemy(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.level.Level",
                "net.minecraft.world.entity.LivingEntity",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "releaseUsing",
              "raw": "releaseUsing(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.level.Level",
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "finishUsingItem",
              "raw": "finishUsingItem(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.InteractionHand",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "use",
              "raw": "use(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getName",
              "raw": "getName(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getUseAnimation",
              "raw": "getUseAnimation(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getUseDuration",
              "raw": "getUseDuration(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getBarColor",
              "raw": "getBarColor(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getBarWidth",
              "raw": "getBarWidth(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "isBarVisible",
              "raw": "isBarVisible(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.Item$TooltipContext",
                "java.util.List",
                "net.minecraft.world.item.TooltipFlag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "appendHoverText",
              "raw": "appendHoverText(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item$TooltipContext;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "isFoil",
              "raw": "isFoil(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.TagManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.PreparableReloadListener$PreparationBarrier",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "net.minecraft.util.profiling.ProfilerFiller",
                "java.util.concurrent.Executor",
                "java.util.concurrent.Executor",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "kjs$reload",
              "raw": "kjs$reload(Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/core/RegistryAccess;registries()Ljava/util/stream/Stream;}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.TagManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "java.util.concurrent.Executor",
                "net.minecraft.core.RegistryAccess$RegistryEntry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.resources.ResourceKey",
                "net.minecraft.core.Registry",
                "net.minecraft.tags.TagLoader"
              ],
              "name": "kjs$saveRegistryToTagLoader",
              "raw": "kjs$saveRegistryToTagLoader(Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;Lnet/minecraft/core/RegistryAccess$RegistryEntry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Registry;Lnet/minecraft/tags/TagLoader;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BY], by=2, value=INVOKE, target=Lnet/minecraft/tags/TagLoader;<init>(Ljava/util/function/Function;Ljava/lang/String;)V}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.BlockBehaviourMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.core.BlockPos",
                "net.minecraft.util.RandomSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRandomTick",
              "raw": "onRandomTick(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.LootDataTypeMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "com.mojang.serialization.DynamicOps",
                "java.lang.Object",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "kjs$exportLootTable",
              "raw": "kjs$exportLootTable(Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "loadKJS",
              "raw": "loadKJS(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "saveKJS",
              "raw": "saveKJS(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.LevelRendererMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "net.minecraft.world.entity.Entity",
                "double",
                "double",
                "double",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$highlightBlock",
              "raw": "kjs$highlightBlock(Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.LevelRendererMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$resizePostChains",
              "raw": "kjs$resizePostChains(IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.LevelRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$loadPostChains",
              "raw": "kjs$loadPostChains(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.ResourceKeyMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$getKeyStackTraces",
              "raw": "kjs$getKeyStackTraces(Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "java.util.Collection",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "kjs$endResourceReload",
              "raw": "kjs$endResourceReload(Ljava/util/Collection;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "java.util.function.BooleanSupplier",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$postTickServer",
              "raw": "kjs$postTickServer(Ljava/util/function/BooleanSupplier;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$init",
              "raw": "kjs$init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.Font",
                "java.lang.String",
                "int",
                "int",
                "int",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "kjs$drawString",
              "raw": "kjs$drawString(Lnet/minecraft/client/gui/Font;Ljava/lang/String;IIIZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.Font",
                "net.minecraft.world.item.ItemStack",
                "int",
                "int",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$afterDrawSize",
              "raw": "kjs$afterDrawSize(Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/GuiGraphics;drawString(Lnet/minecraft/client/gui/Font;Ljava/lang/String;IIIZ)I}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.Font",
                "net.minecraft.world.item.ItemStack",
                "int",
                "int",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$beforeDrawSize",
              "raw": "kjs$beforeDrawSize(Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/gui/GuiGraphics;drawString(Lnet/minecraft/client/gui/Font;Ljava/lang/String;IIIZ)I}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.UtilMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "shutdownExecutorsKJS",
              "raw": "shutdownExecutorsKJS(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.OptionsMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "loadKJS",
              "raw": "loadKJS(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.GameRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kjs$checkEntityPostEffect",
              "raw": "kjs$checkEntityPostEffect(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "dev.latvian.mods.kubejs.core.mixin.KeyboardHandlerMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "reloadResources",
              "raw": "reloadResources(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/Minecraft;reloadResourcePacks()Ljava/util/concurrent/CompletableFuture;}]"
            }
          }
        ]
      },
      "dependencies": {
        "emi": "[1.1,)",
        "jei": "[19.0.0.11,)",
        "neoforge": "[21.0.148,)",
        "rhino": "[2101.2.5-build.54,)",
        "roughlyenoughitems": "[16.0.729,)"
      },
      "events": {
        "dev.latvian.mods.kubejs.recipe.viewer.server.RemoteRecipeViewerDataUpdatedEvent": [
          "dev.latvian.mods.kubejs.integration.jei.KubeJSJEIPlugin#loadRemote",
          "dev.latvian.mods.kubejs.integration.rei.KubeJSREIPlugin#loadRemote"
        ],
        "dev.latvian.mods.kubejs.stages.StageCreationEvent": [
          "dev.latvian.mods.kubejs.integration.gamestages.GameStagesIntegration#override"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "dev.latvian.mods.kubejs.client.KubeJSModClientEventHandler#setupClient"
        ],
        "net.neoforged.fml.event.lifecycle.FMLLoadCompleteEvent": [
          "dev.latvian.mods.kubejs.KubeJSModEventHandler#loadComplete"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "dev.latvian.mods.kubejs.KubeJSModEventHandler#registerCapabilities"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingIn": [
          "dev.latvian.mods.kubejs.client.KubeJSGameClientEventHandler#loggingIn"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingOut": [
          "dev.latvian.mods.kubejs.client.KubeJSGameClientEventHandler#loggingOut"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "dev.latvian.mods.kubejs.client.KubeJSGameClientEventHandler#clientTick"
        ],
        "net.neoforged.neoforge.client.event.CustomizeGuiOverlayEvent$DebugText": [
          "dev.latvian.mods.kubejs.client.KubeJSGameClientEventHandler#debugInfo"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "dev.latvian.mods.kubejs.client.KubeJSModClientEventHandler#registerRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "dev.latvian.mods.kubejs.client.KubeJSModClientEventHandler#blockColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "dev.latvian.mods.kubejs.client.KubeJSModClientEventHandler#itemColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "dev.latvian.mods.kubejs.client.KubeJSModClientEventHandler#registerKeyMappings"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "dev.latvian.mods.kubejs.client.KubeJSModClientEventHandler#registerMenuScreens"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "dev.latvian.mods.kubejs.client.KubeJSModClientEventHandler#registerParticleProviders"
        ],
        "net.neoforged.neoforge.client.event.RegisterShadersEvent": [
          "dev.latvian.mods.kubejs.client.KubeJSModClientEventHandler#registerCoreShaders"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiEvent$Post": [
          "dev.latvian.mods.kubejs.client.KubeJSGameClientEventHandler#hudPostDraw"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "dev.latvian.mods.kubejs.client.KubeJSGameClientEventHandler#worldRender"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "dev.latvian.mods.kubejs.client.KubeJSGameClientEventHandler#guiPostInit"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Opening": [
          "dev.latvian.mods.kubejs.client.KubeJSGameClientEventHandler#openScreenEvent"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Render$Post": [
          "dev.latvian.mods.kubejs.client.KubeJSGameClientEventHandler#screenPostDraw"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "dev.latvian.mods.kubejs.client.KubeJSModClientEventHandler#registerClientExtensions"
        ],
        "net.neoforged.neoforge.event.AddPackFindersEvent": [
          "dev.latvian.mods.kubejs.client.KubeJSModClientEventHandler#addClientPacks"
        ],
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "dev.latvian.mods.kubejs.server.KubeJSServerEventHandler#addReloadListeners"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "dev.latvian.mods.kubejs.KubeJSModEventHandler#creativeTab"
        ],
        "net.neoforged.neoforge.event.CommandEvent": [
          "dev.latvian.mods.kubejs.server.KubeJSServerEventHandler#command"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "dev.latvian.mods.kubejs.player.KubeJSPlayerEventHandler#datapackSync"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "dev.latvian.mods.kubejs.server.KubeJSServerEventHandler#registerCommands"
        ],
        "net.neoforged.neoforge.event.ServerChatEvent": [
          "dev.latvian.mods.kubejs.player.KubeJSPlayerEventHandler#chatReceived",
          "dev.latvian.mods.kubejs.player.KubeJSPlayerEventHandler#chatDecorate"
        ],
        "net.neoforged.neoforge.event.TagsUpdatedEvent": [
          "dev.latvian.mods.kubejs.client.KubeJSGameClientEventHandler#tagsUpdated"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeModificationEvent": [
          "dev.latvian.mods.kubejs.registry.RegistryEventHandler#registerEntityAttributes"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "dev.latvian.mods.kubejs.entity.KubeJSEntityEventHandler#entitySpawned"
        ],
        "net.neoforged.neoforge.event.entity.item.ItemTossEvent": [
          "dev.latvian.mods.kubejs.item.KubeJSItemEventHandler#itemDrop"
        ],
        "net.neoforged.neoforge.event.entity.living.FinalizeSpawnEvent": [
          "dev.latvian.mods.kubejs.entity.KubeJSEntityEventHandler#checkSpawn"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Post": [
          "dev.latvian.mods.kubejs.entity.KubeJSEntityEventHandler#afterLivingHurt"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Pre": [
          "dev.latvian.mods.kubejs.entity.KubeJSEntityEventHandler#beforeLivingHurt"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "dev.latvian.mods.kubejs.entity.KubeJSEntityEventHandler#livingDeath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "dev.latvian.mods.kubejs.entity.KubeJSEntityEventHandler#livingDrops"
        ],
        "net.neoforged.neoforge.event.entity.player.AdvancementEvent$AdvancementEarnEvent": [
          "dev.latvian.mods.kubejs.player.KubeJSPlayerEventHandler#advancement"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Post": [
          "dev.latvian.mods.kubejs.item.KubeJSItemEventHandler#itemPickupPost"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Pre": [
          "dev.latvian.mods.kubejs.item.KubeJSItemEventHandler#itemPickupPre"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "dev.latvian.mods.kubejs.client.KubeJSGameClientEventHandler#onItemTooltip"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerContainerEvent$Close": [
          "dev.latvian.mods.kubejs.player.KubeJSPlayerEventHandler#inventoryClosed"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerContainerEvent$Open": [
          "dev.latvian.mods.kubejs.player.KubeJSPlayerEventHandler#inventoryOpened"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerDestroyItemEvent": [
          "dev.latvian.mods.kubejs.item.KubeJSItemEventHandler#itemDestroyed"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$Clone": [
          "dev.latvian.mods.kubejs.player.KubeJSPlayerEventHandler#cloned"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$ItemCraftedEvent": [
          "dev.latvian.mods.kubejs.item.KubeJSItemEventHandler#crafted"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$ItemSmeltedEvent": [
          "dev.latvian.mods.kubejs.item.KubeJSItemEventHandler#smelted"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "dev.latvian.mods.kubejs.player.KubeJSPlayerEventHandler#loggedIn"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "dev.latvian.mods.kubejs.player.KubeJSPlayerEventHandler#loggedOut"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerRespawnEvent": [
          "dev.latvian.mods.kubejs.player.KubeJSPlayerEventHandler#respawn"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "dev.latvian.mods.kubejs.item.KubeJSItemEventHandler#entityInteract"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickBlock": [
          "dev.latvian.mods.kubejs.block.KubeJSBlockEventHandler#leftClick"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickEmpty": [
          "dev.latvian.mods.kubejs.item.KubeJSItemEventHandler#leftClickEmpty"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "dev.latvian.mods.kubejs.block.KubeJSBlockEventHandler#rightClick"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "dev.latvian.mods.kubejs.item.KubeJSItemEventHandler#rightClick"
        ],
        "net.neoforged.neoforge.event.level.BlockDropsEvent": [
          "dev.latvian.mods.kubejs.block.KubeJSBlockEventHandler#drops"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BreakEvent": [
          "dev.latvian.mods.kubejs.block.KubeJSBlockEventHandler#blockBreak"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$EntityPlaceEvent": [
          "dev.latvian.mods.kubejs.block.KubeJSBlockEventHandler#blockPlace"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$FarmlandTrampleEvent": [
          "dev.latvian.mods.kubejs.block.KubeJSBlockEventHandler#farmlandTrample"
        ],
        "net.neoforged.neoforge.event.level.ExplosionEvent$Detonate": [
          "dev.latvian.mods.kubejs.level.KubeJSWorldEventHandler#detonateExplosion"
        ],
        "net.neoforged.neoforge.event.level.ExplosionEvent$Start": [
          "dev.latvian.mods.kubejs.level.KubeJSWorldEventHandler#preExplosion"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Load": [
          "dev.latvian.mods.kubejs.server.KubeJSServerEventHandler#serverLevelLoaded",
          "dev.latvian.mods.kubejs.level.KubeJSWorldEventHandler#serverLevelLoad"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Save": [
          "dev.latvian.mods.kubejs.server.KubeJSServerEventHandler#serverLevelSaved"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "dev.latvian.mods.kubejs.level.KubeJSWorldEventHandler#serverLevelUnload"
        ],
        "net.neoforged.neoforge.event.server.ServerAboutToStartEvent": [
          "dev.latvian.mods.kubejs.server.KubeJSServerEventHandler#serverBeforeStart"
        ],
        "net.neoforged.neoforge.event.server.ServerStartingEvent": [
          "dev.latvian.mods.kubejs.server.KubeJSServerEventHandler#serverStarting"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppedEvent": [
          "dev.latvian.mods.kubejs.server.KubeJSServerEventHandler#serverStopped"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppingEvent": [
          "dev.latvian.mods.kubejs.server.KubeJSServerEventHandler#serverStopping"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Post": [
          "dev.latvian.mods.kubejs.level.KubeJSWorldEventHandler#serverTickEvent"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "dev.latvian.mods.kubejs.player.KubeJSPlayerEventHandler#tick"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "dev.latvian.mods.kubejs.net.KubeJSNet#register"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "dev.latvian.mods.kubejs.registry.RegistryEventHandler#registerAll"
        ]
      },
      "info": {
        "authors": "latvian.dev",
        "classes": "992",
        "description": "Customize your modpack or server with JavaScript!\n",
        "displayName": "KubeJS",
        "file": "kubejs-neoforge-2101.7.1-build.181.jar",
        "license": "GNU LGPLv3",
        "package": "dev.latvian.mods.kubejs",
        "url": "https://kubejs.com",
        "version": "2101.7.1-build.181"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.latvian.mods.kubejs.client.KubeJSErrorScreen",
          "dev.latvian.mods.kubejs.client.editor.SelectItemStackScreen",
          "dev.latvian.mods.kubejs.gui.KubeJSScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "dev.latvian.mods.kubejs.client.KubeAnimatedParticle"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "dev.latvian.mods.kubejs.misc.BasicMobEffect"
        ],
        "net.minecraft.world.entity.Entity": [
          "dev.latvian.mods.kubejs.core.mixin.AbstractClientPlayerMixin",
          "dev.latvian.mods.kubejs.core.mixin.ServerPlayerMixin",
          "dev.latvian.mods.kubejs.core.mixin.LocalPlayerMixin"
        ],
        "net.minecraft.world.item.Item": [
          "dev.latvian.mods.kubejs.item.custom.ShearsItemBuilder$ShearsItemKJS",
          "dev.latvian.mods.kubejs.block.SeedItemBuilder$SeedItemJS"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "dev.latvian.mods.kubejs.recipe.special.KubeJSCraftingRecipe",
          "dev.latvian.mods.kubejs.recipe.special.ShapedKubeJSRecipe",
          "dev.latvian.mods.kubejs.recipe.special.ShapelessKubeJSRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "dev.latvian.mods.kubejs.block.custom.BasicCropBlockJS",
          "dev.latvian.mods.kubejs.block.custom.BasicBlockJS$WithEntity",
          "dev.latvian.mods.kubejs.block.custom.BasicBlockJS",
          "dev.latvian.mods.kubejs.block.custom.HorizontalDirectionalBlockBuilder$WithEntity",
          "dev.latvian.mods.kubejs.block.custom.HorizontalDirectionalBlockBuilder$HorizontalDirectionalBlockJS",
          "dev.latvian.mods.kubejs.block.custom.FallingBlockBuilder$KubeJSFallingBlock",
          "dev.latvian.mods.kubejs.block.DetectorBlock"
        ]
      },
      "modifies": [
        "com.mojang.blaze3d.platform.Window",
        "me.shedaniel.rei.impl.client.ClientHelperImpl",
        "mezz.modnametooltip.TooltipEventHandler",
        "net.minecraft.ChatFormatting",
        "net.minecraft.Util",
        "net.minecraft.advancements.AdvancementNode",
        "net.minecraft.client.KeyboardHandler",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.Options",
        "net.minecraft.client.gui.GuiGraphics",
        "net.minecraft.client.gui.components.AbstractSelectionList",
        "net.minecraft.client.gui.screens.LoadingOverlay",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.client.gui.screens.inventory.CreativeModeInventoryScreen",
        "net.minecraft.client.gui.screens.worldselection.WorldOpenFlows",
        "net.minecraft.client.multiplayer.ClientLevel",
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.client.player.AbstractClientPlayer",
        "net.minecraft.client.player.LocalPlayer",
        "net.minecraft.client.renderer.GameRenderer",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.commands.CommandSourceStack",
        "net.minecraft.core.Direction",
        "net.minecraft.core.component.DataComponents",
        "net.minecraft.nbt.CollectionTag",
        "net.minecraft.nbt.CompoundTag",
        "net.minecraft.nbt.NumericTag",
        "net.minecraft.nbt.StringTag",
        "net.minecraft.network.chat.ClickEvent",
        "net.minecraft.network.chat.MutableComponent",
        "net.minecraft.network.chat.TextColor",
        "net.minecraft.resources.ResourceKey",
        "net.minecraft.resources.ResourceLocation",
        "net.minecraft.server.MinecraftServer",
        "net.minecraft.server.ReloadableServerResources",
        "net.minecraft.server.WorldLoader",
        "net.minecraft.server.WorldLoader$PackConfig",
        "net.minecraft.server.level.ServerLevel",
        "net.minecraft.server.level.ServerPlayer",
        "net.minecraft.server.players.PlayerList",
        "net.minecraft.tags.TagLoader",
        "net.minecraft.tags.TagManager",
        "net.minecraft.util.StringRepresentable",
        "net.minecraft.world.Container",
        "net.minecraft.world.damagesource.DamageSource",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.EntityType",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.decoration.ItemFrame",
        "net.minecraft.world.entity.item.FallingBlockEntity",
        "net.minecraft.world.entity.item.ItemEntity",
        "net.minecraft.world.entity.player.Player",
        "net.minecraft.world.entity.projectile.FireworkRocketEntity",
        "net.minecraft.world.inventory.MenuType",
        "net.minecraft.world.item.CreativeModeTab",
        "net.minecraft.world.item.DyeColor",
        "net.minecraft.world.item.Item",
        "net.minecraft.world.item.ItemStack",
        "net.minecraft.world.item.crafting.Ingredient",
        "net.minecraft.world.item.crafting.RecipeHolder",
        "net.minecraft.world.item.crafting.RecipeInput",
        "net.minecraft.world.item.crafting.RecipeManager",
        "net.minecraft.world.level.GameRules",
        "net.minecraft.world.level.Level",
        "net.minecraft.world.level.block.Block",
        "net.minecraft.world.level.block.state.BlockBehaviour",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "net.minecraft.world.level.material.Fluid",
        "net.minecraft.world.level.storage.loot.LootDataType",
        "net.neoforged.neoforge.common.MutableDataComponentHolder",
        "net.neoforged.neoforge.common.conditions.TagEmptyCondition",
        "net.neoforged.neoforge.common.crafting.DifferenceIngredient",
        "net.neoforged.neoforge.common.crafting.SizedIngredient",
        "net.neoforged.neoforge.fluids.FluidStack",
        "net.neoforged.neoforge.fluids.crafting.FluidIngredient",
        "net.neoforged.neoforge.fluids.crafting.SizedFluidIngredient",
        "net.neoforged.neoforge.items.ComponentItemHandler",
        "net.neoforged.neoforge.items.IItemHandler",
        "net.neoforged.neoforge.items.ItemStackHandler"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Adds Resource/Data Pack Finders",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Data Pack Sync",
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Network Packets",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Recipe Types",
        "Custom Server Commands",
        "Custom Shaders",
        "Handles Explosion Detonation",
        "Handles Left Clicks with Empty Hands (Client-side)",
        "Handles Right Clicks with Items",
        "Has Capability Providers",
        "Listens to Entity Death Events",
        "Listens to Entity Drop Events",
        "Listens to Entity Interaction Events",
        "Listens to Entity Join World Events",
        "Listens to GUI Open Events",
        "Listens to Item Crafting Events",
        "Listens to Item Pickup Events",
        "Listens to Item Smelting Events",
        "Listens to Left Click Block Events",
        "Listens to Player Login Events",
        "Listens to Player Logout Events",
        "Listens to Right Click Block Events",
        "Listens to Server About to Start Events",
        "Listens to Server Chat Messages",
        "Listens to Server Starting Events",
        "Listens to Server Stopped Events",
        "Listens to Server Stopping Events",
        "Listens to Tag Updates",
        "Modifies Block Breaking",
        "Modifies Block Placement",
        "Modifies Entity Spawning",
        "Modifies Explosions",
        "Modifies Farmland Trampling",
        "Modifies GUI Rendering",
        "Modifies Methods",
        "Modifies World Rendering",
        "Runs Client Tick Logic",
        "Runs Player Tick Logic",
        "Runs World Tick Logic",
        "Uses Access Transformers"
      ]
    },
    "kubejs_actuallyadditions": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.almostreliable.kubeaa.mixin.BlockDisplayStandMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.InteractionHand",
                "net.minecraft.world.phys.BlockHitResult",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "de.ellpeck.actuallyadditions.mod.tile.TileEntityInventoryBase"
              ],
              "name": "onItemInsert",
              "raw": "onItemInsert(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lde/ellpeck/actuallyadditions/mod/tile/TileEntityInventoryBase;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/player/Player;isCreative()Z}]"
            }
          },
          {
            "class": "com.almostreliable.kubeaa.mixin.TileEntityEmpowererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.block.entity.BlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.item.crafting.RecipeHolder"
              ],
              "name": "onResultSet",
              "raw": "onResultSet(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/item/crafting/RecipeHolder;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lde/ellpeck/actuallyadditions/mod/util/ItemStackHandlerAA;setStackInSlot(ILnet/minecraft/world/item/ItemStack;)V}]"
            }
          }
        ]
      },
      "dependencies": {
        "actuallyadditions": "[1.3.12,)",
        "kubejs": "[2101.7.1-build.181,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.71,)"
      },
      "info": {
        "authors": "Almost Reliable",
        "classes": "36",
        "description": "KubeJS integration for Actually Additions.",
        "displayName": "KubeJS Actually Additions",
        "file": "kubejs_actuallyadditions-neoforge-1.21.1-0.2.2.jar",
        "license": "All Rights Reserved",
        "package": "com.almostreliable.kubeaa",
        "version": "1.21.1-0.2.2"
      },
      "modifies": [
        "de.ellpeck.actuallyadditions.mod.blocks.BlockDisplayStand",
        "de.ellpeck.actuallyadditions.mod.crafting.CrushingRecipe$Serializer",
        "de.ellpeck.actuallyadditions.mod.tile.TileEntityEmpowerer"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "kubejs_enderio": {
      "dependencies": {
        "enderio_conduits": "[7.1.0-alpha,)",
        "enderio_conduits_modded": "[7.1.0-alpha,)",
        "enderio_machines": "[7.1.0-alpha,)",
        "kubejs": "[2101.7.1-build.181,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.71,)"
      },
      "info": {
        "authors": "Almost Reliable",
        "classes": "36",
        "description": "KubeJS integration for EnderIO.",
        "displayName": "KubeJS EnderIO",
        "file": "kubejs_enderio-neoforge-1.21.1-0.7.1.jar",
        "license": "All Rights Reserved",
        "package": "com.almostreliable.kubeio",
        "version": "1.21.1-0.7.1"
      },
      "modifies": [
        "com.enderio.machines.common.blocks.alloy.AlloySmeltingRecipe",
        "com.enderio.machines.common.blocks.sag_mill.SagMillingRecipe$OutputItem",
        "net.minecraft.world.item.crafting.Ingredient",
        "net.minecraft.world.item.crafting.Ingredient$TagValue"
      ]
    },
    "kubejs_mekanism": {
      "dependencies": {
        "kubejs": "[2101.7.0-build.166,)",
        "mekanism": "[1.21.1-10.7.7.64,)"
      },
      "info": {
        "authors": "latvian.dev",
        "classes": "15",
        "description": "KubeJS Mekanism integration\n",
        "displayName": "KubeJS Mekanism",
        "file": "kubejs-mekanism-neoforge-2101.1.6-build.6.jar",
        "license": "MIT",
        "package": "dev.latvian.mods.kubejs.mekanism",
        "url": "https://kubejs.com",
        "version": "2101.1.6-build.6"
      }
    },
    "kubeutils": {
      "dependencies": {
        "kubejs": "[2101.7.0-build.132,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1,)"
      },
      "events": {
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": [
          "pro.mikey.kubeutils.events.OnPlayerLoginEvent#onPlayerChangeDimension"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "pro.mikey.kubeutils.events.OnPlayerLoginEvent#onPlayerLoggedIn"
        ]
      },
      "info": {
        "authors": "ErrorMikey",
        "classes": "15",
        "description": "Provides extra methods and tools to the standard KubeJS mod\n",
        "displayName": "KubeUtils",
        "file": "kube-utils-21.1.1.jar",
        "license": "GPL3",
        "package": "pro.mikey.kubeutils",
        "version": "21.1.1"
      },
      "summary": [
        "Listens to Dimension Change Events",
        "Listens to Player Login Events",
        "Uses Access Transformers"
      ]
    },
    "kuma_api": {
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21-beta,)"
      },
      "info": {
        "authors": "BlayTheNinth",
        "classes": "27",
        "description": "Processes main resources.",
        "displayName": "KumaAPI",
        "file": "balm-neoforge-1.21.1-21.0.26.jar",
        "jarInJar": "kuma-api-neoforge-21.0.5-SNAPSHOT.jar",
        "license": "MIT",
        "package": "net.blay09.mods.kuma",
        "version": "21.0.5-SNAPSHOT"
      },
      "modifies": [
        "net.minecraft.client.KeyMapping"
      ]
    },
    "laserio": {
      "dependencies": {
        "mekanism": "[10.7,)",
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.CustomizeGuiOverlayEvent$DebugText": [
          "com.direwolf20.laserio.client.events.ClientEvents#renderGUIOverlay"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.direwolf20.laserio.setup.ClientSetup#registerRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientTooltipComponentFactoriesEvent": [
          "com.direwolf20.laserio.setup.ClientSetup#registerTooltipFactory"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "com.direwolf20.laserio.setup.ClientSetup#blockColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "com.direwolf20.laserio.setup.ClientSetup#itemColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.direwolf20.laserio.setup.ClientSetup#registerScreens"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "com.direwolf20.laserio.client.particles.ParticleRenderDispatcher#registerProviders"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.direwolf20.laserio.client.events.ClientEvents#renderWorldLastEvent"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.direwolf20.laserio.datagen.DataGenerators#gatherData"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "com.direwolf20.laserio.common.events.ServerTickHandler#handleTickEndEvent"
        ]
      },
      "info": {
        "authors": "Direwolf20, ErrorMikey",
        "classes": "211",
        "description": "    Can't have DireWire without Wire!\n",
        "displayName": "LaserIO",
        "file": "laserio-1.9.11.jar",
        "license": "MIT (https://github.com/Direwolf20-MC/LaserIO/blob/main/LICENSE.txt)",
        "package": "com.direwolf20.laserio.util",
        "version": "1.9.11"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.direwolf20.laserio.client.screens.LaserNodeSettingsScreen",
          "com.direwolf20.laserio.client.screens.LaserNodeScreen",
          "com.direwolf20.laserio.client.screens.FilterTagScreen",
          "com.direwolf20.laserio.client.screens.FilterNBTScreen",
          "com.direwolf20.laserio.client.screens.FilterCountScreen",
          "com.direwolf20.laserio.client.screens.FilterBasicScreen",
          "com.direwolf20.laserio.client.screens.CardRedstoneScreen",
          "com.direwolf20.laserio.client.screens.CardItemScreen",
          "com.direwolf20.laserio.client.screens.CardHolderScreen",
          "com.direwolf20.laserio.client.screens.CardFluidScreen",
          "com.direwolf20.laserio.client.screens.CardEnergyScreen",
          "com.direwolf20.laserio.client.screens.CardChemicalScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "com.direwolf20.laserio.integration.mekanism.client.chemicalparticle.ChemicalFlowParticle",
          "com.direwolf20.laserio.client.particles.itemparticle.ItemFlowParticle",
          "com.direwolf20.laserio.client.particles.fluidparticle.FluidFlowParticle"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.direwolf20.laserio.client.blockentityrenders.LaserNodeBERender",
          "com.direwolf20.laserio.client.blockentityrenders.LaserConnectorBERender",
          "com.direwolf20.laserio.client.blockentityrenders.LaserConnectorAdvBERender",
          "com.direwolf20.laserio.client.blockentityrenders.baseberender.BaseLaserBERender"
        ],
        "net.minecraft.data.DataProvider": [
          "com.direwolf20.laserio.datagen.LaserIORecipes",
          "com.direwolf20.laserio.datagen.LaserIOLanguageProvider",
          "com.direwolf20.laserio.datagen.LaserIOItemTags",
          "com.direwolf20.laserio.datagen.LaserIOItemModels",
          "com.direwolf20.laserio.datagen.LaserIOBlockTags",
          "com.direwolf20.laserio.datagen.LaserIOBlockStates"
        ],
        "net.minecraft.world.item.Item": [
          "com.direwolf20.laserio.integration.mekanism.CardChemical",
          "com.direwolf20.laserio.common.items.upgrades.OverclockerNode",
          "com.direwolf20.laserio.common.items.upgrades.OverclockerCard",
          "com.direwolf20.laserio.common.items.LogicChipRaw",
          "com.direwolf20.laserio.common.items.LogicChip",
          "com.direwolf20.laserio.common.items.LaserWrench",
          "com.direwolf20.laserio.common.items.filters.FilterTag",
          "com.direwolf20.laserio.common.items.filters.FilterNBT",
          "com.direwolf20.laserio.common.items.filters.FilterMod",
          "com.direwolf20.laserio.common.items.filters.FilterCount",
          "com.direwolf20.laserio.common.items.filters.FilterBasic",
          "com.direwolf20.laserio.common.items.filters.BaseFilter",
          "com.direwolf20.laserio.common.items.cards.CardRedstone",
          "com.direwolf20.laserio.common.items.cards.CardItem",
          "com.direwolf20.laserio.common.items.cards.CardFluid",
          "com.direwolf20.laserio.common.items.cards.CardEnergy",
          "com.direwolf20.laserio.common.items.cards.BaseCard",
          "com.direwolf20.laserio.common.items.CardHolder",
          "com.direwolf20.laserio.common.items.CardCloner"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.direwolf20.laserio.datagen.customrecipes.CardClearRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.direwolf20.laserio.common.blocks.LaserNode",
          "com.direwolf20.laserio.common.blocks.LaserConnectorAdv",
          "com.direwolf20.laserio.common.blocks.LaserConnector",
          "com.direwolf20.laserio.common.blocks.baseblocks.BaseLaserBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Particles",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Custom Tooltip Components",
        "Localization",
        "Modifies World Rendering",
        "Patchouli Guide Book",
        "Runs Server Tick Logic",
        "Uses Data Generators"
      ]
    },
    "legendarytooltips": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.anthonyhilyard.legendarytooltips.mixin.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.Font",
                "java.util.List",
                "int",
                "int",
                "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "centerTitle",
              "raw": "centerTitle(Lnet/minecraft/client/gui/Font;Ljava/util/List;IILnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/List;size()I, ordinal=0}]"
            }
          }
        ]
      },
      "dependencies": {
        "equipmentcompare": "[1.3.0,)",
        "iceberg": "[1.2.3,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21,)",
        "prism": "[1.0.8,)"
      },
      "info": {
        "authors": "Grend",
        "classes": "15",
        "description": "Gives rare items a fancy tooltip and adds additional tooltip configuration options.",
        "displayName": "Legendary Tooltips",
        "file": "LegendaryTooltips-1.21-neoforge-1.4.11.jar",
        "license": "CC BY-NC-ND 4.0",
        "package": "com.anthonyhilyard.legendarytooltips",
        "updateUrl": "https://mc-update-check.anthonyhilyard.com/532127",
        "version": "1.4.11"
      },
      "modifies": [
        "net.minecraft.client.gui.GuiGraphics"
      ],
      "summary": [
        "Custom GUI Textures",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "lionfishapi": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.github.L_Ender.lionfishapi.mixin.client.ItemBlockRenderTypesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.material.FluidState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "lionfish_getFluidRenderLayer",
              "raw": "lionfish_getFluidRenderLayer(Lnet/minecraft/world/level/material/FluidState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "1.21",
        "neoforge": "[21.0.102-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.github.L_Ender.lionfishapi.client.event.ClientSetUp#clientSetup"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "com.github.L_Ender.lionfishapi.client.event.ClientSetUp$ForgeEvents#showOptifineWarning"
        ]
      },
      "info": {
        "authors": "L_Ender",
        "classes": "51",
        "description": "",
        "displayName": "lionfishapi",
        "file": "lionfishapi-2.6.jar",
        "license": "All Rights Reserved",
        "package": "com.github.L_Ender.lionfishapi",
        "version": "2.6"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.github.L_Ender.lionfishapi.client.screen.OptifineWarningScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.ItemBlockRenderTypes",
        "net.minecraft.world.entity.Entity"
      ],
      "summary": [
        "Custom GUI Screens",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "logbegone": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.2)",
        "neoforge": "[21.0.16-beta,)"
      },
      "info": {
        "authors": "AzureDoom",
        "classes": "7",
        "description": "I hate log spam, don't you?",
        "displayName": "Log Begone",
        "file": "logbegone-neoforge-1.21.1-1.0.3.jar",
        "license": "GPLv3",
        "package": "mod.azure.logbegone",
        "version": "1.0.3"
      },
      "summary": [
        "Uses Access Transformers"
      ]
    },
    "lootintegrations": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.lootintegrations.mixin.LootTableLootIntegrations",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.storage.loot.LootContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "on",
              "raw": "on(Lnet/minecraft/world/level/storage/loot/LootContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.lootintegrations.mixin.ExplorationFunctionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.level.storage.loot.LootContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onMapExlporation",
              "raw": "onMapExlporation(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "cupboard": "[1.21-1.4,)",
        "minecraft": "[1.21,1.30)"
      },
      "events": {
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "com.lootintegrations.event.EventHandler#onAddReloadListenerEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.lootintegrations.event.EventHandler#playerClickBlockEvent"
        ]
      },
      "info": {
        "authors": "Someaddon",
        "classes": "9",
        "description": "Integrates items from loottables into other loottables for intermod loot compatibility\n",
        "displayName": "Lootintegrations mod",
        "file": "lootintegrations-1.21-4.0.jar",
        "license": "ARR",
        "package": "com.lootintegrations",
        "version": "4.0"
      },
      "modifies": [
        "net.minecraft.world.level.storage.loot.LootContext",
        "net.minecraft.world.level.storage.loot.LootTable",
        "net.minecraft.world.level.storage.loot.functions.ExplorationMapFunction"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Custom Loot Tables",
        "Listens to Right Click Block Events",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "lootintegrations_cataclysm": {
      "dependencies": {
        "lootintegrations": "[0,)"
      },
      "info": {
        "authors": "Someaddon",
        "classes": "0",
        "description": "lootintegrations_cataclysm mod\n",
        "displayName": "lootintegrations_cataclysm mod",
        "file": "lootintegrations_cataclysm-1.1.jar",
        "license": "ARR",
        "loader": "lowcodefml",
        "version": "1"
      }
    },
    "lootjs": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.almostreliable.lootjs.mixin.HolderSetCodecMixin",
            "method": {
              "argTypes": [
                "com.mojang.serialization.DynamicOps",
                "java.lang.Object",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "lootjs$injectHolderCodec",
              "raw": "lootjs$injectHolderCodec(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/Optional;get()Ljava/lang/Object;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.almostreliable.lootjs.mixin.CreeperMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.damagesource.DamageSource",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "modifyWitherBossStarDrop",
              "raw": "modifyWitherBossStarDrop(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/damagesource/DamageSource;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/monster/Creeper;increaseDroppedSkulls()V}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.almostreliable.lootjs.mixin.ZombieMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.damagesource.DamageSource",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "modifyWitherBossStarDrop",
              "raw": "modifyWitherBossStarDrop(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/damagesource/DamageSource;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/monster/Creeper;increaseDroppedSkulls()V}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.almostreliable.lootjs.mixin.LootTableMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.storage.loot.LootContext",
                "java.util.function.Consumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "lootjs$resolveLootTracker",
              "raw": "lootjs$resolveLootTracker(Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.almostreliable.lootjs.mixin.LootParamsBuilderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.storage.loot.parameters.LootContextParamSet",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "lootjs$setType",
              "raw": "lootjs$setType(Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.almostreliable.lootjs.mixin.ReloadableServerRegistriesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.LayeredRegistryAccess",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "lootjs$runLootTableEventJS",
              "raw": "lootjs$runLootTableEventJS(Lnet/minecraft/core/LayeredRegistryAccess;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.almostreliable.lootjs.mixin.SkeletonMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.damagesource.DamageSource",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "modifyWitherBossStarDrop",
              "raw": "modifyWitherBossStarDrop(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/damagesource/DamageSource;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/monster/Creeper;increaseDroppedSkulls()V}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.almostreliable.lootjs.mixin.forge.LootModifierManagerMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "lootjs$lootModifierReload",
              "raw": "lootjs$lootModifierReload(Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.almostreliable.lootjs.mixin.forge.CommonHooksMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "it.unimi.dsi.fastutil.objects.ObjectArrayList",
                "net.minecraft.world.level.storage.loot.LootContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "invokeActions",
              "raw": "invokeActions(Lnet/minecraft/resources/ResourceLocation;Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/world/level/storage/loot/LootContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "kubejs": "[2101.7.0-build.131,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.93,)"
      },
      "info": {
        "authors": "AlmostReliable",
        "classes": "155",
        "description": "Modify loot through KubeJS.",
        "displayName": "LootJS",
        "file": "lootjs-neoforge-1.21.1-3.3.0.jar",
        "license": "GNU Lesser General Public License v3.0",
        "package": "com.almostreliable.lootjs",
        "version": "1.21.1-3.3.0"
      },
      "modifies": [
        "net.minecraft.advancements.critereon.EntityPredicate",
        "net.minecraft.advancements.critereon.ItemPredicate",
        "net.minecraft.resources.HolderSetCodec",
        "net.minecraft.server.ReloadableServerRegistries",
        "net.minecraft.world.entity.boss.wither.WitherBoss",
        "net.minecraft.world.entity.monster.Creeper",
        "net.minecraft.world.entity.monster.Skeleton",
        "net.minecraft.world.entity.monster.Zombie",
        "net.minecraft.world.level.storage.loot.LootContext",
        "net.minecraft.world.level.storage.loot.LootParams",
        "net.minecraft.world.level.storage.loot.LootParams$Builder",
        "net.minecraft.world.level.storage.loot.LootPool",
        "net.minecraft.world.level.storage.loot.LootTable",
        "net.minecraft.world.level.storage.loot.entries.CompositeEntryBase",
        "net.minecraft.world.level.storage.loot.functions.LootItemConditionalFunction",
        "net.minecraft.world.level.storage.loot.functions.LootItemFunction",
        "net.minecraft.world.level.storage.loot.predicates.LootItemCondition",
        "net.neoforged.neoforge.common.CommonHooks",
        "net.neoforged.neoforge.common.loot.LootModifierManager"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "mcjtylib": {
      "dependencies": {
        "neoforge": "[21.0,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "mcjty.lib.keys.KeyInputHandler#onKeyInput"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "mcjty.lib.ClientEventHandler#onGameRenderOverlay"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$GatherComponents": [
          "mcjty.lib.tooltips.TooltipRender#onTooltipGatherComponents"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$CharacterTyped$Pre": [
          "mcjty.lib.ClientEventHandler#onGuiInput"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$KeyPressed$Pre": [
          "mcjty.lib.ClientEventHandler#onKeyboardInput"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonPressed$Pre": [
          "mcjty.lib.ClientEventHandler#onMouseClicked"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonReleased$Pre": [
          "mcjty.lib.ClientEventHandler#onMouseReleased"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseDragged$Pre": [
          "mcjty.lib.ClientEventHandler#onMouseDragged"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseScrolled$Pre": [
          "mcjty.lib.ClientEventHandler#onMouseScolled"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "mcjty.lib.tooltips.TooltipRender#onItemTooltipEvent",
          "mcjty.lib.tooltips.TooltipRender#onMakeTooltip"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Pre": [
          "mcjty.lib.setup.ModSetup$EventHandler#onPlayerTickEvent"
        ]
      },
      "info": {
        "classes": "388",
        "description": "Base mod for all McJty mods\n",
        "displayName": "McJtyLib",
        "file": "mcjtylib-1.21-9.0.5.jar",
        "license": "MIT License https://github.com/McJtyMods/McJtyLib/blob/1.21_neo/LICENSE",
        "package": "mcjty.lib",
        "version": "1.21-9.0.5"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "mcjty.lib.gui.BaseScreen",
          "mcjty.lib.gui.GenericGuiContainer",
          "mcjty.lib.gui.GuiItemScreen"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "mcjty.lib.multipart.MultipartBakedModel",
          "mcjty.lib.client.AbstractDynamicBakedModel"
        ],
        "net.minecraft.data.DataProvider": [
          "mcjty.lib.datagen.BaseRecipeProvider",
          "mcjty.lib.datagen.DataGen$5",
          "mcjty.lib.datagen.DataGen$6",
          "mcjty.lib.datagen.BaseBlockStateProvider",
          "mcjty.lib.datagen.DataGen$4",
          "mcjty.lib.datagen.DataGen$7",
          "mcjty.lib.datagen.DataGen$1",
          "mcjty.lib.datagen.DataGen$3",
          "mcjty.lib.datagen.BaseBlockTagsProvider",
          "mcjty.lib.datagen.DataGen$8",
          "mcjty.lib.datagen.BaseItemModelProvider",
          "mcjty.lib.datagen.DataGen$2"
        ],
        "net.minecraft.world.item.Item": [
          "mcjty.lib.multipart.MultipartItemBlock",
          "mcjty.lib.items.BaseBlockItem",
          "mcjty.lib.items.GenericArmorItem",
          "mcjty.lib.items.BaseItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "mcjty.lib.crafting.BaseShapedRecipe",
          "mcjty.lib.crafting.AbstractRecipeAdaptor",
          "mcjty.lib.crafting.CopyComponentsRecipe",
          "mcjty.lib.crafting.BaseRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "mcjty.lib.blocks.BaseBlock",
          "mcjty.lib.blocks.LogicSlabBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "mcjty.lib.worlddata.AbstractWorldData",
          "mcjty.lib.worlddata.AbstractLocalWorldData"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Items",
        "Custom Recipe Types",
        "Localization",
        "Modifies Tooltips",
        "Modifies World Rendering",
        "Runs Player Tick Logic",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "measurements": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "com.mrbysco.measurements.config.MeasurementConfigNeoForge#onLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "com.mrbysco.measurements.config.MeasurementConfigNeoForge#onFileChange"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingIn": [
          "com.mrbysco.measurements.client.LoginHandler#onLogIn"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingOut": [
          "com.mrbysco.measurements.client.LoginHandler#onLogOut"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.mrbysco.measurements.client.ClientHandler#onRenderWorldLast"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.mrbysco.measurements.datagen.MeasurementsDataGen#gatherData"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "com.mrbysco.measurements.MeasurementsNeoForge#addTabContents"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "com.mrbysco.measurements.client.ClientHandler#onPlayerTick"
        ]
      },
      "info": {
        "authors": "Mrbysco",
        "classes": "28",
        "description": "Measure the distance between positions :)\n",
        "displayName": "Measurements",
        "file": "Measurements-neoforge-1.21-3.0.0.jar",
        "license": "MIT",
        "package": "com.mrbysco.measurements",
        "version": "3.0.0"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "com.mrbysco.measurements.datagen.MeasurementsDataGen$MeasurementsRecipeProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.mrbysco.measurements.item.TapeItem"
        ]
      },
      "summary": [
        "Auto-reloads Config Files",
        "Custom Advancements",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Localization",
        "Modifies World Rendering",
        "Runs Player Tick Logic",
        "Uses Data Generators"
      ]
    },
    "megacells": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "gripe._90.megacells.mixin.client.CellWorkbenchScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "updateCutoffButton",
              "raw": "updateCutoffButton(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "gripe._90.megacells.mixin.client.CellWorkbenchScreenMixin",
            "method": {
              "argTypes": [
                "appeng.menu.implementations.CellWorkbenchMenu",
                "net.minecraft.world.entity.player.Inventory",
                "net.minecraft.network.chat.Component",
                "appeng.client.gui.style.ScreenStyle",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initCutoffButton",
              "raw": "initCutoffButton(Lappeng/menu/implementations/CellWorkbenchMenu;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/network/chat/Component;Lappeng/client/gui/style/ScreenStyle;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "gripe._90.megacells.mixin.CellWorkbenchMenuMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.world.entity.player.Inventory",
                "appeng.blockentity.misc.CellWorkbenchBlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "registerAction",
              "raw": "registerAction(ILnet/minecraft/world/entity/player/Inventory;Lappeng/blockentity/misc/CellWorkbenchBlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "gripe._90.megacells.mixin.ItemEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "lavaTimeout",
              "raw": "lavaTimeout(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {},
      "info": {
        "classes": "84",
        "description": "ME Greater Accumulation Cells - For when kilobytes just won't do.",
        "displayName": "MEGA Cells",
        "file": "megacells-4.6.1.jar",
        "license": "LGPLv3.0",
        "package": "gripe._90.megacells",
        "version": "4.6.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "gripe._90.megacells.client.screen.PortableCellWorkbenchScreen",
          "gripe._90.megacells.client.screen.CellDockScreen",
          "gripe._90.megacells.mixin.client.CellWorkbenchScreenMixin"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "gripe._90.megacells.client.render.FaceRotatingModel"
        ],
        "net.minecraft.world.entity.Entity": [
          "gripe._90.megacells.mixin.ItemEntityMixin"
        ],
        "net.minecraft.world.item.Item": [
          "gripe._90.megacells.item.part.MEGAPatternProviderPartItem",
          "gripe._90.megacells.item.cell.PortableCellWorkbenchItem",
          "gripe._90.megacells.item.cell.MEGAPortableCell",
          "gripe._90.megacells.item.cell.BulkCellItem",
          "gripe._90.megacells.integration.appmek.RadioactiveCellItem",
          "gripe._90.megacells.integration.appmek.AppMekIntegration$1",
          "gripe._90.megacells.integration.arseng.ArsEngIntegration$1",
          "gripe._90.megacells.integration.DummyIntegrationBlock$Item",
          "gripe._90.megacells.integration.DummyIntegrationItem",
          "gripe._90.megacells.block.MEGAPatternProviderBlockItem",
          "gripe._90.megacells.definition.MEGABlocks$1"
        ],
        "net.minecraft.world.level.block.Block": [
          "gripe._90.megacells.integration.DummyIntegrationBlock",
          "gripe._90.megacells.mixin.AbstractCraftingUnitBlockMixin",
          "gripe._90.megacells.block.MEGAInterfaceBlock",
          "gripe._90.megacells.block.MEGAPatternProviderBlock"
        ]
      },
      "modifies": [
        "appeng.api.implementations.menuobjects.ItemMenuHost",
        "appeng.block.crafting.AbstractCraftingUnitBlock",
        "appeng.block.crafting.CraftingBlockItem",
        "appeng.blockentity.misc.CellWorkbenchBlockEntity",
        "appeng.client.gui.implementations.CellWorkbenchScreen",
        "appeng.hooks.BuiltInModelHooks",
        "appeng.menu.implementations.CellWorkbenchMenu",
        "appeng.menu.implementations.PatternProviderMenu",
        "net.minecraft.world.entity.item.ItemEntity"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods"
      ]
    },
    "mekanism": {
      "dependencies": {
        "appmek": "[,1.6.0-alpha.2]",
        "enderio_conduits_modded": "[,6.0.24.351-nightly+d8261275]",
        "jaopca": "[,5.0.1.2]",
        "jei": "[19.10.0.126,)",
        "laserio": "[,1.9.9]",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.21,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "mekanism.client.ClientRegistration#init"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$Clone": [
          "mekanism.client.MekanismClient#onCloneRespawn"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "mekanism.client.render.RenderTickHandler#tickEnd"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "mekanism.client.ClientTickHandler#onTick"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$AddLayers": [
          "mekanism.client.ClientRegistration#addLayers"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "mekanism.client.ClientRegistration#registerLayer"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "mekanism.client.ClientRegistration#registerRenderers"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseScrollingEvent": [
          "mekanism.client.ClientTickHandler#onMouseEvent"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$BakingCompleted": [
          "mekanism.client.ClientRegistration#onModelBake"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$ModifyBakingResult": [
          "mekanism.client.ClientRegistration#onModelBake"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "mekanism.client.ClientRegistration#registerAdditionalModels"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "mekanism.client.ClientRegistration#registerModelLoaders"
        ],
        "net.neoforged.neoforge.client.event.RecipesUpdatedEvent": [
          "mekanism.client.ClientTickHandler#recipesUpdated"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientReloadListenersEvent": [
          "mekanism.client.ClientRegistration#registerClientReloadListeners"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "mekanism.client.ClientRegistration#registerBlockColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "mekanism.client.ClientRegistration#registerItemColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "mekanism.client.ClientRegistration#registerOverlays"
        ],
        "net.neoforged.neoforge.client.event.RegisterItemDecorationsEvent": [
          "mekanism.client.ClientRegistration#registerItemDecorations"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "mekanism.client.ClientRegistration#registerKeybindings"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "mekanism.client.ClientRegistration#registerScreens"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "mekanism.client.ClientRegistration#registerParticleFactories"
        ],
        "net.neoforged.neoforge.client.event.RegisterShadersEvent": [
          "mekanism.client.render.MekanismShaders#shaderRegistry"
        ],
        "net.neoforged.neoforge.client.event.RenderArmEvent": [
          "mekanism.client.render.RenderTickHandler#renderArm"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiLayerEvent$Pre": [
          "mekanism.client.render.RenderTickHandler#renderCrosshair"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "mekanism.client.render.RenderTickHandler#onBlockHover"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "mekanism.client.render.RenderTickHandler#renderWorld"
        ],
        "net.neoforged.neoforge.client.event.RenderLivingEvent$Post": [
          "mekanism.client.ClientTickHandler#renderEntityPost"
        ],
        "net.neoforged.neoforge.client.event.RenderLivingEvent$Pre": [
          "mekanism.client.ClientTickHandler#renderEntityPre"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Render$Post": [
          "mekanism.client.render.RenderTickHandler#renderPostLowest",
          "mekanism.client.render.RenderTickHandler#renderPostHighest"
        ],
        "net.neoforged.neoforge.client.event.TextureAtlasStitchedEvent": [
          "mekanism.client.render.MekanismRenderer#onStitch",
          "mekanism.common.base.holiday.ClientHolidayInfo#onStitch"
        ],
        "net.neoforged.neoforge.client.event.ViewportEvent$ComputeFogColor": [
          "mekanism.client.ClientTickHandler#onFogLighting"
        ],
        "net.neoforged.neoforge.client.event.ViewportEvent$RenderFog": [
          "mekanism.client.ClientTickHandler#onFog"
        ],
        "net.neoforged.neoforge.client.event.sound.SoundEngineLoadEvent": [
          "mekanism.client.sound.SoundHandler#onSoundEngineSetup"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "mekanism.client.ClientRegistration#registerClientExtensions"
        ],
        "net.neoforged.neoforge.event.entity.EntityInvulnerabilityCheckEvent": [
          "mekanism.common.CommonPlayerTickHandler#checkEntityInvulnerability"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "mekanism.client.ClientTickHandler#onStartTracking",
          "mekanism.common.CommonWorldTickHandler#onEntitySpawn"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEvent$LivingJumpEvent": [
          "mekanism.common.CommonPlayerTickHandler#onLivingJump"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingFallEvent": [
          "mekanism.common.CommonPlayerTickHandler#livingFall"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "mekanism.common.CommonPlayerTickHandler#onEntityAttacked"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$BreakSpeed": [
          "mekanism.common.CommonPlayerTickHandler#getBreakSpeed"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": [
          "mekanism.common.CommonPlayerTracker#onPlayerDimChangedEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "mekanism.common.CommonPlayerTracker#onPlayerLoginEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "mekanism.common.CommonPlayerTracker#onPlayerLogoutEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerRespawnEvent": [
          "mekanism.common.CommonPlayerTracker#respawnEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$StartTracking": [
          "mekanism.common.CommonPlayerTracker#onPlayerStartTrackingEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "mekanism.common.CommonPlayerTracker#rightClickEvent"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BreakEvent": [
          "mekanism.common.CommonWorldTickHandler#onBlockBreak"
        ],
        "net.neoforged.neoforge.event.level.ChunkDataEvent$Load": [
          "mekanism.common.CommonWorldTickHandler#onChunkDataLoad"
        ],
        "net.neoforged.neoforge.event.level.ChunkDataEvent$Save": [
          "mekanism.common.CommonWorldTickHandler#chunkSave"
        ],
        "net.neoforged.neoforge.event.level.ChunkEvent$Load": [
          "mekanism.common.command.ChunkCommand#onChunkLoad"
        ],
        "net.neoforged.neoforge.event.level.ChunkEvent$Unload": [
          "mekanism.common.command.ChunkCommand#onChunkUnload",
          "mekanism.common.CommonWorldTickHandler#chunkUnloadEvent"
        ],
        "net.neoforged.neoforge.event.level.ChunkTicketLevelUpdatedEvent": [
          "mekanism.common.lib.transmitter.TransmitterNetworkRegistry#onTicketLevelChange"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Load": [
          "mekanism.common.CommonWorldTickHandler#worldLoadEvent"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "mekanism.common.CommonWorldTickHandler#worldUnloadEvent"
        ],
        "net.neoforged.neoforge.event.tick.EntityTickEvent$Post": [
          "mekanism.common.lib.radiation.RadiationManager#onLivingTick"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Post": [
          "mekanism.common.CommonWorldTickHandler#onTick"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "mekanism.common.CommonPlayerTickHandler#onTick"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "mekanism.common.lib.transmitter.TransmitterNetworkRegistry#onTick",
          "mekanism.common.CommonWorldTickHandler#onTick"
        ]
      },
      "info": {
        "authors": "Aidancbrady, Thommy101, Thiakil, pupnewfster, dizzyd",
        "classes": "2933",
        "description": "Mekanism is a Minecraft add-on featuring high-tech machinery that can be used to create powerful tools, armor, and weapons.",
        "displayName": "Mekanism",
        "file": "Mekanism-1.21.1-10.7.8.70.jar",
        "license": "MIT",
        "package": "mekanism.api",
        "version": "10.7.8"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "mekanism.client.gui.machine.GuiElectrolyticSeparator",
          "mekanism.client.gui.machine.GuiPrecisionSawmill",
          "mekanism.client.gui.machine.GuiDigitalMiner",
          "mekanism.client.gui.machine.GuiChemicalDissolutionChamber",
          "mekanism.client.gui.machine.GuiChemicalCrystallizer",
          "mekanism.client.gui.machine.GuiElectricMachine",
          "mekanism.client.gui.machine.GuiAntiprotonicNucleosynthesizer",
          "mekanism.client.gui.machine.GuiChemicalOxidizer",
          "mekanism.client.gui.machine.GuiChemicalWasher",
          "mekanism.client.gui.machine.GuiDigitalMinerConfig",
          "mekanism.client.gui.machine.GuiElectricPump",
          "mekanism.client.gui.machine.GuiResistiveHeater",
          "mekanism.client.gui.machine.GuiPigmentExtractor",
          "mekanism.client.gui.machine.GuiPigmentMixer",
          "mekanism.client.gui.machine.GuiAdvancedElectricMachine",
          "mekanism.client.gui.machine.GuiPRC",
          "mekanism.client.gui.machine.GuiRotaryCondensentrator",
          "mekanism.client.gui.machine.GuiFactory",
          "mekanism.client.gui.machine.GuiFormulaicAssemblicator",
          "mekanism.client.gui.machine.GuiCombiner",
          "mekanism.client.gui.machine.GuiIsotopicCentrifuge",
          "mekanism.client.gui.machine.GuiSolarNeutronActivator",
          "mekanism.client.gui.machine.GuiSeismicVibrator",
          "mekanism.client.gui.machine.GuiFluidicPlenisher",
          "mekanism.client.gui.machine.GuiMetallurgicInfuser",
          "mekanism.client.gui.machine.GuiOredictionificator",
          "mekanism.client.gui.machine.GuiNutritionalLiquifier",
          "mekanism.client.gui.machine.GuiFuelwoodHeater",
          "mekanism.client.gui.machine.GuiChemicalInfuser",
          "mekanism.client.gui.machine.GuiPaintingMachine",
          "mekanism.client.gui.GuiLogisticalSorter",
          "mekanism.client.gui.qio.GuiQIODriveArray",
          "mekanism.client.gui.qio.GuiQIOItemViewer",
          "mekanism.client.gui.qio.GuiQIOExporter",
          "mekanism.client.gui.qio.GuiPortableQIODashboard",
          "mekanism.client.gui.qio.GuiQIOImporter",
          "mekanism.client.gui.qio.GuiQIODashboard",
          "mekanism.client.gui.qio.GuiQIOItemFrequencySelect",
          "mekanism.client.gui.qio.GuiQIORedstoneAdapter",
          "mekanism.client.gui.qio.GuiQIOTileFrequencySelect",
          "mekanism.client.gui.qio.GuiQIOFilterHandler",
          "mekanism.client.gui.GuiPersonalStorageTile",
          "mekanism.client.gui.GuiTeleporter",
          "mekanism.client.gui.GuiMekanismTile",
          "mekanism.client.gui.GuiSecurityDesk",
          "mekanism.client.gui.GuiFluidTank",
          "mekanism.client.gui.robit.GuiRobitRepair",
          "mekanism.client.gui.robit.GuiRobit",
          "mekanism.client.gui.robit.GuiRobitInventory",
          "mekanism.client.gui.robit.GuiRobitCrafting",
          "mekanism.client.gui.robit.GuiRobitMain",
          "mekanism.client.gui.robit.GuiRobitSmelting",
          "mekanism.client.gui.GuiSPS",
          "mekanism.client.gui.GuiQuantumEntangloporter",
          "mekanism.client.gui.GuiRadialSelector",
          "mekanism.client.gui.GuiChemicalTank",
          "mekanism.client.gui.GuiThermoelectricBoiler",
          "mekanism.client.gui.GuiMekanism",
          "mekanism.client.gui.VirtualSlotContainerScreen",
          "mekanism.client.gui.GuiDimensionalStabilizer",
          "mekanism.client.gui.GuiBoilerStats",
          "mekanism.client.gui.GuiInductionMatrix",
          "mekanism.client.gui.GuiEnergyCube",
          "mekanism.client.gui.GuiThermalEvaporationController",
          "mekanism.client.gui.GuiConfigurableTile",
          "mekanism.client.gui.GuiFilterHolder",
          "mekanism.client.gui.GuiMatrixStats",
          "mekanism.client.gui.GuiDynamicTank",
          "mekanism.client.gui.GuiModificationStation",
          "mekanism.client.gui.GuiLaserAmplifier",
          "mekanism.client.gui.GuiModuleTweaker",
          "mekanism.client.gui.GuiLaserTractorBeam",
          "mekanism.client.gui.item.GuiPortableTeleporter",
          "mekanism.client.gui.item.GuiPersonalStorageItem",
          "mekanism.client.gui.item.GuiSeismicReader",
          "mekanism.client.gui.item.GuiDictionary"
        ],
        "net.minecraft.client.particle.Particle": [
          "mekanism.client.particle.RadiationParticle",
          "mekanism.client.particle.JetpackFlameParticle",
          "mekanism.client.particle.ScubaBubbleParticle",
          "mekanism.client.particle.LaserParticle",
          "mekanism.client.particle.JetpackSmokeParticle",
          "mekanism.common.integration.framedblocks.ChemicalSpriteParticle"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "mekanism.client.render.item.MekanismISTER",
          "mekanism.client.render.item.block.RenderEnergyCubeItem",
          "mekanism.client.render.item.block.RenderFluidTankItem",
          "mekanism.client.render.item.gear.RenderScubaMask",
          "mekanism.client.render.item.gear.RenderFreeRunners",
          "mekanism.client.render.item.gear.RenderScubaTank",
          "mekanism.client.render.item.gear.RenderJetpack",
          "mekanism.client.render.item.gear.RenderAtomicDisassembler",
          "mekanism.client.render.item.gear.RenderFlameThrower"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "mekanism.client.render.transmitter.RenderThermodynamicConductor",
          "mekanism.client.render.transmitter.RenderTransmitterBase",
          "mekanism.client.render.transmitter.RenderUniversalCable",
          "mekanism.client.render.transmitter.RenderLogisticalTransporter",
          "mekanism.client.render.transmitter.RenderPressurizedTube",
          "mekanism.client.render.transmitter.RenderMechanicalPipe",
          "mekanism.client.render.tileentity.RenderDynamicTank",
          "mekanism.client.render.tileentity.RenderDigitalMiner",
          "mekanism.client.render.tileentity.MekanismTileEntityRenderer",
          "mekanism.client.render.tileentity.RenderEnergyCube",
          "mekanism.client.render.tileentity.ModelTileEntityRenderer",
          "mekanism.client.render.tileentity.RenderThermoelectricBoiler",
          "mekanism.client.render.tileentity.RenderIndustrialAlarm",
          "mekanism.client.render.tileentity.RenderDimensionalStabilizer",
          "mekanism.client.render.tileentity.RenderSPS",
          "mekanism.client.render.tileentity.RenderFluidTank",
          "mekanism.client.render.tileentity.RenderTeleporter",
          "mekanism.client.render.tileentity.RenderPigmentMixer",
          "mekanism.client.render.tileentity.RenderPersonalChest",
          "mekanism.client.render.tileentity.RenderSeismicVibrator",
          "mekanism.client.render.tileentity.RenderBin",
          "mekanism.client.render.tileentity.RenderNutritionalLiquifier",
          "mekanism.client.render.tileentity.RenderThermalEvaporationPlant",
          "mekanism.client.render.tileentity.MultiblockTileEntityRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "mekanism.client.model.energycube.EnergyCubeBakedModel",
          "mekanism.client.model.robit.RobitModelDataBakedModel",
          "mekanism.client.model.robit.RobitBakedModel",
          "mekanism.client.model.baked.ExtensionBakedModel",
          "mekanism.client.model.baked.ExtensionBakedModel$LightedBakedModel",
          "mekanism.client.model.baked.ExtensionOverrideBakedModel",
          "mekanism.client.model.baked.DriveArrayBakedModel",
          "mekanism.client.model.baked.DigitalMinerBakedModel",
          "mekanism.client.model.baked.ExtensionBakedModel$TransformedBakedModel",
          "mekanism.client.model.baked.ModelDataBakedModel",
          "mekanism.client.model.baked.DriveArrayBakedModel$DriveArrayOverrideList$DriveStatusBakedModel",
          "mekanism.client.model.data.DataBasedBakedModel",
          "mekanism.client.render.obj.TransmitterBakedModel",
          "mekanism.common.integration.framedblocks.ChemicalModel"
        ],
        "net.minecraft.data.DataProvider": [
          "mekanism.api.datagen.tag.ChemicalTagsProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "mekanism.common.base.MekFakePlayer",
          "mekanism.common.entity.EntityFlame",
          "mekanism.common.entity.EntityRobit"
        ],
        "net.minecraft.world.entity.Mob": [
          "mekanism.common.entity.EntityRobit"
        ],
        "net.minecraft.world.item.Item": [
          "mekanism.common.registries.MekanismItems$1",
          "mekanism.common.registration.impl.ItemDeferredRegister$1",
          "mekanism.common.item.ItemConfigurator",
          "mekanism.common.item.ItemUpgrade",
          "mekanism.common.item.ItemAlloy",
          "mekanism.common.item.ItemPortableTeleporter",
          "mekanism.common.item.ItemGaugeDropper",
          "mekanism.common.item.ItemEnergized",
          "mekanism.common.item.ItemSeismicReader",
          "mekanism.common.item.ItemConfigurationCard",
          "mekanism.common.item.ItemGeigerCounter",
          "mekanism.common.item.ItemCraftingFormula",
          "mekanism.common.item.ItemRefinedGlowstoneIngot",
          "mekanism.common.item.ItemDictionary",
          "mekanism.common.item.ItemQIODrive",
          "mekanism.common.item.ItemNetworkReader",
          "mekanism.common.item.ItemPortableQIODashboard",
          "mekanism.common.item.ItemTierInstaller",
          "mekanism.common.item.ItemRobit",
          "mekanism.common.item.block.ItemBlockCardboardBox",
          "mekanism.common.item.block.machine.ItemBlockTeleporter",
          "mekanism.common.item.block.machine.ItemBlockFactory",
          "mekanism.common.item.block.machine.ItemBlockQuantumEntangloporter",
          "mekanism.common.item.block.machine.ItemBlockLaserTractorBeam",
          "mekanism.common.item.block.machine.ItemBlockQIOComponent",
          "mekanism.common.item.block.machine.ItemBlockFluidTank",
          "mekanism.common.item.block.machine.ItemBlockResistiveHeater",
          "mekanism.common.item.block.ItemBlockMekanism",
          "mekanism.common.item.block.ItemBlockInductionCell",
          "mekanism.common.item.block.ItemBlockTooltip",
          "mekanism.common.item.block.ItemBlockLaserAmplifier",
          "mekanism.common.item.block.ItemBlockChemicalTank",
          "mekanism.common.item.block.ItemBlockSecurityDesk",
          "mekanism.common.item.block.ItemBlockPersonalStorage",
          "mekanism.common.item.block.ItemBlockInductionProvider",
          "mekanism.common.item.block.transmitter.ItemBlockMechanicalPipe",
          "mekanism.common.item.block.transmitter.ItemBlockUniversalCable",
          "mekanism.common.item.block.transmitter.ItemBlockPressurizedTube",
          "mekanism.common.item.block.transmitter.ItemBlockLogisticalTransporter",
          "mekanism.common.item.block.transmitter.ItemBlockThermodynamicConductor",
          "mekanism.common.item.block.transmitter.ItemBlockTransporter",
          "mekanism.common.item.block.ItemBlockEnergyCube",
          "mekanism.common.item.block.ItemBlockBin",
          "mekanism.common.item.block.ItemBlockRadioactiveWasteBarrel",
          "mekanism.common.item.ItemModule",
          "mekanism.common.item.gear.ItemHazmatSuitArmor",
          "mekanism.common.item.gear.ItemMekaTool",
          "mekanism.common.item.gear.ItemFlamethrower",
          "mekanism.common.item.gear.ItemJetpack",
          "mekanism.common.item.gear.ItemSpecialArmor",
          "mekanism.common.item.gear.ItemFreeRunners",
          "mekanism.common.item.gear.ItemElectricBow",
          "mekanism.common.item.gear.ItemScubaTank",
          "mekanism.common.item.gear.ItemArmoredFreeRunners",
          "mekanism.common.item.gear.ItemMekaSuitArmor",
          "mekanism.common.item.gear.ItemArmoredJetpack",
          "mekanism.common.item.gear.ItemHDPEElytra",
          "mekanism.common.item.gear.ItemChemicalArmor",
          "mekanism.common.item.gear.ItemScubaMask",
          "mekanism.common.item.gear.ItemCanteen",
          "mekanism.common.item.gear.ItemAtomicDisassembler",
          "mekanism.common.item.ItemDosimeter",
          "mekanism.common.item.ItemNutritionalPasteBucket"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "mekanism.api.recipes.ItemStackToItemStackRecipe",
          "mekanism.api.recipes.SawmillRecipe",
          "mekanism.api.recipes.MekanismRecipe",
          "mekanism.api.recipes.ChemicalCrystallizerRecipe",
          "mekanism.api.recipes.ChemicalDissolutionRecipe",
          "mekanism.api.recipes.ItemStackToFluidOptionalItemRecipe",
          "mekanism.api.recipes.PressurizedReactionRecipe",
          "mekanism.api.recipes.ItemStackToEnergyRecipe",
          "mekanism.api.recipes.FluidToFluidRecipe",
          "mekanism.api.recipes.ItemStackChemicalToItemStackRecipe",
          "mekanism.api.recipes.ChemicalToChemicalRecipe",
          "mekanism.api.recipes.ChemicalChemicalToChemicalRecipe",
          "mekanism.api.recipes.RotaryRecipe",
          "mekanism.api.recipes.FluidChemicalToChemicalRecipe",
          "mekanism.api.recipes.ItemStackChemicalToObjectRecipe",
          "mekanism.api.recipes.ItemStackToChemicalRecipe",
          "mekanism.api.recipes.NucleosynthesizingRecipe",
          "mekanism.api.recipes.ItemStackToFluidRecipe",
          "mekanism.api.recipes.basic.BasicItemStackChemicalToItemStackRecipe",
          "mekanism.api.recipes.basic.BasicChemicalConversionRecipe",
          "mekanism.api.recipes.basic.BasicPressurizedReactionRecipe",
          "mekanism.api.recipes.basic.BasicEnrichingRecipe",
          "mekanism.api.recipes.basic.BasicChemicalToChemicalRecipe",
          "mekanism.api.recipes.basic.BasicChemicalOxidizerRecipe",
          "mekanism.api.recipes.basic.BasicCentrifugingRecipe",
          "mekanism.api.recipes.basic.BasicMetallurgicInfuserRecipe",
          "mekanism.api.recipes.basic.BasicFluidToFluidRecipe",
          "mekanism.api.recipes.basic.BasicCrushingRecipe",
          "mekanism.api.recipes.basic.BasicItemStackToFluidOptionalItemRecipe",
          "mekanism.api.recipes.basic.BasicPurifyingRecipe",
          "mekanism.api.recipes.basic.BasicItemStackToItemStackRecipe",
          "mekanism.api.recipes.basic.BasicItemStackToChemicalRecipe",
          "mekanism.api.recipes.basic.BasicItemStackToFluidRecipe",
          "mekanism.api.recipes.basic.BasicPigmentMixingRecipe",
          "mekanism.api.recipes.basic.BasicChemicalChemicalToChemicalRecipe",
          "mekanism.api.recipes.basic.BasicChemicalInfuserRecipe",
          "mekanism.api.recipes.basic.BasicPigmentExtractingRecipe",
          "mekanism.api.recipes.basic.BasicSawmillRecipe",
          "mekanism.api.recipes.basic.BasicActivatingRecipe",
          "mekanism.api.recipes.basic.BasicChemicalCrystallizerRecipe",
          "mekanism.api.recipes.basic.BasicCombinerRecipe",
          "mekanism.api.recipes.basic.BasicInjectingRecipe",
          "mekanism.api.recipes.basic.BasicChemicalDissolutionRecipe",
          "mekanism.api.recipes.basic.BasicRotaryRecipe",
          "mekanism.api.recipes.basic.BasicCompressingRecipe",
          "mekanism.api.recipes.basic.BasicNucleosynthesizingRecipe",
          "mekanism.api.recipes.basic.BasicElectrolysisRecipe",
          "mekanism.api.recipes.basic.BasicSmeltingRecipe",
          "mekanism.api.recipes.basic.BasicWashingRecipe",
          "mekanism.api.recipes.basic.BasicItemStackToEnergyRecipe",
          "mekanism.api.recipes.basic.BasicPaintingRecipe",
          "mekanism.api.recipes.ElectrolysisRecipe",
          "mekanism.api.recipes.CombinerRecipe",
          "mekanism.common.recipe.upgrade.MekanismShapedRecipe",
          "mekanism.common.recipe.ClearConfigurationRecipe",
          "mekanism.common.recipe.bin.BinExtractRecipe",
          "mekanism.common.recipe.bin.BinRecipe",
          "mekanism.common.recipe.bin.BinInsertRecipe",
          "mekanism.common.recipe.WrappedShapedRecipe",
          "mekanism.common.recipe.impl.NutritionalLiquifierIRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "mekanism.common.block.BlockPersonalStorage",
          "mekanism.common.block.BlockOre",
          "mekanism.common.block.BlockRadioactiveWasteBarrel",
          "mekanism.common.block.BlockQIOComponent",
          "mekanism.common.block.BlockBounding",
          "mekanism.common.block.transmitter.BlockLargeTransmitter",
          "mekanism.common.block.transmitter.BlockSmallTransmitter",
          "mekanism.common.block.transmitter.BlockTransmitter",
          "mekanism.common.block.BlockPersonalBarrel",
          "mekanism.common.block.BlockIndustrialAlarm",
          "mekanism.common.block.prefab.BlockTileGlass",
          "mekanism.common.block.prefab.BlockFactoryMachine$BlockFactory",
          "mekanism.common.block.prefab.BlockBase",
          "mekanism.common.block.prefab.BlockTile",
          "mekanism.common.block.prefab.BlockBase$BlockBaseModel",
          "mekanism.common.block.prefab.BlockFactoryMachine",
          "mekanism.common.block.prefab.BlockBasicMultiblock",
          "mekanism.common.block.prefab.BlockFactoryMachine$BlockFactoryMachineModel",
          "mekanism.common.block.prefab.BlockTile$BlockTileModel",
          "mekanism.common.block.BlockEnergyCube",
          "mekanism.common.block.BlockMekanism",
          "mekanism.common.block.BlockPersonalChest",
          "mekanism.common.block.BlockCardboardBox",
          "mekanism.common.block.basic.BlockStructuralGlass",
          "mekanism.common.block.basic.BlockFluidTank",
          "mekanism.common.block.basic.BlockLogisticalSorter",
          "mekanism.common.block.basic.BlockBin",
          "mekanism.common.block.basic.BlockResource",
          "mekanism.common.block.basic.BlockChargepad"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "mekanism.common.lib.radiation.RadiationManager$RadiationDataHandler",
          "mekanism.common.lib.frequency.FrequencyManager$FrequencyDataHandler",
          "mekanism.common.lib.multiblock.MultiblockManager$MultiblockCacheDataHandler",
          "mekanism.common.lib.MekanismSavedData",
          "mekanism.common.lib.inventory.personalstorage.PersonalStorageData",
          "mekanism.common.content.qio.QIOGlobalItemLookup$QIOGlobalItemLookupDataHandler"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "mekanism.client.model.energycube.EnergyCubeModelLoader",
          "mekanism.client.model.robit.RobitModel$Loader",
          "mekanism.client.model.data.DataBasedModelLoader",
          "mekanism.client.render.obj.TransmitterLoader"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Model Loaders",
        "Custom Particles",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Shaders",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Handles Chunk Loading",
        "Listens to Chunk Load Events",
        "Listens to Chunk Unload Events",
        "Listens to Dimension Change Events",
        "Listens to Entity Damage Events",
        "Listens to Entity Fall Events",
        "Listens to Entity Join World Events",
        "Listens to Entity Jump Events",
        "Listens to Player Login Events",
        "Listens to Player Logout Events",
        "Listens to Recipe Updates",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Block Breaking",
        "Modifies Block Breaking Speed",
        "Modifies GUI Rendering",
        "Modifies World Rendering",
        "Runs Client Tick Logic",
        "Runs Entity Tick Logic",
        "Runs Player Tick Logic",
        "Runs Server Tick Logic",
        "Runs World Tick Logic",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "mekanismtools": {
      "dependencies": {
        "mekanism": "[10.7.8,10.7.8]"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "mekanism.tools.client.ToolsClientRegistration#init"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientReloadListenersEvent": [
          "mekanism.tools.client.ToolsClientRegistration#registerClientReloadListeners"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "mekanism.tools.client.ToolsClientRegistration#registerClientExtensions"
        ]
      },
      "info": {
        "authors": "Aidancbrady, Thommy101, Thiakil, pupnewfster, dizzyd",
        "classes": "69",
        "description": "Tools module for Mekanism",
        "displayName": "Mekanism: Tools",
        "file": "MekanismTools-1.21.1-10.7.8.70.jar",
        "license": "MIT",
        "package": "mekanism.tools.client",
        "version": "10.7.8"
      },
      "inheritance": {
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "mekanism.tools.client.render.item.RenderMekanismShieldItem"
        ],
        "net.minecraft.world.item.Item": [
          "mekanism.tools.common.item.ItemMekanismSword",
          "mekanism.tools.common.item.ItemMekanismShield",
          "mekanism.tools.common.item.ItemMekanismPaxel",
          "mekanism.tools.common.item.ItemMekanismAxe",
          "mekanism.tools.common.item.ItemMekanismPickaxe",
          "mekanism.tools.common.item.ItemMekanismArmor",
          "mekanism.tools.common.item.ItemMekanismHoe",
          "mekanism.tools.common.item.ItemRefinedGlowstoneArmor",
          "mekanism.tools.common.item.ItemMekanismShovel"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "mekanism.tools.common.recipe.MekBannerShieldRecipe",
          "mekanism.tools.common.recipe.PaxelRecipe"
        ]
      },
      "summary": [
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "melody": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "de.keksuccino.melody.mixin.mixins.common.client.MixinSoundEngine",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterReloadSoundEngineMelody",
              "raw": "afterReloadSoundEngineMelody(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.melody.mixin.mixins.common.client.MixinSoundEngine",
            "method": {
              "argTypes": [
                "net.minecraft.sounds.SoundSource",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterUpdateVolumeCategoryMelody",
              "raw": "afterUpdateVolumeCategoryMelody(Lnet/minecraft/sounds/SoundSource;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.20-beta,)"
      },
      "info": {
        "authors": "Keksuccino",
        "classes": "22",
        "description": "OpenAL-based library mod to play background music.",
        "displayName": "Melody",
        "file": "melody_neoforge_1.0.10_MC_1.21.jar",
        "license": "MIT",
        "package": "de.keksuccino.melody",
        "version": "1.0.10"
      },
      "modifies": [
        "net.minecraft.client.sounds.SoundEngine",
        "net.minecraft.client.sounds.SoundManager"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "merequester": {
      "dependencies": {
        "ae2": "[19.0.20-beta,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.36,)"
      },
      "info": {
        "authors": "Almost Reliable",
        "classes": "65",
        "description": "Keep resources in your ME-System in stock.",
        "displayName": "ME Requester",
        "file": "merequester-neoforge-1.21.1-1.1.8.jar",
        "license": "GNU Lesser General Public License v3.0",
        "package": "com.almostreliable.merequester",
        "version": "1.21.1-1.1.8"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.almostreliable.merequester.client.RequesterTerminalScreen",
          "com.almostreliable.merequester.client.abstraction.AbstractRequesterScreen",
          "com.almostreliable.merequester.client.RequesterScreen"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.almostreliable.merequester.requester.RequesterBlock"
        ]
      },
      "modifies": [
        "appeng.client.gui.WidgetContainer",
        "net.minecraft.client.gui.components.EditBox",
        "net.minecraft.world.inventory.Slot"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "mininggadgets": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.40,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.direwolf20.mininggadgets.setup.ClientSetup#registerRenderers"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "com.direwolf20.mininggadgets.client.ClientEvents#keyPressed"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "com.direwolf20.mininggadgets.client.OurKeys#registerKeys"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.direwolf20.mininggadgets.setup.ClientSetup#registerScreens"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "com.direwolf20.mininggadgets.client.particles.ParticleRenderDispatcher#registerProviders"
        ],
        "net.neoforged.neoforge.client.event.RenderHandEvent": [
          "com.direwolf20.mininggadgets.client.events.EventRenderGadget#renderGadget"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "com.direwolf20.mininggadgets.client.ClientEvents#drawBlockHighlightEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.direwolf20.mininggadgets.client.ClientEvents#renderWorldLastEvent"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.direwolf20.mininggadgets.common.data.Generator#gatherData"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.direwolf20.mininggadgets.common.MiningGadgets#rightClickEvent"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "com.direwolf20.mininggadgets.common.events.ServerTickHandler#handleTickEndEvent"
        ]
      },
      "info": {
        "authors": "Direwolf20, ErrorMikey",
        "classes": "126",
        "description": "Mining is better with lasers.",
        "displayName": "Mining Gadgets",
        "file": "mininggadgets-1.18.6.jar",
        "license": "MIT (https://github.com/Direwolf20-MC/MiningGadgets/blob/master/LICENSE.txt)",
        "package": "com.direwolf20.mininggadgets.setup",
        "updateUrl": "https://raw.githubusercontent.com/Direwolf20-MC/MiningGadgets/master/update.json",
        "version": "1.18.6"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.direwolf20.mininggadgets.client.screens.ModificationTableScreen",
          "com.direwolf20.mininggadgets.client.screens.MiningVisualsScreen",
          "com.direwolf20.mininggadgets.client.screens.MiningSettingScreen",
          "com.direwolf20.mininggadgets.client.screens.FilterScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "com.direwolf20.mininggadgets.client.particles.playerparticle.PlayerParticle",
          "com.direwolf20.mininggadgets.client.particles.lightparticle.LightParticle",
          "com.direwolf20.mininggadgets.client.particles.laserparticle.LaserParticle"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.direwolf20.mininggadgets.client.renderer.RenderBlockTER",
          "com.direwolf20.mininggadgets.client.renderer.ModificationTableTER"
        ],
        "net.minecraft.data.DataProvider": [
          "com.direwolf20.mininggadgets.common.data.GeneratorRecipes",
          "com.direwolf20.mininggadgets.common.data.GeneratorLanguage",
          "com.direwolf20.mininggadgets.common.data.GeneratorItemModels",
          "com.direwolf20.mininggadgets.common.data.GeneratorBlockTags",
          "com.direwolf20.mininggadgets.common.data.GeneratorBlockStates"
        ],
        "net.minecraft.world.item.Item": [
          "com.direwolf20.mininggadgets.common.items.UpgradeCard",
          "com.direwolf20.mininggadgets.common.items.MiningGadget"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.direwolf20.mininggadgets.common.blocks.RenderBlock",
          "com.direwolf20.mininggadgets.common.blocks.ModificationTable",
          "com.direwolf20.mininggadgets.common.blocks.MinersLight"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Loot Tables",
        "Custom Particles",
        "Custom Tag Assignments",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies World Rendering",
        "Runs Server Tick Logic",
        "Uses Data Generators"
      ]
    },
    "mob_grinding_utils": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "mob_grinding_utils.mixin.ZombieMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.damagesource.DamageSource",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "hurtMixin",
              "raw": "hurtMixin(Lnet/minecraft/world/damagesource/DamageSource;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/damagesource/DamageSource;getEntity()Lnet/minecraft/world/entity/Entity;, ordinal=0}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "neoforge": "[21.1,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.CustomizeGuiOverlayEvent$BossEventProgress": [
          "mob_grinding_utils.events.BossBarHidingEvent#onRenderHUD"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "mob_grinding_utils.ModParticles#registerParticleFactory"
        ],
        "net.neoforged.neoforge.client.event.RenderLivingEvent$Post": [
          "mob_grinding_utils.events.RenderChickenSwell#renderChickenSwell"
        ],
        "net.neoforged.neoforge.client.event.sound.PlaySoundEvent": [
          "mob_grinding_utils.events.GlobalWitherSoundEvent#onWitherSound",
          "mob_grinding_utils.events.GlobalDragonSoundEvent#onDragonSound"
        ],
        "net.neoforged.neoforge.event.entity.EntityTeleportEvent": [
          "mob_grinding_utils.events.MGUEndermanInhibitEvent#teleportEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "mob_grinding_utils.events.LocalWitherSoundEvent#onWitherBossDeath",
          "mob_grinding_utils.events.LocalDragonSoundEvent#onDragonDeath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "mob_grinding_utils.events.EntityHeadDropEvent#dropEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "mob_grinding_utils.events.EntityInteractionEvent#clickOnEntity"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "mob_grinding_utils.events.FillXPBottleEvent#clickBottle"
        ],
        "net.neoforged.neoforge.event.tick.EntityTickEvent$Post": [
          "mob_grinding_utils.events.ChickenFuseEvent#startChickenFuse"
        ]
      },
      "info": {
        "authors": "vadis365, flanks255",
        "classes": "174",
        "description": "A mod that adds a fun ways to farm mobs",
        "displayName": "Mob Grinding Utils",
        "file": "mob_grinding_utils-1.1.7+mc1.21.1.jar",
        "license": "All rights reserved",
        "package": "mob_grinding_utils",
        "version": "1.1.7+mc1.21.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "mob_grinding_utils.inventory.client.MGUScreen",
          "mob_grinding_utils.inventory.client.GuiXPSolidifier",
          "mob_grinding_utils.inventory.client.GuiSaw",
          "mob_grinding_utils.inventory.client.GuiMGUSpawner",
          "mob_grinding_utils.inventory.client.GuiFan",
          "mob_grinding_utils.inventory.client.GuiAbsorptionHopper"
        ],
        "net.minecraft.client.particle.Particle": [
          "mob_grinding_utils.client.particles.ParticleFluidXP"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "mob_grinding_utils.client.render.TileXPSolidifierStackItemRenderer",
          "mob_grinding_utils.client.render.TileTankStackItemRenderer",
          "mob_grinding_utils.client.render.TileSawStackItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "mob_grinding_utils.client.render.TileEntityXPSolidifierRenderer",
          "mob_grinding_utils.client.render.TileEntityTankRenderer",
          "mob_grinding_utils.client.render.TileEntitySawRenderer",
          "mob_grinding_utils.client.render.TileEntityMGUSpawnerRenderer",
          "mob_grinding_utils.client.render.TileEntityFanRenderer",
          "mob_grinding_utils.client.render.TileEntityAbsorptionRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "mob_grinding_utils.datagen.Recipes",
          "mob_grinding_utils.datagen.MGUFluidTags",
          "mob_grinding_utils.datagen.MGUEntityTypeTags",
          "mob_grinding_utils.datagen.MGUDamageType",
          "mob_grinding_utils.datagen.MGUDamageTags",
          "mob_grinding_utils.datagen.MGUBlockTags",
          "mob_grinding_utils.datagen.MGUBlockStates",
          "mob_grinding_utils.datagen.MGUBiomeTags"
        ],
        "net.minecraft.world.entity.Entity": [
          "mob_grinding_utils.entity.EntityXPOrbFalling"
        ],
        "net.minecraft.world.item.Item": [
          "mob_grinding_utils.items.ItemSpawnerUpgrade",
          "mob_grinding_utils.items.ItemSolidXPMould",
          "mob_grinding_utils.items.ItemSolidXP",
          "mob_grinding_utils.items.ItemSolidifierUpgrade",
          "mob_grinding_utils.items.ItemSawUpgrade",
          "mob_grinding_utils.items.ItemRottenEgg",
          "mob_grinding_utils.items.ItemMonocle",
          "mob_grinding_utils.items.ItemMobSwab",
          "mob_grinding_utils.items.ItemImaginaryInvisibleNotReallyThereSword",
          "mob_grinding_utils.items.ItemGoldenEgg",
          "mob_grinding_utils.items.ItemGMChickenFeed",
          "mob_grinding_utils.items.ItemFanUpgrade",
          "mob_grinding_utils.items.ItemAbsorptionUpgrade",
          "mob_grinding_utils.itemblocks.MGUBlockItem",
          "mob_grinding_utils.itemblocks.BlockItemTank"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "mob_grinding_utils.recipe.SolidifyRecipe",
          "mob_grinding_utils.recipe.ChickenFeedRecipe",
          "mob_grinding_utils.recipe.BeheadingRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "mob_grinding_utils.blocks.MGUFlowingFluidBlock",
          "mob_grinding_utils.blocks.BlockXPTap",
          "mob_grinding_utils.blocks.BlockXPSolidifier",
          "mob_grinding_utils.blocks.BlockWitherMuffler",
          "mob_grinding_utils.blocks.BlockTintedGlass",
          "mob_grinding_utils.blocks.BlockTankSink",
          "mob_grinding_utils.blocks.BlockTankJumbo",
          "mob_grinding_utils.blocks.BlockTank",
          "mob_grinding_utils.blocks.BlockSpikes",
          "mob_grinding_utils.blocks.BlockSolidXP",
          "mob_grinding_utils.blocks.BlockSaw",
          "mob_grinding_utils.blocks.BlockFan",
          "mob_grinding_utils.blocks.BlockEntitySpawner",
          "mob_grinding_utils.blocks.BlockEntityConveyor",
          "mob_grinding_utils.blocks.BlockEnderInhibitorOn",
          "mob_grinding_utils.blocks.BlockEnderInhibitorOff",
          "mob_grinding_utils.blocks.BlockDreadfulDirt",
          "mob_grinding_utils.blocks.BlockDragonMuffler",
          "mob_grinding_utils.blocks.BlockDirtSpawner",
          "mob_grinding_utils.blocks.BlockDelightfulDirt",
          "mob_grinding_utils.blocks.BlockDarkOakStone",
          "mob_grinding_utils.blocks.BlockAbsorptionHopper"
        ]
      },
      "modifies": [
        "net.minecraft.world.entity.monster.Zombie"
      ],
      "summary": [
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Particles",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Listens to Entity Death Events",
        "Listens to Entity Drop Events",
        "Listens to Entity Interaction Events",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Methods",
        "Runs Entity Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "modernfix": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.perf.reduce_blockstate_cache_rebuilds.BlockCallbacksMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.Registry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "computeCaches",
              "raw": "computeCaches(Lnet/minecraft/core/Registry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.perf.patchouli_deduplicate_books.ClientBookRegistryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "performDeduplication",
              "raw": "performDeduplication(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.perf.kubejs.RecipeEventJSMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "clearRecipeLists",
              "raw": "clearRecipeLists(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.perf.dynamic_resources.ldlib.ClientProxyImplMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "registerIntegration",
              "raw": "registerIntegration(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.perf.dynamic_resources.ctm.TextureMetadataHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "noIteration",
              "raw": "noIteration(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.perf.dynamic_resources.ctm.TextureMetadataHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "subscribeDynamic",
              "raw": "subscribeDynamic(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.perf.dynamic_resources.ItemModelMesherForgeMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "replaceLocationMap",
              "raw": "replaceLocationMap(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.feature.measure_time.MinecraftMixin_Forge",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "recordWorldLoadStart",
              "raw": "recordWorldLoadStart(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.feature.branding.BrandingControlMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.google.common.collect.ImmutableList$Builder"
              ],
              "name": "addModernFixBranding",
              "raw": "addModernFixBranding(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/google/common/collect/ImmutableList$Builder;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/neoforged/fml/ModList;get()Lnet/neoforged/fml/ModList;}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.core.BootstrapMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "doModernFixBootstrap",
              "raw": "doModernFixBootstrap(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.core.BootstrapClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "loadClientClasses",
              "raw": "loadClientClasses(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.bugfix.unsafe_modded_shape_caches.ShapeCacheRSMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "mfix$notify",
              "raw": "mfix$notify(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.bugfix.unsafe_modded_shape_caches.ShapeCacheCyclicMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "mfix$notify",
              "raw": "mfix$notify(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.neoforge.mixin.bugfix.ctm_resourceutil_cme.ResourceUtilMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "synchronizeMetadataCache",
              "raw": "synchronizeMetadataCache(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.safety.LivingEntityRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "synchronizeLayerList",
              "raw": "synchronizeLayerList(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.safety.ItemPropertiesMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "useConcurrentMaps",
              "raw": "useConcurrentMaps(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.safety.ItemColorsMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "unlockMap",
              "raw": "unlockMap(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.safety.ItemColorsMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "lockMapBeforeAccess",
              "raw": "lockMapBeforeAccess(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.safety.BlockColorsMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "unlockMap",
              "raw": "unlockMap(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.safety.BlockColorsMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "lockMapBeforeAccess",
              "raw": "lockMapBeforeAccess(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.thread_priorities.IntegratedServerMixin",
            "method": {
              "argTypes": [
                "java.lang.Thread",
                "net.minecraft.client.Minecraft",
                "net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess",
                "net.minecraft.server.packs.repository.PackRepository",
                "net.minecraft.server.WorldStem",
                "net.minecraft.server.Services",
                "net.minecraft.server.level.progress.ChunkProgressListenerFactory",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "adjustServerPriority",
              "raw": "adjustServerPriority(Ljava/lang/Thread;Lnet/minecraft/client/Minecraft;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/server/WorldStem;Lnet/minecraft/server/Services;Lnet/minecraft/server/level/progress/ChunkProgressListenerFactory;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.resourcepacks.ReloadableResourceManagerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "invalidateResourceCaches",
              "raw": "invalidateResourceCaches(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.nbt_memory_usage.CompoundTagMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "copyEfficient",
              "raw": "copyEfficient(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.mojang_registry_size.StateHolderMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "replaceEmptyTable",
              "raw": "replaceEmptyTable(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.mojang_registry_size.ResourceKeyMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "createEfficient",
              "raw": "createEfficient(Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.model_optimizations.SelectorMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.StateDefinition",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "storeCachedPredicate",
              "raw": "storeCachedPredicate(Lnet/minecraft/world/level/block/state/StateDefinition;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.model_optimizations.SelectorMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.StateDefinition",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "useCachedPredicate",
              "raw": "useCachedPredicate(Lnet/minecraft/world/level/block/state/StateDefinition;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.faster_texture_stitching.StitcherMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.texture.Stitcher$SpriteLoader",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "gatherSpritesFast",
              "raw": "gatherSpritesFast(Lnet/minecraft/client/renderer/texture/Stitcher$SpriteLoader;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.faster_texture_stitching.StitcherMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "stitchFast",
              "raw": "stitchFast(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.faster_item_rendering.ItemRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemDisplayContext",
                "boolean",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "net.minecraft.client.resources.model.BakedModel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "markRenderingType",
              "raw": "markRenderingType(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.faster_item_rendering.GameRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "markNotRenderingLevel",
              "raw": "markNotRenderingLevel(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/renderer/GameRenderer;renderLevel(Lnet/minecraft/client/DeltaTracker;)V}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.faster_item_rendering.GameRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "markRenderingLevel",
              "raw": "markRenderingLevel(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/renderer/GameRenderer;renderLevel(Lnet/minecraft/client/DeltaTracker;)V}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_structure_manager.StructureManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess",
                "com.mojang.datafixers.DataFixer",
                "net.minecraft.core.HolderGetter",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "makeStructuresSafe",
              "raw": "makeStructuresSafe(Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/core/HolderGetter;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_resources.ModelManagerMixin",
            "method": {
              "argTypes": [
                "java.lang.Object",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.client.resources.model.ModelBakery"
              ],
              "name": "freezeBakery",
              "raw": "freezeBakery(Ljava/lang/Object;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/client/resources/model/ModelBakery;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_resources.ModelManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.util.profiling.ProfilerFiller",
                "java.util.Map",
                "net.minecraft.client.resources.model.ModelBakery",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "storeTicker",
              "raw": "storeTicker(Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/Map;Lnet/minecraft/client/resources/model/ModelBakery;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_resources.ModelManagerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "injectDummyBakedRegistry",
              "raw": "injectDummyBakedRegistry(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_resources.ModelBakeryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.color.block.BlockColors",
                "net.minecraft.util.profiling.ProfilerFiller",
                "java.util.Map",
                "java.util.Map",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInitialLoadFinish",
              "raw": "onInitialLoadFinish(Lnet/minecraft/client/color/block/BlockColors;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/Map;Ljava/util/Map;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_resources.ModelBakeryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.resources.model.ModelBakery$TextureGetter",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInitialBakeFinish",
              "raw": "onInitialBakeFinish(Lnet/minecraft/client/resources/model/ModelBakery$TextureGetter;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_resources.ModelBakeryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.resources.model.ModelBakery$TextureGetter",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "storeTextureGetterAndBakeMissing",
              "raw": "storeTextureGetterAndBakeMissing(Lnet/minecraft/client/resources/model/ModelBakery$TextureGetter;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_resources.MinecraftMixin_ModelTicking",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tickModels",
              "raw": "tickModels(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_resources.ItemModelShaperMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "replaceLocationMap",
              "raw": "replaceLocationMap(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_resources.BlockStateModelLoaderMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.util.profiling.ProfilerFiller",
                "net.minecraft.client.resources.model.UnbakedModel",
                "net.minecraft.client.color.block.BlockColors",
                "java.util.function.BiConsumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "makeModelGroupsSynchronized",
              "raw": "makeModelGroupsSynchronized(Ljava/util/Map;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/client/resources/model/UnbakedModel;Lnet/minecraft/client/color/block/BlockColors;Ljava/util/function/BiConsumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_resources.BlockModelShaperMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "replaceModelMap",
              "raw": "replaceModelMap(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_entity_renderers.EntityRenderersMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.entity.EntityRendererProvider$Context",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "createDynamicRendererLoader",
              "raw": "createDynamicRendererLoader(Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.dynamic_entity_renderers.EntityRenderDispatcherMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "checkNullness",
              "raw": "checkNullness(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.deduplicate_wall_shapes.WallBlockMixin",
            "method": {
              "argTypes": [
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "storeCachedShapesByProperty",
              "raw": "storeCachedShapesByProperty(FFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.deduplicate_wall_shapes.WallBlockMixin",
            "method": {
              "argTypes": [
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "useCachedShapeMap",
              "raw": "useCachedShapeMap(FFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.deduplicate_location.MixinResourceLocation",
            "method": {
              "argTypes": [
                "java.lang.String",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "reinit",
              "raw": "reinit(Ljava/lang/String;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.compact_mojang_registries.MappedRegistryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "replaceStorage",
              "raw": "replaceStorage(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.compact_bit_storage.PalettedContainerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.FriendlyByteBuf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "int"
              ],
              "name": "validateData",
              "raw": "validateData(Lnet/minecraft/network/FriendlyByteBuf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;I)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], opcode=181, value=FIELD, target=Lnet/minecraft/world/level/chunk/PalettedContainer;data:Lnet/minecraft/world/level/chunk/PalettedContainer$Data;}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.cache_strongholds.ServerLevelMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "ensureGeneration",
              "raw": "ensureGeneration(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.cache_strongholds.ChunkGeneratorMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.Holder",
                "net.minecraft.world.level.levelgen.structure.placement.ConcentricRingsStructurePlacement",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "saveCachedData",
              "raw": "saveCachedData(Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.cache_strongholds.ChunkGeneratorMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.Holder",
                "net.minecraft.world.level.levelgen.structure.placement.ConcentricRingsStructurePlacement",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "useCachedDataIfAvailable",
              "raw": "useCachedDataIfAvailable(Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.cache_model_materials.MultipartMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "storeDependencyCache",
              "raw": "storeDependencyCache(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.perf.cache_model_materials.MultipartMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "useDependencyCache",
              "raw": "useDependencyCache(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.stalled_chunk_load_detection.ServerChunkCacheMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "net.minecraft.world.level.chunk.status.ChunkStatus",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "bailIfServerDead",
              "raw": "bailIfServerDead(IILnet/minecraft/world/level/chunk/status/ChunkStatus;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.remove_telemetry.MinecraftMixin_Telemetry",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "markTelemetryNotAllowed",
              "raw": "markTelemetryNotAllowed(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.remove_telemetry.ClientTelemetryManagerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "disableTelemetrySender",
              "raw": "disableTelemetrySender(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.remove_chat_signing.ChatTrustLevelMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "alwaysShowSecure",
              "raw": "alwaysShowSecure(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.measure_time.MinecraftMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "recordWorldLoadStart",
              "raw": "recordWorldLoadStart(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.measure_time.MinecraftMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClientTick",
              "raw": "onClientTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.measure_time.ConnectScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "recordConnectStartTime",
              "raw": "recordConnectStartTime(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.measure_time.BootstrapMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "printStartTime",
              "raw": "printStartTime(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.measure_time.BootstrapMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "recordStartTime",
              "raw": "recordStartTime(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{opcode=179, value=FIELD, target=Lnet/minecraft/server/Bootstrap;isBootstrapped:Z, ordinal=0}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.disable_unihex_font.UnihexProviderDefinitionMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "disableProvider",
              "raw": "disableProvider(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.direct_stack_trace.CrashReportMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "dumpStacktrace",
              "raw": "dumpStacktrace(Ljava/lang/String;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lorg/slf4j/Logger;error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V, remap=false}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.feature.blockentity_incorrect_thread.ChunkAccessMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.ChunkPos",
                "net.minecraft.world.level.chunk.UpgradeData",
                "net.minecraft.world.level.LevelHeightAccessor",
                "net.minecraft.core.Registry",
                "long",
                "[",
                "net.minecraft.world.level.chunk.LevelChunkSection",
                "net.minecraft.world.level.levelgen.blending.BlendingData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "wrapInConcurrencyDetector",
              "raw": "wrapInConcurrencyDetector(Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/UpgradeData;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/Registry;J[Lnet/minecraft/world/level/chunk/LevelChunkSection;Lnet/minecraft/world/level/levelgen/blending/BlendingData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.core.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "trackTickTime",
              "raw": "trackTickTime(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/server/MinecraftServer;tickServer(Ljava/util/function/BooleanSupplier;)V}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.bugfix.world_screen_skipped.WorldSelectionListMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preventClosingCreateScreenAfterDelete",
              "raw": "preventClosingCreateScreenAfterDelete(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry;doDeleteWorld()V, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.bugfix.world_leaks.MinecraftMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "clearLevelDataForLeaks",
              "raw": "clearLevelDataForLeaks(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{opcode=181, value=FIELD, target=Lnet/minecraft/client/Minecraft;level:Lnet/minecraft/client/multiplayer/ClientLevel;}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.bugfix.missing_block_entities.LevelChunkMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "validateBlockEntitiesInChunk",
              "raw": "validateBlockEntitiesInChunk(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "org.embeddedt.modernfix.common.mixin.bugfix.ender_dragon_leak.EnderDragonRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "clearDragonEntityReference",
              "raw": "clearDragonEntityReference(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "jei": "[15.8.0.11,)",
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.111-beta,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "org.embeddedt.modernfix.neoforge.init.ModernFixClientForge#onConfigKey"
        ],
        "net.neoforged.neoforge.client.event.CustomizeGuiOverlayEvent$DebugText": [
          "org.embeddedt.modernfix.neoforge.init.ModernFixClientForge#onRenderOverlay"
        ],
        "net.neoforged.neoforge.client.event.RecipesUpdatedEvent": [
          "org.embeddedt.modernfix.neoforge.init.ModernFixClientForge#onRecipes"
        ],
        "net.neoforged.neoforge.client.event.RenderFrameEvent$Post": [
          "org.embeddedt.modernfix.neoforge.init.ModernFixClientForge#onRenderTickEnd"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "org.embeddedt.modernfix.neoforge.datagen.RuntimeDatagen#onInitTitleScreen"
        ],
        "net.neoforged.neoforge.event.TagsUpdatedEvent": [
          "org.embeddedt.modernfix.neoforge.init.ModernFixClientForge#onTags"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "org.embeddedt.modernfix.neoforge.init.ModernFixClientForge#onDisconnect"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "org.embeddedt.modernfix.neoforge.init.ModernFixForge#onServerStarted",
          "org.embeddedt.modernfix.neoforge.init.ModernFixClientForge#onServerStarting"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppedEvent": [
          "org.embeddedt.modernfix.neoforge.init.ModernFixForge#onServerDead"
        ]
      },
      "info": {
        "authors": "embeddedt",
        "classes": "241",
        "description": "Egregious, yet effective performance improvements for modern Minecraft\n",
        "displayName": "ModernFix",
        "file": "modernfix-neoforge-5.20.2+mc1.21.1.jar",
        "license": "GNU LGPL 3.0",
        "package": "org.embeddedt.modernfix",
        "version": "5.20.2+mc1.21.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "org.embeddedt.modernfix.screen.ModernFixOptionInfoScreen",
          "org.embeddedt.modernfix.screen.ModernFixConfigScreen"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "org.embeddedt.modernfix.render.SimpleItemModelView"
        ],
        "net.minecraft.world.level.block.Block": [
          "org.embeddedt.modernfix.common.mixin.perf.deduplicate_wall_shapes.WallBlockMixin"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "org.embeddedt.modernfix.world.StrongholdLocationCache"
        ]
      },
      "modifies": [
        "cofh.lib.util.flags.FlagManager",
        "com.lothrazar.cyclic.block.cable.ShapeCache",
        "com.lowdragmc.lowdraglib.client.ClientProxy",
        "com.mojang.blaze3d.vertex.PoseStack",
        "com.mojang.math.Transformation",
        "com.refinedmods.refinedstorage.block.shape.ShapeCache",
        "dev.latvian.mods.kubejs.recipe.RecipesEventJS",
        "net.minecraft.CrashReport",
        "net.minecraft.Util",
        "net.minecraft.client.GameNarrator",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.color.block.BlockColors",
        "net.minecraft.client.color.item.ItemColors",
        "net.minecraft.client.gui.font.providers.UnihexProvider$Definition",
        "net.minecraft.client.gui.screens.ConnectScreen",
        "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen",
        "net.minecraft.client.gui.screens.worldselection.WorldOpenFlows",
        "net.minecraft.client.gui.screens.worldselection.WorldSelectionList$WorldListEntry",
        "net.minecraft.client.multiplayer.ProfileKeyPairManager",
        "net.minecraft.client.multiplayer.chat.ChatTrustLevel",
        "net.minecraft.client.renderer.GameRenderer",
        "net.minecraft.client.renderer.ItemModelShaper",
        "net.minecraft.client.renderer.block.BlockModelShaper",
        "net.minecraft.client.renderer.block.model.multipart.MultiPart",
        "net.minecraft.client.renderer.block.model.multipart.Selector",
        "net.minecraft.client.renderer.chunk.SectionCompiler",
        "net.minecraft.client.renderer.chunk.SectionRenderDispatcher",
        "net.minecraft.client.renderer.entity.EnderDragonRenderer",
        "net.minecraft.client.renderer.entity.EntityRenderDispatcher",
        "net.minecraft.client.renderer.entity.EntityRenderers",
        "net.minecraft.client.renderer.entity.ItemRenderer",
        "net.minecraft.client.renderer.entity.LivingEntityRenderer",
        "net.minecraft.client.renderer.entity.player.PlayerRenderer",
        "net.minecraft.client.renderer.item.ItemProperties",
        "net.minecraft.client.renderer.texture.Stitcher",
        "net.minecraft.client.resources.SkinManager$TextureCache",
        "net.minecraft.client.resources.model.BlockStateModelLoader",
        "net.minecraft.client.resources.model.ModelBakery",
        "net.minecraft.client.resources.model.ModelBakery$ModelBakerImpl",
        "net.minecraft.client.resources.model.ModelManager",
        "net.minecraft.client.server.IntegratedServer",
        "net.minecraft.client.sounds.SoundBufferLibrary",
        "net.minecraft.client.telemetry.ClientTelemetryManager",
        "net.minecraft.core.MappedRegistry",
        "net.minecraft.nbt.CompoundTag",
        "net.minecraft.nbt.CompoundTag$1",
        "net.minecraft.resources.ResourceKey",
        "net.minecraft.resources.ResourceLocation",
        "net.minecraft.server.Bootstrap",
        "net.minecraft.server.MinecraftServer",
        "net.minecraft.server.level.ServerChunkCache",
        "net.minecraft.server.level.ServerLevel",
        "net.minecraft.server.packs.resources.ProfiledReloadInstance",
        "net.minecraft.server.packs.resources.ReloadableResourceManager",
        "net.minecraft.server.packs.resources.SimpleReloadInstance",
        "net.minecraft.stats.RecipeBookSettings",
        "net.minecraft.tags.TagEntry",
        "net.minecraft.util.ExtraCodecs$TagOrElementLocation",
        "net.minecraft.util.SortedArraySet",
        "net.minecraft.util.thread.BlockableEventLoop",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.ambient.Bat",
        "net.minecraft.world.entity.boss.enderdragon.EnderDragon",
        "net.minecraft.world.item.crafting.RecipeManager",
        "net.minecraft.world.level.Level",
        "net.minecraft.world.level.biome.Biome",
        "net.minecraft.world.level.biome.Climate$Parameter",
        "net.minecraft.world.level.biome.Climate$ParameterPoint",
        "net.minecraft.world.level.block.Blocks",
        "net.minecraft.world.level.block.WallBlock",
        "net.minecraft.world.level.block.state.BlockBehaviour",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase$Cache",
        "net.minecraft.world.level.block.state.StateDefinition",
        "net.minecraft.world.level.block.state.StateHolder",
        "net.minecraft.world.level.block.state.properties.BooleanProperty",
        "net.minecraft.world.level.block.state.properties.Property",
        "net.minecraft.world.level.chunk.ChunkAccess",
        "net.minecraft.world.level.chunk.ChunkGeneratorStructureState",
        "net.minecraft.world.level.chunk.LevelChunk",
        "net.minecraft.world.level.chunk.PalettedContainer",
        "net.minecraft.world.level.levelgen.NoiseChunk",
        "net.minecraft.world.level.levelgen.SurfaceRules$Context",
        "net.minecraft.world.level.levelgen.SurfaceRules$SequenceRule",
        "net.minecraft.world.level.levelgen.material.MaterialRuleList",
        "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager",
        "net.neoforged.neoforge.client.ClientHooks",
        "net.neoforged.neoforge.client.model.RegistryAwareItemModelShaper",
        "net.neoforged.neoforge.client.model.obj.ObjLoader",
        "net.neoforged.neoforge.internal.BrandingControl",
        "net.neoforged.neoforge.registries.GameData",
        "net.neoforged.neoforge.registries.NeoForgeRegistryCallbacks$BlockCallbacks",
        "team.chisel.ctm.client.util.ResourceUtil",
        "team.chisel.ctm.client.util.TextureMetadataHandler",
        "vazkii.patchouli.client.book.ClientBookRegistry"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Blocks",
        "Custom GUI Screens",
        "Listens to Recipe Updates",
        "Listens to Server Started Events",
        "Listens to Server Stopped Events",
        "Listens to Tag Updates",
        "Localization",
        "Modifies Methods",
        "Runs Client Tick Logic",
        "Stores Data in World Saves",
        "Uses Access Transformers"
      ]
    },
    "modernworldcreation": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "de.keksuccino.modernworldcreation.mixin.mixins.common.client.MixinTabManager",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.components.tabs.Tab",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "after_setCurrentTab_ModernWorldCreation",
              "raw": "after_setCurrentTab_ModernWorldCreation(Lnet/minecraft/client/gui/components/tabs/Tab;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.modernworldcreation.mixin.mixins.common.client.MixinCreateWorldScreen",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "after_render_ModernWorldCreation",
              "raw": "after_render_ModernWorldCreation(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "de.keksuccino.modernworldcreation.mixin.mixins.common.client.MixinCreateWorldScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "after_repositionElements_ModernWorldCreation",
              "raw": "after_repositionElements_ModernWorldCreation(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "konkrete": "[1.9.0,)",
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.97,)"
      },
      "info": {
        "authors": "Keksuccino",
        "classes": "28",
        "description": "Gives the Create World screen a makeover!",
        "displayName": "Modern World Creation",
        "file": "modernworldcreation_neoforge_2.0.1_MC_1.21.1.jar",
        "license": "DSMSLv2 (DON'T SNATCH MA STUFF LICENSE v2)",
        "package": "de.keksuccino.modernworldcreation",
        "version": "2.0.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "de.keksuccino.modernworldcreation.mixin.mixins.common.client.MixinCreateWorldScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.components.tabs.TabManager",
        "net.minecraft.client.gui.components.tabs.TabNavigationBar",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen"
      ],
      "summary": [
        "Custom GUI Screens",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "modonomicon": {
      "dependencies": {
        "jei": "[19.8.2.0,)",
        "neoforge": "[21.0.110-beta,)",
        "patchouli": "TODO"
      },
      "info": {
        "authors": "Kli Kli",
        "classes": "398",
        "description": "Data-driven minecraft in-game documentation with progress visualization.",
        "displayName": "Modonomicon",
        "file": "modonomicon-1.21.1-neoforge-1.112.2.jar",
        "license": "MIT AND CC-BY-4.0",
        "package": "com.klikli_dev.modonomicon",
        "version": "1.112.2"
      },
      "inheritance": {
        "com.mojang.brigadier.Command": [
          "com.klikli_dev.modonomicon.command.SaveUnlocksCommand",
          "com.klikli_dev.modonomicon.command.ResetBookUnlocksCommand",
          "com.klikli_dev.modonomicon.command.ReloadBooksCommand",
          "com.klikli_dev.modonomicon.command.LoadUnlocksCommand"
        ],
        "net.minecraft.client.gui.screens.Screen": [
          "com.klikli_dev.modonomicon.client.gui.book.search.BookSearchScreen",
          "com.klikli_dev.modonomicon.client.gui.book.node.BookParentNodeScreen",
          "com.klikli_dev.modonomicon.client.gui.book.index.BookParentIndexScreen",
          "com.klikli_dev.modonomicon.client.gui.book.index.BookCategoryIndexScreen",
          "com.klikli_dev.modonomicon.client.gui.book.index.BookCategoryIndexOnNodeScreen",
          "com.klikli_dev.modonomicon.client.gui.book.entry.BookEntrySinglePageScreen",
          "com.klikli_dev.modonomicon.client.gui.book.entry.BookEntryScreen",
          "com.klikli_dev.modonomicon.client.gui.book.entry.BookEntryDoublePageScreen",
          "com.klikli_dev.modonomicon.client.gui.book.bookmarks.BookBookmarksScreen",
          "com.klikli_dev.modonomicon.client.gui.book.BookPaginatedScreen",
          "com.klikli_dev.modonomicon.client.gui.book.BookErrorScreen"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "com.klikli_dev.modonomicon.client.BookModelLoader$BookOverrideModel"
        ],
        "net.minecraft.data.DataProvider": [
          "com.klikli_dev.modonomicon.datagen.ItemTagsProvider",
          "com.klikli_dev.modonomicon.datagen.ItemModelProvider",
          "com.klikli_dev.modonomicon.datagen.EnUsProvider",
          "com.klikli_dev.modonomicon.datagen.DemoMultiblockProvider",
          "com.klikli_dev.modonomicon.datagen.BlockTagsProvider",
          "com.klikli_dev.modonomicon.api.datagen.MultiblockProvider",
          "com.klikli_dev.modonomicon.api.datagen.BookProvider",
          "com.klikli_dev.modonomicon.api.datagen.AbstractModonomiconLanguageProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.klikli_dev.modonomicon.item.ModonomiconItem"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.klikli_dev.modonomicon.bookstate.BookStatesSaveData"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "com.klikli_dev.modonomicon.client.BookModelLoader"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Model Loaders",
        "Custom Tag Assignments",
        "Has Commands",
        "Localization",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "modularrouters": {
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "me.desht.modularrouters.client.ClientSetup#onClientSetup"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "me.desht.modularrouters.event.ClientEventHandler#clientTick"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "me.desht.modularrouters.client.render.area.ModuleTargetRenderer#clientTick"
        ],
        "net.neoforged.neoforge.client.event.ContainerScreenEvent$Render$Foreground": [
          "me.desht.modularrouters.client.gui.MouseOverHelp#drawMouseOver"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "me.desht.modularrouters.client.ClientSetup#registerRenderers"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$ModifyBakingResult": [
          "me.desht.modularrouters.client.model.ModelBakeEventHandler#onModelBake"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "me.desht.modularrouters.client.ColorHandlers#registerBlockColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "me.desht.modularrouters.client.ColorHandlers#registerItemColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "me.desht.modularrouters.client.ClientSetup#registerKeyBindings"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "me.desht.modularrouters.client.ClientSetup#registerScreens"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "me.desht.modularrouters.client.render.area.ModuleTargetRenderer#renderWorldLastEvent"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "me.desht.modularrouters.ModularRouters$DataGenerators#gatherData"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerContainerEvent$Close": [
          "me.desht.modularrouters.event.MiscEventHandler#onRouterMenuClose"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$BreakSpeed": [
          "me.desht.modularrouters.event.MiscEventHandler#onDigSpeedCheck"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$ItemCraftedEvent": [
          "me.desht.modularrouters.event.MiscEventHandler#onItemCrafted"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "me.desht.modularrouters.logic.compiled.CompiledPlayerModule#onPlayerLogin"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "me.desht.modularrouters.logic.compiled.CompiledPlayerModule#onPlayerLogout"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickBlock": [
          "me.desht.modularrouters.event.ClientEventHandler#onPlayerLeftClick"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickEmpty": [
          "me.desht.modularrouters.event.ClientEventHandler#onPlayerLeftClick"
        ],
        "net.neoforged.neoforge.event.level.BlockDropsEvent": [
          "me.desht.modularrouters.event.MiscEventHandler#onBlockDrops"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Post": [
          "me.desht.modularrouters.event.TickEventHandler#onWorldTick"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "me.desht.modularrouters.network.NetworkHandler#register"
        ]
      },
      "info": {
        "classes": "373",
        "description": "Modular Routers is a highly flexible mod for moving items/fluids/energy around the world in various ways.",
        "displayName": "Modular Routers",
        "file": "modular-routers-13.2.1+mc1.21.1.jar",
        "license": "MIT",
        "package": "me.desht.modularrouters",
        "updateUrl": "https://raw.githubusercontent.com/desht/ModularRouters/MC1.21-master/release_info.json",
        "version": "13.2.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "me.desht.modularrouters.client.gui.module.EnergyDistributorModuleScreen",
          "me.desht.modularrouters.client.gui.module.PlayerModuleScreen",
          "me.desht.modularrouters.client.gui.module.VacuumModuleScreen",
          "me.desht.modularrouters.client.gui.module.DistributorModuleScreen",
          "me.desht.modularrouters.client.gui.module.FlingerModuleScreen",
          "me.desht.modularrouters.client.gui.module.ModuleScreen",
          "me.desht.modularrouters.client.gui.module.BreakerModuleScreen",
          "me.desht.modularrouters.client.gui.module.FluidModuleScreen",
          "me.desht.modularrouters.client.gui.module.ActivatorModuleScreen",
          "me.desht.modularrouters.client.gui.module.ExtruderModule2Screen",
          "me.desht.modularrouters.client.gui.module.DetectorModuleScreen",
          "me.desht.modularrouters.client.gui.filter.AbstractFilterScreen",
          "me.desht.modularrouters.client.gui.filter.ModFilterScreen",
          "me.desht.modularrouters.client.gui.filter.InspectionFilterScreen",
          "me.desht.modularrouters.client.gui.filter.TagFilterScreen",
          "me.desht.modularrouters.client.gui.filter.AbstractFilterContainerScreen",
          "me.desht.modularrouters.client.gui.filter.RegexFilterScreen",
          "me.desht.modularrouters.client.gui.filter.BulkItemFilterScreen",
          "me.desht.modularrouters.client.gui.ModularRouterScreen",
          "me.desht.modularrouters.client.gui.upgrade.SyncUpgradeScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "me.desht.modularrouters.client.render.blockentity.ModularRouterBER"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "me.desht.modularrouters.client.model.CamouflagingModel$RouterModel",
          "me.desht.modularrouters.client.model.CamouflagingModel",
          "me.desht.modularrouters.client.model.CamouflagingModel$TemplateFrameModel"
        ],
        "net.minecraft.data.DataProvider": [
          "me.desht.modularrouters.datagen.ModRecipeProvider",
          "me.desht.modularrouters.datagen.ModItemTagsProvider",
          "me.desht.modularrouters.datagen.ModBlockStateProvider",
          "me.desht.modularrouters.datagen.ModItemModelProvider",
          "me.desht.modularrouters.datagen.ModBlockTagsProvider",
          "me.desht.modularrouters.datagen.ModLootTableProvider",
          "me.desht.modularrouters.datagen.ModEntityTypeTagsProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "me.desht.modularrouters.util.fake_player.RouterFakePlayer"
        ],
        "net.minecraft.world.item.Item": [
          "me.desht.modularrouters.item.smartfilter.BulkItemFilter",
          "me.desht.modularrouters.item.smartfilter.ModFilter",
          "me.desht.modularrouters.item.smartfilter.InspectionFilter",
          "me.desht.modularrouters.item.smartfilter.TagFilter",
          "me.desht.modularrouters.item.smartfilter.RegexFilter",
          "me.desht.modularrouters.item.smartfilter.SmartFilterItem",
          "me.desht.modularrouters.item.module.DistributorModule",
          "me.desht.modularrouters.item.module.FlingerModule",
          "me.desht.modularrouters.item.module.PullerModule2",
          "me.desht.modularrouters.item.module.PlacerModule",
          "me.desht.modularrouters.item.module.SenderModule2",
          "me.desht.modularrouters.item.module.FluidModule1",
          "me.desht.modularrouters.item.module.ExtruderModule2",
          "me.desht.modularrouters.item.module.DropperModule",
          "me.desht.modularrouters.item.module.EnergyDistributorModule",
          "me.desht.modularrouters.item.module.DetectorModule",
          "me.desht.modularrouters.item.module.PlayerModule",
          "me.desht.modularrouters.item.module.FluidModule2",
          "me.desht.modularrouters.item.module.CreativeModule",
          "me.desht.modularrouters.item.module.ActivatorModule",
          "me.desht.modularrouters.item.module.BreakerModule",
          "me.desht.modularrouters.item.module.VoidModule",
          "me.desht.modularrouters.item.module.ExtruderModule1",
          "me.desht.modularrouters.item.module.SenderModule3",
          "me.desht.modularrouters.item.module.ModuleItem",
          "me.desht.modularrouters.item.module.EnergyOutputModule",
          "me.desht.modularrouters.item.module.SenderModule1",
          "me.desht.modularrouters.item.module.PullerModule1",
          "me.desht.modularrouters.item.module.VacuumModule",
          "me.desht.modularrouters.item.augment.RangeAugments$RangeDownAugment",
          "me.desht.modularrouters.item.augment.XPVacuumAugment",
          "me.desht.modularrouters.item.augment.PickupDelayAugment",
          "me.desht.modularrouters.item.augment.AugmentItem",
          "me.desht.modularrouters.item.augment.RangeAugments",
          "me.desht.modularrouters.item.augment.FastPickupAugment",
          "me.desht.modularrouters.item.augment.PushingAugment",
          "me.desht.modularrouters.item.augment.StackAugment",
          "me.desht.modularrouters.item.augment.RedstoneAugment",
          "me.desht.modularrouters.item.augment.FilterRoundRobinAugment",
          "me.desht.modularrouters.item.augment.RegulatorAugment",
          "me.desht.modularrouters.item.augment.RangeAugments$RangeUpAugment",
          "me.desht.modularrouters.item.augment.MimicAugment",
          "me.desht.modularrouters.item.MRBaseItem",
          "me.desht.modularrouters.item.upgrade.StackUpgrade",
          "me.desht.modularrouters.item.upgrade.SyncUpgrade",
          "me.desht.modularrouters.item.upgrade.CamouflageUpgrade",
          "me.desht.modularrouters.item.upgrade.SecurityUpgrade",
          "me.desht.modularrouters.item.upgrade.MufflerUpgrade",
          "me.desht.modularrouters.item.upgrade.FluidUpgrade",
          "me.desht.modularrouters.item.upgrade.SpeedUpgrade",
          "me.desht.modularrouters.item.upgrade.EnergyUpgrade",
          "me.desht.modularrouters.item.upgrade.UpgradeItem",
          "me.desht.modularrouters.item.upgrade.BlastUpgrade"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "me.desht.modularrouters.recipe.ResetModuleRecipe",
          "me.desht.modularrouters.recipe.PickaxeModuleRecipe$ExtruderModule1Recipe",
          "me.desht.modularrouters.recipe.GuideBookRecipe",
          "me.desht.modularrouters.recipe.PickaxeModuleRecipe$BreakerModuleRecipe",
          "me.desht.modularrouters.recipe.PickaxeModuleRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "me.desht.modularrouters.block.ModularRouterBlock",
          "me.desht.modularrouters.block.CamouflageableBlock",
          "me.desht.modularrouters.block.TemplateFrameBlock"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Loot Tables",
        "Custom Network Packets",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Handles Left Clicks with Empty Hands (Client-side)",
        "Listens to Item Crafting Events",
        "Listens to Left Click Block Events",
        "Listens to Player Login Events",
        "Listens to Player Logout Events",
        "Localization",
        "Modifies Block Breaking Speed",
        "Modifies World Rendering",
        "Patchouli Guide Book",
        "Runs Client Tick Logic",
        "Runs World Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "moonlight": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.neoforge.PacketDistributorHackMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.network.protocol.common.custom.CustomPacketPayload",
                "[",
                "net.minecraft.network.protocol.common.custom.CustomPacketPayload",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "ml$fixHardCast2",
              "raw": "ml$fixHardCast2(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;[Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.neoforge.PacketDistributorHackMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.network.protocol.common.custom.CustomPacketPayload",
                "[",
                "net.minecraft.network.protocol.common.custom.CustomPacketPayload",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "ml$fixHardCast1",
              "raw": "ml$fixHardCast1(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;[Lnet/minecraft/network/protocol/common/custom/CustomPacketPayload;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.neoforge.ItemMixin",
            "method": {
              "argTypes": [
                "java.util.function.Consumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initializeClient",
              "raw": "initializeClient(Ljava/util/function/Consumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.neoforge.ConditionHackMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "java.lang.Object",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "applyResourceConditions",
              "raw": "applyResourceConditions(Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/lang/Object;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.VillagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.ai.Brain",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "reg",
              "raw": "reg(Lnet/minecraft/world/entity/ai/Brain;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.ThrownPotionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.block.state.BlockState"
              ],
              "name": "moonlight$extinguishILightables",
              "raw": "moonlight$extinguishILightables(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/block/state/BlockState;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.ThirdPersonRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setupAnim",
              "raw": "setupAnim(Lnet/minecraft/world/entity/LivingEntity;FFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.ThirdPersonRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "poseLeftArm",
              "raw": "poseLeftArm(Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.ThirdPersonRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "poseRightArm",
              "raw": "poseRightArm(Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.PlayerItemInHandLayerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemDisplayContext",
                "net.minecraft.world.entity.HumanoidArm",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "poseRightArm",
              "raw": "poseRightArm(Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.PistonBlockEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.block.piston.PistonMovingBlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onFinishedMoving2",
              "raw": "onFinishedMoving2(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/level/Level;neighborChanged(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.PistonBlockEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.block.piston.PistonMovingBlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onFinishedMoving",
              "raw": "onFinishedMoving(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/level/block/Block;updateOrDestroy(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.PistonBlockEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onFinishedShortPulse",
              "raw": "onFinishedShortPulse(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/level/Level;neighborChanged(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.PistonBlockEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.block.piston.PistonMovingBlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "whileMoving",
              "raw": "whileMoving(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MultiPackResourceManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.PackType",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "moonlight$dynamicPackEarlyReload",
              "raw": "moonlight$dynamicPackEarlyReload(Lnet/minecraft/server/packs/PackType;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MinecraftMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "moonlight$onItemLeftClick",
              "raw": "moonlight$onItemLeftClick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/world/phys/HitResult;getType()Lnet/minecraft/world/phys/HitResult$Type;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MapRendererMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "net.minecraft.world.level.saveddata.maps.MapId",
                "net.minecraft.world.level.saveddata.maps.MapItemSavedData",
                "boolean",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "render",
              "raw": "render(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/saveddata/maps/MapId;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MapItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.entity.Entity",
                "net.minecraft.world.level.saveddata.maps.MapItemSavedData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "update",
              "raw": "update(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MapItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.Item$TooltipContext",
                "java.util.List",
                "net.minecraft.world.item.TooltipFlag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "appendHoverText",
              "raw": "appendHoverText(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item$TooltipContext;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MapDataMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "byte",
                "boolean",
                "boolean",
                "boolean",
                "net.minecraft.resources.ResourceKey",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initCustomData",
              "raw": "initCustomData(IIBZZZLnet/minecraft/resources/ResourceKey;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MapDataMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "checkCustomDeco",
              "raw": "checkCustomDeco(Lnet/minecraft/world/level/BlockGetter;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MapDataMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "net.minecraft.core.HolderLookup$Provider",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "save",
              "raw": "save(Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/HolderLookup$Provider;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MapDataMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "net.minecraft.core.HolderLookup$Provider",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "load",
              "raw": "load(Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/HolderLookup$Provider;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MapDataMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tickCarriedBy",
              "raw": "tickCarriedBy(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MapDataMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "scaled",
              "raw": "scaled(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.MapDataMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "locked",
              "raw": "locked(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.LightningEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "powerLightningRod",
              "raw": "powerLightningRod(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.LightingMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "moonlight$resetEntityRendererLightingGui",
              "raw": "moonlight$resetEntityRendererLightingGui(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.LightingMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "moonlight$messEntityRendererLightingN",
              "raw": "moonlight$messEntityRendererLightingN(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.LightingMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "moonlight$messWithEntityRendererLighting",
              "raw": "moonlight$messWithEntityRendererLighting(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.context.UseOnContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onUseOnBlock",
              "raw": "onUseOnBlock(Lnet/minecraft/world/item/context/UseOnContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.ItemInHandRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.player.AbstractClientPlayer",
                "float",
                "float",
                "net.minecraft.world.InteractionHand",
                "float",
                "net.minecraft.world.item.ItemStack",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.entity.HumanoidArm"
              ],
              "name": "moonlight$renderSpecial",
              "raw": "moonlight$renderSpecial(Lnet/minecraft/client/player/AbstractClientPlayer;FFLnet/minecraft/world/InteractionHand;FLnet/minecraft/world/item/ItemStack;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/entity/HumanoidArm;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/player/AbstractClientPlayer;isUsingItem()Z, ordinal=1}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.ItemInHandRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.player.AbstractClientPlayer",
                "float",
                "float",
                "net.minecraft.world.InteractionHand",
                "float",
                "net.minecraft.world.item.ItemStack",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "moonlight$animateItem",
              "raw": "moonlight$animateItem(Lnet/minecraft/client/player/AbstractClientPlayer;FFLnet/minecraft/world/InteractionHand;FLnet/minecraft/world/item/ItemStack;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, ordinal=1, target=Lnet/minecraft/client/renderer/ItemInHandRenderer;renderItem(Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.InventoryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.util.Iterator",
                "java.util.List",
                "int"
              ],
              "name": "restoreNotDropped",
              "raw": "restoreNotDropped(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/util/Iterator;Ljava/util/List;I)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Ljava/util/List;get(I)Ljava/lang/Object;}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.InventoryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.util.Iterator",
                "java.util.List",
                "int"
              ],
              "name": "fireDropEvent",
              "raw": "fireDropEvent(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/util/Iterator;Ljava/util/List;I)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Ljava/util/List;get(I)Ljava/lang/Object;}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.HoldingPlayerMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "sanityCheck",
              "raw": "sanityCheck(IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.HoldingPlayerMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "lockData",
              "raw": "lockData(IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.HoldingPlayerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.saveddata.maps.MapId",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "checkLocked",
              "raw": "checkLocked(Lnet/minecraft/world/level/saveddata/maps/MapId;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.HoldingPlayerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.saveddata.maps.MapItemSavedData",
                "net.minecraft.world.entity.player.Player",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initializeDirty",
              "raw": "initializeDirty(Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;Lnet/minecraft/world/entity/player/Player;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.GrindstoneMenuSlotMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onTake",
              "raw": "onTake(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.FixBlockPlaceContextMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "fixNotAccountingForNullPlayer3",
              "raw": "fixNotAccountingForNullPlayer3(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.FixBlockPlaceContextMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "fixNotAccountingForNullPlayer2",
              "raw": "fixNotAccountingForNullPlayer2(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.FixBlockPlaceContextMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "fixNotAccountingForNullPlayer1",
              "raw": "fixNotAccountingForNullPlayer1(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.BlockItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.context.BlockPlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "updatePlacementContext",
              "raw": "updatePlacementContext(Lnet/minecraft/world/item/context/BlockPlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.BlockItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.context.BlockPlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "place",
              "raw": "place(Lnet/minecraft/world/item/context/BlockPlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.BlockItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.context.BlockPlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getPlacementState",
              "raw": "getPlacementState(Lnet/minecraft/world/item/context/BlockPlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.moonlight.core.mixins.BeeGoalMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "int",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.block.Block",
                "net.minecraft.world.level.block.state.BlockState"
              ],
              "name": "tick",
              "raw": "tick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockState;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BY], by=-2, value=INVOKE, target=Lnet/minecraft/world/level/Level;levelEvent(ILnet/minecraft/core/BlockPos;I)V}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[4,)"
      },
      "events": {
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "net.mehvahdjukaar.moonlight.neoforge.MoonlightForge#onResourceReload"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "net.mehvahdjukaar.moonlight.neoforge.MoonlightForge#onDataSync"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$Clone": [
          "net.mehvahdjukaar.moonlight.neoforge.MoonlightForge#onPlayerClone"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "net.mehvahdjukaar.moonlight.neoforge.MoonlightForge#onPlayerLoggedIn"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "net.mehvahdjukaar.moonlight.neoforge.MoonlightForge#onDimensionUnload"
        ],
        "net.neoforged.neoforge.event.server.ServerAboutToStartEvent": [
          "net.mehvahdjukaar.moonlight.neoforge.MoonlightForge#beforeServerStart"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppedEvent": [
          "net.mehvahdjukaar.moonlight.neoforge.MoonlightForge#onServerStopped"
        ],
        "net.neoforged.neoforge.registries.DataPackRegistryEvent$NewRegistry": [
          "net.mehvahdjukaar.moonlight.core.map.neoforge.MapDataInternalImpl#registerDataPackRegistry",
          "net.mehvahdjukaar.moonlight.core.fluid.neoforge.SoftFluidInternalImpl#registerDataPackRegistry"
        ]
      },
      "info": {
        "authors": "MehVahdJukaar",
        "classes": "456",
        "description": "A small library with many cool unique features, from dynamic asset generation to dynamic villager schedules, data driven trades and Map Markers, simple multi loader utilities and more",
        "displayName": "Moonlight Lib",
        "file": "moonlight-1.21-2.17.24-neoforge.jar",
        "license": "gplv3",
        "package": "net.mehvahdjukaar.moonlight.api",
        "url": "https://www.curseforge.com/minecraft/mc-mods/selene",
        "version": "1.21-2.17.24"
      },
      "inheritance": {
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "net.mehvahdjukaar.moonlight.api.client.ItemStackRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "net.mehvahdjukaar.moonlight.core.mixins.neoforge.SelfCustomBakedModel",
          "net.mehvahdjukaar.moonlight.api.client.model.CustomBakedModel"
        ],
        "net.minecraft.world.entity.Entity": [
          "net.mehvahdjukaar.moonlight.core.mixins.VillagerMixin",
          "net.mehvahdjukaar.moonlight.core.mixins.ThrownPotionMixin",
          "net.mehvahdjukaar.moonlight.core.mixins.LightningEntityMixin",
          "net.mehvahdjukaar.moonlight.core.mixins.EntityMixin",
          "net.mehvahdjukaar.moonlight.core.fake_player.FakeLocalPlayer",
          "net.mehvahdjukaar.moonlight.core.fake_player.FakeGenericPlayer",
          "net.mehvahdjukaar.moonlight.api.entity.ImprovedProjectileEntity",
          "net.mehvahdjukaar.moonlight.api.entity.ImprovedFallingBlockEntity"
        ],
        "net.minecraft.world.entity.Mob": [
          "net.mehvahdjukaar.moonlight.core.mixins.VillagerMixin"
        ],
        "net.minecraft.world.item.Item": [
          "net.mehvahdjukaar.moonlight.core.mixins.BlockItemMixin",
          "net.mehvahdjukaar.moonlight.api.item.additional_placements.BlockPlacerItem",
          "net.mehvahdjukaar.moonlight.api.item.WoodBasedItem",
          "net.mehvahdjukaar.moonlight.api.item.WoodBasedBlockItem",
          "net.mehvahdjukaar.moonlight.api.item.ModBucketItem",
          "net.mehvahdjukaar.moonlight.api.item.BlockTypeBasedItem",
          "net.mehvahdjukaar.moonlight.api.item.BlockTypeBasedBlockItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.mehvahdjukaar.moonlight.core.mixins.neoforge.FireBlockMixin",
          "net.mehvahdjukaar.moonlight.api.block.WaterBlock",
          "net.mehvahdjukaar.moonlight.api.block.ModStairBlock",
          "net.mehvahdjukaar.moonlight.api.block.ModLiquidBlock",
          "net.mehvahdjukaar.moonlight.api.block.MimicBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "net.mehvahdjukaar.moonlight.core.mixins.MapDataMixin"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "net.mehvahdjukaar.moonlight.core.mixins.neoforge.SelfCustomModelLoaderMixin"
        ]
      },
      "modifies": [
        "com.mojang.blaze3d.platform.Lighting",
        "net.mehvahdjukaar.moonlight.api.block.IPistonMotionReact",
        "net.mehvahdjukaar.moonlight.api.client.ModFluidRenderProperties",
        "net.mehvahdjukaar.moonlight.api.client.model.CustomBakedModel",
        "net.mehvahdjukaar.moonlight.api.client.model.CustomModelLoader",
        "net.mehvahdjukaar.moonlight.api.client.model.IExtraModelDataProvider",
        "net.mehvahdjukaar.moonlight.api.entity.IExtraClientSpawnData",
        "net.mehvahdjukaar.moonlight.api.fluids.ModFlowingFluid",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.MapRenderer",
        "net.minecraft.client.gui.MapRenderer$MapInstance",
        "net.minecraft.client.model.HumanoidModel",
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.client.renderer.ItemInHandRenderer",
        "net.minecraft.client.renderer.entity.layers.PlayerItemInHandLayer",
        "net.minecraft.client.renderer.texture.DynamicTexture",
        "net.minecraft.client.resources.language.ClientLanguage",
        "net.minecraft.network.protocol.game.ClientboundMapItemDataPacket",
        "net.minecraft.server.level.ServerLevel",
        "net.minecraft.server.packs.resources.MultiPackResourceManager",
        "net.minecraft.server.packs.resources.SimplePreparableReloadListener",
        "net.minecraft.world.entity.LightningBolt",
        "net.minecraft.world.entity.Mob",
        "net.minecraft.world.entity.ai.Brain",
        "net.minecraft.world.entity.animal.Bee$BeeGrowCropGoal",
        "net.minecraft.world.entity.npc.Villager",
        "net.minecraft.world.entity.player.Inventory",
        "net.minecraft.world.entity.projectile.ThrownPotion",
        "net.minecraft.world.inventory.GrindstoneMenu$4",
        "net.minecraft.world.item.BlockItem",
        "net.minecraft.world.item.Item",
        "net.minecraft.world.item.MapItem",
        "net.minecraft.world.item.ShearsItem",
        "net.minecraft.world.item.context.BlockPlaceContext",
        "net.minecraft.world.level.block.DispenserBlock",
        "net.minecraft.world.level.block.FireBlock",
        "net.minecraft.world.level.block.entity.DispenserBlockEntity",
        "net.minecraft.world.level.block.piston.PistonMovingBlockEntity",
        "net.minecraft.world.level.chunk.LevelChunk",
        "net.minecraft.world.level.saveddata.maps.MapItemSavedData",
        "net.minecraft.world.level.saveddata.maps.MapItemSavedData$HoldingPlayer",
        "net.neoforged.neoforge.network.PacketDistributor"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Custom 3D Models",
        "Custom Block Models",
        "Custom Blocks",
        "Custom Data Pack Sync",
        "Custom Entities",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Items",
        "Custom Mobs",
        "Custom Model Loaders",
        "Custom Registries",
        "Custom Tag Assignments",
        "Listens to Player Login Events",
        "Listens to Server About to Start Events",
        "Listens to Server Stopped Events",
        "Localization",
        "Modifies Methods",
        "Stores Data in World Saves",
        "Uses Access Transformers"
      ]
    },
    "more_immersive_wires": {
      "dependencies": {
        "immersiveengineering": "*",
        "minecraft": "[1.21.1,)",
        "neoforge": "[1,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "com.tom.morewires.Config#onLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "com.tom.morewires.Config#onFileChange"
        ]
      },
      "info": {
        "authors": "tom5454",
        "classes": "53",
        "description": "Add modded wire support for Immersive Engineering\n",
        "displayName": "More Immersive Wires",
        "file": "more-immersive-wires-1.21.1-1.1.6.jar",
        "license": "MIT License https://github.com/tom5454/More-Immersive-Wires/blob/main/LICENSE",
        "package": "com.tom.morewires",
        "updateUrl": "https://raw.githubusercontent.com/tom5454/More-Immersive-Wires/main/version-check.json",
        "version": "1.1.6"
      },
      "inheritance": {
        "net.minecraft.world.item.Item": [
          "com.tom.morewires.item.WireCoilItem",
          "com.tom.morewires.item.ConnectorItemBlock",
          "com.tom.morewires.compat.ae.AEItemBlock"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.tom.morewires.compat.id.IDConnectorBlock",
          "com.tom.morewires.compat.cc.CCModemConnectorBlock",
          "com.tom.morewires.compat.cc.CCConnectorBlock",
          "com.tom.morewires.compat.ae.AEDenseConnectorBlock",
          "com.tom.morewires.block.RelayBlock",
          "com.tom.morewires.block.OnCableConnectorBlock"
        ]
      },
      "summary": [
        "Auto-reloads Config Files",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "morejs": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.almostreliable.morejs.mixin.enchanting.EnchantmentMenuMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "int",
                "net.minecraft.world.entity.player.Player",
                "int",
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.util.List"
              ],
              "name": "morejs$invokeEnchantmentTableEnchant",
              "raw": "morejs$invokeEnchantmentTableEnchant(Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/world/entity/player/Player;ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/util/List;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE_ASSIGN, target=Lnet/minecraft/world/inventory/EnchantmentMenu;getEnchantmentList(Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/ItemStack;II)Ljava/util/List;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.enchanting.EnchantmentMenuMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.RegistryAccess",
                "net.minecraft.world.item.ItemStack",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "handleEnchantmentGetter",
              "raw": "handleEnchantmentGetter(Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/ItemStack;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.enchanting.EnchantmentMenuMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "morejs$invokeChangeEvent",
              "raw": "morejs$invokeChangeEvent(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/inventory/EnchantmentMenu;broadcastChanges()V}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.enchanting.EnchantmentMenuMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.Container",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.item.ItemStack"
              ],
              "name": "slotchanged$PrepareChangeEvent",
              "raw": "slotchanged$PrepareChangeEvent(Lnet/minecraft/world/Container;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/item/ItemStack;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE_ASSIGN, target=Lnet/minecraft/world/Container;getItem(I)Lnet/minecraft/world/item/ItemStack;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.enchanting.EnchantmentMenuMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.world.entity.player.Inventory",
                "net.minecraft.world.inventory.ContainerLevelAccess",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initializeProcess",
              "raw": "initializeProcess(ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/inventory/ContainerLevelAccess;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.enchanting.EnchantmentScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "int",
                "java.util.List"
              ],
              "name": "render$InvokeEnchantmentTooltipMenu",
              "raw": "render$InvokeEnchantmentTooltipMenu(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;ILjava/util/List;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/GuiGraphics;renderComponentTooltip(Lnet/minecraft/client/gui/Font;Ljava/util/List;II)V}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.entity.PiglinSpecificSensorMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.entity.ai.Brain"
              ],
              "name": "morejs$setTarget",
              "raw": "morejs$setTarget(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/entity/ai/Brain;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.entity.PiglinSpecificSensorMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.entity.ai.Brain",
                "java.util.Optional",
                "java.util.Optional",
                "java.util.Optional",
                "java.util.Optional",
                "java.util.Optional",
                "java.util.Optional",
                "java.util.Optional",
                "int",
                "java.util.List",
                "java.util.List",
                "net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities",
                "java.util.Iterator",
                "net.minecraft.world.entity.LivingEntity"
              ],
              "name": "morejs$doTick",
              "raw": "morejs$doTick(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/entity/ai/Brain;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;ILjava/util/List;Ljava/util/List;Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities;Ljava/util/Iterator;Lnet/minecraft/world/entity/LivingEntity;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Ljava/util/Optional;isEmpty()Z, ordinal=4}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.villager.VillagerTradingManagerMixin",
            "method": {
              "argTypes": [
                "net.neoforged.neoforge.event.TagsUpdatedEvent",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "postTradeLoading",
              "raw": "postTradeLoading(Lnet/neoforged/neoforge/event/TagsUpdatedEvent;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.villager.MerchantMenuMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.world.entity.player.Inventory",
                "net.minecraft.world.item.trading.Merchant",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "invokeOpenTradeEvent",
              "raw": "invokeOpenTradeEvent(ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/trading/Merchant;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.villager.MerchantScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "morejs$disableButtonsIfNeeded",
              "raw": "morejs$disableButtonsIfNeeded(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/item/trading/MerchantOffer;isOutOfStock()Z, ordinal=0}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.villager.MerchantOfferMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.RegistryFriendlyByteBuf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "morejs$injectcreateFromStream",
              "raw": "morejs$injectcreateFromStream(Lnet/minecraft/network/RegistryFriendlyByteBuf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.villager.MerchantOfferMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.RegistryFriendlyByteBuf",
                "net.minecraft.world.item.trading.MerchantOffer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "morejs$injectWriteToStream",
              "raw": "morejs$injectWriteToStream(Lnet/minecraft/network/RegistryFriendlyByteBuf;Lnet/minecraft/world/item/trading/MerchantOffer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.villager.MerchantOfferMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "morejs$cancelIfDisabled",
              "raw": "morejs$cancelIfDisabled(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.structure.StructureManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "morejs$invokeEventFromGenerated",
              "raw": "morejs$invokeEventFromGenerated(Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.structure.StructureManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "morejs$invokeEventFromResource",
              "raw": "morejs$invokeEventFromResource(Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.almostreliable.morejs.mixin.structure.StructureStartMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.WorldGenLevel",
                "net.minecraft.world.level.StructureManager",
                "net.minecraft.world.level.chunk.ChunkGenerator",
                "net.minecraft.util.RandomSource",
                "net.minecraft.world.level.levelgen.structure.BoundingBox",
                "net.minecraft.world.level.ChunkPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "morejs$invokeEventAfterPlace",
              "raw": "morejs$invokeEventAfterPlace(Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/level/levelgen/structure/Structure;afterPlace(Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V}]"
            }
          }
        ]
      },
      "dependencies": {
        "kubejs": "[2100.7.0-build.119,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.167,)"
      },
      "info": {
        "authors": "AlmostReliable",
        "classes": "106",
        "description": "More KubeJS stuff.",
        "displayName": "MoreJS",
        "file": "morejs-neoforge-1.21-0.13.1.jar",
        "license": "GNU Lesser General Public License v3.0",
        "package": "com.almostreliable.morejs",
        "version": "1.21-0.13.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.almostreliable.morejs.mixin.enchanting.EnchantmentScreenMixin",
          "com.almostreliable.morejs.mixin.villager.MerchantScreenMixin"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.screens.inventory.EnchantmentScreen",
        "net.minecraft.client.gui.screens.inventory.MerchantScreen",
        "net.minecraft.world.entity.ai.sensing.PiglinSpecificSensor",
        "net.minecraft.world.entity.npc.AbstractVillager",
        "net.minecraft.world.entity.npc.VillagerTrades$EmeraldForItems",
        "net.minecraft.world.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem",
        "net.minecraft.world.entity.npc.VillagerTrades$EnchantBookForEmeralds",
        "net.minecraft.world.entity.npc.VillagerTrades$EnchantedItemForEmeralds",
        "net.minecraft.world.entity.npc.VillagerTrades$ItemsAndEmeraldsToItems",
        "net.minecraft.world.entity.npc.VillagerTrades$ItemsForEmeralds",
        "net.minecraft.world.entity.npc.VillagerTrades$SuspiciousStewForEmerald",
        "net.minecraft.world.entity.npc.VillagerTrades$TippedArrowForItemsAndEmeralds",
        "net.minecraft.world.entity.npc.VillagerTrades$TreasureMapForEmeralds",
        "net.minecraft.world.entity.npc.WanderingTrader",
        "net.minecraft.world.inventory.EnchantmentMenu",
        "net.minecraft.world.inventory.MerchantMenu",
        "net.minecraft.world.item.alchemy.PotionBrewing$Builder",
        "net.minecraft.world.item.trading.MerchantOffer",
        "net.minecraft.world.level.levelgen.structure.StructureStart",
        "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate",
        "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo",
        "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager",
        "net.neoforged.neoforge.common.BasicItemListing",
        "net.neoforged.neoforge.common.VillagerTradingManager"
      ],
      "summary": [
        "Custom GUI Screens",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "moreoverlays": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "at.ridgo8.moreoverlays.mixin.MixinDebugRenderer",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource$BufferSource",
                "double",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "render",
              "raw": "render(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "jei": "[6.0.0.25,)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "at.ridgo8.moreoverlays.api.lightoverlay.LightOverlayReloadHandlerEvent": [
          "at.ridgo8.moreoverlays.lightoverlay.integration.AlternateLightHandler#onLightOverlayEnable"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "at.ridgo8.moreoverlays.lightoverlay.LightOverlayHandler#onClientTick",
          "at.ridgo8.moreoverlays.itemsearch.GuiHandler#onClientTick",
          "at.ridgo8.moreoverlays.ClientRegistrationHandler#onClientTick",
          "at.ridgo8.moreoverlays.chunkbounds.ChunkBoundsHandler#onClientTick"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "at.ridgo8.moreoverlays.KeyBindings#registerKeyMappings"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiEvent$Post": [
          "at.ridgo8.moreoverlays.chunkbounds.ChunkBoundsHandler#onRenderOverlay"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "at.ridgo8.moreoverlays.lightoverlay.LightOverlayHandler#renderWorldLastEvent",
          "at.ridgo8.moreoverlays.chunkbounds.ChunkBoundsHandler#renderWorldLastEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$Pre": [
          "at.ridgo8.moreoverlays.itemsearch.GuiHandler#onRenderTooltip"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "at.ridgo8.moreoverlays.itemsearch.GuiHandler#onGuiInit"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonPressed$Pre": [
          "at.ridgo8.moreoverlays.itemsearch.GuiHandler#onGuiClick"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Opening": [
          "at.ridgo8.moreoverlays.itemsearch.GuiHandler#onGuiOpen"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Render$Post": [
          "at.ridgo8.moreoverlays.itemsearch.GuiHandler#onDrawScreen"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Render$Pre": [
          "at.ridgo8.moreoverlays.itemsearch.GuiHandler#onDrawScreen"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "at.ridgo8.moreoverlays.lightoverlay.LightOverlayHandler#onWorldUnload"
        ]
      },
      "info": {
        "authors": "feldim2425, RiDGo8",
        "classes": "39",
        "description": "Adds some of the overlays from the old (MC 1.7.x) NotEnoughItems Mod:\n    * Chunk and Region borders\n    * Mob spawn / Light overlay\n    * Item search when JEI (JustEnoughItems by Mezz) is installed",
        "displayName": "More Overlays Updated",
        "file": "moreoverlays-1.23.2-mc1.21-neoforge.jar",
        "license": "The MIT License (MIT)",
        "package": "at.ridgo8.moreoverlays",
        "version": "1.23.2-neoforge"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "at.ridgo8.moreoverlays.gui.ConfigScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.debug.DebugRenderer"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom Key Mappings",
        "Listens to GUI Open Events",
        "Localization",
        "Modifies GUI Rendering",
        "Modifies Methods",
        "Modifies World Rendering",
        "Runs Client Tick Logic"
      ]
    },
    "morered": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.40-beta,)"
      },
      "info": {
        "authors": "Commoble",
        "classes": "106",
        "description": "This mod adds a bunch of redstone logic gate plate blocks.\n\nOnce you've crafted and placed the blocks, you can rotate them\nby poking them with a stick.\n",
        "displayName": "More Red",
        "file": "morered-1.21.1-6.0.0.3.jar",
        "license": "MIT License",
        "package": "commoble.morered",
        "version": "6.0.0.3"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "commoble.morered.client.SolderingScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "commoble.morered.client.WirePostRenderer",
          "commoble.morered.client.BundledCablePostRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "commoble.morered.client.WirePartModelLoader$WirePartModel",
          "commoble.morered.client.WirePartModelLoader$MultipartWireModel"
        ],
        "net.minecraft.world.item.Item": [
          "commoble.morered.wire_post.WireSpoolItem",
          "commoble.morered.wires.WireBlockItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "commoble.morered.soldering.SolderingRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "commoble.morered.wire_post.WirePostPlateBlock",
          "commoble.morered.wire_post.WirePostBlock",
          "commoble.morered.wire_post.BundledCableRelayPlateBlock",
          "commoble.morered.wire_post.BundledCablePostBlock",
          "commoble.morered.wire_post.AbstractPoweredWirePostBlock",
          "commoble.morered.wire_post.AbstractPostBlock",
          "commoble.morered.wire_post.AbstractChanneledCablePostBlock",
          "commoble.morered.wires.RedAlloyWireBlock",
          "commoble.morered.wires.PoweredWireBlock",
          "commoble.morered.wires.ColoredCableBlock",
          "commoble.morered.wires.BundledCableBlock",
          "commoble.morered.wires.AbstractWireBlock",
          "commoble.morered.soldering.SolderingTableBlock",
          "commoble.morered.plate_blocks.RedstonePlateBlock",
          "commoble.morered.plate_blocks.PulseGateBlock",
          "commoble.morered.plate_blocks.PlateBlock",
          "commoble.morered.plate_blocks.LogicFunctionPlateBlock",
          "commoble.morered.plate_blocks.LogicFunctionPlateBlock$1",
          "commoble.morered.plate_blocks.LatchBlock",
          "commoble.morered.HexidecrubrometerBlock",
          "commoble.morered.bitwise_logic.TwoInputBitwiseLogicPlateBlock",
          "commoble.morered.bitwise_logic.SingleInputBitwiseLogicPlateBlock",
          "commoble.morered.bitwise_logic.BitwiseLogicPlateBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "commoble.morered.wires.WireUpdateBuffer"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "commoble.morered.client.WirePartModelLoader",
          "commoble.morered.client.TintRotatingModelLoader"
        ]
      },
      "modifies": [
        "net.minecraft.client.multiplayer.MultiPlayerGameMode",
        "net.neoforged.neoforge.client.model.ElementsModel"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Model Loaders",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Localization",
        "Stores Data in World Saves",
        "Uses Access Transformers"
      ]
    },
    "mousetweaks": {
      "dependencies": {},
      "events": {
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonPressed$Pre": [
          "yalter.mousetweaks.neoforge.MouseTweaksNeo#onGuiMouseClickedPre"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonReleased$Pre": [
          "yalter.mousetweaks.neoforge.MouseTweaksNeo#onGuiMouseReleasedPre"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseDragged$Pre": [
          "yalter.mousetweaks.neoforge.MouseTweaksNeo#onGuiMouseDragPre"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseScrolled$Post": [
          "yalter.mousetweaks.neoforge.MouseTweaksNeo#onGuiMouseScrollPost"
        ]
      },
      "info": {
        "authors": "Ivan Molodetskikh (YaLTeR)",
        "classes": "22",
        "description": "A mod that enhances the inventory management by adding various additional functions to the usual mouse buttons.",
        "displayName": "Mouse Tweaks",
        "file": "MouseTweaks-neoforge-mc1.21-2.26.1.jar",
        "license": "BSD-3-Clause",
        "package": "yalter.mousetweaks",
        "version": "2.26.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "yalter.mousetweaks.ConfigScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen"
      ],
      "summary": [
        "Custom GUI Screens"
      ]
    },
    "mr_dungeons_andtavernsoceanmonumentreplacement": {
      "dependencies": {},
      "info": {
        "authors": "NovaWostra, Konci, Walls",
        "classes": "0",
        "description": "Coming from Dungeons and Taverns we made a Standalone version of it replacing Ocean Monuments with this much rarer version of them. Be warned, this structure is probably the hardest I created yet",
        "displayName": "Dungeons and Taverns Ocean Monument Replacement",
        "file": "DnT-ocean-monument-replacement-v1.2 [NeoForge].jar",
        "license": "LicenseRef-All-Rights-Reserved",
        "updateUrl": "https://api.modrinth.com/updates/z6GJ3ycD/forge_updates.json?neoforge=only",
        "version": "1-v1.2"
      },
      "summary": [
        "Custom Item Models",
        "Custom Loot Tables",
        "Custom Structures",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Localization",
        "Uses Minecraft Functions"
      ]
    },
    "mru": {
      "dependencies": {
        "minecraft": "[1.21,1.21.1]",
        "neoforge": "[2,)"
      },
      "info": {
        "classes": "5",
        "description": "Library mod providing compatability utilities and other stuff.",
        "displayName": "Mineblock's Repeated Utilities",
        "file": "MRU-1.0.8+1.21+neoforge.jar",
        "license": "All-Rights-Reserved",
        "package": "dev.imb11.mru",
        "version": "1.0.8+1.21+neoforge"
      }
    },
    "mysticalagradditions": {
      "dependencies": {
        "cucumber": "[8.0.0,)",
        "minecraft": "[1.21,1.21.1)",
        "mysticalagriculture": "[8.0.0,)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "com.blakebr0.mysticalagradditions.MysticalAgradditions#onCommonSetup"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "com.blakebr0.mysticalagradditions.client.handler.ColorHandler#onBlockColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "com.blakebr0.mysticalagradditions.client.handler.ColorHandler#onItemColors"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "com.blakebr0.mysticalagradditions.handler.MobDropsHandler#onLivingDrops"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "com.blakebr0.mysticalagradditions.init.ModFluids#onRegisterFluids"
        ]
      },
      "info": {
        "authors": "BlakeBr0",
        "classes": "35",
        "description": "    Grow all your resources!\n    ",
        "displayName": "Mystical Agradditions",
        "file": "MysticalAgradditions-1.21.1-8.0.4.jar",
        "license": "MIT",
        "package": "com.blakebr0.mysticalagradditions",
        "updateUrl": "https://api.blakesmods.com/v2/mods/mysticalagradditions/1.21/updates",
        "version": "8.0.4"
      },
      "inheritance": {
        "net.minecraft.world.item.Item": [
          "com.blakebr0.mysticalagradditions.item.WitheringSoulItem",
          "com.blakebr0.mysticalagradditions.item.EssencePaxelItem",
          "com.blakebr0.mysticalagradditions.item.EssenceItem",
          "com.blakebr0.mysticalagradditions.item.EssenceCoalItem",
          "com.blakebr0.mysticalagradditions.item.EssenceCoalBlockItem",
          "com.blakebr0.mysticalagradditions.item.EssenceAppleItem",
          "com.blakebr0.mysticalagradditions.item.CreativeEssenceItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.blakebr0.mysticalagradditions.block.InfusedFarmlandBlock"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Listens to Entity Drop Events",
        "Localization",
        "Patchouli Guide Book",
        "Uses Access Transformers"
      ]
    },
    "mysticalagriculture": {
      "dependencies": {
        "cucumber": "[8.0.1,)",
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "com.blakebr0.cucumber.event.ItemBreakEvent": [
          "com.blakebr0.mysticalagriculture.handler.TinkerableHandler#onItemBreak"
        ],
        "com.blakebr0.cucumber.event.RecipeManagerLoadingEvent": [
          "com.blakebr0.mysticalagriculture.crafting.DynamicRecipeManager#onRecipeManagerLoading"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.blakebr0.mysticalagriculture.MysticalAgriculture#onClientSetup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "com.blakebr0.mysticalagriculture.MysticalAgriculture#onCommonSetup"
        ],
        "net.neoforged.fml.event.lifecycle.InterModEnqueueEvent": [
          "com.blakebr0.mysticalagriculture.MysticalAgriculture#onInterModEnqueue"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "com.blakebr0.mysticalagriculture.handler.RegisterCapabilityHandler#onRegisterCapabilities"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.blakebr0.mysticalagriculture.client.ModTESRs#onRegisterRenderers"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$ModifyBakingResult": [
          "com.blakebr0.mysticalagriculture.client.ModelHandler#onModifyBakingResults"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "com.blakebr0.mysticalagriculture.client.ModelHandler#onRegisterAdditionalModels"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientReloadListenersEvent": [
          "com.blakebr0.mysticalagriculture.client.EssenceVesselColorManager#onRegisterClientReloadListeners"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientTooltipComponentFactoriesEvent": [
          "com.blakebr0.mysticalagriculture.client.ModClientTooltipComponentFactories#onRegisterClientTooltipComponentFactoriesEvent"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "com.blakebr0.mysticalagriculture.client.handler.ColorHandler#onBlockColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "com.blakebr0.mysticalagriculture.client.handler.ColorHandler#onItemColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.blakebr0.mysticalagriculture.client.ModMenuScreens#onRegisterMenuScreens"
        ],
        "net.neoforged.neoforge.client.event.RegisterRecipeBookCategoriesEvent": [
          "com.blakebr0.mysticalagriculture.client.ModRecipeBookCategories#onRegisterRecipeBookCategories"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiEvent$Post": [
          "com.blakebr0.mysticalagriculture.client.handler.GuiOverlayHandler#onPostRenderGui"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$GatherComponents": [
          "com.blakebr0.mysticalagriculture.client.handler.AugmentTooltipHandler#onGatherComponents"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "com.blakebr0.mysticalagriculture.client.ModClientExtensions#onRegisterClientExtensions"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.blakebr0.mysticalagriculture.data.ModDataGenerators#onGatherData"
        ],
        "net.neoforged.neoforge.event.ItemAttributeModifierEvent": [
          "com.blakebr0.mysticalagriculture.handler.TinkerableHandler#onItemAttributesModifiers"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "com.blakebr0.mysticalagriculture.util.RecipeIngredientCache#onDatapackSyncEvent"
        ],
        "net.neoforged.neoforge.event.TagsUpdatedEvent": [
          "com.blakebr0.mysticalagriculture.util.RecipeIngredientCache#onTagsUpdated"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "com.blakebr0.mysticalagriculture.handler.MobSoulHandler#onLivingDeath",
          "com.blakebr0.mysticalagriculture.handler.AugmentHandler#onPlayerDeath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "com.blakebr0.mysticalagriculture.handler.MobDropHandler#onLivingDrops"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingFallEvent": [
          "com.blakebr0.mysticalagriculture.handler.AugmentHandler#onLivingFall"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "com.blakebr0.mysticalagriculture.handler.AugmentHandler#onPlayerLoggedOut"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerXpEvent$PickupXp": [
          "com.blakebr0.mysticalagriculture.handler.ExperienceCapsuleHandler#onPlayerPickupXp"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Pre": [
          "com.blakebr0.mysticalagriculture.handler.AugmentHandler#onPlayerUpdate"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.blakebr0.mysticalagriculture.network.NetworkHandler#onRegisterPayloadsHandlers"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "com.blakebr0.mysticalagriculture.init.ModItems#onRegisterItems",
          "com.blakebr0.mysticalagriculture.init.ModBlocks#onRegisterBlocks"
        ]
      },
      "info": {
        "authors": "BlakeBr0",
        "classes": "285",
        "description": "    Grow all your resources!\n    ",
        "displayName": "Mystical Agriculture",
        "file": "MysticalAgriculture-1.21.1-8.0.12.jar",
        "latest": "8.0.13",
        "license": "MIT",
        "package": "com.blakebr0.mysticalagriculture",
        "updateUrl": "https://api.blakesmods.com/v2/mods/mysticalagriculture/1.21/updates",
        "version": "8.0.12"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.blakebr0.mysticalagriculture.client.screen.TinkeringTableScreen",
          "com.blakebr0.mysticalagriculture.client.screen.SouliumSpawnerScreen",
          "com.blakebr0.mysticalagriculture.client.screen.SoulExtractorScreen",
          "com.blakebr0.mysticalagriculture.client.screen.ReprocessorScreen",
          "com.blakebr0.mysticalagriculture.client.screen.HarvesterScreen",
          "com.blakebr0.mysticalagriculture.client.screen.EssenceFurnaceScreen",
          "com.blakebr0.mysticalagriculture.client.screen.EnchanterScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.blakebr0.mysticalagriculture.client.tesr.TinkeringTableRenderer",
          "com.blakebr0.mysticalagriculture.client.tesr.SouliumSpawnerRenderer",
          "com.blakebr0.mysticalagriculture.client.tesr.InfusionPedestalRenderer",
          "com.blakebr0.mysticalagriculture.client.tesr.InfusionAltarRenderer",
          "com.blakebr0.mysticalagriculture.client.tesr.EssenceVesselRenderer",
          "com.blakebr0.mysticalagriculture.client.tesr.EnchanterRenderer",
          "com.blakebr0.mysticalagriculture.client.tesr.AwakeningPedestalRenderer",
          "com.blakebr0.mysticalagriculture.client.tesr.AwakeningAltarRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "com.blakebr0.mysticalagriculture.data.generator.SpriteSourceGenerator",
          "com.blakebr0.mysticalagriculture.data.generator.RecipeJsonGenerator",
          "com.blakebr0.mysticalagriculture.data.generator.ItemTagsJsonGenerator",
          "com.blakebr0.mysticalagriculture.data.generator.ItemModelJsonGenerator",
          "com.blakebr0.mysticalagriculture.data.generator.BlockTagsJsonGenerator",
          "com.blakebr0.mysticalagriculture.data.generator.BlockModelJsonGenerator"
        ],
        "net.minecraft.world.item.Item": [
          "com.blakebr0.mysticalagriculture.item.WateringCanItem",
          "com.blakebr0.mysticalagriculture.item.WandItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssenceSwordItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssenceStaffItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssenceSickleItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssenceShovelItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssenceShearsItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssenceScytheItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssencePickaxeItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssenceHoeItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssenceFishingRodItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssenceCrossbowItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssenceBowItem",
          "com.blakebr0.mysticalagriculture.item.tool.EssenceAxeItem",
          "com.blakebr0.mysticalagriculture.item.SoulJarItem",
          "com.blakebr0.mysticalagriculture.item.SouliumDaggerItem",
          "com.blakebr0.mysticalagriculture.item.MysticalSeedsItem",
          "com.blakebr0.mysticalagriculture.item.MysticalFertilizerItem",
          "com.blakebr0.mysticalagriculture.item.MysticalEssenceItem",
          "com.blakebr0.mysticalagriculture.item.MasterInfusionCrystalItem",
          "com.blakebr0.mysticalagriculture.item.MachineUpgradeItem",
          "com.blakebr0.mysticalagriculture.item.InfusionCrystalItem",
          "com.blakebr0.mysticalagriculture.item.FertilizedEssenceItem",
          "com.blakebr0.mysticalagriculture.item.ExperienceDropletItem",
          "com.blakebr0.mysticalagriculture.item.ExperienceCapsuleItem",
          "com.blakebr0.mysticalagriculture.item.EssenceWateringCanItem",
          "com.blakebr0.mysticalagriculture.item.EssenceItem",
          "com.blakebr0.mysticalagriculture.item.AugmentItem",
          "com.blakebr0.mysticalagriculture.item.armor.EssenceLeggingsItem",
          "com.blakebr0.mysticalagriculture.item.armor.EssenceHelmetItem",
          "com.blakebr0.mysticalagriculture.item.armor.EssenceChestplateItem",
          "com.blakebr0.mysticalagriculture.item.armor.EssenceBootsItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.blakebr0.mysticalagriculture.crafting.recipe.SoulJarEmptyRecipe",
          "com.blakebr0.mysticalagriculture.crafting.recipe.SouliumSpawnerRecipe",
          "com.blakebr0.mysticalagriculture.crafting.recipe.SoulExtractionRecipe",
          "com.blakebr0.mysticalagriculture.crafting.recipe.ReprocessorRecipe",
          "com.blakebr0.mysticalagriculture.crafting.recipe.InfusionRecipe",
          "com.blakebr0.mysticalagriculture.crafting.recipe.FarmlandTillRecipe",
          "com.blakebr0.mysticalagriculture.crafting.recipe.EnchanterRecipe",
          "com.blakebr0.mysticalagriculture.crafting.recipe.AwakeningRecipe",
          "com.blakebr0.mysticalagriculture.api.crafting.ISouliumSpawnerRecipe",
          "com.blakebr0.mysticalagriculture.api.crafting.ISoulExtractionRecipe",
          "com.blakebr0.mysticalagriculture.api.crafting.IReprocessorRecipe",
          "com.blakebr0.mysticalagriculture.api.crafting.IInfusionRecipe",
          "com.blakebr0.mysticalagriculture.api.crafting.IEnchanterRecipe",
          "com.blakebr0.mysticalagriculture.api.crafting.IAwakeningRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.blakebr0.mysticalagriculture.block.WitherproofGlassBlock",
          "com.blakebr0.mysticalagriculture.block.WitherproofBlock",
          "com.blakebr0.mysticalagriculture.block.TinkeringTableBlock",
          "com.blakebr0.mysticalagriculture.block.SouliumSpawnerBlock",
          "com.blakebr0.mysticalagriculture.block.SoulExtractorBlock",
          "com.blakebr0.mysticalagriculture.block.ReprocessorBlock",
          "com.blakebr0.mysticalagriculture.block.MysticalCropBlock",
          "com.blakebr0.mysticalagriculture.block.InfusionPedestalBlock",
          "com.blakebr0.mysticalagriculture.block.InfusionAltarBlock",
          "com.blakebr0.mysticalagriculture.block.InfusedFarmlandBlock",
          "com.blakebr0.mysticalagriculture.block.InferiumCropBlock",
          "com.blakebr0.mysticalagriculture.block.HarvesterBlock",
          "com.blakebr0.mysticalagriculture.block.GrowthAcceleratorBlock",
          "com.blakebr0.mysticalagriculture.block.EssenceVesselBlock",
          "com.blakebr0.mysticalagriculture.block.EssenceFurnaceBlock",
          "com.blakebr0.mysticalagriculture.block.EnchanterBlock",
          "com.blakebr0.mysticalagriculture.block.AwakeningPedestalBlock",
          "com.blakebr0.mysticalagriculture.block.AwakeningAltarBlock"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Data Pack Sync",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Network Packets",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom Tooltip Components",
        "Custom World Generation",
        "Has Capability Providers",
        "Listens to Entity Death Events",
        "Listens to Entity Drop Events",
        "Listens to Entity Fall Events",
        "Listens to Player Logout Events",
        "Listens to Tag Updates",
        "Localization",
        "Modifies Item Attributes",
        "Modifies Tooltips",
        "Patchouli Guide Book",
        "Runs Player Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "mysticalcustomization": {
      "dependencies": {
        "cucumber": "[8.0.0,)",
        "minecraft": "[1.21,1.21.1)",
        "mysticalagriculture": "[8.0.2,)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "com.blakebr0.mysticalcustomization.MysticalCustomization#onCommonSetup"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "com.blakebr0.mysticalcustomization.command.ModCommands#onRegisterCommands"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "com.blakebr0.mysticalcustomization.util.ErrorManager#onPlayerLoggedIn"
        ]
      },
      "info": {
        "authors": "BlakeBr0",
        "classes": "18",
        "description": "    Allows modpack creators to add new content and modify existing content in Mystical Agriculture.\n    ",
        "displayName": "Mystical Customization",
        "file": "MysticalCustomization-1.21.1-6.0.0.jar",
        "license": "MIT",
        "package": "com.blakebr0.mysticalcustomization",
        "updateUrl": "https://api.blakesmods.com/v2/mods/mysticalcustomization/1.21/updates",
        "version": "6.0.0"
      },
      "summary": [
        "Custom Server Commands",
        "Listens to Player Login Events"
      ]
    },
    "nautec": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.portingdeadmods.nautec.mixin.ItemStorageProviderMixin",
            "method": {
              "argTypes": [
                "snownee.jade.api.ITooltip",
                "snownee.jade.api.Accessor",
                "snownee.jade.api.config.IPluginConfig",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onAppend",
              "raw": "onAppend(Lsnownee/jade/api/ITooltip;Lsnownee/jade/api/Accessor;Lsnownee/jade/api/config/IPluginConfig;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.portingdeadmods.nautec.mixin.BucketItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.InteractionHand",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onUse",
              "raw": "onUse(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.portingdeadmods.nautec.mixin.BottleItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.InteractionHand",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onUse",
              "raw": "onUse(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/Level;getFluidState(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState;, ordinal=0}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "curios": "[9.0.9,]",
        "minecraft": "[1.21,1.21.1)",
        "modonomicon": "[1.106.0,]",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "com.portingdeadmods.nautec.NTConfig#onLoad"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "com.portingdeadmods.nautec.events.NTClientEvents$ClientInGameBus#onClientTick"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "com.portingdeadmods.nautec.registries.NTKeybinds#registerBindings"
        ],
        "net.neoforged.neoforge.client.event.RenderPlayerEvent$Post": [
          "com.portingdeadmods.nautec.events.AugmentClientEvents#onRenderPlayer"
        ],
        "net.neoforged.neoforge.client.event.RenderPlayerEvent$Pre": [
          "com.portingdeadmods.nautec.events.AugmentClientEvents#renderPlayerPart"
        ],
        "net.neoforged.neoforge.client.event.ViewportEvent$RenderFog": [
          "com.portingdeadmods.nautec.events.NTClientEvents$ClientInGameBus#onRenderFog"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.portingdeadmods.nautec.datagen.DataGatherer#onGatherData"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "com.portingdeadmods.nautec.registries.NTCommands#onCommandRegister"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingFallEvent": [
          "com.portingdeadmods.nautec.events.AugmentEvents#fallEvent"
        ],
        "net.neoforged.neoforge.event.entity.player.AttackEntityEvent": [
          "com.portingdeadmods.nautec.events.NTEvents$Game#onHitEntity"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$BreakSpeed": [
          "com.portingdeadmods.nautec.events.NTEvents$Game#onBreakBlock"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "com.portingdeadmods.nautec.events.NTEvents$Game#onPlayerLoggedIn"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerRespawnEvent": [
          "com.portingdeadmods.nautec.events.AugmentEvents#onPlayerRespawn"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "com.portingdeadmods.nautec.events.NTEvents$Game#onRightClick"
        ],
        "net.neoforged.neoforge.event.tick.EntityTickEvent$Post": [
          "com.portingdeadmods.nautec.events.NTEvents$Game#onItemEntityTick"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "com.portingdeadmods.nautec.events.NTEvents$Game#onPlayerTick",
          "com.portingdeadmods.nautec.events.AugmentEvents#playerTick"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.portingdeadmods.nautec.network.NetworkEvents#registerPayloads"
        ]
      },
      "info": {
        "authors": "Thepigcat76, Leclowndu93150, Ktpatient, Reclipse, Iglee42",
        "classes": "451",
        "description": "Mod for the curseforge 2024 modjam",
        "displayName": "NauTec",
        "file": "nautec-0.2.0.jar",
        "license": "MIT",
        "package": "com.portingdeadmods.nautec",
        "version": "0.2.0"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.portingdeadmods.nautec.client.screen.MutatorScreen",
          "com.portingdeadmods.nautec.client.screen.MixerScreen",
          "com.portingdeadmods.nautec.client.screen.IncubatorScreen",
          "com.portingdeadmods.nautec.client.screen.FishingStationScreen",
          "com.portingdeadmods.nautec.client.screen.CrateScreen",
          "com.portingdeadmods.nautec.client.screen.BioReactorScreen",
          "com.portingdeadmods.nautec.client.screen.BacterialAnalyzerScreen",
          "com.portingdeadmods.nautec.client.screen.AugmentationViewerScreen",
          "com.portingdeadmods.nautec.client.screen.AugmentationStationScreen",
          "com.portingdeadmods.nautec.client.screen.AugmentationStationExtensionScreen",
          "com.portingdeadmods.nautec.api.client.screen.NTMachineScreen",
          "com.portingdeadmods.nautec.api.client.screen.NTAbstractContainerScreen"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "com.portingdeadmods.nautec.api.client.renderer.items.PrismarineCrystalItemRenderer",
          "com.portingdeadmods.nautec.api.client.renderer.items.AnchorItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.portingdeadmods.nautec.client.renderer.blockentities.PrismarineCrystalBERenderer",
          "com.portingdeadmods.nautec.client.renderer.blockentities.MixerBERenderer",
          "com.portingdeadmods.nautec.client.renderer.blockentities.LongDistanceLaserBERenderer",
          "com.portingdeadmods.nautec.client.renderer.blockentities.FishingStationBERenderer",
          "com.portingdeadmods.nautec.client.renderer.blockentities.DrainBERenderer",
          "com.portingdeadmods.nautec.client.renderer.blockentities.ChargerBERenderer",
          "com.portingdeadmods.nautec.client.renderer.blockentities.BacterialAnalyzerBERenderer",
          "com.portingdeadmods.nautec.client.renderer.blockentities.AugmentStationExtensionBERenderer",
          "com.portingdeadmods.nautec.client.renderer.blockentities.AnchorBERenderer",
          "com.portingdeadmods.nautec.api.client.renderer.blockentities.NTBERenderer",
          "com.portingdeadmods.nautec.api.client.renderer.blockentities.LaserBlockEntityRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "com.portingdeadmods.nautec.datagen.RecipesProvider",
          "com.portingdeadmods.nautec.datagen.NTDataMapProvider",
          "com.portingdeadmods.nautec.datagen.loot.LootModifierProvider",
          "com.portingdeadmods.nautec.datagen.ItemTagProvider",
          "com.portingdeadmods.nautec.datagen.ItemModelProvider",
          "com.portingdeadmods.nautec.datagen.EnUsProvider",
          "com.portingdeadmods.nautec.datagen.DatapackRegistryProvider",
          "com.portingdeadmods.nautec.datagen.BlockTagProvider",
          "com.portingdeadmods.nautec.datagen.BlockModelProvider",
          "com.portingdeadmods.nautec.compat.modonomicon.datagen.book.NautecGuideMultiblockProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "com.portingdeadmods.nautec.content.entites.ThrownSpreadingTrident",
          "com.portingdeadmods.nautec.content.entites.ThrownBouncingTrident"
        ],
        "net.minecraft.world.item.Item": [
          "com.portingdeadmods.nautec.mixin.BottleItemMixin",
          "com.portingdeadmods.nautec.content.items.VialItem",
          "com.portingdeadmods.nautec.content.items.tools.AquarineWrenchItem",
          "com.portingdeadmods.nautec.content.items.tools.AquarineSwordItem",
          "com.portingdeadmods.nautec.content.items.tools.AquarineShovelItem",
          "com.portingdeadmods.nautec.content.items.tools.AquarinePickaxeItem",
          "com.portingdeadmods.nautec.content.items.tools.AquarineHoeItem",
          "com.portingdeadmods.nautec.content.items.tools.AquarineAxeItem",
          "com.portingdeadmods.nautec.content.items.RobotArmItem",
          "com.portingdeadmods.nautec.content.items.PrismMonocleItem",
          "com.portingdeadmods.nautec.content.items.PetriDishItem",
          "com.portingdeadmods.nautec.content.items.NeptunesTridentItem",
          "com.portingdeadmods.nautec.content.items.GraftingToolItem",
          "com.portingdeadmods.nautec.content.items.DivingSuitArmorItem",
          "com.portingdeadmods.nautec.content.items.blocks.PrismarineCrystalItem",
          "com.portingdeadmods.nautec.content.items.BatteryItem",
          "com.portingdeadmods.nautec.content.items.AquarineArmorItem",
          "com.portingdeadmods.nautec.content.items.AirBottleItem",
          "com.portingdeadmods.nautec.compat.modonomicon.NautecGuideItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.portingdeadmods.nautec.content.recipes.MixingRecipe",
          "com.portingdeadmods.nautec.content.recipes.ItemTransformationRecipe",
          "com.portingdeadmods.nautec.content.recipes.ItemEtchingRecipe",
          "com.portingdeadmods.nautec.content.recipes.BacteriaMutationRecipe",
          "com.portingdeadmods.nautec.content.recipes.BacteriaIncubationRecipe",
          "com.portingdeadmods.nautec.content.recipes.AugmentationRecipe",
          "com.portingdeadmods.nautec.content.recipes.AquaticCatalystChannelingRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.portingdeadmods.nautec.content.blocks.PrismarineSandBlock",
          "com.portingdeadmods.nautec.content.blocks.PrismarineLaserRelayBlock",
          "com.portingdeadmods.nautec.content.blocks.OilBarrelBlock",
          "com.portingdeadmods.nautec.content.blocks.MutatorBlock",
          "com.portingdeadmods.nautec.content.blocks.multiblock.semi.PrismarineCrystalPartBlock",
          "com.portingdeadmods.nautec.content.blocks.multiblock.semi.PrismarineCrystalBlock",
          "com.portingdeadmods.nautec.content.blocks.multiblock.part.DrainPartBlock",
          "com.portingdeadmods.nautec.content.blocks.multiblock.part.BioReactorPartBlock",
          "com.portingdeadmods.nautec.content.blocks.multiblock.part.AugmentationStationPartBlock",
          "com.portingdeadmods.nautec.content.blocks.multiblock.part.AugmentationStationExtensionBlock",
          "com.portingdeadmods.nautec.content.blocks.multiblock.controller.DrainBlock",
          "com.portingdeadmods.nautec.content.blocks.multiblock.controller.BioReactorBlock",
          "com.portingdeadmods.nautec.content.blocks.multiblock.controller.AugmentationStationBlock",
          "com.portingdeadmods.nautec.content.blocks.MixerBlock",
          "com.portingdeadmods.nautec.content.blocks.LongDistanceLaserBlock",
          "com.portingdeadmods.nautec.content.blocks.LaserJunctionBlock",
          "com.portingdeadmods.nautec.content.blocks.IncubatorBlock",
          "com.portingdeadmods.nautec.content.blocks.FishingStationBlock",
          "com.portingdeadmods.nautec.content.blocks.EnergyConverterBlock",
          "com.portingdeadmods.nautec.content.blocks.CreativePowerSourceBlock",
          "com.portingdeadmods.nautec.content.blocks.CreativeEnergySourceBlock",
          "com.portingdeadmods.nautec.content.blocks.CrateBlock",
          "com.portingdeadmods.nautec.content.blocks.ChargerBlock",
          "com.portingdeadmods.nautec.content.blocks.BreakerBlock",
          "com.portingdeadmods.nautec.content.blocks.BacteriaPipeBlock",
          "com.portingdeadmods.nautec.content.blocks.BacterialAnalyzerTopBlock",
          "com.portingdeadmods.nautec.content.blocks.BacterialAnalyzerBlock",
          "com.portingdeadmods.nautec.content.blocks.AquaticCatalystBlock",
          "com.portingdeadmods.nautec.content.blocks.AnchorBlock",
          "com.portingdeadmods.nautec.api.blocks.blockentities.RotatableEntityBlock",
          "com.portingdeadmods.nautec.api.blocks.blockentities.RotatableContainerBlock",
          "com.portingdeadmods.nautec.api.blocks.blockentities.LaserBlock",
          "com.portingdeadmods.nautec.api.blocks.blockentities.ContainerBlock"
        ]
      },
      "modifies": [
        "net.minecraft.world.item.BottleItem",
        "net.minecraft.world.item.BucketItem",
        "net.minecraft.world.level.block.GrowingPlantHeadBlock",
        "net.minecraft.world.level.levelgen.structure.StructurePiece",
        "snownee.jade.addon.universal.ItemStorageProvider"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Loot Tables",
        "Custom Network Packets",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Server Commands",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Handles Right Clicks with Items",
        "Listens to Entity Fall Events",
        "Listens to Player Login Events",
        "Localization",
        "Modifies Block Breaking Speed",
        "Modifies Methods",
        "Runs Client Tick Logic",
        "Runs Entity Tick Logic",
        "Runs Player Tick Logic",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "neo_auth": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.mrbysco.neoauth.mixin.MultiplayerScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.mrbysco.neoauth.mixin.RealmsGenericErrorScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.mrbysco.neoauth.mixin.DisconnectedScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.1.1,)"
      },
      "info": {
        "authors": "Mrbysco, Axieum",
        "classes": "20",
        "description": "A Neoforge port of AuthMe\n",
        "displayName": "NeoAuth",
        "file": "NeoAuth-1.21.1-1.0.0.jar",
        "license": "MIT",
        "package": "com.mrbysco.neoauth",
        "version": "1.0.0"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.mrbysco.neoauth.mixin.MultiplayerScreenMixin",
          "com.mrbysco.neoauth.mixin.RealmsGenericErrorScreenMixin",
          "com.mrbysco.neoauth.mixin.DisconnectedScreenMixin",
          "com.mrbysco.neoauth.api.gui.AuthScreen",
          "com.mrbysco.neoauth.impl.gui.AuthMethodScreen",
          "com.mrbysco.neoauth.impl.gui.MicrosoftAuthScreen"
        ]
      },
      "modifies": [
        "com.mojang.realmsclient.RealmsAvailability",
        "com.mojang.realmsclient.gui.screens.RealmsGenericErrorScreen",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.screens.DisconnectedScreen",
        "net.minecraft.client.gui.screens.multiplayer.JoinMultiplayerScreen",
        "net.minecraft.client.multiplayer.chat.report.ReportingContext",
        "net.minecraft.client.resources.SplashManager"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "neoforgedatapackextensions": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.21,)"
      },
      "info": {
        "authors": "Fuzs",
        "classes": "10",
        "description": "Support for NeoForge's data maps and tag removals on other mod loaders.",
        "displayName": "NeoForge Data Pack Extensions",
        "file": "BlockRunner-v21.1.1-1.21.1-NeoForge.jar",
        "jarInJar": "neoforgedatapackextensions-neoforge-21.1.1.jar",
        "license": "MPL-2.0",
        "package": "fuzs.neoforgedatapackextensions.impl",
        "updateUrl": "https://raw.githubusercontent.com/Fuzss/modresources/main/update/neoforgedatapackextensions.json",
        "version": "21.1.1"
      },
      "summary": [
        "Uses Access Transformers"
      ]
    },
    "nerb": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "it.hurts.octostudios.nerb.common.mixin.ServerRecipeBookMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundRecipePacket$State",
                "net.minecraft.server.level.ServerPlayer",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onLoad",
              "raw": "onLoad(Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State;Lnet/minecraft/server/level/ServerPlayer;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.octostudios.nerb.common.mixin.ServerRecipeBookMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "net.minecraft.world.item.crafting.RecipeManager",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onLoad",
              "raw": "onLoad(Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/item/crafting/RecipeManager;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.octostudios.nerb.common.mixin.ServerRecipeBookMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onSave",
              "raw": "onSave(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.octostudios.nerb.common.mixin.ServerPlayerMixin",
            "method": {
              "argTypes": [
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onAwardRecipesByKey",
              "raw": "onAwardRecipesByKey(Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.octostudios.nerb.common.mixin.ServerPlayerMixin",
            "method": {
              "argTypes": [
                "java.util.Collection",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onAwardRecipes",
              "raw": "onAwardRecipes(Ljava/util/Collection;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.octostudios.nerb.common.mixin.ScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.components.events.GuiEventListener",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onWidgetAdded",
              "raw": "onWidgetAdded(Lnet/minecraft/client/gui/components/events/GuiEventListener;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.octostudios.nerb.common.mixin.RecipeBookMixin",
            "method": {
              "argTypes": [
                "net.minecraft.stats.RecipeBook",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onCopy",
              "raw": "onCopy(Lnet/minecraft/stats/RecipeBook;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.octostudios.nerb.common.mixin.ClientRecipeBookMixin",
            "method": {
              "argTypes": [
                "java.lang.Iterable",
                "net.minecraft.core.RegistryAccess",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onSetup",
              "raw": "onSetup(Ljava/lang/Iterable;Lnet/minecraft/core/RegistryAccess;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.octostudios.nerb.common.mixin.ButtonMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onPress",
              "raw": "onPress(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "architectury": "[13.0.2,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21.0,)",
        "octolib": "[0.4.2,)"
      },
      "info": {
        "authors": "OctoStudios",
        "classes": "17",
        "description": "Optimization tool that removes Minecraft's recipe book",
        "displayName": "Not Enough Recipe Book",
        "file": "Not Enough Recipe Book-NEOFORGE-0.4.1.jar",
        "license": "All Rights Reserved",
        "package": "it.hurts.octostudios.nerb.common",
        "version": "0.4.1"
      },
      "modifies": [
        "net.minecraft.client.ClientRecipeBook",
        "net.minecraft.client.gui.components.Button",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.server.level.ServerPlayer",
        "net.minecraft.stats.RecipeBook",
        "net.minecraft.stats.ServerRecipeBook"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "nuggets": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.37-beta,)"
      },
      "info": {
        "authors": "BaileyH",
        "classes": "67",
        "description": "A library for Ars Nouveau, BlockPrints, and more.",
        "displayName": "Nuggets",
        "file": "ars_nouveau-1.21.1-5.4.2-all.jar",
        "jarInJar": "nuggets-neoforge-1.21-1.0.4.35.jar",
        "license": "CC0-1.0",
        "package": "com.hollingsworth.nuggets",
        "version": "1.0.4.35"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.hollingsworth.nuggets.client.gui.BaseScreen",
          "com.hollingsworth.nuggets.client.gui.radial.GuiRadialMenu"
        ],
        "net.minecraft.data.DataProvider": [
          "com.hollingsworth.nuggets.datagen.PatchouliProvider",
          "com.hollingsworth.nuggets.datagen.SimpleDataProvider"
        ]
      },
      "modifies": [
        "net.minecraft.client.KeyMapping",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.world.entity.Mob"
      ],
      "summary": [
        "Custom GUI Screens",
        "Uses Data Generators"
      ]
    },
    "obsidianboat": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.unrealdinnerbone.obsidianboat.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onFire",
              "raw": "onFire(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.unrealdinnerbone.obsidianboat.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onLavaHurt",
              "raw": "onLavaHurt(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[1.0,)",
        "trenzalore": "[6.1.1,)"
      },
      "info": {
        "authors": "UnRealDinnerbone",
        "classes": "11",
        "description": "Adds an Obsidian Boat that works on lava\n",
        "displayName": "Obsidian Boat",
        "file": "obsidianboat-neo-21.1.2+mc1.21.1.jar",
        "license": "All Rights Reserved unless stated otherwise. Distribution permission is given to FeedTheBeast and CurseForge for use in modpacks",
        "package": "com.unrealdinnerbone.obsidianboat",
        "version": "21.1.2"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "com.unrealdinnerbone.obsidianboat.entity.ObsidianBoatEntity"
        ],
        "net.minecraft.world.item.Item": [
          "com.unrealdinnerbone.obsidianboat.item.ObsidianBoatItem"
        ]
      },
      "modifies": [
        "net.minecraft.world.entity.Entity"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Entities",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "obtrophies": {
      "dependencies": {
        "minecraft": "[1.21,1.21]",
        "neoforge": "[21.0.143,)"
      },
      "info": {
        "authors": "GizmoTheMoonPig",
        "classes": "88",
        "description": "Brings back the trophies from OpenBlocks.\n",
        "displayName": "OpenBlocks Trophies",
        "file": "OpenBlocksTrophies-1.21-5.1.6.jar",
        "license": "MIT",
        "package": "com.gizmo.trophies",
        "version": "1.21-5.1.6"
      },
      "inheritance": {
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "com.gizmo.trophies.client.TrophyItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.gizmo.trophies.client.TrophyRenderer",
          "com.gizmo.trophies.client.DisplayTrophyRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "com.gizmo.trophies.data.LangGenerator",
          "com.gizmo.trophies.data.TrophyGenerator",
          "com.gizmo.trophies.data.TrophyAdvancementProvider",
          "com.gizmo.trophies.data.TrophyProvider",
          "com.gizmo.trophies.data.LootModifierGenerator"
        ],
        "net.minecraft.world.item.Item": [
          "com.gizmo.trophies.item.TrophyItem",
          "com.gizmo.trophies.item.DisplayTrophyItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.gizmo.trophies.block.TrophyBlock",
          "com.gizmo.trophies.block.DisplayTrophyBlock",
          "com.gizmo.trophies.block.AbstractTrophyBlock"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Items",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "occultism": {
      "dependencies": {
        "almostunified": "[0.5.0,)",
        "curios": "[9.0.5,)",
        "emi": "[1.1.7+1.21,)",
        "geckolib": "[4.5.5,)",
        "jei": "[19.8.2.0,)",
        "modonomicon": "[1.106.0,)",
        "neoforge": "[21.0.110-beta,)",
        "per_viam_invenire": "[0.1.57,)",
        "smartbrainlib": "[1.14.5,)",
        "theurgy": "[1.58.5,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.klikli_dev.occultism.handlers.ClientSetupEventHandler#onClientSetup"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "com.klikli_dev.occultism.handlers.ClientSetupEventHandler#onRegisterEntityRendererLayerDefinitions"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "com.klikli_dev.occultism.handlers.ClientSetupEventHandler#onRegisterEntityRenderers"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "com.klikli_dev.occultism.handlers.ClientPlayerEventHandler#onMouseInput",
          "com.klikli_dev.occultism.handlers.ClientPlayerEventHandler#onKeyInput"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "com.klikli_dev.occultism.handlers.ColorEventHandler#onRegisterBlockColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "com.klikli_dev.occultism.handlers.ColorEventHandler#onRegisterItemColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "com.klikli_dev.occultism.handlers.ClientSetupEventHandler#onRegisterGuiOverlays"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "com.klikli_dev.occultism.handlers.ClientSetupEventHandler#onRegisterKeyMappings"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "com.klikli_dev.occultism.handlers.ClientRegistryEventHandler#onRegisterParticleProviders"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.klikli_dev.occultism.client.render.SelectedBlockRenderer#RenderLevelLastEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderLivingEvent$Post": [
          "com.klikli_dev.occultism.client.render.entity.DragonFamiliarRenderer$RenderText#renderText"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.klikli_dev.occultism.datagen.DataGenerators#gatherData"
        ],
        "net.neoforged.neoforge.event.PlayLevelSoundEvent$AtPosition": [
          "com.klikli_dev.occultism.handlers.ClientPlayerEventHandler#onPlaySoundAt"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "com.klikli_dev.occultism.handlers.ForgeEventHandler#registerCommands"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "com.klikli_dev.occultism.handlers.CapabilityEventHandler#onEntityJoinWorld"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "com.klikli_dev.occultism.handlers.FamiliarEventHandler#livingDeathEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingExperienceDropEvent": [
          "com.klikli_dev.occultism.handlers.LootEventHandler#onExpDrop"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "com.klikli_dev.occultism.handlers.FamiliarEventHandler#livingDamageEvent",
          "com.klikli_dev.occultism.handlers.FamiliarEventHandler#dodge"
        ],
        "net.neoforged.neoforge.event.entity.living.MobEffectEvent$Applicable": [
          "com.klikli_dev.occultism.handlers.FamiliarEventHandler#beholderBlindnessImmune"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Pre": [
          "com.klikli_dev.occultism.handlers.LootEventHandler#giveStoneToBlacksmith"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "com.klikli_dev.occultism.handlers.TooltipHandler#onAddInformation"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$BreakSpeed": [
          "com.klikli_dev.occultism.handlers.FamiliarEventHandler#beaverHarvest"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "com.klikli_dev.occultism.handlers.PlayerEventHandler#onPlayerRightClickEntity"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.klikli_dev.occultism.handlers.PlayerEventHandler#onPlayerRightClickBlock"
        ],
        "net.neoforged.neoforge.event.level.BlockGrowFeatureEvent": [
          "com.klikli_dev.occultism.handlers.FamiliarEventHandler#beaverFindTree"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "com.klikli_dev.occultism.client.render.ThirdEyeEffectRenderer#onPlayerTick",
          "com.klikli_dev.occultism.handlers.CapabilityEventHandler#onPlayerTick"
        ]
      },
      "info": {
        "authors": "Kli Kli",
        "classes": "779",
        "description": "A magic mod inspired by the world of Jonathan Stroud's Bartimaeus. With the help of occult rituals players can summon entities from the \"Other Side\" to perform magic.",
        "displayName": "Occultism",
        "file": "occultism-1.21.1-neoforge-1.173.4.jar",
        "license": "MIT",
        "package": "com.klikli_dev.occultism",
        "version": "1.173.4"
      },
      "inheritance": {
        "com.mojang.brigadier.Command": [
          "com.klikli_dev.occultism.common.command.DebugAICommand"
        ],
        "net.minecraft.client.gui.screens.Screen": [
          "com.klikli_dev.occultism.client.gui.spirit.SpiritTransporterGui",
          "com.klikli_dev.occultism.client.gui.spirit.SpiritGui",
          "com.klikli_dev.occultism.client.gui.spirit.BookOfCallingManagedMachineGui",
          "com.klikli_dev.occultism.client.gui.spirit.BookOfCallingGui",
          "com.klikli_dev.occultism.client.gui.satchel.RitualSatchelScreen",
          "com.klikli_dev.occultism.client.gui.satchel.SatchelScreen",
          "com.klikli_dev.occultism.client.gui.DimensionalMineshaftScreen",
          "com.klikli_dev.occultism.client.gui.storage.StorageControllerGuiBase",
          "com.klikli_dev.occultism.client.gui.storage.StorageRemoteGui",
          "com.klikli_dev.occultism.client.gui.storage.StableWormholeGui",
          "com.klikli_dev.occultism.client.gui.storage.StorageControllerGui"
        ],
        "net.minecraft.client.particle.Particle": [
          "com.klikli_dev.occultism.client.particle.RitualWaitingParticle",
          "com.klikli_dev.occultism.client.particle.SnowflakeParticle"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.klikli_dev.occultism.client.render.blockentity.SacrificialBowlRenderer",
          "com.klikli_dev.occultism.client.render.blockentity.StorageControllerGeoRenderer",
          "com.klikli_dev.occultism.client.render.blockentity.StorageControllerRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "com.klikli_dev.occultism.datagen.ItemModelsGenerator",
          "com.klikli_dev.occultism.datagen.lang.ENUSProvider",
          "com.klikli_dev.occultism.datagen.lang.RURUProvider",
          "com.klikli_dev.occultism.datagen.PentacleProvider",
          "com.klikli_dev.occultism.datagen.tags.OccultismItemTagProvider",
          "com.klikli_dev.occultism.datagen.tags.OccultismBiomeTagProvider",
          "com.klikli_dev.occultism.datagen.tags.OccultismBlockTagProvider",
          "com.klikli_dev.occultism.datagen.tags.OccultismEntityTypeTagProvider",
          "com.klikli_dev.occultism.datagen.StandardBlockStateProvider",
          "com.klikli_dev.occultism.datagen.loot.OccultismLootModifiers",
          "com.klikli_dev.occultism.datagen.loot.OccultismLootTableProvider",
          "com.klikli_dev.occultism.datagen.recipe.RitualRecipes",
          "com.klikli_dev.occultism.datagen.recipe.MinerRecipes",
          "com.klikli_dev.occultism.datagen.recipe.OccultismRecipeProvider"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "com.klikli_dev.occultism.registry.OccultismEffects$ModEffect",
          "com.klikli_dev.occultism.common.effect.ThirdEyeEffect",
          "com.klikli_dev.occultism.common.effect.DoubleJumpEffect"
        ],
        "net.minecraft.world.entity.Entity": [
          "com.klikli_dev.occultism.common.entity.familiar.FamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.OtherworldBirdEntity",
          "com.klikli_dev.occultism.common.entity.familiar.ShubNiggurathFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.ShubNiggurathSpawnEntity",
          "com.klikli_dev.occultism.common.entity.familiar.DeerFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.DevilFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.BatFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.HeadlessFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.IesniumGolemEntity",
          "com.klikli_dev.occultism.common.entity.familiar.BeaverFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.CthulhuFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.GreedyFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.BeholderFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.ThrownSwordEntity",
          "com.klikli_dev.occultism.common.entity.familiar.MummyFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.DragonFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.FairyFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.GuardianFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.ChimeraFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.ColoredFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.ResizableFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.BlacksmithFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.GoatFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.spirit.AfritWildEntity",
          "com.klikli_dev.occultism.common.entity.spirit.WildHuntWitherSkeletonEntity",
          "com.klikli_dev.occultism.common.entity.spirit.MaridUnboundEntity",
          "com.klikli_dev.occultism.common.entity.spirit.MaridEntity",
          "com.klikli_dev.occultism.common.entity.spirit.WildHuntSkeletonEntity",
          "com.klikli_dev.occultism.common.entity.spirit.AfritEntity",
          "com.klikli_dev.occultism.common.entity.spirit.FoliotEntity",
          "com.klikli_dev.occultism.common.entity.spirit.demonicpartner.wife.DemonicWife",
          "com.klikli_dev.occultism.common.entity.spirit.demonicpartner.husband.DemonicHusband",
          "com.klikli_dev.occultism.common.entity.spirit.demonicpartner.DemonicPartner",
          "com.klikli_dev.occultism.common.entity.spirit.SpiritEntity",
          "com.klikli_dev.occultism.common.entity.spirit.DjinniEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedEndermanEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedBeeEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedWeakShulkerEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedGhastEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedHoglinEntity",
          "com.klikli_dev.occultism.common.entity.possessed.GoatOfMercyEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedEndermiteEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedElderGuardianEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedSkeletonEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedZombiePiglinEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedPhantomEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedWardenEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedShulkerEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildSpiderEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.PossessedWeakBreezeEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildHordeSilverfishEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildCaveSpiderEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.PossessedEvokerEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildHordeDrownedEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildHordeCreeperEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildStrayEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildHordeHuskEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.PossessedBreezeEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildSkeletonEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildSilverfishEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildHuskEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.PossessedStrongBreezeEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildSlimeEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildZombieEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildBoggedEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedWitchEntity"
        ],
        "net.minecraft.world.entity.Mob": [
          "com.klikli_dev.occultism.common.entity.familiar.FamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.OtherworldBirdEntity",
          "com.klikli_dev.occultism.common.entity.familiar.ShubNiggurathFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.ShubNiggurathSpawnEntity",
          "com.klikli_dev.occultism.common.entity.familiar.DeerFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.DevilFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.BatFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.HeadlessFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.IesniumGolemEntity",
          "com.klikli_dev.occultism.common.entity.familiar.BeaverFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.CthulhuFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.GreedyFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.BeholderFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.MummyFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.DragonFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.FairyFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.GuardianFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.ChimeraFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.ColoredFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.ResizableFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.BlacksmithFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.familiar.GoatFamiliarEntity",
          "com.klikli_dev.occultism.common.entity.spirit.AfritWildEntity",
          "com.klikli_dev.occultism.common.entity.spirit.WildHuntWitherSkeletonEntity",
          "com.klikli_dev.occultism.common.entity.spirit.MaridUnboundEntity",
          "com.klikli_dev.occultism.common.entity.spirit.MaridEntity",
          "com.klikli_dev.occultism.common.entity.spirit.WildHuntSkeletonEntity",
          "com.klikli_dev.occultism.common.entity.spirit.AfritEntity",
          "com.klikli_dev.occultism.common.entity.spirit.FoliotEntity",
          "com.klikli_dev.occultism.common.entity.spirit.demonicpartner.wife.DemonicWife",
          "com.klikli_dev.occultism.common.entity.spirit.demonicpartner.husband.DemonicHusband",
          "com.klikli_dev.occultism.common.entity.spirit.demonicpartner.DemonicPartner",
          "com.klikli_dev.occultism.common.entity.spirit.SpiritEntity",
          "com.klikli_dev.occultism.common.entity.spirit.DjinniEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedEndermanEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedBeeEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedWeakShulkerEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedGhastEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedHoglinEntity",
          "com.klikli_dev.occultism.common.entity.possessed.GoatOfMercyEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedEndermiteEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedElderGuardianEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedSkeletonEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedZombiePiglinEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedPhantomEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedWardenEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedShulkerEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildSpiderEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.PossessedWeakBreezeEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildHordeSilverfishEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildCaveSpiderEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.PossessedEvokerEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildHordeDrownedEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildHordeCreeperEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildStrayEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildHordeHuskEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.PossessedBreezeEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildSkeletonEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildSilverfishEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildHuskEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.PossessedStrongBreezeEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildSlimeEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildZombieEntity",
          "com.klikli_dev.occultism.common.entity.possessed.horde.WildBoggedEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedWitchEntity"
        ],
        "net.minecraft.world.entity.animal.Animal": [
          "com.klikli_dev.occultism.common.entity.familiar.OtherworldBirdEntity",
          "com.klikli_dev.occultism.common.entity.spirit.MaridEntity",
          "com.klikli_dev.occultism.common.entity.spirit.AfritEntity",
          "com.klikli_dev.occultism.common.entity.spirit.FoliotEntity",
          "com.klikli_dev.occultism.common.entity.spirit.demonicpartner.wife.DemonicWife",
          "com.klikli_dev.occultism.common.entity.spirit.demonicpartner.husband.DemonicHusband",
          "com.klikli_dev.occultism.common.entity.spirit.demonicpartner.DemonicPartner",
          "com.klikli_dev.occultism.common.entity.spirit.SpiritEntity",
          "com.klikli_dev.occultism.common.entity.spirit.DjinniEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedBeeEntity",
          "com.klikli_dev.occultism.common.entity.possessed.PossessedHoglinEntity",
          "com.klikli_dev.occultism.common.entity.possessed.GoatOfMercyEntity"
        ],
        "net.minecraft.world.item.Item": [
          "com.klikli_dev.occultism.registry.OccultismBlockItem",
          "com.klikli_dev.occultism.common.item.armor.OtherworldGogglesItem",
          "com.klikli_dev.occultism.common.item.DummyTooltipItem",
          "com.klikli_dev.occultism.common.item.spirit.BookOfBindingBoundItem",
          "com.klikli_dev.occultism.common.item.spirit.BookOfCallingItem",
          "com.klikli_dev.occultism.common.item.spirit.BookOfCallingTransportItems",
          "com.klikli_dev.occultism.common.item.spirit.SpiritHealingItem",
          "com.klikli_dev.occultism.common.item.spirit.MinerSpiritItem",
          "com.klikli_dev.occultism.common.item.spirit.BookOfCallingManageMachineItem",
          "com.klikli_dev.occultism.common.item.spirit.BookOfCallingLumberjackItem",
          "com.klikli_dev.occultism.common.item.spirit.BookOfBindingItem",
          "com.klikli_dev.occultism.common.item.spirit.BookOfCallingCleanerItem",
          "com.klikli_dev.occultism.common.item.tool.GuideBookItem",
          "com.klikli_dev.occultism.common.item.tool.ritual_satchel.SingleBlockRitualSatchelItem",
          "com.klikli_dev.occultism.common.item.tool.ritual_satchel.RitualSatchelItem",
          "com.klikli_dev.occultism.common.item.tool.ritual_satchel.MultiBlockRitualSatchelItem",
          "com.klikli_dev.occultism.common.item.tool.RainbowChalkItem",
          "com.klikli_dev.occultism.common.item.tool.SoulGemItem",
          "com.klikli_dev.occultism.common.item.tool.OtherworldPickaxeItem",
          "com.klikli_dev.occultism.common.item.tool.SoulShardItem",
          "com.klikli_dev.occultism.common.item.tool.DivinationRodItem",
          "com.klikli_dev.occultism.common.item.tool.FamiliarRingItem",
          "com.klikli_dev.occultism.common.item.tool.ChalkItem",
          "com.klikli_dev.occultism.common.item.tool.InfusedPickaxeItem",
          "com.klikli_dev.occultism.common.item.tool.BrushItem",
          "com.klikli_dev.occultism.common.item.debug.SummonDjinniManageMachineItem",
          "com.klikli_dev.occultism.common.item.debug.SummonFoliotTraderItem",
          "com.klikli_dev.occultism.common.item.debug.SummonFoliotLumberjackItem",
          "com.klikli_dev.occultism.common.item.debug.SummonFoliotCleanerItem",
          "com.klikli_dev.occultism.common.item.debug.SummonDjinniTest",
          "com.klikli_dev.occultism.common.item.debug.DebugWandItem",
          "com.klikli_dev.occultism.common.item.debug.SummonFoliotTransportItemsItem",
          "com.klikli_dev.occultism.common.item.storage.StorageControllerBlockItem",
          "com.klikli_dev.occultism.common.item.storage.SatchelItem",
          "com.klikli_dev.occultism.common.item.storage.StableWormholeBlockItem",
          "com.klikli_dev.occultism.common.item.storage.StorageRemoteItem",
          "com.klikli_dev.occultism.common.item.storage.DimensionalMatrixItem",
          "com.klikli_dev.occultism.common.item.otherworld.OtherworldBlockItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.klikli_dev.occultism.crafting.recipe.CrushingRecipe",
          "com.klikli_dev.occultism.crafting.recipe.SingleInputRecipe",
          "com.klikli_dev.occultism.crafting.recipe.RitualRecipe",
          "com.klikli_dev.occultism.crafting.recipe.BoundBookOfBindingRecipe",
          "com.klikli_dev.occultism.crafting.recipe.MinerRecipe",
          "com.klikli_dev.occultism.crafting.recipe.SpiritFireRecipe",
          "com.klikli_dev.occultism.crafting.recipe.SpiritTradeRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.klikli_dev.occultism.registry.OccultismBlocks$1",
          "com.klikli_dev.occultism.common.block.NonPathfindableBlock",
          "com.klikli_dev.occultism.common.block.RainbowGlyphBlock",
          "com.klikli_dev.occultism.common.block.GoldenSacrificialBowlBlock",
          "com.klikli_dev.occultism.common.block.SpiritWallTorchBlock",
          "com.klikli_dev.occultism.common.block.SpiritAttunedCrystalBlock",
          "com.klikli_dev.occultism.common.block.ChalkGlyphBlock",
          "com.klikli_dev.occultism.common.block.SpiritTorchBlock",
          "com.klikli_dev.occultism.common.block.DimensionalMineshaftBlock",
          "com.klikli_dev.occultism.common.block.IesniumAnvilBlock",
          "com.klikli_dev.occultism.common.block.SacrificialBowlBlock",
          "com.klikli_dev.occultism.common.block.storage.StorageControllerBlock",
          "com.klikli_dev.occultism.common.block.storage.StableWormholeBlock",
          "com.klikli_dev.occultism.common.block.storage.StorageStabilizerBlock",
          "com.klikli_dev.occultism.common.block.SpiritFireBlock",
          "com.klikli_dev.occultism.common.block.LargeCandleBlock",
          "com.klikli_dev.occultism.common.block.otherworld.OtherworldSaplingBlock",
          "com.klikli_dev.occultism.common.block.otherworld.OtherworldStrippableBlock",
          "com.klikli_dev.occultism.common.block.otherworld.OtherworldLogNaturalBlock",
          "com.klikli_dev.occultism.common.block.otherworld.OtherstoneNaturalBlock",
          "com.klikli_dev.occultism.common.block.otherworld.OtherworldStrippedLogNaturalBlock",
          "com.klikli_dev.occultism.common.block.otherworld.OtherglassNaturalBlock",
          "com.klikli_dev.occultism.common.block.otherworld.OtherworldLeavesNaturalBlock",
          "com.klikli_dev.occultism.common.block.otherworld.OtherworldSaplingNaturalBlock",
          "com.klikli_dev.occultism.common.block.otherworld.OtherflowerNaturalBlock",
          "com.klikli_dev.occultism.common.block.otherworld.IesniumOreNaturalBlock",
          "com.klikli_dev.occultism.common.block.crops.ReplantableCropsBlock",
          "com.klikli_dev.occultism.common.block.custom.OtherStandingSignBlock",
          "com.klikli_dev.occultism.common.block.custom.OtherHangingSignBlock",
          "com.klikli_dev.occultism.common.block.custom.OtherWallSignBlock",
          "com.klikli_dev.occultism.common.block.custom.OtherWallHangingSignBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Animals",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Server Commands",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Has Commands",
        "Listens to Entity Damage Events",
        "Listens to Entity Death Events",
        "Listens to Entity Interaction Events",
        "Listens to Entity Join World Events",
        "Listens to Item Pickup Events",
        "Listens to Potion Effect Applicable Events",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Block Breaking Speed",
        "Modifies World Rendering",
        "Runs Player Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "oceansdelight": {
      "dependencies": {
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.102-beta,)"
      },
      "events": {
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.scouter.oceansdelight.datagen.DataGenerators#gatherData"
        ]
      },
      "info": {
        "authors": "Scouter456",
        "classes": "15",
        "description": "This is a mod that adds food based on the creatures in the ocean",
        "displayName": "Ocean's Delight",
        "file": "oceansdelight-neoforge-1.0.3-1.21.jar",
        "license": "MIT",
        "package": "com.scouter.oceansdelight",
        "version": "1.0.3"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "com.scouter.oceansdelight.datagen.RecipeGenerator",
          "com.scouter.oceansdelight.datagen.LanguageGenerator",
          "com.scouter.oceansdelight.datagen.ItemModelGenerator",
          "com.scouter.oceansdelight.datagen.BlockTagsGenerator",
          "com.scouter.oceansdelight.datagen.BlockstateGenerator"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.scouter.oceansdelight.blocks.GuardianSoupBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "octolib": {
      "dependencies": {
        "architectury": "[13.0.2,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21.0,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "it.hurts.octostudios.octolib.event.LevelRenderEvents#renderLevelRender"
        ]
      },
      "info": {
        "authors": "OctoStudios",
        "classes": "87",
        "description": "Collection of shared code for OctoStudios' mods",
        "displayName": "OctoLib",
        "file": "OctoLib-NEOFORGE-0.5.0.1.jar",
        "license": "All Rights Reserved",
        "package": "it.hurts.octostudios.octolib",
        "version": "0.5.0.1"
      },
      "summary": [
        "Modifies World Rendering"
      ]
    },
    "oritech": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "rearth.oritech.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "disableXpForLaser",
              "raw": "disableXpForLaser(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "architectury": "[13.0.2,)",
        "athena": " ",
        "fabric_api": " ",
        "geckolib": " ",
        "minecraft": "[1.21,)",
        "neoforge": "[21.0,)",
        "owo": " "
      },
      "events": {
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "rearth.oritech.neoforge.OritechModNeoForge$EventHandler#registerCapabilities"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "rearth.oritech.neoforge.client.OritechClientNeoForge$EventHandler#registerRenderers"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "rearth.oritech.neoforge.client.OritechClientNeoForge$EventHandler#initializeClient"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "rearth.oritech.neoforge.OritechModNeoForge$EventHandler#register"
        ]
      },
      "info": {
        "authors": "Me! - Rearth",
        "classes": "520",
        "description": "Simple tech mod.\n",
        "displayName": "Oritech",
        "file": "oritech-neoforge-0.13.2.jar",
        "license": "CC0-1.0",
        "package": "rearth.oritech",
        "version": "0.13.2"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "rearth.oritech.client.ui.UpgradableMachineScreen",
          "rearth.oritech.client.ui.SteamEngineScreen",
          "rearth.oritech.client.ui.RedstoneAddonScreen",
          "rearth.oritech.client.ui.ReactorScreen",
          "rearth.oritech.client.ui.ItemFilterScreen",
          "rearth.oritech.client.ui.InventoryProxyScreen",
          "rearth.oritech.client.ui.EnchanterScreen",
          "rearth.oritech.client.ui.DroneScreen",
          "rearth.oritech.client.ui.CentrifugeScreen",
          "rearth.oritech.client.ui.CatalystScreen",
          "rearth.oritech.client.ui.BasicMachineScreen",
          "rearth.oritech.client.ui.AcceleratorScreen"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "rearth.oritech.client.renderers.PromethiumToolRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "rearth.oritech.client.renderers.SpawnerControllerRenderer",
          "rearth.oritech.client.renderers.SolarPanelRenderer",
          "rearth.oritech.client.renderers.SmallTankRenderer",
          "rearth.oritech.client.renderers.MachineRenderer",
          "rearth.oritech.client.renderers.MachineGantryRenderer",
          "rearth.oritech.client.renderers.LaserArmRenderer",
          "rearth.oritech.client.renderers.ChargerBlockRenderer",
          "rearth.oritech.client.renderers.BlackHoleRenderer",
          "rearth.oritech.client.renderers.AcceleratorControllerRenderer"
        ],
        "net.minecraft.world.entity.Entity": [
          "rearth.oritech.mixin.LivingEntityMixin",
          "rearth.oritech.block.entity.interaction.LaserArmBlockEntity$2",
          "rearth.oritech.block.entity.interaction.DestroyerBlockEntity$1"
        ],
        "net.minecraft.world.item.Item": [
          "rearth.oritech.util.item.OritechGeoItem",
          "rearth.oritech.item.tools.harvesting.PromethiumPickaxeItem",
          "rearth.oritech.item.tools.harvesting.PromethiumAxeItem",
          "rearth.oritech.item.tools.harvesting.DrillItem",
          "rearth.oritech.item.tools.harvesting.ChainsawItem",
          "rearth.oritech.item.tools.armor.JetpackItem",
          "rearth.oritech.item.tools.armor.JetpackExoElytraItem",
          "rearth.oritech.item.tools.armor.JetpackExoArmorItem",
          "rearth.oritech.item.tools.armor.JetpackElytraItem",
          "rearth.oritech.item.tools.armor.ExoArmorItem",
          "rearth.oritech.item.tools.armor.BackstorageExoArmorItem",
          "rearth.oritech.item.tools.Wrench",
          "rearth.oritech.item.tools.WeedKiller",
          "rearth.oritech.item.tools.LaserTargetDesignator",
          "rearth.oritech.item.other.SmallFluidTankBlockItem",
          "rearth.oritech.item.other.MobCaptureItem",
          "rearth.oritech.item.other.CustomTooltipItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "rearth.oritech.init.recipes.OritechRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "rearth.oritech.block.blocks.storage.SmallStorageBlock",
          "rearth.oritech.block.blocks.storage.SmallFluidTank",
          "rearth.oritech.block.blocks.storage.LargeStorageBlock",
          "rearth.oritech.block.blocks.storage.CreativeStorageBlock",
          "rearth.oritech.block.blocks.storage.CreativeFluidTank",
          "rearth.oritech.block.blocks.reactor.ReactorWallBlock",
          "rearth.oritech.block.blocks.reactor.ReactorRodBlock",
          "rearth.oritech.block.blocks.reactor.ReactorReflectorBlock",
          "rearth.oritech.block.blocks.reactor.ReactorRedstonePortBlock",
          "rearth.oritech.block.blocks.reactor.ReactorHeatVentBlock",
          "rearth.oritech.block.blocks.reactor.ReactorHeatPipeBlock",
          "rearth.oritech.block.blocks.reactor.ReactorFuelPortBlock",
          "rearth.oritech.block.blocks.reactor.ReactorEnergyPortBlock",
          "rearth.oritech.block.blocks.reactor.ReactorControllerBlock",
          "rearth.oritech.block.blocks.reactor.ReactorAbsorberPortBlock",
          "rearth.oritech.block.blocks.reactor.ReactorAbsorberBlock",
          "rearth.oritech.block.blocks.reactor.NukeBlock",
          "rearth.oritech.block.blocks.reactor.NuclearExplosionBlock",
          "rearth.oritech.block.blocks.reactor.BaseReactorBlock",
          "rearth.oritech.block.blocks.processing.PulverizerBlock",
          "rearth.oritech.block.blocks.processing.PoweredFurnaceBlock",
          "rearth.oritech.block.blocks.processing.MachineCoreBlock",
          "rearth.oritech.block.blocks.processing.FragmentForge",
          "rearth.oritech.block.blocks.processing.FoundryBlock",
          "rearth.oritech.block.blocks.processing.CoolerBlock",
          "rearth.oritech.block.blocks.processing.CentrifugeBlock",
          "rearth.oritech.block.blocks.processing.AtomicForgeBlock",
          "rearth.oritech.block.blocks.processing.AssemblerBlock",
          "rearth.oritech.block.blocks.pipes.item.ItemPipeDuctBlock",
          "rearth.oritech.block.blocks.pipes.item.ItemPipeConnectionBlock",
          "rearth.oritech.block.blocks.pipes.item.ItemPipeConnectionBlock$FramedItemPipeConnectionBlock",
          "rearth.oritech.block.blocks.pipes.item.ItemPipeBlock",
          "rearth.oritech.block.blocks.pipes.item.ItemPipeBlock$FramedItemPipeBlock",
          "rearth.oritech.block.blocks.pipes.item.ItemFilterBlock",
          "rearth.oritech.block.blocks.pipes.fluid.FluidPipeDuctBlock",
          "rearth.oritech.block.blocks.pipes.fluid.FluidPipeConnectionBlock",
          "rearth.oritech.block.blocks.pipes.fluid.FluidPipeConnectionBlock$FramedFluidPipeConnectionBlock",
          "rearth.oritech.block.blocks.pipes.fluid.FluidPipeBlock",
          "rearth.oritech.block.blocks.pipes.fluid.FluidPipeBlock$FramedFluidPipeBlock",
          "rearth.oritech.block.blocks.pipes.energy.SuperConductorDuctBlock",
          "rearth.oritech.block.blocks.pipes.energy.SuperConductorConnectionBlock",
          "rearth.oritech.block.blocks.pipes.energy.SuperConductorConnectionBlock$FramedSuperConductorConnectionBlock",
          "rearth.oritech.block.blocks.pipes.energy.SuperConductorBlock",
          "rearth.oritech.block.blocks.pipes.energy.SuperConductorBlock$FramedSuperConductorBlock",
          "rearth.oritech.block.blocks.pipes.energy.EnergyPipeDuctBlock",
          "rearth.oritech.block.blocks.pipes.energy.EnergyPipeConnectionBlock",
          "rearth.oritech.block.blocks.pipes.energy.EnergyPipeConnectionBlock$FramedEnergyPipeConnectionBlock",
          "rearth.oritech.block.blocks.pipes.energy.EnergyPipeBlock",
          "rearth.oritech.block.blocks.pipes.energy.EnergyPipeBlock$FramedEnergyPipeBlock",
          "rearth.oritech.block.blocks.pipes.GenericPipeDuctBlock",
          "rearth.oritech.block.blocks.pipes.GenericPipeConnectionBlock",
          "rearth.oritech.block.blocks.pipes.GenericPipeBlock",
          "rearth.oritech.block.blocks.pipes.ExtractablePipeConnectionBlock",
          "rearth.oritech.block.blocks.pipes.AbstractPipeBlock",
          "rearth.oritech.block.blocks.interaction.TreefellerBlock",
          "rearth.oritech.block.blocks.interaction.PumpBlock",
          "rearth.oritech.block.blocks.interaction.PlacerBlock",
          "rearth.oritech.block.blocks.interaction.PipeBoosterBlock",
          "rearth.oritech.block.blocks.interaction.MachineFrameBlock",
          "rearth.oritech.block.blocks.interaction.LaserArmBlock",
          "rearth.oritech.block.blocks.interaction.FertilizerBlock",
          "rearth.oritech.block.blocks.interaction.DronePortBlock",
          "rearth.oritech.block.blocks.interaction.DestroyerBlock",
          "rearth.oritech.block.blocks.interaction.DeepDrillBlock",
          "rearth.oritech.block.blocks.interaction.ChargerBlock",
          "rearth.oritech.block.blocks.generators.SteamEngineBlock",
          "rearth.oritech.block.blocks.generators.LavaGeneratorBlock",
          "rearth.oritech.block.blocks.generators.FuelGeneratorBlock",
          "rearth.oritech.block.blocks.generators.BioGeneratorBlock",
          "rearth.oritech.block.blocks.generators.BigSolarPanelBlock",
          "rearth.oritech.block.blocks.generators.BasicGeneratorBlock",
          "rearth.oritech.block.blocks.decorative.WallMountedLight",
          "rearth.oritech.block.blocks.decorative.TechRedstoneButton",
          "rearth.oritech.block.blocks.decorative.TechLever",
          "rearth.oritech.block.blocks.decorative.TechDoorBlockHinge",
          "rearth.oritech.block.blocks.decorative.TechDoorBlock",
          "rearth.oritech.block.blocks.decorative.MetalBeamBlock",
          "rearth.oritech.block.blocks.arcane.WitheredCropBlock",
          "rearth.oritech.block.blocks.arcane.SpawnerControllerBlock",
          "rearth.oritech.block.blocks.arcane.SpawnerCageBlock",
          "rearth.oritech.block.blocks.arcane.EnchantmentCatalystBlock",
          "rearth.oritech.block.blocks.arcane.EnchanterBlock",
          "rearth.oritech.block.blocks.addons.SteamBoilerAddonBlock",
          "rearth.oritech.block.blocks.addons.RedstoneAddonBlock",
          "rearth.oritech.block.blocks.addons.MachineAddonBlock",
          "rearth.oritech.block.blocks.addons.InventoryProxyAddonBlock",
          "rearth.oritech.block.blocks.accelerator.ParticleCollectorBlock",
          "rearth.oritech.block.blocks.accelerator.BlackHoleBlock",
          "rearth.oritech.block.blocks.accelerator.AcceleratorSensorBlock",
          "rearth.oritech.block.blocks.accelerator.AcceleratorRingBlock",
          "rearth.oritech.block.blocks.accelerator.AcceleratorPassthroughBlock",
          "rearth.oritech.block.blocks.accelerator.AcceleratorMotorBlock",
          "rearth.oritech.block.blocks.accelerator.AcceleratorControllerBlock",
          "rearth.oritech.block.base.block.UpgradableMachineBlock",
          "rearth.oritech.block.base.block.PassiveGeneratorBlock",
          "rearth.oritech.block.base.block.MultiblockMachine",
          "rearth.oritech.block.base.block.MultiblockFrameInteractionBlock",
          "rearth.oritech.block.base.block.MachineBlock",
          "rearth.oritech.block.base.block.FrameInteractionBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "rearth.oritech.block.entity.pipes.GenericPipeInterfaceEntity$PipeNetworkData"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.entity.layers.ElytraLayer",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.player.Player",
        "rearth.oritech.client.renderers.AcceleratorControllerRenderer",
        "rearth.oritech.client.renderers.LaserArmRenderer",
        "rearth.oritech.client.renderers.MachineGantryRenderer"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Has Capability Providers",
        "Localization",
        "Modifies Methods",
        "Stores Data in World Saves",
        "Uses Access Transformers"
      ]
    },
    "owo": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "io.wispforest.owo.mixin.ui.TextFieldWidgetMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "callOwoListener",
              "raw": "callOwoListener(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.TessellatorMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.VertexFormat$Mode",
                "com.mojang.blaze3d.vertex.VertexFormat",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "skipBegin",
              "raw": "skipBegin(Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;Lcom/mojang/blaze3d/vertex/VertexFormat;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.SlotMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "injectOverride",
              "raw": "injectOverride(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.SliderWidgetMixin",
            "method": {
              "argTypes": [
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "makeItSnappyTeam",
              "raw": "makeItSnappyTeam(DLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.RenderSystemMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "popScissors",
              "raw": "popScissors(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.RenderSystemMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "pushScissors",
              "raw": "pushScissors(IIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "captureSetScreen",
              "raw": "captureSetScreen(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/Screen;removed()V}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterRender",
              "raw": "afterRender(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/mojang/blaze3d/platform/Window;updateDisplay()V}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeRender",
              "raw": "beforeRender(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/platform/Window;setErrorSection(Ljava/lang/String;)V, ordinal=1}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "captureResize",
              "raw": "captureResize(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.HandledScreenMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "closeIt",
              "raw": "closeIt(IIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/inventory/AbstractContainerScreen;checkHotbarKeyPressed(II)Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.HandledScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "clearSlotDepth",
              "raw": "clearSlotDepth(Lnet/minecraft/client/gui/GuiGraphics;IIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.HandledScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "enableSlotDepth",
              "raw": "enableSlotDepth(Lnet/minecraft/client/gui/GuiGraphics;IIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.HandledScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "net.minecraft.world.inventory.Slot",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "clearSlotScissors",
              "raw": "clearSlotScissors(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/inventory/Slot;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.HandledScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "net.minecraft.world.inventory.Slot",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "injectSlotScissors",
              "raw": "injectSlotScissors(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/inventory/Slot;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.HandledScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "resetOwoState",
              "raw": "resetOwoState(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.HandledScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "captureOwoState",
              "raw": "captureOwoState(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.EntityRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.network.chat.Component",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "adjustLabelRotation",
              "raw": "adjustLabelRotation(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/mojang/blaze3d/vertex/PoseStack;mulPose(Lorg/joml/Quaternionf;)V}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.EntityRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.network.chat.Component",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cancelLabel",
              "raw": "cancelLabel(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.EntityRenderDispatcherMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "net.minecraft.world.entity.Entity",
                "org.joml.Quaternionf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "cancelFireRotation",
              "raw": "cancelFireRotation(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;Lorg/joml/Quaternionf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/mojang/blaze3d/vertex/PoseStack;mulPose(Lorg/joml/Quaternionf;)V}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.DrawContextMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "int",
                "int",
                "int",
                "int",
                "int",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.mojang.blaze3d.vertex.BufferBuilder"
              ],
              "name": "skipDrawSeason2",
              "raw": "skipDrawSeason2(Lnet/minecraft/resources/ResourceLocation;IIIIIFFFFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/mojang/blaze3d/vertex/BufferBuilder;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/vertex/BufferBuilder;buildOrThrow()Lcom/mojang/blaze3d/vertex/MeshData;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.DrawContextMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "int",
                "int",
                "int",
                "int",
                "int",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.mojang.blaze3d.vertex.BufferBuilder"
              ],
              "name": "skipDraw",
              "raw": "skipDraw(Lnet/minecraft/resources/ResourceLocation;IIIIIFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/mojang/blaze3d/vertex/BufferBuilder;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/vertex/BufferBuilder;buildOrThrow()Lcom/mojang/blaze3d/vertex/MeshData;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.DrawContextMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "int",
                "int",
                "int",
                "int",
                "int",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "org.joml.Matrix4f"
              ],
              "name": "injectBufferBeginPartTwo",
              "raw": "injectBufferBeginPartTwo(Lnet/minecraft/resources/ResourceLocation;IIIIIFFFFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lorg/joml/Matrix4f;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/vertex/Tesselator;begin(Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;Lcom/mojang/blaze3d/vertex/VertexFormat;)Lcom/mojang/blaze3d/vertex/BufferBuilder;}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.DrawContextMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "int",
                "int",
                "int",
                "int",
                "int",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "org.joml.Matrix4f"
              ],
              "name": "injectBufferBegin",
              "raw": "injectBufferBegin(Lnet/minecraft/resources/ResourceLocation;IIIIIFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lorg/joml/Matrix4f;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/vertex/Tesselator;begin(Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;Lcom/mojang/blaze3d/vertex/VertexFormat;)Lcom/mojang/blaze3d/vertex/BufferBuilder;}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.ClickableWidgetMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setHovered",
              "raw": "setHovered(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/components/AbstractWidget;renderWidget(Lnet/minecraft/client/gui/GuiGraphics;IIF)V}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.ClickableWidgetMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "applyWidthToWrapper",
              "raw": "applyWidthToWrapper(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ui.ChatScreenMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "cancelClose",
              "raw": "cancelClose(IIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/Minecraft;setScreen(Lnet/minecraft/client/gui/screens/Screen;)V}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.tweaks.TextFieldWidgetMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "iProvideUsefulSeparators",
              "raw": "iProvideUsefulSeparators(IIZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.tweaks.LevelInfoMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "net.minecraft.world.level.GameType",
                "boolean",
                "net.minecraft.world.Difficulty",
                "boolean",
                "net.minecraft.world.level.GameRules",
                "net.minecraft.world.level.WorldDataConfiguration",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "simulationIsForNerds",
              "raw": "simulationIsForNerds(Ljava/lang/String;Lnet/minecraft/world/level/GameType;ZLnet/minecraft/world/Difficulty;ZLnet/minecraft/world/level/GameRules;Lnet/minecraft/world/level/WorldDataConfiguration;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.tweaks.EulaReaderMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "overrideEulaAgreement",
              "raw": "overrideEulaAgreement(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.text.TranslationStorageMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "kawaii",
              "raw": "kawaii(Ljava/util/Map;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.shader.GameRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceProvider",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.util.List",
                "java.util.List"
              ],
              "name": "loadAllTheShaders",
              "raw": "loadAllTheShaders(Lnet/minecraft/server/packs/resources/ResourceProvider;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/util/List;Ljava/util/List;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/List;add(Ljava/lang/Object;)Z, ordinal=0}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.recipe_remainders.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.crafting.RecipeType",
                "net.minecraft.world.item.crafting.RecipeInput",
                "net.minecraft.world.level.Level",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "java.util.Optional"
              ],
              "name": "addRecipeSpecificRemainders",
              "raw": "addRecipeSpecificRemainders(Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/item/crafting/RecipeInput;Lnet/minecraft/world/level/Level;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Ljava/util/Optional;)V"
            },
            "params": {
              "at": "[{value=RETURN, ordinal=0}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.recipe_remainders.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.util.Map$Entry",
                "java.util.Optional"
              ],
              "name": "deserializeRecipeSpecificRemainders",
              "raw": "deserializeRecipeSpecificRemainders(Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/util/Map$Entry;Ljava/util/Optional;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/Optional;ifPresentOrElse(Ljava/util/function/Consumer;Ljava/lang/Runnable;)V}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.recipe_remainders.CraftingResultSlotMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.item.crafting.CraftingInput$Positioned",
                "net.minecraft.world.item.crafting.CraftingInput",
                "int",
                "int",
                "net.minecraft.core.NonNullList",
                "int",
                "int",
                "int",
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemStack"
              ],
              "name": "fixRemainderStacking",
              "raw": "fixRemainderStacking(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/item/crafting/CraftingInput$Positioned;Lnet/minecraft/world/item/crafting/CraftingInput;IILnet/minecraft/core/NonNullList;IIILnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/inventory/CraftingContainer;setItem(ILnet/minecraft/world/item/ItemStack;)V, ordinal=1}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.offline.WorldSaveHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.nbt.CompoundTag"
              ],
              "name": "onPlayerDataSaved",
              "raw": "onPlayerDataSaved(Lnet/minecraft/world/entity/player/Player;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/nbt/CompoundTag;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/nio/file/Files;createTempFile(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.itemgroup.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.Item$Properties",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "grabTab",
              "raw": "grabTab(Lnet/minecraft/world/item/Item$Properties;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.itemgroup.CreativeInventoryScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "disposeCursorAdapter",
              "raw": "disposeCursorAdapter(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.itemgroup.CreativeInventoryScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "render",
              "raw": "render(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.itemgroup.CreativeInventoryScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.CreativeModeTab",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setSelectedTab",
              "raw": "setSelectedTab(Lnet/minecraft/world/item/CreativeModeTab;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.itemgroup.CreativeInventoryScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "net.minecraft.world.item.CreativeModeTab",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "boolean",
                "boolean",
                "int",
                "int",
                "int"
              ],
              "name": "renderOwoIcon",
              "raw": "renderOwoIcon(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/CreativeModeTab;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;ZZIII)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/item/CreativeModeTab;getIconItem()Lnet/minecraft/world/item/ItemStack;}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.itemgroup.CreativeInventoryScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.player.LocalPlayer",
                "net.minecraft.world.flag.FeatureFlagSet",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "captureFeatures",
              "raw": "captureFeatures(Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/world/flag/FeatureFlagSet;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ffapi.NeoNetworkRegistrarMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.ConnectionProtocol",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "owo$adjustMapType",
              "raw": "owo$adjustMapType(Lnet/minecraft/network/ConnectionProtocol;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ext.ItemStackMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.component.DataComponentMap",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "deriveComponents4",
              "raw": "deriveComponents4(Lnet/minecraft/core/component/DataComponentMap;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/item/Item;verifyComponentsAfterLoad(Lnet/minecraft/world/item/ItemStack;)V}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ext.ItemStackMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.component.DataComponentPatch",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "deriveComponents3",
              "raw": "deriveComponents3(Lnet/minecraft/core/component/DataComponentPatch;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/item/Item;verifyComponentsAfterLoad(Lnet/minecraft/world/item/ItemStack;)V}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ext.ItemStackMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.component.DataComponentPatch",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "deriveComponents2",
              "raw": "deriveComponents2(Lnet/minecraft/core/component/DataComponentPatch;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/item/Item;verifyComponentsAfterLoad(Lnet/minecraft/world/item/ItemStack;)V}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ext.ItemStackMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.ItemLike",
                "int",
                "net.minecraft.core.component.PatchedDataComponentMap",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "deriveComponents1",
              "raw": "deriveComponents1(Lnet/minecraft/world/level/ItemLike;ILnet/minecraft/core/component/PatchedDataComponentMap;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/item/Item;verifyComponentsAfterLoad(Lnet/minecraft/world/item/ItemStack;)V}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ext.ItemStackMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.ItemLike",
                "int",
                "net.minecraft.core.component.PatchedDataComponentMap",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "injectDerivedComponentMap",
              "raw": "injectDerivedComponentMap(Lnet/minecraft/world/level/ItemLike;ILnet/minecraft/core/component/PatchedDataComponentMap;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/item/Item;verifyComponentsAfterLoad(Lnet/minecraft/world/item/ItemStack;)V}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.TagGroupLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "injectValues",
              "raw": "injectValues(Lnet/minecraft/server/packs/resources/ResourceManager;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ServerPlayerInteractionManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerPlayer",
                "net.minecraft.world.level.Level",
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.InteractionHand",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "incrementUseState",
              "raw": "incrementUseState(Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ServerPlayerEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.inventory.AbstractContainerMenu",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "attachScreenHandler",
              "raw": "attachScreenHandler(Lnet/minecraft/world/inventory/AbstractContainerMenu;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ScreenHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "syncOnSendContentUpdates",
              "raw": "syncOnSendContentUpdates(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ScreenHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "syncOnSyncState",
              "raw": "syncOnSyncState(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.ScreenHandlerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.inventory.MenuType",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "createReflectiveBuilder",
              "raw": "createReflectiveBuilder(Lnet/minecraft/world/inventory/MenuType;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.DataResultMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef"
              ],
              "name": "wrapMessageWithStacktrace",
              "raw": "wrapMessageWithStacktrace(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.DataResultMixin$DataResultErrorMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef"
              ],
              "name": "addStackTraceToException",
              "raw": "addStackTraceToException(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.Copenhagen",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.WorldGenLevel",
                "net.minecraft.util.RandomSource",
                "net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration",
                "double",
                "double",
                "double",
                "double",
                "double",
                "double",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "coping",
              "raw": "coping(Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;DDDDDDIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "io.wispforest.owo.mixin.Copenhagen",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.WorldGenLevel",
                "net.minecraft.util.RandomSource",
                "net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration",
                "double",
                "double",
                "double",
                "double",
                "double",
                "double",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "int",
                "java.util.BitSet",
                "net.minecraft.core.BlockPos$MutableBlockPos",
                "int",
                "[",
                "double",
                "net.minecraft.world.level.chunk.BulkSectionAccess",
                "int",
                "double",
                "double",
                "double",
                "double",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "int",
                "double",
                "int",
                "double",
                "int",
                "double",
                "int",
                "net.minecraft.world.level.chunk.LevelChunkSection",
                "int",
                "int",
                "int",
                "net.minecraft.world.level.block.state.BlockState",
                "java.util.Iterator",
                "net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration$TargetBlockState"
              ],
              "name": "malding",
              "raw": "malding(Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;DDDDDDIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;ILjava/util/BitSet;Lnet/minecraft/core/BlockPos$MutableBlockPos;I[DLnet/minecraft/world/level/chunk/BulkSectionAccess;IDDDDIIIIIIIDIDIDILnet/minecraft/world/level/chunk/LevelChunkSection;IIILnet/minecraft/world/level/block/state/BlockState;Ljava/util/Iterator;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/chunk/LevelChunkSection;setBlockState(IIILnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState;}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21,)"
      },
      "info": {
        "authors": "glisco, Blodhgarm, BasiqueEvangelist, Noaaan",
        "classes": "485",
        "description": "yes its bad i know thanks\n",
        "displayName": "oωo",
        "file": "owo-lib-neoforge-0.12.15-beta.12+1.21.jar",
        "license": "MIT",
        "package": "io.wispforest.owo",
        "version": "0.12.15-beta.12+1.21"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "io.wispforest.owo.ui.parsing.ConfigureHotReloadScreen",
          "io.wispforest.owo.ui.hud.HudInspectorScreen",
          "io.wispforest.owo.ui.core.OwoUIDrawContext$UtilityScreen",
          "io.wispforest.owo.ui.base.BaseUIModelScreen",
          "io.wispforest.owo.ui.base.BaseUIModelHandledScreen",
          "io.wispforest.owo.ui.base.BaseOwoScreen",
          "io.wispforest.owo.ui.base.BaseOwoHandledScreen",
          "io.wispforest.owo.renderdoc.RenderdocScreen",
          "io.wispforest.owo.mixin.ui.HandledScreenMixin",
          "io.wispforest.owo.mixin.itemgroup.CreativeInventoryScreenMixin",
          "io.wispforest.owo.config.ui.RestartRequiredScreen",
          "io.wispforest.owo.config.ui.ConfigScreen"
        ],
        "net.minecraft.world.entity.Entity": [
          "io.wispforest.owo.ui.component.EntityComponent$RenderablePlayerEntity"
        ]
      },
      "modifies": [
        "com.mojang.blaze3d.systems.RenderSystem",
        "com.mojang.blaze3d.vertex.BufferBuilder",
        "com.mojang.blaze3d.vertex.Tesselator",
        "com.mojang.serialization.DataResult",
        "com.mojang.serialization.DataResult$Error",
        "io.wispforest.owo.ui.base.BaseOwoHandledScreen",
        "io.wispforest.owo.ui.component.TextBoxComponent",
        "net.minecraft.Util$OS",
        "net.minecraft.advancements.AdvancementProgress",
        "net.minecraft.client.KeyboardHandler",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.MouseHandler",
        "net.minecraft.client.gui.GuiGraphics",
        "net.minecraft.client.gui.components.AbstractSliderButton",
        "net.minecraft.client.gui.components.AbstractWidget",
        "net.minecraft.client.gui.components.Button",
        "net.minecraft.client.gui.components.Checkbox",
        "net.minecraft.client.gui.components.EditBox",
        "net.minecraft.client.gui.components.MultiLineEditBox",
        "net.minecraft.client.gui.components.MultilineTextField",
        "net.minecraft.client.gui.screens.ChatScreen",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen",
        "net.minecraft.client.gui.screens.inventory.CreativeModeInventoryScreen",
        "net.minecraft.client.gui.screens.inventory.EffectRenderingInventoryScreen",
        "net.minecraft.client.multiplayer.ClientCommonPacketListenerImpl",
        "net.minecraft.client.multiplayer.ClientConfigurationPacketListenerImpl",
        "net.minecraft.client.multiplayer.ClientHandshakePacketListenerImpl",
        "net.minecraft.client.renderer.GameRenderer",
        "net.minecraft.client.renderer.ShaderInstance",
        "net.minecraft.client.renderer.entity.EntityRenderDispatcher",
        "net.minecraft.client.renderer.entity.EntityRenderer",
        "net.minecraft.client.resources.language.ClientLanguage",
        "net.minecraft.core.Holder$Reference",
        "net.minecraft.core.MappedRegistry",
        "net.minecraft.core.component.DataComponentType$Builder",
        "net.minecraft.core.component.PatchedDataComponentMap",
        "net.minecraft.locale.Language",
        "net.minecraft.nbt.CompoundTag",
        "net.minecraft.network.Connection",
        "net.minecraft.network.FriendlyByteBuf",
        "net.minecraft.network.chat.ComponentSerialization",
        "net.minecraft.resources.DelegatingOps",
        "net.minecraft.resources.RegistryOps",
        "net.minecraft.resources.RegistryOps$HolderLookupAdapter",
        "net.minecraft.server.Eula",
        "net.minecraft.server.Main",
        "net.minecraft.server.PlayerAdvancements",
        "net.minecraft.server.PlayerAdvancements$Data",
        "net.minecraft.server.level.ServerPlayer",
        "net.minecraft.server.level.ServerPlayerGameMode",
        "net.minecraft.server.network.ServerCommonPacketListenerImpl",
        "net.minecraft.tags.TagLoader",
        "net.minecraft.world.inventory.AbstractContainerMenu",
        "net.minecraft.world.inventory.ResultSlot",
        "net.minecraft.world.inventory.Slot",
        "net.minecraft.world.item.CreativeModeTab",
        "net.minecraft.world.item.Item",
        "net.minecraft.world.item.Item$Properties",
        "net.minecraft.world.item.ItemStack",
        "net.minecraft.world.item.crafting.RecipeManager",
        "net.minecraft.world.level.LevelSettings",
        "net.minecraft.world.level.block.entity.BlockEntity",
        "net.minecraft.world.level.levelgen.feature.OreFeature",
        "net.minecraft.world.level.storage.PlayerDataStorage",
        "net.minecraft.world.level.storage.loot.functions.SetComponentsFunction",
        "org.sinytra.fabric.networking_api.NeoNetworkRegistrar"
      ],
      "summary": [
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Localization",
        "Modifies Methods"
      ]
    },
    "particle_core": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "me.fzzyhmstrs.particle_core.mixins.WorldRendererTypeMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.particles.ParticleOptions",
                "boolean",
                "boolean",
                "double",
                "double",
                "double",
                "double",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "particle_core_excludeAndChanceParticles",
              "raw": "particle_core_excludeAndChanceParticles(Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.fzzyhmstrs.particle_core.mixins.ParticleManagerRotationMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.LightTexture",
                "net.minecraft.client.Camera",
                "float",
                "net.minecraft.client.renderer.culling.Frustum",
                "java.util.function.Predicate",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "particle_core_setupDefaultRotations",
              "raw": "particle_core_setupDefaultRotations(Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;FLnet/minecraft/client/renderer/culling/Frustum;Ljava/util/function/Predicate;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "me.fzzyhmstrs.particle_core.mixins.ParticleManagerCachedLightMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.LightTexture",
                "net.minecraft.client.Camera",
                "float",
                "net.minecraft.client.renderer.culling.Frustum",
                "java.util.function.Predicate",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "particle_core_setupLightmapCache",
              "raw": "particle_core_setupLightmapCache(Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;FLnet/minecraft/client/renderer/culling/Frustum;Ljava/util/function/Predicate;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "me.fzzyhmstrs.particle_core.mixins.BillboardParticleMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "net.minecraft.client.Camera",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "particle_core_applyDummyQuat",
              "raw": "particle_core_applyDummyQuat(Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "fzzy_config": "[0.4.1,)",
        "kotlinforforge": "[5.3.0,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.0-beta,)"
      },
      "info": {
        "authors": "fzzyhmstrs",
        "classes": "20",
        "description": "Particle optimizations. Particle culling, rendering optimization, and configurable disabling of particles.\n",
        "displayName": "Particle Core",
        "file": "particle_core-0.2.5+1.21+neoforge.jar",
        "license": "MIT",
        "package": "me.fzzyhmstrs.particle_core",
        "version": "0.2.5+1.21+neoforge"
      },
      "inheritance": {
        "net.minecraft.client.particle.Particle": [
          "me.fzzyhmstrs.particle_core.mixins.BillboardParticleMixin"
        ]
      },
      "modifies": [
        "net.minecraft.client.particle.Particle",
        "net.minecraft.client.particle.ParticleEngine",
        "net.minecraft.client.particle.SingleQuadParticle",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.world.entity.LivingEntity"
      ],
      "summary": [
        "Custom Particles",
        "Localization",
        "Modifies Methods"
      ]
    },
    "patchouli": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "vazkii.patchouli.mixin.client.MixinClientAdvancements",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundUpdateAdvancementsPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "patchouli_onSync",
              "raw": "patchouli_onSync(Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "vazkii.patchouli.mixin.client.MixinSystemReport",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "patchouli_addContext",
              "raw": "patchouli_addContext(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "vazkii.patchouli.mixin.client.MixinInventoryScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onGuiInitPost",
              "raw": "onGuiInitPost(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "vazkii.patchouli.mixin.client.MixinLevelRenderer",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRender",
              "raw": "onRender(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.31-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "vazkii.patchouli.neoforge.client.NeoForgeClientInitializer#onInitializeClient"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "vazkii.patchouli.neoforge.common.NeoForgeModInitializer#onInitialize"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$ModifyBakingResult": [
          "vazkii.patchouli.neoforge.client.NeoForgeClientInitializer#replaceBookModel"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "vazkii.patchouli.neoforge.client.NeoForgeClientInitializer#modelRegistry"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientReloadListenersEvent": [
          "vazkii.patchouli.neoforge.client.NeoForgeClientInitializer#registerReloadListeners"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "vazkii.patchouli.neoforge.client.NeoForgeClientInitializer#registerOverlays"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "vazkii.patchouli.neoforge.common.NeoForgeModInitializer#processCreativeTabs"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "vazkii.patchouli.neoforge.common.NeoForgeModInitializer#register"
        ]
      },
      "info": {
        "authors": "Vazkii",
        "classes": "198",
        "description": "Accessible, Data-Driven, Dependency-Free Documentation for Minecraft Modders and Pack Makers\n",
        "displayName": "Patchouli",
        "file": "Patchouli-1.21-88-NEOFORGE.jar",
        "license": "CC BY-NC-SA 3.0",
        "package": "vazkii.patchouli.api",
        "version": "1.21-88-NEOFORGE"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "vazkii.patchouli.client.gui.GuiAdvancementsExt",
          "vazkii.patchouli.client.book.gui.GuiBookHistory",
          "vazkii.patchouli.client.book.gui.GuiBookWriter",
          "vazkii.patchouli.client.book.gui.GuiBookCategory",
          "vazkii.patchouli.client.book.gui.GuiBookLanding",
          "vazkii.patchouli.client.book.gui.GuiBookEntry",
          "vazkii.patchouli.client.book.gui.GuiBook",
          "vazkii.patchouli.client.book.gui.GuiBookIndex",
          "vazkii.patchouli.client.book.gui.GuiBookEntryList",
          "vazkii.patchouli.mixin.client.MixinInventoryScreen"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "vazkii.patchouli.client.base.BookModel"
        ],
        "net.minecraft.world.item.Item": [
          "vazkii.patchouli.common.item.ItemModBook"
        ]
      },
      "modifies": [
        "net.minecraft.SystemReport",
        "net.minecraft.client.KeyMapping",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.client.gui.screens.inventory.InventoryScreen",
        "net.minecraft.client.multiplayer.ClientAdvancements",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.MultiBufferSource$BufferSource",
        "net.minecraft.world.item.crafting.SmithingTransformRecipe",
        "net.minecraft.world.item.crafting.SmithingTrimRecipe"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods"
      ]
    },
    "pickletweaks": {
      "dependencies": {
        "cucumber": "[8.0.1,)",
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "com.blakebr0.cucumber.event.ScytheHarvestCropEvent": [
          "com.blakebr0.pickletweaks.tweaks.TweakToolUselessifier#onScytheHarvestCrop",
          "com.blakebr0.pickletweaks.tweaks.TweakToolBreaking#onScytheHarvestCrop"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.blakebr0.pickletweaks.PickleTweaks#onClientSetup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "com.blakebr0.pickletweaks.PickleTweaks#onCommonSetup"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "com.blakebr0.pickletweaks.handler.RegisterCapabilityHandler#onRegisterCapabilities"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$AddLayers": [
          "com.blakebr0.pickletweaks.feature.client.ModelHandler#onAddLayers"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "com.blakebr0.pickletweaks.feature.client.ModelHandler#onRegisterLayerDefinitions"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "com.blakebr0.pickletweaks.feature.client.handler.ColorHandler#onBlockColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "com.blakebr0.pickletweaks.feature.client.handler.ColorHandler#onItemColors"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$MouseButtonPressed$Pre": [
          "com.blakebr0.pickletweaks.feature.client.handler.ToggleMagnetInInventoryHandler#onMouseClicked"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "com.blakebr0.pickletweaks.feature.client.ModClientExtensions#onRegisterClientExtensions"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Pre": [
          "com.blakebr0.pickletweaks.compat.curios.CuriosCompat#onLivingDamage"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "com.blakebr0.pickletweaks.tweaks.TweakToolUselessifier#onLivingHurt"
        ],
        "net.neoforged.neoforge.event.entity.player.AttackEntityEvent": [
          "com.blakebr0.pickletweaks.tweaks.TweakToolBreaking#onAttackEntity"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "com.blakebr0.pickletweaks.tweaks.TweakToolUselessifier#onItemTooltip",
          "com.blakebr0.pickletweaks.tweaks.TweakToolBreaking#onItemTooltip",
          "com.blakebr0.pickletweaks.feature.FeatureToolInfo#onItemTooltip",
          "com.blakebr0.pickletweaks.feature.FeatureBowInfo#onTooltip"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$BreakSpeed": [
          "com.blakebr0.pickletweaks.tweaks.TweakToolUselessifier#onBreakSpeed",
          "com.blakebr0.pickletweaks.tweaks.TweakToolBreaking#onBreakingBlock"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "com.blakebr0.pickletweaks.tweaks.TweakToolUselessifier#onEntityInteract",
          "com.blakebr0.pickletweaks.tweaks.TweakToolBreaking#onEntityInteract"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.blakebr0.pickletweaks.tweaks.TweakToolUselessifier#onRightClickBlock",
          "com.blakebr0.pickletweaks.tweaks.TweakToolBreaking#onRightClickBlock",
          "com.blakebr0.pickletweaks.feature.FeatureRightClickHarvest#onRightClickCrop"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "com.blakebr0.pickletweaks.tweaks.TweakToolUselessifier#onRightClickItem",
          "com.blakebr0.pickletweaks.tweaks.TweakToolBreaking#onRightClickItem"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BreakEvent": [
          "com.blakebr0.pickletweaks.tweaks.TweakToolBreaking#onBreakBlock"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Pre": [
          "com.blakebr0.pickletweaks.feature.client.handler.NightVisionGogglesHandler#onLivingTick"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.blakebr0.pickletweaks.network.NetworkHandler#onRegisterPayloadHandlers"
        ]
      },
      "info": {
        "authors": "BlakeBr0",
        "classes": "47",
        "description": "    A bunch of vanilla+ features and tweaks.\n    ",
        "displayName": "Pickle Tweaks",
        "file": "PickleTweaks-1.21.1-9.0.5.jar",
        "license": "MIT",
        "package": "com.blakebr0.pickletweaks",
        "updateUrl": "https://api.blakesmods.com/v2/mods/pickletweaks/1.21/updates",
        "version": "9.0.5"
      },
      "inheritance": {
        "net.minecraft.world.item.Item": [
          "com.blakebr0.pickletweaks.feature.item.WateringCanItem",
          "com.blakebr0.pickletweaks.feature.item.NightVisionGogglesItem",
          "com.blakebr0.pickletweaks.feature.item.MagnetItem",
          "com.blakebr0.pickletweaks.feature.item.EmeraldAppleItem",
          "com.blakebr0.pickletweaks.feature.item.DiamondAppleItem",
          "com.blakebr0.pickletweaks.feature.item.CoalPieceItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.blakebr0.pickletweaks.feature.crafting.GridRepairRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.blakebr0.pickletweaks.feature.block.SmoothGlowstoneBlock",
          "com.blakebr0.pickletweaks.feature.block.ColoredCobblestoneBlock"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Network Packets",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Handles Right Clicks with Items",
        "Has Capability Providers",
        "Listens to Entity Damage Events",
        "Listens to Entity Interaction Events",
        "Listens to Right Click Block Events",
        "Localization",
        "Modifies Block Breaking",
        "Modifies Block Breaking Speed",
        "Runs Player Tick Logic",
        "Uses Access Transformers"
      ]
    },
    "pipe_connector": {
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.InputEvent$MouseScrollingEvent": [
          "com.heaser.pipeconnector.client.DepthSetterEvent#MouseScrollEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.heaser.pipeconnector.client.ClientEvents#onRenderWorld"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "com.heaser.pipeconnector.items.CreativeTabAdder#buildContents"
        ]
      },
      "info": {
        "authors": "Heaser, PotatoPoweredWizard",
        "classes": "76",
        "description": "This tries to solve a long lasting issue of digging some blocks to put your pipes underground.\n",
        "displayName": "Pipe Connector",
        "file": "pipe_connector-neoforge-0.5.5.jar",
        "license": "MIT License",
        "package": "com.heaser.pipeconnector",
        "version": "0.5.5"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.heaser.pipeconnector.client.gui.PipeConnectorGui"
        ],
        "net.minecraft.world.item.Item": [
          "com.heaser.pipeconnector.items.PipeConnectorItem"
        ]
      },
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Tag Assignments",
        "Localization",
        "Modifies World Rendering"
      ]
    },
    "placebo": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.shadowsoffire.placebo.mixin.AnvilBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.entity.item.FallingBlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onLand",
              "raw": "onLand(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.8,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "dev.shadowsoffire.placebo.PlaceboClient#setup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "dev.shadowsoffire.placebo.Placebo#setup"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "dev.shadowsoffire.placebo.patreon.TrailsManager#clientTick"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$AddLayers": [
          "dev.shadowsoffire.placebo.PlaceboClient#addLayers"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "dev.shadowsoffire.placebo.patreon.WingsManager#keys",
          "dev.shadowsoffire.placebo.patreon.TrailsManager#keys"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientReloadListenersEvent": [
          "dev.shadowsoffire.placebo.PlaceboClient#clientResource"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "dev.shadowsoffire.placebo.PlaceboClient#keys"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "dev.shadowsoffire.placebo.util.PlaceboTaskQueue$Impl#started"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppedEvent": [
          "dev.shadowsoffire.placebo.util.PlaceboTaskQueue$Impl#stopped"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "dev.shadowsoffire.placebo.patreon.PatreonPreview#tick"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "dev.shadowsoffire.placebo.util.PlaceboTaskQueue$Impl#tick"
        ],
        "net.neoforged.neoforge.event.village.WandererTradesEvent": [
          "dev.shadowsoffire.placebo.systems.wanderer.WandererTradesRegistry#replaceTrades"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "dev.shadowsoffire.placebo.network.PayloadHelper#registerProviders"
        ],
        "net.neoforged.neoforge.registries.RegisterEvent": [
          "dev.shadowsoffire.placebo.registry.DeferredHelper#register",
          "dev.shadowsoffire.placebo.Placebo#register"
        ]
      },
      "info": {
        "authors": "Shadows_of_Fire",
        "classes": "152",
        "description": "1 (one) library boi",
        "displayName": "Placebo",
        "file": "Placebo-1.21.1-9.6.5.jar",
        "license": "MIT License",
        "package": "dev.shadowsoffire.placebo",
        "version": "9.6.5"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.shadowsoffire.placebo.screen.PlaceboContainerScreen"
        ],
        "net.minecraft.data.DataProvider": [
          "dev.shadowsoffire.placebo.util.data.DynamicRegistryProvider",
          "dev.shadowsoffire.placebo.datagen.LegacyRecipeProvider"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.components.ChatComponent",
        "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen",
        "net.minecraft.world.item.ItemStack",
        "net.minecraft.world.level.block.AnvilBlock"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom Key Mappings",
        "Custom Network Packets",
        "Listens to Server Started Events",
        "Listens to Server Stopped Events",
        "Localization",
        "Modifies Methods",
        "Modifies Wandering Trader Trades",
        "Runs Client Tick Logic",
        "Runs Player Tick Logic",
        "Runs Server Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "playerplates": {
      "dependencies": {
        "architectury": "[13.0.1,)",
        "minecraft": "[1.21,)",
        "neoforge": "[2,)"
      },
      "info": {
        "authors": "Gaz",
        "classes": "6",
        "description": "Obsidian pressure plates and mossy plates\n",
        "displayName": "Player Plates",
        "file": "playerplates-neoforge-21.1.0+mc1.21.1.jar",
        "license": "All rights reserved",
        "package": "dev.wuffs.playerplates",
        "version": "21.1.0+mc1.21.1"
      },
      "inheritance": {
        "net.minecraft.world.level.block.Block": [
          "dev.wuffs.playerplates.block.PlayerPlateBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Tag Assignments",
        "Localization"
      ]
    },
    "pnc_ocean_addons": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.2)",
        "neoforge": "[21.1.0,)",
        "pneumaticcraft": "[8.2.3,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "me.desht.pncoceanaddons.Config#onLoad"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "me.desht.pncoceanaddons.datagen.DataGenerators#gatherData"
        ]
      },
      "info": {
        "authors": "desht",
        "classes": "14",
        "description": "Addon mod for PneumaticCraft: Repressurized which adds ocean-related things",
        "displayName": "PNC Ocean Addons",
        "file": "pnc_ocean_addons-1.0.1.jar",
        "license": "LGPL3",
        "package": "me.desht.pncoceanaddons",
        "version": "1.0.1"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "me.desht.pncoceanaddons.datagen.ModItemModelProvider",
          "me.desht.pncoceanaddons.datagen.ModLangProvider"
        ]
      },
      "summary": [
        "Auto-reloads Config Files",
        "Custom Item Models",
        "Localization",
        "Uses Data Generators"
      ]
    },
    "pneumaticcraft": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "me.desht.pneumaticcraft.mixin.coremods.BaseSpawnerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onIsNearPlayer",
              "raw": "onIsNearPlayer(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.desht.pneumaticcraft.mixin.coremods.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.EquipmentSlot",
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onOnEquipItem",
              "raw": "onOnEquipItem(Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/LivingEntity;level()Lnet/minecraft/world/level/Level;}]"
            }
          }
        ]
      },
      "dependencies": {
        "emi": "[1.1.13,)",
        "jei": "[19.9.0,)",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.18,)",
        "patchouli": "[1.21-87,)"
      },
      "events": {
        "me.desht.pneumaticcraft.api.client.pneumatic_helmet.InventoryTrackEvent": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#onInventoryTracking"
        ],
        "me.desht.pneumaticcraft.api.drone.AmadronRetrievalEvent": [
          "me.desht.pneumaticcraft.common.amadron.AmadronEventListener#onAmadronSuccess"
        ],
        "me.desht.pneumaticcraft.api.drone.DroneSuicideEvent": [
          "me.desht.pneumaticcraft.common.amadron.AmadronEventListener#onDroneSuicide"
        ],
        "me.desht.pneumaticcraft.api.drone.SpecialVariableRetrievalEvent$CoordinateVariable$Drone": [
          "me.desht.pneumaticcraft.common.drone.DroneSpecialVariableHandler#onSpecialVariableRetrieving"
        ],
        "me.desht.pneumaticcraft.api.semiblock.SemiblockEvent": [
          "me.desht.pneumaticcraft.common.block.entity.drone.ProgrammableControllerBlockEntity#onSemiblockEvent"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "me.desht.pneumaticcraft.common.thirdparty.patchouli.Patchouli$ConfigListener#onConfigChange"
        ],
        "net.neoforged.fml.event.lifecycle.InterModEnqueueEvent": [
          "me.desht.pneumaticcraft.common.thirdparty.PneumaticcraftIMC#sendIMCMessages"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingIn": [
          "me.desht.pneumaticcraft.client.event.ClientEventHandler#onClientConnect"
        ],
        "net.neoforged.neoforge.client.event.ClientPlayerNetworkEvent$LoggingOut": [
          "me.desht.pneumaticcraft.common.pneumatic_armor.CommonArmorHandler$ClientListeners#onClientDisconnect"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "me.desht.pneumaticcraft.client.render.area.AreaRenderManager#tickEnd",
          "me.desht.pneumaticcraft.client.sound.MovingSounds$Listener#clientTick",
          "me.desht.pneumaticcraft.common.thirdparty.patchouli.Patchouli$ScreenListener#clientTick",
          "me.desht.pneumaticcraft.common.pneumatic_armor.CommonArmorHandler$ClientListeners#tickEnd"
        ],
        "net.neoforged.neoforge.client.event.ComputeFovModifierEvent": [
          "me.desht.pneumaticcraft.client.event.ClientEventHandler#adjustFOVEvent"
        ],
        "net.neoforged.neoforge.client.event.ContainerScreenEvent$Render$Foreground": [
          "me.desht.pneumaticcraft.client.event.ClientEventHandler#guiContainerForeground"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "me.desht.pneumaticcraft.client.gui.widget.WidgetKeybindCheckBox$KeyDispatcher#onKeyPress",
          "me.desht.pneumaticcraft.client.KeyHandler#onKey"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseButton$Post": [
          "me.desht.pneumaticcraft.client.gui.widget.WidgetKeybindCheckBox$KeyDispatcher#onMouseClick",
          "me.desht.pneumaticcraft.client.KeyHandler#onMouse"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseScrollingEvent": [
          "me.desht.pneumaticcraft.client.event.ClientEventHandler#onShiftScroll",
          "me.desht.pneumaticcraft.client.render.pneumatic_armor.HUDHandler#onMouseScroll"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$ModifyBakingResult": [
          "me.desht.pneumaticcraft.client.event.ModClientEventHandler#onModelBaking"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterGeometryLoaders": [
          "me.desht.pneumaticcraft.client.event.ModClientEventHandler#onModelRegistry"
        ],
        "net.neoforged.neoforge.client.event.RecipesUpdatedEvent": [
          "me.desht.pneumaticcraft.common.amadron.AmadronOfferManager$EventListener#onRecipesAvailable"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "me.desht.pneumaticcraft.client.ColorHandlers#registerBlockColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "me.desht.pneumaticcraft.client.ColorHandlers#registerItemColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiLayerEvent$Pre": [
          "me.desht.pneumaticcraft.client.render.overlays.MinigunOverlay$Listener#crosshairsEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "me.desht.pneumaticcraft.client.render.area.AreaRenderManager#renderLevelStageEvent",
          "me.desht.pneumaticcraft.client.render.pneumatic_armor.HUDHandler#renderHUD3d"
        ],
        "net.neoforged.neoforge.client.event.RenderPlayerEvent$Pre": [
          "me.desht.pneumaticcraft.client.event.ClientEventHandler#playerPreRotateEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$GatherComponents": [
          "me.desht.pneumaticcraft.client.event.TooltipEventHandler#gatherComponents"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Closing": [
          "me.desht.pneumaticcraft.common.thirdparty.patchouli.Patchouli$ScreenListener#onGuiClosing"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "me.desht.pneumaticcraft.client.render.pneumatic_armor.HUDHandler#handleResolutionChange"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Opening": [
          "me.desht.pneumaticcraft.common.thirdparty.jei.transfer.ProgrammerTransferHandler$Listener#onGuiOpen"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Render$Post": [
          "me.desht.pneumaticcraft.client.event.ClientEventHandler#onGuiDrawPost"
        ],
        "net.neoforged.neoforge.client.event.ViewportEvent$ComputeCameraAngles": [
          "me.desht.pneumaticcraft.client.event.ClientEventHandler#screenTilt"
        ],
        "net.neoforged.neoforge.client.event.ViewportEvent$ComputeFogColor": [
          "me.desht.pneumaticcraft.client.event.ClientEventHandler#fogColorEvent"
        ],
        "net.neoforged.neoforge.client.event.ViewportEvent$RenderFog": [
          "me.desht.pneumaticcraft.client.event.ClientEventHandler#fogDensityEvent"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "me.desht.pneumaticcraft.client.event.ModClientEventHandler#registerClientExtensions"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "me.desht.pneumaticcraft.datagen.DataGenerators#gatherData"
        ],
        "net.neoforged.neoforge.event.AnvilUpdateEvent": [
          "me.desht.pneumaticcraft.common.event.PneumaticArmorHandler#onArmorRepair"
        ],
        "net.neoforged.neoforge.event.ServerChatEvent": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#quetziMoo"
        ],
        "net.neoforged.neoforge.event.TagsUpdatedEvent": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#onTagsUpdated"
        ],
        "net.neoforged.neoforge.event.entity.EntityAttributeCreationEvent": [
          "me.desht.pneumaticcraft.common.registry.ModEntityTypes$Listener#registerGlobalAttributes"
        ],
        "net.neoforged.neoforge.event.entity.EntityEvent$EntityConstructing": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#onEntityConstruction"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "me.desht.pneumaticcraft.client.sound.MovingSounds$Listener#onPlayerJoinWorld",
          "me.desht.pneumaticcraft.common.hacking.HackEventListener#onEntityJoining",
          "me.desht.pneumaticcraft.common.hacking.entity.HackableShulker$Listener#onBullet",
          "me.desht.pneumaticcraft.common.hacking.entity.HackableGhast$Listener#onFireball",
          "me.desht.pneumaticcraft.common.hacking.entity.HackableBlaze$Listener#onFireball",
          "me.desht.pneumaticcraft.common.pneumatic_armor.CommonArmorHandler$Listeners#onPlayerJoinWorld"
        ],
        "net.neoforged.neoforge.event.entity.EntityMountEvent": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#entityMounting"
        ],
        "net.neoforged.neoforge.event.entity.EntityTeleportEvent$EnderEntity": [
          "me.desht.pneumaticcraft.common.hacking.entity.HackableEnderman$Listener#onEnderTeleport"
        ],
        "net.neoforged.neoforge.event.entity.living.FinalizeSpawnEvent": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#onMobSpawn"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingChangeTargetEvent": [
          "me.desht.pneumaticcraft.common.event.PneumaticArmorHandler#onMobTargetSet"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "me.desht.pneumaticcraft.common.event.PneumaticArmorHandler#onEntityDeath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEquipmentChangeEvent": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#onEquipmentChanged"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEvent$LivingJumpEvent": [
          "me.desht.pneumaticcraft.common.event.PneumaticArmorHandler#onPlayerJump"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingFallEvent": [
          "me.desht.pneumaticcraft.common.pneumatic_armor.handlers.FallProtectionHandler$Listener#onPlayerFall"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "me.desht.pneumaticcraft.common.item.minigun.MinigunItem$Listener#onLivingAttack",
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#onIncomingDamage",
          "me.desht.pneumaticcraft.common.event.PneumaticArmorHandler#onLivingAttack"
        ],
        "net.neoforged.neoforge.event.entity.player.AnvilRepairEvent": [
          "me.desht.pneumaticcraft.common.item.MicromissilesItem$Listener#onMissilesRepair"
        ],
        "net.neoforged.neoforge.event.entity.player.AttackEntityEvent": [
          "me.desht.pneumaticcraft.common.event.UniversalSensorHandler#onPlayerAttack",
          "me.desht.pneumaticcraft.common.entity.semiblock.AbstractLogisticsFrameEntity$Listener#onPlayerLeftClick"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Post": [
          "me.desht.pneumaticcraft.common.event.UniversalSensorHandler#onItemPickUp"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "me.desht.pneumaticcraft.client.event.TooltipEventHandler#onItemTooltip"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerContainerEvent$Close": [
          "me.desht.pneumaticcraft.common.block.entity.utility.SecurityStationBlockEntity$Listener#onContainerClose"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerContainerEvent$Open": [
          "me.desht.pneumaticcraft.common.inventory.AbstractPneumaticCraftMenu$Listener#onMenuOpen"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$BreakSpeed": [
          "me.desht.pneumaticcraft.common.event.PneumaticArmorHandler#breakSpeedCheck"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": [
          "me.desht.pneumaticcraft.common.block.entity.utility.AerialInterfaceBlockEntity#onPlayerDimChanged"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "me.desht.pneumaticcraft.common.util.chunkloading.PlayerLogoutTracker#onPlayerDisconnect",
          "me.desht.pneumaticcraft.common.pneumatic_armor.CommonArmorHandler$Listeners#onPlayerLeave"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$StartTracking": [
          "me.desht.pneumaticcraft.common.event.PneumaticArmorHandler#onPlayerTrack",
          "me.desht.pneumaticcraft.common.hacking.HackEventListener#onEntityTracking"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#onModdedWrenchEntity"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickBlock": [
          "me.desht.pneumaticcraft.common.item.GPSAreaToolItem$EventHandler#onBlockLeftClick",
          "me.desht.pneumaticcraft.common.item.JackHammerItem$Listener#onLeftClickBlock",
          "me.desht.pneumaticcraft.common.item.MemoryStickItem$Listener#onLeftClick",
          "me.desht.pneumaticcraft.common.block.entity.utility.SecurityStationBlockEntity$Listener#onPlayerInteract"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$LeftClickEmpty": [
          "me.desht.pneumaticcraft.common.item.GPSAreaToolItem$EventHandler#onLeftClickAir",
          "me.desht.pneumaticcraft.common.item.MemoryStickItem$Listener#onLeftClickEmpty"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "me.desht.pneumaticcraft.client.pneumatic_armor.upgrade_handler.CoordTrackClientHandler$Listener#onPlayerInteract",
          "me.desht.pneumaticcraft.common.event.UniversalSensorHandler#onInteraction",
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#onModdedWrenchBlock",
          "me.desht.pneumaticcraft.common.block.entity.utility.SecurityStationBlockEntity$Listener#onPlayerInteract"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "me.desht.pneumaticcraft.common.event.UniversalSensorHandler#onInteraction",
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#onFillBucket"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerXpEvent$PickupXp": [
          "me.desht.pneumaticcraft.common.item.MemoryStickItem$Listener#onXpOrbPickup"
        ],
        "net.neoforged.neoforge.event.furnace.FurnaceFuelBurnTimeEvent": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#handleFuelEvent"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BreakEvent": [
          "me.desht.pneumaticcraft.common.block.entity.utility.SecurityStationBlockEntity$Listener#onBlockBreak"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$EntityPlaceEvent": [
          "me.desht.pneumaticcraft.common.block.entity.utility.SecurityStationBlockEntity$Listener#onBlockPlace"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$FarmlandTrampleEvent": [
          "me.desht.pneumaticcraft.common.event.PneumaticArmorHandler#onFarmlandTrample"
        ],
        "net.neoforged.neoforge.event.level.ExplosionEvent$Detonate": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#explosionCraftingEvent"
        ],
        "net.neoforged.neoforge.event.level.ExplosionEvent$Start": [
          "me.desht.pneumaticcraft.common.block.entity.utility.SecurityStationBlockEntity$Listener#onBlockExplode"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Load": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#onWorldLoad"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "me.desht.pneumaticcraft.common.util.GlobalBlockEntityCacheManager#onWorldUnloaded"
        ],
        "net.neoforged.neoforge.event.server.ServerAboutToStartEvent": [
          "me.desht.pneumaticcraft.common.variables.GlobalVariableManager$Listener#onServerStarting"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppingEvent": [
          "me.desht.pneumaticcraft.common.semiblock.SemiblockTracker$Listener#onServerStopping"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Post": [
          "me.desht.pneumaticcraft.common.event.MiscEventHandler#onWorldTickEnd",
          "me.desht.pneumaticcraft.common.hacking.HackEventListener#worldTick"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "me.desht.pneumaticcraft.common.event.PneumaticArmorHandler#onPlayerTick",
          "me.desht.pneumaticcraft.common.pneumatic_armor.CommonArmorHandler$Listeners#onPlayerTick"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Pre": [
          "me.desht.pneumaticcraft.client.event.ClientEventHandler#onPlayerTick",
          "me.desht.pneumaticcraft.client.render.pneumatic_armor.HUDHandler#playerTick"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "me.desht.pneumaticcraft.common.amadron.AmadronEventListener#amadronHousekeeping",
          "me.desht.pneumaticcraft.common.block.entity.processing.PressureChamberWallBlockEntity$PressureWallStateManager#onServerTick"
        ],
        "net.neoforged.neoforge.event.village.VillagerTradesEvent": [
          "me.desht.pneumaticcraft.common.villages.VillagerTradesRegistration#registerTrades"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "me.desht.pneumaticcraft.common.network.NetworkHandler#register"
        ]
      },
      "info": {
        "authors": "desht, MineMaarten",
        "classes": "2164",
        "description": "Doing cool stuff with compressed air.",
        "displayName": "PneumaticCraft: Repressurized",
        "file": "pneumaticcraft-repressurized-8.2.8+mc1.21.1.jar",
        "license": "GNU GPLv3",
        "package": "me.desht.pneumaticcraft",
        "updateUrl": "https://raw.githubusercontent.com/TeamPneumatic/pnc-repressurized/1.21/release_info.json",
        "version": "8.2.8"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "me.desht.pneumaticcraft.client.gui.GPSAreaToolScreen",
          "me.desht.pneumaticcraft.client.gui.AerialInterfaceScreen",
          "me.desht.pneumaticcraft.client.gui.FluidMixerScreen",
          "me.desht.pneumaticcraft.client.gui.TagWorkbenchScreen",
          "me.desht.pneumaticcraft.client.gui.semiblock.AbstractLogisticsScreen",
          "me.desht.pneumaticcraft.client.gui.semiblock.LogisticsLiquidFilterScreen",
          "me.desht.pneumaticcraft.client.gui.semiblock.LogisticsProviderScreen",
          "me.desht.pneumaticcraft.client.gui.semiblock.LogisticsStorageScreen",
          "me.desht.pneumaticcraft.client.gui.semiblock.LogisticsRequesterScreen",
          "me.desht.pneumaticcraft.client.gui.GPSToolScreen",
          "me.desht.pneumaticcraft.client.gui.UniversalSensorScreen",
          "me.desht.pneumaticcraft.client.gui.AphorismTileScreen",
          "me.desht.pneumaticcraft.client.gui.AdvancedAirCompressorScreen",
          "me.desht.pneumaticcraft.client.gui.ChargingStationScreen",
          "me.desht.pneumaticcraft.client.gui.CreativeCompressedIronBlockScreen",
          "me.desht.pneumaticcraft.client.gui.ProgrammableControllerScreen",
          "me.desht.pneumaticcraft.client.gui.SmartChestScreen",
          "me.desht.pneumaticcraft.client.gui.VacuumTrapScreen",
          "me.desht.pneumaticcraft.client.gui.RefineryControllerScreen",
          "me.desht.pneumaticcraft.client.gui.GasLiftScreen",
          "me.desht.pneumaticcraft.client.gui.remote.RemoteScreen",
          "me.desht.pneumaticcraft.client.gui.remote.config.RemoteLabelOptionScreen",
          "me.desht.pneumaticcraft.client.gui.remote.config.AbstractRemoteVariableConfigScreen",
          "me.desht.pneumaticcraft.client.gui.remote.config.AbstractRemoteConfigScreen",
          "me.desht.pneumaticcraft.client.gui.remote.config.RemoteCheckboxOptionScreen",
          "me.desht.pneumaticcraft.client.gui.remote.config.RemoteDropdownOptionScreen",
          "me.desht.pneumaticcraft.client.gui.remote.config.RemoteButtonOptionScreen",
          "me.desht.pneumaticcraft.client.gui.remote.RemoteEditorScreen",
          "me.desht.pneumaticcraft.client.gui.remote.AbstractRemoteScreen",
          "me.desht.pneumaticcraft.client.gui.AirCompressorScreen",
          "me.desht.pneumaticcraft.client.gui.MinigunMagazineScreen",
          "me.desht.pneumaticcraft.client.gui.KeroseneLampScreen",
          "me.desht.pneumaticcraft.client.gui.ReinforcedChestScreen",
          "me.desht.pneumaticcraft.client.gui.SecurityStationHackingScreen",
          "me.desht.pneumaticcraft.client.gui.SentryTurretScreen",
          "me.desht.pneumaticcraft.client.gui.ThermoPlantScreen",
          "me.desht.pneumaticcraft.client.gui.SolarCompressorScreen",
          "me.desht.pneumaticcraft.client.gui.CreativeCompressorScreen",
          "me.desht.pneumaticcraft.client.gui.ElectrostaticCompressorScreen",
          "me.desht.pneumaticcraft.client.gui.AbstractCreativeAdjusterScreen",
          "me.desht.pneumaticcraft.client.gui.AbstractPneumaticCraftContainerScreen",
          "me.desht.pneumaticcraft.client.gui.MicromissileScreen",
          "me.desht.pneumaticcraft.client.gui.LiquidHopperScreen",
          "me.desht.pneumaticcraft.client.gui.AirCannonScreen",
          "me.desht.pneumaticcraft.client.gui.AdvancedLiquidCompressorScreen",
          "me.desht.pneumaticcraft.client.gui.ElevatorScreen",
          "me.desht.pneumaticcraft.client.gui.tubemodule.PressureGaugeModuleScreen",
          "me.desht.pneumaticcraft.client.gui.tubemodule.LogisticsModuleScreen",
          "me.desht.pneumaticcraft.client.gui.tubemodule.ThermostatModuleScreen",
          "me.desht.pneumaticcraft.client.gui.tubemodule.SimpleThermostatModuleScreen",
          "me.desht.pneumaticcraft.client.gui.tubemodule.AirGrateModuleScreen",
          "me.desht.pneumaticcraft.client.gui.tubemodule.AbstractTubeModuleScreen",
          "me.desht.pneumaticcraft.client.gui.tubemodule.RedstoneModuleScreen",
          "me.desht.pneumaticcraft.client.gui.tubemodule.SimplePressureGaugeModuleScreen",
          "me.desht.pneumaticcraft.client.gui.UVLightBoxScreen",
          "me.desht.pneumaticcraft.client.gui.AbstractPneumaticCraftScreen",
          "me.desht.pneumaticcraft.client.gui.LiquidCompressorScreen",
          "me.desht.pneumaticcraft.client.gui.ProgrammerScreen",
          "me.desht.pneumaticcraft.client.gui.AmadronScreen",
          "me.desht.pneumaticcraft.client.gui.PressurizedSpawnerScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetConditionScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetAreaScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetStandbyScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetAreaToolScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetBlockConditionScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetHarvestScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetBlockRightClickScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetImportExportScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetDigAndPlaceScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetPlaceScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetGoToLocationScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetCoordinateOperatorScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetDroneConditionScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetPickupItemScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetLiquidExportScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetCoordinateScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetCraftingScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetDroneConditionScreen$Item",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetDroneConditionScreen$Energy",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetForEachScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetDroneConditionScreen$Pressure",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetStringScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetDroneConditionScreen$Upgrades",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetDropItemScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetItemAssignScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetLiquidFilterScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.AbstractProgWidgetScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetEmitRedstoneScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetConditionScreen$Entity",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetExternalProgramScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetEntityAttackScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetCoordinateConditionScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetLiquidImportScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetItemFilterScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetDigScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetAreaShowScreen",
          "me.desht.pneumaticcraft.client.gui.programmer.ProgWidgetDroneConditionScreen$Fluid",
          "me.desht.pneumaticcraft.client.gui.ThermalCompressorScreen",
          "me.desht.pneumaticcraft.client.gui.PastebinScreen",
          "me.desht.pneumaticcraft.client.gui.AssemblyControllerScreen",
          "me.desht.pneumaticcraft.client.gui.SecurityStationInventoryScreen",
          "me.desht.pneumaticcraft.client.gui.FluidTankScreen",
          "me.desht.pneumaticcraft.client.gui.InventorySearcherScreen",
          "me.desht.pneumaticcraft.client.gui.PneumaticDoorBaseScreen",
          "me.desht.pneumaticcraft.client.gui.EtchingTankScreen",
          "me.desht.pneumaticcraft.client.gui.PressureChamberScreen",
          "me.desht.pneumaticcraft.client.gui.ClassifyFilterScreen",
          "me.desht.pneumaticcraft.client.gui.PressureChamberInterfaceScreen",
          "me.desht.pneumaticcraft.client.gui.OmnidirectionalHopperScreen",
          "me.desht.pneumaticcraft.client.gui.JackHammerSetupScreen",
          "me.desht.pneumaticcraft.client.gui.upgrademanager.AbstractUpgradeManagerScreen",
          "me.desht.pneumaticcraft.client.gui.upgrademanager.AmadronUpgradeScreen",
          "me.desht.pneumaticcraft.client.gui.upgrademanager.DroneUpgradeScreen",
          "me.desht.pneumaticcraft.client.gui.upgrademanager.MinigunUpgradeScreen",
          "me.desht.pneumaticcraft.client.gui.upgrademanager.PneumaticArmorUpgradeScreen",
          "me.desht.pneumaticcraft.client.gui.upgrademanager.JackhammerUpgradeScreen",
          "me.desht.pneumaticcraft.client.gui.SpawnerExtractorScreen",
          "me.desht.pneumaticcraft.client.gui.ItemSearcherScreen",
          "me.desht.pneumaticcraft.client.gui.VacuumPumpScreen",
          "me.desht.pneumaticcraft.client.gui.AmadronAddTradeScreen",
          "me.desht.pneumaticcraft.client.gui.FluxCompressorScreen",
          "me.desht.pneumaticcraft.client.gui.PneumaticDynamoScreen",
          "me.desht.pneumaticcraft.client.gui.pneumatic_armor.ArmorStatMoveScreen",
          "me.desht.pneumaticcraft.client.gui.pneumatic_armor.ArmorColoringScreen",
          "me.desht.pneumaticcraft.client.gui.pneumatic_armor.ArmorMainScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "me.desht.pneumaticcraft.client.particle.BulletParticle",
          "me.desht.pneumaticcraft.client.particle.AirParticle"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "me.desht.pneumaticcraft.client.render.MinigunItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "me.desht.pneumaticcraft.client.render.fluid.RenderRefineryOutput",
          "me.desht.pneumaticcraft.client.render.fluid.RenderAdvancedLiquidCompressor",
          "me.desht.pneumaticcraft.client.render.fluid.RenderKeroseneLamp",
          "me.desht.pneumaticcraft.client.render.fluid.RenderEtchingTank",
          "me.desht.pneumaticcraft.client.render.fluid.RenderThermopneumaticProcessingPlant",
          "me.desht.pneumaticcraft.client.render.fluid.RenderLiquidHopper",
          "me.desht.pneumaticcraft.client.render.fluid.AbstractFluidTER",
          "me.desht.pneumaticcraft.client.render.fluid.RenderLiquidCompressor",
          "me.desht.pneumaticcraft.client.render.fluid.RenderGasLift",
          "me.desht.pneumaticcraft.client.render.fluid.RenderFluidMixer",
          "me.desht.pneumaticcraft.client.render.fluid.RenderFluidTank",
          "me.desht.pneumaticcraft.client.render.fluid.RenderRefineryController",
          "me.desht.pneumaticcraft.client.render.blockentity.AssemblyControllerRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.AbstractAssemblyRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.PressureTubeModuleRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.DisplayTableRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.ElevatorBaseRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.PneumaticDoorRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.AssemblyIOUnitRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.ChargingStationRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.SentryTurretRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.TagWorkbenchRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.AbstractBlockEntityModelRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.SpawnerExtractorRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.AssemblyLaserRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.AphorismTileRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.VacuumPumpRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.AssemblyPlatformRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.PressureChamberRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.AerialInterfaceRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.PressureChamberInterfaceRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.PneumaticDoorBaseRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.ManualCompressorRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.AirCannonRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.SolarCompressorRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.ProgrammerRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.AssemblyDrillRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.ElevatorCallerRenderer",
          "me.desht.pneumaticcraft.client.render.blockentity.UniversalSensorRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "me.desht.pneumaticcraft.client.model.custom.pressure_tube.PressureTubeModel",
          "me.desht.pneumaticcraft.client.model.custom.FluidItemModel",
          "me.desht.pneumaticcraft.client.model.custom.RenderedItemModel",
          "me.desht.pneumaticcraft.client.model.custom.CamouflageModel",
          "me.desht.pneumaticcraft.client.model.CamoModel"
        ],
        "net.minecraft.data.DataProvider": [
          "me.desht.pneumaticcraft.datagen.ModBiomeTagsProvider",
          "me.desht.pneumaticcraft.datagen.ModLootTablesProvider",
          "me.desht.pneumaticcraft.datagen.ModRecipeProvider",
          "me.desht.pneumaticcraft.datagen.ModStructureTagsProvider",
          "me.desht.pneumaticcraft.datagen.ModAdvancementProvider",
          "me.desht.pneumaticcraft.datagen.ModGLMProvider",
          "me.desht.pneumaticcraft.datagen.ModItemTagsProvider",
          "me.desht.pneumaticcraft.datagen.ModPoiTypeTagsProvider",
          "me.desht.pneumaticcraft.datagen.ModFluidTagsProvider",
          "me.desht.pneumaticcraft.datagen.ModDamageTypeTagsProvider",
          "me.desht.pneumaticcraft.datagen.ModBlockTagsProvider",
          "me.desht.pneumaticcraft.datagen.ModEntityTypeTagsProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "me.desht.pneumaticcraft.common.util.fakeplayer.DroneFakePlayer",
          "me.desht.pneumaticcraft.common.entity.RingEntity",
          "me.desht.pneumaticcraft.common.entity.semiblock.AbstractLogisticsFrameEntity",
          "me.desht.pneumaticcraft.common.entity.semiblock.TransferGadgetEntity",
          "me.desht.pneumaticcraft.common.entity.semiblock.SpawnerAgitatorEntity",
          "me.desht.pneumaticcraft.common.entity.semiblock.LogisticsPassiveProviderEntity",
          "me.desht.pneumaticcraft.common.entity.semiblock.LogisticsActiveProviderEntity",
          "me.desht.pneumaticcraft.common.entity.semiblock.LogisticsDefaultStorageEntity",
          "me.desht.pneumaticcraft.common.entity.semiblock.HeatFrameEntity",
          "me.desht.pneumaticcraft.common.entity.semiblock.CropSupportEntity",
          "me.desht.pneumaticcraft.common.entity.semiblock.AbstractSemiblockEntity",
          "me.desht.pneumaticcraft.common.entity.semiblock.LogisticsStorageEntity",
          "me.desht.pneumaticcraft.common.entity.semiblock.LogisticsRequesterEntity",
          "me.desht.pneumaticcraft.common.entity.drone.CollectorDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.AbstractDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.HarvestingDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.LogisticsDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.AmadroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.AbstractBasicDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.GuardDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.DroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.ProgrammableControllerEntity",
          "me.desht.pneumaticcraft.common.entity.projectile.TumblingBlockEntity",
          "me.desht.pneumaticcraft.common.entity.projectile.VortexEntity",
          "me.desht.pneumaticcraft.common.entity.projectile.MicromissileEntity"
        ],
        "net.minecraft.world.entity.Mob": [
          "me.desht.pneumaticcraft.common.entity.drone.CollectorDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.AbstractDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.HarvestingDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.LogisticsDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.AmadroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.AbstractBasicDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.GuardDroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.DroneEntity",
          "me.desht.pneumaticcraft.common.entity.drone.ProgrammableControllerEntity"
        ],
        "net.minecraft.world.item.Item": [
          "me.desht.pneumaticcraft.common.fluid.FluidPlastic$Bucket",
          "me.desht.pneumaticcraft.common.semiblock.SemiblockItem",
          "me.desht.pneumaticcraft.common.item.SpawnerAgitatorItem",
          "me.desht.pneumaticcraft.common.item.PneumaticWrenchItem",
          "me.desht.pneumaticcraft.common.item.ClassifyFilterItem",
          "me.desht.pneumaticcraft.common.item.PneumaticArmorItem",
          "me.desht.pneumaticcraft.common.item.GPSAreaToolItem",
          "me.desht.pneumaticcraft.common.item.MicromissilesItem",
          "me.desht.pneumaticcraft.common.item.TubeModuleItem",
          "me.desht.pneumaticcraft.common.item.NetworkComponentItem",
          "me.desht.pneumaticcraft.common.item.PressurizableItem",
          "me.desht.pneumaticcraft.common.item.minigun.AbstractGunAmmoItem",
          "me.desht.pneumaticcraft.common.item.minigun.ArmorPiercingGunAmmoItem",
          "me.desht.pneumaticcraft.common.item.minigun.IncendiaryGunAmmoItem",
          "me.desht.pneumaticcraft.common.item.minigun.MinigunItem",
          "me.desht.pneumaticcraft.common.item.minigun.StandardGunAmmoItem",
          "me.desht.pneumaticcraft.common.item.minigun.FreezingGunAmmoItem",
          "me.desht.pneumaticcraft.common.item.minigun.WeightedGunAmmoItem",
          "me.desht.pneumaticcraft.common.item.minigun.ExplosiveGunAmmoItem",
          "me.desht.pneumaticcraft.common.item.AssemblyProgramItem",
          "me.desht.pneumaticcraft.common.item.VortexCannonItem",
          "me.desht.pneumaticcraft.common.item.AirCanisterItem",
          "me.desht.pneumaticcraft.common.item.MemoryStickItem",
          "me.desht.pneumaticcraft.common.item.SeismicSensorItem",
          "me.desht.pneumaticcraft.common.item.AbstractChestUpgradeKitItem",
          "me.desht.pneumaticcraft.common.item.BandageItem",
          "me.desht.pneumaticcraft.common.item.CompressedIronArmorItem",
          "me.desht.pneumaticcraft.common.item.PneumaticCraftBucketItem",
          "me.desht.pneumaticcraft.common.item.RemoteItem",
          "me.desht.pneumaticcraft.common.item.EmptyPCBItem",
          "me.desht.pneumaticcraft.common.item.GlycerolItem",
          "me.desht.pneumaticcraft.common.item.AbstractChestUpgradeKitItem$Smart",
          "me.desht.pneumaticcraft.common.item.GPSToolItem",
          "me.desht.pneumaticcraft.common.item.JackHammerItem",
          "me.desht.pneumaticcraft.common.item.NonDespawningItem",
          "me.desht.pneumaticcraft.common.item.AbstractChestUpgradeKitItem$Reinforced",
          "me.desht.pneumaticcraft.common.item.DrillBitItem",
          "me.desht.pneumaticcraft.common.item.TagFilterItem",
          "me.desht.pneumaticcraft.common.item.CamoApplicatorItem",
          "me.desht.pneumaticcraft.common.item.DroneItem",
          "me.desht.pneumaticcraft.common.item.AmadronTabletItem",
          "me.desht.pneumaticcraft.common.item.ManometerItem",
          "me.desht.pneumaticcraft.common.item.logistics.LogisticsFrameActiveProviderItem",
          "me.desht.pneumaticcraft.common.item.logistics.AbstractLogisticsFrameItem",
          "me.desht.pneumaticcraft.common.item.logistics.LogisticsFramePassiveProviderItem",
          "me.desht.pneumaticcraft.common.item.logistics.LogisticsFrameStorageItem",
          "me.desht.pneumaticcraft.common.item.logistics.LogisticsConfiguratorItem",
          "me.desht.pneumaticcraft.common.item.logistics.LogisticsFrameRequesterItem",
          "me.desht.pneumaticcraft.common.item.logistics.LogisticsFrameDefaultStorageItem",
          "me.desht.pneumaticcraft.common.item.SpawnerCoreItem",
          "me.desht.pneumaticcraft.common.item.UpgradeItem",
          "me.desht.pneumaticcraft.common.block.ReinforcedChestBlock$ItemBlockReinforcedChest",
          "me.desht.pneumaticcraft.common.block.SmoothPlasticBrickBlock$SmoothPlasticBrickItem",
          "me.desht.pneumaticcraft.common.block.CreativeCompressedIronBlock$ItemBlockCreativeCompressedIron",
          "me.desht.pneumaticcraft.common.block.SmartChestBlock$ItemBlockBlockSmartChest",
          "me.desht.pneumaticcraft.common.block.WallLampBlock$ItemWallLamp",
          "me.desht.pneumaticcraft.common.block.OmnidirectionalHopperBlock$ItemBlockOmnidirectionalHopper",
          "me.desht.pneumaticcraft.common.block.FluidTankBlock$ItemBlockFluidTank",
          "me.desht.pneumaticcraft.common.block.ChargingStationBlock$ItemBlockChargingStation",
          "me.desht.pneumaticcraft.common.block.LiquidHopperBlock$ItemBlockLiquidHopper",
          "me.desht.pneumaticcraft.common.block.PlasticBrickBlock$ItemPlasticBrick",
          "me.desht.pneumaticcraft.common.block.PneumaticDoorBlock$ItemBlockPneumaticDoor",
          "me.desht.pneumaticcraft.common.block.AphorismTileBlock$ItemBlockAphorismTile",
          "me.desht.pneumaticcraft.common.block.VacuumTrapBlock$ItemBlockVacuumTrap",
          "me.desht.pneumaticcraft.common.block.KeroseneLampBlock$ItemBlockKeroseneLamp",
          "me.desht.pneumaticcraft.common.block.CreativeCompressorBlock$ItemBlockCreativeCompressor"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "me.desht.pneumaticcraft.api.crafting.recipe.HeatPropertiesRecipe",
          "me.desht.pneumaticcraft.api.crafting.recipe.ExplosionCraftingRecipe",
          "me.desht.pneumaticcraft.api.crafting.recipe.FluidMixerRecipe",
          "me.desht.pneumaticcraft.api.crafting.recipe.ThermoPlantRecipe",
          "me.desht.pneumaticcraft.api.crafting.recipe.RefineryRecipe",
          "me.desht.pneumaticcraft.api.crafting.recipe.HeatFrameCoolingRecipe",
          "me.desht.pneumaticcraft.api.crafting.recipe.PressureChamberRecipe",
          "me.desht.pneumaticcraft.api.crafting.recipe.PneumaticCraftRecipe",
          "me.desht.pneumaticcraft.api.crafting.recipe.AssemblyRecipe",
          "me.desht.pneumaticcraft.api.crafting.recipe.FuelQualityRecipe",
          "me.desht.pneumaticcraft.api.crafting.recipe.AmadronRecipe",
          "me.desht.pneumaticcraft.common.recipes.machine.HeatFrameCoolingRecipeImpl",
          "me.desht.pneumaticcraft.common.recipes.machine.AssemblyRecipeImpl",
          "me.desht.pneumaticcraft.common.recipes.machine.PressureDisenchantingRecipe",
          "me.desht.pneumaticcraft.common.recipes.machine.FluidMixerRecipeImpl",
          "me.desht.pneumaticcraft.common.recipes.machine.PressureChamberRecipeImpl",
          "me.desht.pneumaticcraft.common.recipes.machine.ExplosionCraftingRecipeImpl",
          "me.desht.pneumaticcraft.common.recipes.machine.ThermoPlantRecipeImpl",
          "me.desht.pneumaticcraft.common.recipes.machine.PressureEnchantingRecipe",
          "me.desht.pneumaticcraft.common.recipes.machine.RefineryRecipeImpl",
          "me.desht.pneumaticcraft.common.recipes.amadron.AmadronOffer",
          "me.desht.pneumaticcraft.common.recipes.amadron.AmadronPlayerOffer",
          "me.desht.pneumaticcraft.common.recipes.special.DroneColorCrafting",
          "me.desht.pneumaticcraft.common.recipes.special.CompressorUpgradeCrafting",
          "me.desht.pneumaticcraft.common.recipes.special.WrappedShapedRecipe",
          "me.desht.pneumaticcraft.common.recipes.special.ShapedPressurizableRecipe",
          "me.desht.pneumaticcraft.common.recipes.special.GunAmmoPotionCrafting",
          "me.desht.pneumaticcraft.common.recipes.special.DroneUpgradeCrafting",
          "me.desht.pneumaticcraft.common.recipes.other.HeatPropertiesRecipeImpl",
          "me.desht.pneumaticcraft.common.recipes.other.FuelQualityRecipeImpl"
        ],
        "net.minecraft.world.level.block.Block": [
          "me.desht.pneumaticcraft.common.thirdparty.computer_common.DroneInterfaceBlock",
          "me.desht.pneumaticcraft.common.block.AbstractPNCBlockWithBoundingBlocks",
          "me.desht.pneumaticcraft.common.block.FluxCompressorBlock",
          "me.desht.pneumaticcraft.common.block.AbstractAssemblyIOUnitBlock$Import",
          "me.desht.pneumaticcraft.common.block.UniversalSensorBlock",
          "me.desht.pneumaticcraft.common.block.ElectrostaticCompressorBlock",
          "me.desht.pneumaticcraft.common.block.AirCannonBlock",
          "me.desht.pneumaticcraft.common.block.AdvancedAirCompressorBlock",
          "me.desht.pneumaticcraft.common.block.AbstractAssemblyIOUnitBlock$Export",
          "me.desht.pneumaticcraft.common.block.OmnidirectionalHopperBlock",
          "me.desht.pneumaticcraft.common.block.ThermopneumaticProcessingPlantBlock",
          "me.desht.pneumaticcraft.common.block.ChargingStationBlock",
          "me.desht.pneumaticcraft.common.block.VortexTubeBlock",
          "me.desht.pneumaticcraft.common.block.ProgrammerBlock",
          "me.desht.pneumaticcraft.common.block.LiquidCompressorBlock",
          "me.desht.pneumaticcraft.common.block.AbstractPressureWallBlock",
          "me.desht.pneumaticcraft.common.block.AssemblyPlatformBlock",
          "me.desht.pneumaticcraft.common.block.TagWorkbenchBlock",
          "me.desht.pneumaticcraft.common.block.ElevatorBaseBlock",
          "me.desht.pneumaticcraft.common.block.AbstractAssemblyIOUnitBlock",
          "me.desht.pneumaticcraft.common.block.SpawnerExtractorBlock",
          "me.desht.pneumaticcraft.common.block.AbstractCamouflageBlock",
          "me.desht.pneumaticcraft.common.block.DroneRedstoneEmitterBlock",
          "me.desht.pneumaticcraft.common.block.AerialInterfaceBlock",
          "me.desht.pneumaticcraft.common.block.PressurizedSpawnerBlock",
          "me.desht.pneumaticcraft.common.block.AphorismTileBlock",
          "me.desht.pneumaticcraft.common.block.HeatSinkBlock",
          "me.desht.pneumaticcraft.common.block.TubeJunctionBlock",
          "me.desht.pneumaticcraft.common.block.EtchingTankBlock",
          "me.desht.pneumaticcraft.common.block.FluidEtchingAcidBlock",
          "me.desht.pneumaticcraft.common.block.KeroseneLampLightBlock",
          "me.desht.pneumaticcraft.common.block.PneumaticDoorBlock",
          "me.desht.pneumaticcraft.common.block.PressureTubeBlock",
          "me.desht.pneumaticcraft.common.block.ProgrammableControllerBlock",
          "me.desht.pneumaticcraft.common.block.ThermalCompressorBlock",
          "me.desht.pneumaticcraft.common.block.KeroseneLampBlock",
          "me.desht.pneumaticcraft.common.block.GasLiftBlock",
          "me.desht.pneumaticcraft.common.block.LiquidHopperBlock",
          "me.desht.pneumaticcraft.common.block.FluidTankBlock",
          "me.desht.pneumaticcraft.common.block.AssemblyControllerBlock",
          "me.desht.pneumaticcraft.common.block.CreativeCompressedIronBlock",
          "me.desht.pneumaticcraft.common.block.ElevatorCallerBlock",
          "me.desht.pneumaticcraft.common.block.CreativeCompressorBlock",
          "me.desht.pneumaticcraft.common.block.ManualCompressorBlock",
          "me.desht.pneumaticcraft.common.block.AbstractPneumaticCraftBlock",
          "me.desht.pneumaticcraft.common.block.FluidMixerBlock",
          "me.desht.pneumaticcraft.common.block.ReinforcedChestBlock",
          "me.desht.pneumaticcraft.common.block.RefineryOutputBlock",
          "me.desht.pneumaticcraft.common.block.RefineryControllerBlock",
          "me.desht.pneumaticcraft.common.block.SentryTurretBlock",
          "me.desht.pneumaticcraft.common.block.UVLightBoxBlock",
          "me.desht.pneumaticcraft.common.block.DisplayTableBlock",
          "me.desht.pneumaticcraft.common.block.ElevatorFrameBlock",
          "me.desht.pneumaticcraft.common.block.PneumaticDynamoBlock",
          "me.desht.pneumaticcraft.common.block.WallLampBlock",
          "me.desht.pneumaticcraft.common.block.EmptySpawnerBlock",
          "me.desht.pneumaticcraft.common.block.PressureChamberGlassBlock",
          "me.desht.pneumaticcraft.common.block.AirCompressorBlock",
          "me.desht.pneumaticcraft.common.block.CompressedIronBlock",
          "me.desht.pneumaticcraft.common.block.AdvancedLiquidCompressorBlock",
          "me.desht.pneumaticcraft.common.block.AssemblyLaserBlock",
          "me.desht.pneumaticcraft.common.block.SmartChestBlock",
          "me.desht.pneumaticcraft.common.block.VacuumPumpBlock",
          "me.desht.pneumaticcraft.common.block.PneumaticDoorBaseBlock",
          "me.desht.pneumaticcraft.common.block.SecurityStationBlock",
          "me.desht.pneumaticcraft.common.block.SmoothPlasticBrickBlock",
          "me.desht.pneumaticcraft.common.block.PressureChamberInterfaceBlock",
          "me.desht.pneumaticcraft.common.block.HeatPipeBlock",
          "me.desht.pneumaticcraft.common.block.PressureChamberWallBlock",
          "me.desht.pneumaticcraft.common.block.DrillPipeBlock",
          "me.desht.pneumaticcraft.common.block.PlasticBrickBlock",
          "me.desht.pneumaticcraft.common.block.PressureChamberValveBlock",
          "me.desht.pneumaticcraft.common.block.ThermalLaggingBlock",
          "me.desht.pneumaticcraft.common.block.DisplayTableBlock$Shelf",
          "me.desht.pneumaticcraft.common.block.VacuumTrapBlock",
          "me.desht.pneumaticcraft.common.block.AssemblyDrillBlock",
          "me.desht.pneumaticcraft.common.block.SolarCompressorBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "me.desht.pneumaticcraft.common.variables.GlobalVariableManager",
          "me.desht.pneumaticcraft.common.hacking.HackTickTracker",
          "me.desht.pneumaticcraft.common.heat.HeatExtractionTracker"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "me.desht.pneumaticcraft.client.model.custom.pressure_tube.PressureTubeModelLoader",
          "me.desht.pneumaticcraft.client.model.custom.RenderedItemModel$Loader",
          "me.desht.pneumaticcraft.client.model.custom.FluidItemModel$Loader",
          "me.desht.pneumaticcraft.client.model.custom.CamouflageModel$Loader"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.components.Tooltip",
        "net.minecraft.server.level.ServerPlayer",
        "net.minecraft.server.level.ServerPlayerGameMode",
        "net.minecraft.world.damagesource.DamageSources",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.Mob",
        "net.minecraft.world.entity.item.ItemEntity",
        "net.minecraft.world.entity.monster.Shulker",
        "net.minecraft.world.entity.monster.Witch",
        "net.minecraft.world.item.BoatItem",
        "net.minecraft.world.item.MinecartItem",
        "net.minecraft.world.item.crafting.ShapedRecipe",
        "net.minecraft.world.level.BaseSpawner",
        "net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity",
        "net.minecraft.world.level.block.entity.BaseContainerBlockEntity",
        "net.minecraft.world.level.block.entity.BlockEntityType",
        "net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Anvil Recipes",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Attributes",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Model Loaders",
        "Custom Network Packets",
        "Custom Particles",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Structures",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Handles Explosion Detonation",
        "Handles Left Clicks with Empty Hands (Client-side)",
        "Handles Right Clicks with Items",
        "Listens to Dimension Change Events",
        "Listens to Entity AI Target Change Events",
        "Listens to Entity Damage Events",
        "Listens to Entity Death Events",
        "Listens to Entity Equipment Change Events",
        "Listens to Entity Fall Events",
        "Listens to Entity Interaction Events",
        "Listens to Entity Join World Events",
        "Listens to Entity Jump Events",
        "Listens to GUI Close Events",
        "Listens to GUI Open Events",
        "Listens to Item Pickup Events",
        "Listens to Left Click Block Events",
        "Listens to Player Logout Events",
        "Listens to Recipe Updates",
        "Listens to Right Click Block Events",
        "Listens to Server About to Start Events",
        "Listens to Server Chat Messages",
        "Listens to Server Stopping Events",
        "Listens to Tag Updates",
        "Localization",
        "Modifies Block Breaking",
        "Modifies Block Breaking Speed",
        "Modifies Block Placement",
        "Modifies Entity Spawning",
        "Modifies Explosions",
        "Modifies Farmland Trampling",
        "Modifies GUI Rendering",
        "Modifies Methods",
        "Modifies Tooltips",
        "Modifies Villager Trades",
        "Modifies World Rendering",
        "Patchouli Guide Book",
        "Runs Client Tick Logic",
        "Runs Player Tick Logic",
        "Runs Server Tick Logic",
        "Runs World Tick Logic",
        "Stores Data in World Saves",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "pocketstorage": {
      "dependencies": {
        "neoforge": "[20.4,)"
      },
      "info": {
        "authors": "Flanks255",
        "classes": "32",
        "description": "",
        "displayName": "Pocket Storage",
        "file": "pocketstorage-1.2.4+1.21.1-b40.jar",
        "license": "MIT",
        "package": "com.flanks255.pocketstorage",
        "version": "1.2.4+1.21.1-b40"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.flanks255.pocketstorage.gui.PSUGui"
        ],
        "net.minecraft.data.DataProvider": [
          "com.flanks255.pocketstorage.data.PSUItemModels",
          "com.flanks255.pocketstorage.data.PSULang",
          "com.flanks255.pocketstorage.data.PSURecipes"
        ],
        "net.minecraft.world.item.Item": [
          "com.flanks255.pocketstorage.items.PocketStorageUnit"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.flanks255.pocketstorage.crafting.UpgradeRecipe"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.flanks255.pocketstorage.inventory.StorageManager"
        ]
      },
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Recipe Types",
        "Localization",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "polylib": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.creeperhost.polylib.neoforge.mixins.MixinLevelSettings",
            "method": {
              "argTypes": [
                "net.minecraft.world.Difficulty",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "setDifficulty",
              "raw": "setDifficulty(Lnet/minecraft/world/Difficulty;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.creeperhost.polylib.neoforge.mixins.MixinClientLevelData",
            "method": {
              "argTypes": [
                "net.minecraft.world.Difficulty",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setDifficulty",
              "raw": "setDifficulty(Lnet/minecraft/world/Difficulty;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "architectury": "[13.0.1,)",
        "minecraft": "[1.21,)",
        "neoforge": "[20.0.148,)"
      },
      "info": {
        "authors": "CreeperHost",
        "classes": "560",
        "description": "\"PolyLib,\" developed by CreeperHost Ltd.,\nis a compact Minecraft library mod focused on providing a collection of helper classes.\nThese classes are designed to simplify various aspects of mod development, offering tools for easier GUI creation and other development enhancements to improve efficiency and user experience.\n",
        "displayName": "PolyLib",
        "file": "polylib-2100.0.3-build.160-neoforge.jar",
        "license": "BSD 4-Clause License",
        "package": "net.creeperhost.polylib",
        "version": "2100.0.3-build.160"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.creeperhost.polylib.neoforge.mixins.ModularGuiContainerMixin",
          "net.creeperhost.polylib.client.screen.PolyScreen",
          "net.creeperhost.polylib.client.modulargui.ModularGuiScreen",
          "net.creeperhost.polylib.client.modulargui.ModularGuiContainer"
        ],
        "net.minecraft.data.DataProvider": [
          "net.creeperhost.polylib.neoforge.datagen.providers.DynamicTextureProvider"
        ],
        "net.minecraft.world.item.Item": [
          "net.creeperhost.polylib.items.ItemToggle"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "net.creeperhost.polylib.recipe.WrappedShapelessRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.creeperhost.polylib.blocks.PolyEntityBlock",
          "net.creeperhost.polylib.blocks.PolyBlock",
          "net.creeperhost.polylib.blocks.BlockFacing"
        ]
      },
      "modifies": [
        "net.creeperhost.polylib.client.modulargui.ModularGuiContainer",
        "net.minecraft.client.multiplayer.ClientLevel$ClientLevelData",
        "net.minecraft.world.level.LevelSettings"
      ],
      "summary": [
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Items",
        "Custom Recipe Types",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "powah": {
      "dependencies": {
        "cloth_config": "*",
        "jei": "[19.18.3,)",
        "neoforge": "[21.1.1,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "owmii.powah.lib.client.util.MC#onTick"
        ]
      },
      "info": {
        "authors": "owmii,Technici4n,shartte",
        "classes": "374",
        "description": "Various ways to generate, store and transmit FE power.\n",
        "displayName": "Powah",
        "file": "Powah-6.1.6.jar",
        "license": "LGPLv3",
        "package": "owmii.powah",
        "version": "6.1.6"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "owmii.powah.client.screen.container.EnderCellScreen",
          "owmii.powah.client.screen.container.ReactorScreen",
          "owmii.powah.client.screen.container.EnergyCellScreen",
          "owmii.powah.client.screen.container.PlayerTransmitterScreen",
          "owmii.powah.client.screen.container.DischargerScreen",
          "owmii.powah.client.screen.container.MagmatorScreen",
          "owmii.powah.client.screen.container.CableScreen",
          "owmii.powah.client.screen.container.ThermoScreen",
          "owmii.powah.client.screen.container.SolarScreen",
          "owmii.powah.client.screen.container.EnergyHopperScreen",
          "owmii.powah.client.screen.container.FurnatorScreen",
          "owmii.powah.lib.client.screen.wiki.WikiScreen",
          "owmii.powah.lib.client.screen.ScreenBase",
          "owmii.powah.lib.client.screen.container.AbstractContainerScreen",
          "owmii.powah.lib.client.screen.container.AbstractTileScreen",
          "owmii.powah.lib.client.screen.container.AbstractEnergyScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "owmii.powah.client.particle.EnergizingParticle"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "owmii.powah.client.render.tile.ReactorItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "owmii.powah.client.render.tile.EnergizingRodRenderer",
          "owmii.powah.client.render.tile.CableRenderer",
          "owmii.powah.client.render.tile.FurnatorRenderer",
          "owmii.powah.client.render.tile.EnergizingOrbRenderer",
          "owmii.powah.client.render.tile.ReactorRenderer",
          "owmii.powah.client.render.tile.MagmatorRenderer",
          "owmii.powah.client.render.tile.ReactorPartRenderer",
          "owmii.powah.lib.client.renderer.tile.AbstractTileRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "owmii.powah.compat.curios.CurioTagsProvider",
          "owmii.powah.data.TagsProvider$Blocks",
          "owmii.powah.data.TagsProvider$Items",
          "owmii.powah.data.RecipeProvider",
          "owmii.powah.data.PowahDataMapProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "owmii.powah.entity.ChargedSnowballEntity"
        ],
        "net.minecraft.world.item.Item": [
          "owmii.powah.item.EnergyCellItem",
          "owmii.powah.item.LensOfEnderItem",
          "owmii.powah.item.PowahBookItem",
          "owmii.powah.item.BindingCardItem",
          "owmii.powah.item.UraniniteItem",
          "owmii.powah.item.PhotoelectricPaneItem",
          "owmii.powah.item.AerialPearlItem",
          "owmii.powah.item.BatteryItem",
          "owmii.powah.item.WrenchItem",
          "owmii.powah.item.CapacitorItem",
          "owmii.powah.item.ReactorItem",
          "owmii.powah.item.ChargedSnowballItem",
          "owmii.powah.lib.item.ItemBase",
          "owmii.powah.lib.item.EnergyItem",
          "owmii.powah.lib.item.EnergyBlockItem",
          "owmii.powah.lib.item.ItemBlock",
          "owmii.powah.lib.item.VarItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "owmii.powah.block.energizing.EnergizingRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "owmii.powah.lib.block.AbstractBlock",
          "owmii.powah.lib.block.AbstractEnergyBlock",
          "owmii.powah.lib.block.AbstractGeneratorBlock",
          "owmii.powah.block.thermo.ThermoBlock",
          "owmii.powah.block.ender.EnderGateBlock",
          "owmii.powah.block.ender.EnderCellBlock",
          "owmii.powah.block.energizing.EnergizingOrbBlock",
          "owmii.powah.block.energizing.EnergizingRodBlock",
          "owmii.powah.block.cable.CableBlock",
          "owmii.powah.block.solar.SolarBlock",
          "owmii.powah.block.furnator.FurnatorBlock",
          "owmii.powah.block.energycell.EnergyCellBlock",
          "owmii.powah.block.discharger.EnergyDischargerBlock",
          "owmii.powah.block.magmator.MagmatorBlock",
          "owmii.powah.block.reactor.ReactorBlock",
          "owmii.powah.block.hopper.EnergyHopperBlock",
          "owmii.powah.block.transmitter.PlayerTransmitterBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "owmii.powah.block.ender.EnderNetwork"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Particles",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Localization",
        "Runs Client Tick Logic",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "prickle": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.61,)"
      },
      "info": {
        "authors": "Darkhax",
        "classes": "47",
        "description": "Bringing Prickle, the JSON based configuration file format to Minecraft.",
        "displayName": "PrickleMC",
        "file": "prickle-neoforge-1.21.1-21.1.6.jar",
        "license": "LGPL 2.1",
        "package": "net.darkhax.pricklemc.common.impl",
        "updateUrl": "https://updates.blamejared.com/get?n=prickle&gv=1.21.1&ml=neoforge",
        "version": "21.1.6"
      }
    },
    "prism": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.anthonyhilyard.prism.mixin.TextColorMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "prismParseColor",
              "raw": "prismParseColor(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.anthonyhilyard.prism.mixin.TextColorMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "prismConstructor2",
              "raw": "prismConstructor2(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.anthonyhilyard.prism.mixin.TextColorMixin",
            "method": {
              "argTypes": [
                "int",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "prismConstructor1",
              "raw": "prismConstructor1(ILjava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.anthonyhilyard.prism.mixin.MinecraftMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "runTick",
              "raw": "runTick(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{args=[ldc=gameRenderer], value=INVOKE_STRING, target=Lnet/minecraft/util/profiling/ProfilerFiller;popPush(Ljava/lang/String;)V}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21,)"
      },
      "info": {
        "authors": "Grend",
        "classes": "25",
        "description": "A library all about color! Provides lots of color-related functionality for dependent mods.",
        "displayName": "Prism",
        "file": "Prism-1.21-neoforge-1.0.9.jar",
        "license": "CC BY-NC-ND 4.0",
        "package": "com.anthonyhilyard.prism",
        "updateUrl": "https://mc-update-check.anthonyhilyard.com/638111",
        "version": "1.0.9"
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.network.chat.TextColor"
      ],
      "summary": [
        "Custom GUI Textures",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "productivelib": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "cy.jdkdigital.productivelib.mixin.BeeHiveReleaseEventMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.block.entity.BeehiveBlockEntity$Occupant",
                "java.util.List",
                "net.minecraft.world.level.block.entity.BeehiveBlockEntity$BeeReleaseStatus",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.entity.Entity"
              ],
              "name": "postBeeRelease",
              "raw": "postBeeRelease(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$Occupant;Ljava/util/List;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/entity/Entity;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/Level;addFreshEntity(Lnet/minecraft/world/entity/Entity;)Z}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.82-beta,)"
      },
      "events": {
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "cy.jdkdigital.productivelib.event.ClientModEventHandler#tabContents"
        ]
      },
      "info": {
        "authors": "LobsterJonn",
        "classes": "62",
        "description": "Common code for the productive mod series",
        "displayName": "Productive Lib",
        "file": "productivemetalworks-1.21.1-1.0.3.jar",
        "jarInJar": "productivelib-1.21.0-0.1.10.jar",
        "license": "All Rights Reserved",
        "package": "cy.jdkdigital.productivelib",
        "version": "1.21.0-0.1.10"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "cy.jdkdigital.productivelib.datagen.BiomeModifierProvider"
        ],
        "net.minecraft.world.item.Item": [
          "cy.jdkdigital.productivelib.common.item.UpgradeItem",
          "cy.jdkdigital.productivelib.common.item.FilterUpgradeItem",
          "cy.jdkdigital.productivelib.common.item.AbstractUpgradeItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "cy.jdkdigital.productivelib.common.recipe.TripleOutputRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "cy.jdkdigital.productivelib.common.block.PickupBlock",
          "cy.jdkdigital.productivelib.common.block.CapabilityContainerBlock"
        ]
      },
      "modifies": [
        "net.minecraft.world.level.block.entity.BeehiveBlockEntity"
      ],
      "summary": [
        "Custom Blocks",
        "Custom Item Models",
        "Custom Items",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods",
        "Uses Data Generators"
      ]
    },
    "productivemetalworks": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.0,)",
        "productivelib": "[1.21.0-0.1.10,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "cy.jdkdigital.productivemetalworks.Config#onLoad"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "cy.jdkdigital.productivemetalworks.ProductiveMetalworks$ClientModEvents#onClientSetup"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "cy.jdkdigital.productivemetalworks.event.ModEventHandler#registerBlockEntityCapabilities"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "cy.jdkdigital.productivemetalworks.event.ClientEventHandler#registerEntityRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "cy.jdkdigital.productivemetalworks.event.ClientEventHandler#registerItemColorHandlers"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "cy.jdkdigital.productivemetalworks.event.ClientEventHandler#registerMenus"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "cy.jdkdigital.productivemetalworks.event.ClientEventHandler#registerClientExtensions"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "cy.jdkdigital.productivemetalworks.datagen.MetalworksDataProvider#gatherData"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "cy.jdkdigital.productivemetalworks.event.ModEventHandler#buildContents"
        ],
        "net.neoforged.neoforge.event.server.ServerStartingEvent": [
          "cy.jdkdigital.productivemetalworks.ProductiveMetalworks#onServerStarting"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "cy.jdkdigital.productivemetalworks.event.ModEventHandler#register"
        ],
        "net.neoforged.neoforge.registries.datamaps.RegisterDataMapTypesEvent": [
          "cy.jdkdigital.productivemetalworks.event.ModEventHandler#registerDataMapTypes"
        ]
      },
      "info": {
        "authors": "LobsterJonn",
        "classes": "103",
        "description": "Look, it's hot metal! Just the way daddy used to make it.",
        "displayName": "Productive Metalworks",
        "file": "productivemetalworks-1.21.1-1.0.3.jar",
        "license": "All Rights Reserved",
        "package": "cy.jdkdigital.productivemetalworks",
        "version": "1.21.1-1.0.3"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "cy.jdkdigital.productivemetalworks.client.screen.FoundryControllerScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "cy.jdkdigital.productivemetalworks.client.render.block.FoundryTapBlockEntityRenderer",
          "cy.jdkdigital.productivemetalworks.client.render.block.FoundryTankBlockEntityRenderer",
          "cy.jdkdigital.productivemetalworks.client.render.block.FoundryControllerBlockEntityRenderer",
          "cy.jdkdigital.productivemetalworks.client.render.block.CastingBlockEntityRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "cy.jdkdigital.productivemetalworks.datagen.RecipeProvider",
          "cy.jdkdigital.productivemetalworks.datagen.LootModifierProvider",
          "cy.jdkdigital.productivemetalworks.datagen.LootDataProvider",
          "cy.jdkdigital.productivemetalworks.datagen.LanguageProvider",
          "cy.jdkdigital.productivemetalworks.datagen.ItemTagProvider",
          "cy.jdkdigital.productivemetalworks.datagen.ItemModelProvider",
          "cy.jdkdigital.productivemetalworks.datagen.FusionTextureMetadataProvider",
          "cy.jdkdigital.productivemetalworks.datagen.FusionBlockModelProvider",
          "cy.jdkdigital.productivemetalworks.datagen.FluidTagProvider",
          "cy.jdkdigital.productivemetalworks.datagen.DataMapProvider",
          "cy.jdkdigital.productivemetalworks.datagen.BlockTagProvider",
          "cy.jdkdigital.productivemetalworks.datagen.BlockModelProvider"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "cy.jdkdigital.productivemetalworks.recipe.SilentGearCastingRecipe",
          "cy.jdkdigital.productivemetalworks.recipe.ItemMeltingRecipe",
          "cy.jdkdigital.productivemetalworks.recipe.ItemCastingRecipe",
          "cy.jdkdigital.productivemetalworks.recipe.ICastingRecipe",
          "cy.jdkdigital.productivemetalworks.recipe.FluidAlloyingRecipe",
          "cy.jdkdigital.productivemetalworks.recipe.DummyRecipe",
          "cy.jdkdigital.productivemetalworks.recipe.DummyCastingRecipe",
          "cy.jdkdigital.productivemetalworks.recipe.BlockCastingRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "cy.jdkdigital.productivemetalworks.common.block.MeatBlock",
          "cy.jdkdigital.productivemetalworks.common.block.HotLiquidBlock",
          "cy.jdkdigital.productivemetalworks.common.block.FoundryTapBlock",
          "cy.jdkdigital.productivemetalworks.common.block.FoundryTankBlock",
          "cy.jdkdigital.productivemetalworks.common.block.FoundryDrainBlock",
          "cy.jdkdigital.productivemetalworks.common.block.FoundryControllerBlock",
          "cy.jdkdigital.productivemetalworks.common.block.FireBricksBlock",
          "cy.jdkdigital.productivemetalworks.common.block.CastingTableBlock",
          "cy.jdkdigital.productivemetalworks.common.block.CastingBasinBlock",
          "cy.jdkdigital.productivemetalworks.common.block.AttachedBlock"
        ]
      },
      "summary": [
        "Auto-reloads Config Files",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Data Map Types",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Loot Tables",
        "Custom Network Packets",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Has Capability Providers",
        "Listens to Server Starting Events",
        "Localization",
        "Patchouli Guide Book",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "puzzleslib": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "fuzs.puzzleslib.neoforge.mixin.EnchantedCountIncreaseFunctionNeoForgeMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.level.storage.loot.LootContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "run",
              "raw": "run(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "fuzs.puzzleslib.neoforge.mixin.AbstractPackResourcesNeoForgeMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.metadata.MetadataSectionSerializer",
                "java.io.InputStream",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getMetadataFromStream",
              "raw": "getMetadataFromStream(Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/io/InputStream;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "fuzs.puzzleslib.mixin.server.EulaMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "readFile",
              "raw": "readFile(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "fuzs.puzzleslib.mixin.server.DedicatedServerSettingsMixin",
            "method": {
              "argTypes": [
                "java.nio.file.Path",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Ljava/nio/file/Path;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "fuzs.puzzleslib.mixin.client.EditBoxMixin",
            "method": {
              "argTypes": [
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClick",
              "raw": "onClick(DDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "fuzs.puzzleslib.mixin.client.EditBoxMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "keyPressed",
              "raw": "keyPressed(IIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "fuzs.puzzleslib.mixin.client.EditBoxMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getWordPosition",
              "raw": "getWordPosition(IIZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "fuzs.puzzleslib.mixin.client.EditBoxMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "deleteText",
              "raw": "deleteText(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.21,)"
      },
      "info": {
        "authors": "Fuzs",
        "classes": "733",
        "description": "Why's it called Puzzles you ask? That's the puzzle!",
        "displayName": "Puzzles Lib",
        "file": "PuzzlesLib-v21.1.27-1.21.1-NeoForge.jar",
        "latest": "21.1.28",
        "license": "MPL-2.0",
        "package": "fuzs.puzzleslib.impl",
        "updateUrl": "https://raw.githubusercontent.com/Fuzss/modresources/main/update/puzzleslib.json",
        "version": "21.1.27"
      },
      "inheritance": {
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "fuzs.puzzleslib.neoforge.impl.client.core.context.BuiltinModelItemRendererContextNeoForgeImpl$ClientItemExtensionsImpl$1"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "fuzs.puzzleslib.neoforge.impl.client.init.NeoForgeItemDisplayOverrides$2"
        ],
        "net.minecraft.data.DataProvider": [
          "fuzs.puzzleslib.neoforge.api.data.v2.client.model.ModItemModelProvider",
          "fuzs.puzzleslib.neoforge.api.data.v2.client.AbstractSpriteSourceProvider",
          "fuzs.puzzleslib.neoforge.api.data.v2.client.AbstractSoundDefinitionProvider",
          "fuzs.puzzleslib.neoforge.api.data.v2.client.AbstractParticleDescriptionProvider",
          "fuzs.puzzleslib.neoforge.api.data.v2.client.AbstractModelProvider",
          "fuzs.puzzleslib.neoforge.api.data.v2.AbstractBuiltInDataProvider",
          "fuzs.puzzleslib.neoforge.api.data.v2.AbstractBuiltInDataProvider$TrimMaterials",
          "fuzs.puzzleslib.neoforge.api.data.v2.AbstractBuiltInDataProvider$Enchantments",
          "fuzs.puzzleslib.neoforge.api.data.v2.AbstractBuiltInDataProvider$DamageTypes",
          "fuzs.puzzleslib.api.data.v2.tags.AbstractTagProvider",
          "fuzs.puzzleslib.api.data.v2.AbstractRegistriesDatapackGenerator",
          "fuzs.puzzleslib.api.data.v2.AbstractRecipeProvider",
          "fuzs.puzzleslib.api.data.v2.AbstractLootProvider$Simple",
          "fuzs.puzzleslib.api.data.v2.AbstractLootProvider$LootTableDataProvider",
          "fuzs.puzzleslib.api.data.v2.AbstractLootProvider$EntityTypes",
          "fuzs.puzzleslib.api.data.v2.AbstractLootProvider$Blocks",
          "fuzs.puzzleslib.api.data.v2.AbstractAdvancementProvider",
          "fuzs.puzzleslib.api.client.data.v2.AbstractModelProvider",
          "fuzs.puzzleslib.api.client.data.v2.AbstractLanguageProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "fuzs.puzzleslib.mixin.AbstractMinecartMixin"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "fuzs.puzzleslib.impl.item.CopyComponentsShapelessRecipe",
          "fuzs.puzzleslib.impl.item.CopyComponentsShapedRecipe"
        ]
      },
      "modifies": [
        "net.minecraft.client.color.block.BlockColors",
        "net.minecraft.client.color.item.ItemColors",
        "net.minecraft.client.gui.components.EditBox",
        "net.minecraft.client.resources.model.ModelBakery",
        "net.minecraft.data.tags.TagsProvider",
        "net.minecraft.server.Eula",
        "net.minecraft.server.dedicated.DedicatedServerSettings",
        "net.minecraft.server.packs.AbstractPackResources",
        "net.minecraft.world.entity.vehicle.AbstractMinecart",
        "net.minecraft.world.item.enchantment.EnchantmentHelper",
        "net.minecraft.world.level.biome.BiomeSpecialEffects$Builder",
        "net.minecraft.world.level.biome.MobSpawnSettings$Builder",
        "net.minecraft.world.level.block.FireBlock",
        "net.minecraft.world.level.storage.loot.functions.EnchantedCountIncreaseFunction",
        "net.minecraft.world.level.storage.loot.predicates.LootItemRandomChanceWithEnchantedBonusCondition",
        "net.neoforged.neoforge.data.loading.DatagenModLoader",
        "net.neoforged.neoforge.registries.NewRegistryEvent"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Entities",
        "Custom Item Renderer",
        "Custom Recipe Types",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "rainshield": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.mrbysco.rainshield.compat.mixin.SimpleWeatherMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientLevel",
                "net.minecraft.core.BlockPos$MutableBlockPos",
                "net.minecraft.world.level.biome.Biome$Precipitation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "rainshield$shouldNotPrecipitateAt",
              "raw": "rainshield$shouldNotPrecipitateAt(Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.mrbysco.rainshield.mixin.LevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.Camera",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tickRain",
              "raw": "tickRain(Lnet/minecraft/client/Camera;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/Camera;getPosition()Lnet/minecraft/world/phys/Vec3;, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.mrbysco.rainshield.mixin.LevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.LightTexture",
                "float",
                "double",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderSnowAndRain",
              "raw": "renderSnowAndRain(Lnet/minecraft/client/renderer/LightTexture;FDDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/mojang/blaze3d/systems/RenderSystem;setShader(Ljava/util/function/Supplier;)V, ordinal=0}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.74-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "com.mrbysco.rainshield.config.RainShieldConfig#onLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "com.mrbysco.rainshield.config.RainShieldConfig#onFileChange"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.mrbysco.rainshield.datagen.RainShieldDataGen#gatherData"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "com.mrbysco.rainshield.handler.SyncHandler#onLogin"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "com.mrbysco.rainshield.handler.SyncHandler#onLogin"
        ]
      },
      "info": {
        "authors": "Mrbysco",
        "classes": "21",
        "description": "Just a simple mod adding a Rain Shield\n",
        "displayName": "Rain Shield",
        "file": "RainShield-1.21.1-2.0.1.jar",
        "license": "MIT",
        "package": "com.mrbysco.rainshield",
        "version": "2.0.1"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "com.mrbysco.rainshield.datagen.RainShieldDataGen$BlockStates",
          "com.mrbysco.rainshield.datagen.RainShieldDataGen$BlockModels",
          "com.mrbysco.rainshield.datagen.RainShieldDataGen$Language",
          "com.mrbysco.rainshield.datagen.RainShieldDataGen$Recipes",
          "com.mrbysco.rainshield.datagen.RainShieldDataGen$Loots",
          "com.mrbysco.rainshield.datagen.RainShieldDataGen$ItemModels"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.mrbysco.rainshield.block.RainShieldBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.mrbysco.rainshield.util.RainShieldData"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.LevelRenderer",
        "tv.soaryn.simpleweather.SimpleWeather$NeoBus"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Loot Tables",
        "Listens to Player Login Events",
        "Listens to Player Logout Events",
        "Localization",
        "Modifies Methods",
        "Stores Data in World Saves",
        "Uses Data Generators"
      ]
    },
    "rechiseled": {
      "dependencies": {
        "fusion": "[1.0.0,)",
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.78-beta,)",
        "supermartijn642configlib": "[1.1.6,)",
        "supermartijn642corelib": "[1.1.17,1.2.0)"
      },
      "events": {
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "com.supermartijn642.rechiseled.chiseling.ChiselingRecipeLoader#onAddReloadListener"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "com.supermartijn642.rechiseled.chiseling.ChiselingRecipeLoader#onDataPackSync"
        ]
      },
      "info": {
        "authors": "SuperMartijn642",
        "classes": "65",
        "description": "Rechiseled allows you to exchange between various decorative blocks!",
        "displayName": "Rechiseled",
        "file": "rechiseled-1.1.6a-neoforge-mc1.21.jar",
        "license": "All rights reserved",
        "package": "com.supermartijn642.rechiseled",
        "version": "1.1.6+a"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "com.supermartijn642.rechiseled.registration.data.RegistrationFusionModelProvider",
          "com.supermartijn642.rechiseled.registration.data.RegistrationChiselingRecipeProvider",
          "com.supermartijn642.rechiseled.data.RechiseledTextureProvider",
          "com.supermartijn642.rechiseled.api.ChiselingRecipeProvider",
          "com.supermartijn642.rechiseled.api.ChiseledTextureProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.supermartijn642.rechiseled.ChiselItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.supermartijn642.rechiseled.blocks.RechiseledPillarBlock",
          "com.supermartijn642.rechiseled.blocks.RechiseledGlassPillarBlock",
          "com.supermartijn642.rechiseled.blocks.RechiseledGlassBlock",
          "com.supermartijn642.rechiseled.blocks.RechiseledBlock"
        ]
      },
      "summary": [
        "Adds Reload Listeners",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Data Pack Sync",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "rechiseled_chipped": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "xyz.iwolfking.rechiseled_chipped.mixin.MixinChippedModBlocks",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.Block",
                "net.minecraft.world.level.block.Block",
                "earth.terrarium.chipped.common.palette.Palette",
                "java.util.function.BiFunction",
                "java.util.function.BiFunction",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "catchChippedTorchRegistry",
              "raw": "catchChippedTorchRegistry(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Learth/terrarium/chipped/common/palette/Palette;Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "xyz.iwolfking.rechiseled_chipped.mixin.MixinChippedModBlocks",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.Block",
                "earth.terrarium.chipped.common.palette.Palette",
                "java.util.function.Function",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "catchChippedRegistry",
              "raw": "catchChippedRegistry(Lnet/minecraft/world/level/block/Block;Learth/terrarium/chipped/common/palette/Palette;Ljava/util/function/Function;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "xyz.iwolfking.rechiseled_chipped.mixin.MixinChipped",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.0,1.22)",
        "neoforge": "[21,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "xyz.iwolfking.rechiseled_chipped.Rechiseled_chipped$ClientModEvents#onClientSetup"
        ],
        "net.neoforged.neoforge.event.server.ServerStartingEvent": [
          "xyz.iwolfking.rechiseled_chipped.Rechiseled_chipped#onServerStarting"
        ]
      },
      "info": {
        "authors": "iwolfking",
        "classes": "11",
        "description": "Adds a scrollbar to Rechiseled and integrates Chipped blocks into the Rechiseled Chiseling menu.",
        "displayName": "Rechiseled: Chipped",
        "file": "rechiseled_chipped-1.2.jar",
        "license": "All Rights Reserved",
        "package": "xyz.iwolfking.rechiseled_chipped",
        "version": "1.2"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "xyz.iwolfking.rechiseled_chipped.mixin.rechiseled.MixinBaseContainerScreen"
        ]
      },
      "modifies": [
        "com.supermartijn642.core.gui.WidgetContainerScreen",
        "com.supermartijn642.rechiseled.compat.jei.ChiselingRecipeCategory",
        "com.supermartijn642.rechiseled.screen.BaseChiselingContainerScreen",
        "com.supermartijn642.rechiseled.screen.EntryButtonWidget",
        "earth.terrarium.chipped.Chipped",
        "earth.terrarium.chipped.common.registry.ModBlocks"
      ],
      "summary": [
        "Custom GUI Screens",
        "Listens to Server Starting Events",
        "Localization",
        "Modifies Methods"
      ]
    },
    "recipeessentials": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.recipeessentials.mixin.ServerRecipeBookMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundRecipePacket$State",
                "net.minecraft.server.level.ServerPlayer",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "recipeessentials$disableRecipebookSend",
              "raw": "recipeessentials$disableRecipebookSend(Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State;Lnet/minecraft/server/level/ServerPlayer;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.recipeessentials.mixin.ServerRecipeBookMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerPlayer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "recipeessentials$disableRecipebookInit",
              "raw": "recipeessentials$disableRecipebookInit(Lnet/minecraft/server/level/ServerPlayer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.recipeessentials.mixin.ReloadableServerResourcesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.RegistryAccess$Frozen",
                "net.minecraft.world.flag.FeatureFlagSet",
                "net.minecraft.commands.Commands$CommandSelection",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "createManager",
              "raw": "createManager(Lnet/minecraft/core/RegistryAccess$Frozen;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/commands/Commands$CommandSelection;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.RecipeCollectionMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "recipeessentials$hasKnown",
              "raw": "recipeessentials$hasKnown(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.recipeessentials.mixin.RecipebookSortingMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "recipeessentials$onTick",
              "raw": "recipeessentials$onTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.recipeessentials.mixin.RecipebookSortingMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.util.List",
                "java.util.List"
              ],
              "name": "recipeessentials$sortCollection",
              "raw": "recipeessentials$sortCollection(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/util/List;Ljava/util/List;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/gui/screens/recipebook/RecipeBookPage;updateCollections(Ljava/util/List;Z)V}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.RecipebookSortingMixin",
            "method": {
              "argTypes": [
                "double",
                "double",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "recipeessentials$onSelectedRecipe",
              "raw": "recipeessentials$onSelectedRecipe(DDILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.RecipebookHidingMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "recipeessentials$onInit",
              "raw": "recipeessentials$onInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.LongArrayTagMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClear",
              "raw": "onClear(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.LongArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onRemove",
              "raw": "onRemove(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.LongArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.Tag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onAddTag",
              "raw": "onAddTag(ILnet/minecraft/nbt/Tag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.LongArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.Tag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onSetTag",
              "raw": "onSetTag(ILnet/minecraft/nbt/Tag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.LongArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.LongTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onAddIntTag",
              "raw": "onAddIntTag(ILnet/minecraft/nbt/LongTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.LongArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.LongTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onSet",
              "raw": "onSet(ILnet/minecraft/nbt/LongTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ListTagMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClear",
              "raw": "onClear(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ListTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.Tag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onAddTag",
              "raw": "onAddTag(ILnet/minecraft/nbt/Tag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ListTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.Tag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onSetTag",
              "raw": "onSetTag(ILnet/minecraft/nbt/Tag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ListTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.Tag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onSet",
              "raw": "onSet(ILnet/minecraft/nbt/Tag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ListTagMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetList",
              "raw": "onGetList(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ListTagMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetCompound",
              "raw": "onGetCompound(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ListTagMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onRemove",
              "raw": "onRemove(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ItemStackMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "OnAreItemStackTagsEqual",
              "raw": "OnAreItemStackTagsEqual(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.IntArrayTagMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClear",
              "raw": "onClear(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.IntArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onRemove",
              "raw": "onRemove(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.IntArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.Tag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onAddTag",
              "raw": "onAddTag(ILnet/minecraft/nbt/Tag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.IntArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.Tag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onSetTag",
              "raw": "onSetTag(ILnet/minecraft/nbt/Tag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.IntArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.IntTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onAddIntTag",
              "raw": "onAddIntTag(ILnet/minecraft/nbt/IntTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.IntArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.IntTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onSet",
              "raw": "onSet(ILnet/minecraft/nbt/IntTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.CompoundNBTMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetCompound",
              "raw": "onGetCompound(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.CompoundNBTMixin",
            "method": {
              "argTypes": [
                "java.lang.Object",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "afterComparetest",
              "raw": "afterComparetest(Ljava/lang/Object;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN, target=Ljava/util/Objects;equals(Ljava/lang/Object;Ljava/lang/Object;)Z}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.CompoundNBTMixin",
            "method": {
              "argTypes": [
                "java.lang.Object",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "befOreComparetest",
              "raw": "befOreComparetest(Ljava/lang/Object;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/Objects;equals(Ljava/lang/Object;Ljava/lang/Object;)Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.CompoundNBTMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onMerge",
              "raw": "onMerge(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.CompoundNBTMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "remove",
              "raw": "remove(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.CompoundNBTMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "net.minecraft.nbt.Tag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "put",
              "raw": "put(Ljava/lang/String;Lnet/minecraft/nbt/Tag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.CompoundNBTMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getList",
              "raw": "getList(Ljava/lang/String;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Ljava/util/Map;get(Ljava/lang/Object;)Ljava/lang/Object;}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.CompoundNBTMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getCompound",
              "raw": "getCompound(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Ljava/util/Map;get(Ljava/lang/Object;)Ljava/lang/Object;}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.CompoundNBTMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "get",
              "raw": "get(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ByteArrayTagMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClear",
              "raw": "onClear(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ByteArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onRemove",
              "raw": "onRemove(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ByteArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.Tag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onAddTag",
              "raw": "onAddTag(ILnet/minecraft/nbt/Tag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ByteArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.Tag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onSetTag",
              "raw": "onSetTag(ILnet/minecraft/nbt/Tag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ByteArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.ByteTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onAddByteTag",
              "raw": "onAddByteTag(ILnet/minecraft/nbt/ByteTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.nbt.ByteArrayTagMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.nbt.ByteTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onSet",
              "raw": "onSet(ILnet/minecraft/nbt/ByteTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.ItemStackFastComparisonMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.component.DataComponentMap",
                "it.unimi.dsi.fastutil.objects.Reference2ObjectMap",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lnet/minecraft/core/component/DataComponentMap;Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.InventoryButtonMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "recipeessentials$onInit",
              "raw": "recipeessentials$onInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.recipeessentials.mixin.ClientRecipeBookMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "recipeessentials$contains",
              "raw": "recipeessentials$contains(Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.recipeessentials.mixin.ClientRecipeBookMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.crafting.RecipeHolder",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "recipeessentials$containsRecipe",
              "raw": "recipeessentials$containsRecipe(Lnet/minecraft/world/item/crafting/RecipeHolder;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.recipeessentials.mixin.ClientPacketListenerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "net.minecraft.network.Connection",
                "net.minecraft.client.multiplayer.CommonListenerCookie",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "createManager",
              "raw": "createManager(Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/Connection;Lnet/minecraft/client/multiplayer/CommonListenerCookie;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "cupboard": "[1.21-1.4,)",
        "minecraft": "[1.21,1.30)"
      },
      "info": {
        "authors": "Someaddon",
        "classes": "32",
        "description": "recipeessentials mod\n",
        "displayName": "recipeessentials mod",
        "file": "recipeessentials-1.21-4.0.jar",
        "license": "ARR",
        "package": "com.recipeessentials",
        "version": "4.0"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.recipeessentials.mixin.RecipeBookButtonMixin",
          "com.recipeessentials.mixin.InventoryButtonMixin"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen",
        "net.minecraft.client.gui.screens.inventory.InventoryScreen",
        "net.minecraft.client.gui.screens.recipebook.RecipeBookComponent",
        "net.minecraft.client.gui.screens.recipebook.RecipeButton",
        "net.minecraft.client.gui.screens.recipebook.RecipeCollection",
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.core.component.PatchedDataComponentMap",
        "net.minecraft.nbt.ByteArrayTag",
        "net.minecraft.nbt.CompoundTag",
        "net.minecraft.nbt.IntArrayTag",
        "net.minecraft.nbt.ListTag",
        "net.minecraft.nbt.LongArrayTag",
        "net.minecraft.recipebook.ServerPlaceRecipe",
        "net.minecraft.server.ReloadableServerResources",
        "net.minecraft.stats.RecipeBook",
        "net.minecraft.stats.ServerRecipeBook",
        "net.minecraft.world.item.ItemStack",
        "net.minecraft.world.item.crafting.RecipeManager"
      ],
      "summary": [
        "Custom GUI Screens",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "reeses_sodium_options": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinSliderControlElement",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "int",
                "int",
                "int",
                "int",
                "net.minecraft.network.chat.MutableComponent",
                "int",
                "boolean",
                "double",
                "int",
                "int"
              ],
              "name": "rso$renderSlider",
              "raw": "rso$renderSlider(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;IIIILnet/minecraft/network/chat/MutableComponent;IZDII)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/caffeinemc/mods/sodium/client/gui/options/control/SliderControl$Button;drawString(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/network/chat/Component;III)V, ordinal=0}]"
            }
          },
          {
            "class": "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinSliderControlElement",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "render",
              "raw": "render(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinSodiumOptionsGUI",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "postInit",
              "raw": "postInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinDim2i",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "redirectGetCenterY",
              "raw": "redirectGetCenterY(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinDim2i",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "redirectGetCenterX",
              "raw": "redirectGetCenterX(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinDim2i",
            "method": {
              "argTypes": [
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "containsCursor",
              "raw": "containsCursor(DDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinDim2i",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "redirectGetLimitY",
              "raw": "redirectGetLimitY(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinDim2i",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "redirectGetLimitX",
              "raw": "redirectGetLimitX(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinDim2i",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "y",
              "raw": "y(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinDim2i",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "x",
              "raw": "x(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinControlElement",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.client.gui.options.Option",
                "net.caffeinemc.mods.sodium.client.util.Dim2i",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "postInit",
              "raw": "postInit(Lnet/caffeinemc/mods/sodium/client/gui/options/Option;Lnet/caffeinemc/mods/sodium/client/util/Dim2i;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "sodium": "[0.6.5,)"
      },
      "info": {
        "authors": "FlashyReese",
        "classes": "30",
        "description": "Replaces Sodium's Options Screen\n",
        "displayName": "Reese's Sodium Options",
        "file": "reeses-sodium-options-neoforge-1.8.3+mc1.21.4.jar",
        "license": "MIT",
        "package": "me.flashyreese.mods.reeses_sodium_options.util",
        "version": "1.8.3+mc1.21.4"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "me.flashyreese.mods.reeses_sodium_options.mixin.sodium.MixinSodiumOptionsGUI",
          "me.flashyreese.mods.reeses_sodium_options.client.gui.SodiumVideoOptionsScreen"
        ]
      },
      "modifies": [
        "net.caffeinemc.mods.sodium.client.gui.SodiumOptionsGUI",
        "net.caffeinemc.mods.sodium.client.gui.options.OptionImpl",
        "net.caffeinemc.mods.sodium.client.gui.options.control.ControlElement",
        "net.caffeinemc.mods.sodium.client.gui.options.control.CyclingControl$CyclingControlElement",
        "net.caffeinemc.mods.sodium.client.gui.options.control.SliderControl$Button",
        "net.caffeinemc.mods.sodium.client.gui.options.control.TickBoxControl$TickBoxControlElement",
        "net.caffeinemc.mods.sodium.client.gui.widgets.FlatButtonWidget",
        "net.caffeinemc.mods.sodium.client.util.Dim2i"
      ],
      "summary": [
        "Custom GUI Screens",
        "Localization",
        "Modifies Methods"
      ]
    },
    "relics": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "it.hurts.sskirillss.relics.mixin.WindowMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getGuiScaledWidth",
              "raw": "getGuiScaledWidth(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.WindowMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getGuiScaledHeight",
              "raw": "getGuiScaledHeight(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.WindowMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getGuiScale",
              "raw": "getGuiScale(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.ScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "render",
              "raw": "render(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.ScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tick",
              "raw": "tick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.PowderSnowBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "boilSnow",
              "raw": "boilSnow(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.PiglinAiMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.monster.piglin.Piglin",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tweakBartering",
              "raw": "tweakBartering(Lnet/minecraft/world/entity/monster/piglin/Piglin;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/monster/piglin/PiglinAi;throwItems(Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.MouseHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onKeyPress",
              "raw": "onKeyPress(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "canBeSeenByAnyone",
              "raw": "canBeSeenByAnyone(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.effect.MobEffectInstance",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onEffectRemoved",
              "raw": "onEffectRemoved(Lnet/minecraft/world/effect/MobEffectInstance;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.effect.MobEffectInstance",
                "boolean",
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onEffectUpdated",
              "raw": "onEffectUpdated(Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.effect.MobEffectInstance",
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onEffectAdded",
              "raw": "onEffectAdded(Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.LivingEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onAiStep",
              "raw": "onAiStep(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.KeyboardHandlerMixin",
            "method": {
              "argTypes": [
                "long",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onKeyPress",
              "raw": "onKeyPress(JIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onVerifyComponentsAfterLoad",
              "raw": "onVerifyComponentsAfterLoad(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.Item$TooltipContext",
                "java.util.List",
                "net.minecraft.world.item.TooltipFlag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "appendHoverText",
              "raw": "appendHoverText(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item$TooltipContext;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.level.Level",
                "net.minecraft.world.entity.Entity",
                "int",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "inventoryTick",
              "raw": "inventoryTick(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.ItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.Item$Properties",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lnet/minecraft/world/item/Item$Properties;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "net.minecraft.world.level.Level",
                "net.minecraft.world.item.ItemStack",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderItem",
              "raw": "renderItem(Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;IIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/mojang/blaze3d/vertex/PoseStack;scale(FFF)V}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.Font",
                "java.util.List",
                "int",
                "int",
                "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.neoforged.neoforge.client.event.RenderTooltipEvent$Pre",
                "int",
                "int",
                "int",
                "int",
                "org.joml.Vector2ic"
              ],
              "name": "onTooltipRender",
              "raw": "onTooltipRender(Lnet/minecraft/client/gui/Font;Ljava/util/List;IILnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/neoforged/neoforge/client/event/RenderTooltipEvent$Pre;IIIILorg/joml/Vector2ic;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/mojang/blaze3d/vertex/PoseStack;popPose()V}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.GameDataMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetRegistrationOrder",
              "raw": "onGetRegistrationOrder(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "getBlockSpeedFactor",
              "raw": "getBlockSpeedFactor(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.EntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "setWet",
              "raw": "setWet(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.EnderManMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "calmEndermans",
              "raw": "calmEndermans(Lnet/minecraft/world/entity/player/Player;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.compat.sophisticatedbackpacks.FeedingUpgradeWrapperMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tick",
              "raw": "tick(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.CameraMixin",
            "method": {
              "argTypes": [
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRotationUpdate",
              "raw": "onRotationUpdate(FFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.BlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onEntityFall",
              "raw": "onEntityFall(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.BlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.entity.Entity",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onEntityFall",
              "raw": "onEntityFall(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "it.hurts.sskirillss.relics.mixin.AbstractContainerMenuMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "net.minecraft.world.inventory.ClickType",
                "net.minecraft.world.entity.player.Player",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClick",
              "raw": "onClick(IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "curios": "[9.0.5+1.21,)",
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.140-beta,)",
        "octolib": "[0.5.0.1,)"
      },
      "events": {
        "it.hurts.sskirillss.relics.api.events.common.ContainerSlotClickEvent": [
          "it.hurts.sskirillss.relics.items.relics.InfiniteHamItem$InfinityHamEvents#onSlotClick",
          "it.hurts.sskirillss.relics.items.relics.back.ElytraBoosterItem#onSlotClick"
        ],
        "it.hurts.sskirillss.relics.api.events.common.EntityBlockSpeedFactorEvent": [
          "it.hurts.sskirillss.relics.items.relics.feet.RollerSkatesItem$Events#onSpeedFactor"
        ],
        "it.hurts.sskirillss.relics.api.events.common.FluidCollisionEvent": [
          "it.hurts.sskirillss.relics.items.relics.feet.MagmaWalkerItem#onFluidCollide",
          "it.hurts.sskirillss.relics.items.relics.feet.AquaWalkerItem#onFluidCollide"
        ],
        "it.hurts.sskirillss.relics.api.events.common.LivingSlippingEvent": [
          "it.hurts.sskirillss.relics.items.relics.feet.RollerSkatesItem$Events#onLivingSlipping",
          "it.hurts.sskirillss.relics.items.relics.feet.IceBreakerItem$Events#onLivingSlipping"
        ],
        "it.hurts.sskirillss.relics.api.events.common.TooltipDisplayEvent": [
          "it.hurts.sskirillss.relics.client.tooltip.TooltipBorderHandler#onTooltipDisplay"
        ],
        "it.hurts.sskirillss.relics.api.events.leveling.ExperienceAddEvent": [
          "it.hurts.sskirillss.relics.items.relics.belt.LeatherBeltItem#onExperienceAdded"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "it.hurts.sskirillss.relics.init.RemoteRegistry#setupClient"
        ],
        "net.neoforged.neoforge.client.event.ComputeFovModifierEvent": [
          "it.hurts.sskirillss.relics.items.relics.MagicMirrorItem$ClientEvents#onFovUpdate"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$AddLayers": [
          "it.hurts.sskirillss.relics.init.RemoteRegistry#onPlayerRendererRegister"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "it.hurts.sskirillss.relics.init.RemoteRegistry#registerLayers"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "it.hurts.sskirillss.relics.init.RemoteRegistry#entityRenderers"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$InteractionKeyMappingTriggered": [
          "it.hurts.sskirillss.relics.effects.StunEffect$ClientEvents#onMouseInput"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseButton$Pre": [
          "it.hurts.sskirillss.relics.system.casts.handlers.HUDRenderHandler$CastEvents#onKeyPressed"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseScrollingEvent": [
          "it.hurts.sskirillss.relics.system.casts.handlers.HUDRenderHandler$GeneralEvents#onMouseScroll"
        ],
        "net.neoforged.neoforge.client.event.MovementInputUpdateEvent": [
          "it.hurts.sskirillss.relics.effects.ParalysisEffect$ClientEvents#onMovementInput",
          "it.hurts.sskirillss.relics.effects.ConfusionEffect$ClientEvents#onMovementInput"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientTooltipComponentFactoriesEvent": [
          "it.hurts.sskirillss.relics.init.RemoteRegistry#onTooltipRegistry"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "it.hurts.sskirillss.relics.init.RemoteRegistry#onOverlayRegistry"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "it.hurts.sskirillss.relics.init.HotkeyRegistry#onKeybindingRegistry"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "it.hurts.sskirillss.relics.init.ParticleRegistry#onParticleRegistry"
        ],
        "net.neoforged.neoforge.client.event.RegisterShadersEvent": [
          "it.hurts.sskirillss.relics.init.RelicsCoreShaders#register"
        ],
        "net.neoforged.neoforge.client.event.RenderArmEvent": [
          "it.hurts.sskirillss.relics.client.handlers.HandRenderHandler#onRenderHand"
        ],
        "net.neoforged.neoforge.client.event.RenderHandEvent": [
          "it.hurts.sskirillss.relics.effects.VanishingEffect$ClientEvents#onHandRender"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "it.hurts.sskirillss.relics.effects.StunEffect$ClientEvents#onBlockHighlight"
        ],
        "net.neoforged.neoforge.client.event.RenderLivingEvent$Pre": [
          "it.hurts.sskirillss.relics.effects.VanishingEffect$ClientEvents#onEntityRender",
          "it.hurts.sskirillss.relics.effects.StunEffect$ClientEvents#onEntityRender"
        ],
        "net.neoforged.neoforge.client.event.RenderPlayerEvent$Post": [
          "it.hurts.sskirillss.relics.client.handlers.ArmorRenderHandler#handlePostRenderPlayerLow"
        ],
        "net.neoforged.neoforge.client.event.RenderPlayerEvent$Pre": [
          "it.hurts.sskirillss.relics.client.handlers.ArmorRenderHandler#handlePreRenderPlayerLowest",
          "it.hurts.sskirillss.relics.client.handlers.ArmorRenderHandler#handlePreRenderPlayerHigh"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$Color": [
          "it.hurts.sskirillss.relics.client.tooltip.TooltipBorderHandler#onTooltipColorEvent"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "it.hurts.sskirillss.relics.init.CreativeTabRegistry#fillCreativeTabs"
        ],
        "net.neoforged.neoforge.event.ModifyDefaultComponentsEvent": [
          "it.hurts.sskirillss.relics.init.DataComponentRegistry#modifyComponents"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "it.hurts.sskirillss.relics.init.CommandRegistry#registerCommands"
        ],
        "net.neoforged.neoforge.event.entity.EntityTeleportEvent$ChorusFruit": [
          "it.hurts.sskirillss.relics.items.relics.ring.ChorusInhibitorItem$Events#onChorusTeleport"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingBreatheEvent": [
          "it.hurts.sskirillss.relics.items.relics.feet.AmphibianBootItem$Events#onLivingBreath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Post": [
          "it.hurts.sskirillss.relics.items.relics.ShadowGlaiveItem$ShadowGlaiveEvents#onLivingHurt"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "it.hurts.sskirillss.relics.items.relics.ring.BastionRingItem$Events#onLivingDeath",
          "it.hurts.sskirillss.relics.items.relics.necklace.HolyLocketItem$HolyLocketEvents#onLivingDeath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent$Start": [
          "it.hurts.sskirillss.relics.items.relics.belt.DrownedBeltItem$Events#onItemUseStart"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent$Stop": [
          "it.hurts.sskirillss.relics.items.relics.belt.DrownedBeltItem$Events#onItemUseFinish"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingHealEvent": [
          "it.hurts.sskirillss.relics.items.relics.necklace.HolyLocketItem$HolyLocketEvents#onLivingHeal",
          "it.hurts.sskirillss.relics.effects.AntiHealEffect$Events#onLivingHeal"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingIncomingDamageEvent": [
          "it.hurts.sskirillss.relics.items.relics.necklace.ReflectionNecklaceItem$ReflectionNecklaceServerEvents#onEntityHurt",
          "it.hurts.sskirillss.relics.items.relics.necklace.HolyLocketItem$HolyLocketEvents#onLivingDamage",
          "it.hurts.sskirillss.relics.items.relics.MagicMirrorItem$ServerEvents#onLivingHurt",
          "it.hurts.sskirillss.relics.items.relics.InfiniteHamItem$InfinityHamEvents#onLivingDamage",
          "it.hurts.sskirillss.relics.items.relics.hands.RageGloveItem$Events#onLivingHurt",
          "it.hurts.sskirillss.relics.items.relics.feet.MagmaWalkerItem#onLivingAttack",
          "it.hurts.sskirillss.relics.items.relics.belt.HunterBeltItem$HunterBeltEvents#onLivingDamage",
          "it.hurts.sskirillss.relics.items.relics.belt.DrownedBeltItem$Events#onEntityHurt",
          "it.hurts.sskirillss.relics.items.relics.back.MidnightRobeItem$ServerEvents#onLivingHurt",
          "it.hurts.sskirillss.relics.effects.ImmortalityEffect$Events#onLivingIncomingDamage"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "it.hurts.sskirillss.relics.client.handlers.DescriptionHandler#onItemTooltip"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "it.hurts.sskirillss.relics.items.relics.hands.WoolMittenItem$Events#onBlockClick"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "it.hurts.sskirillss.relics.level.RelicLootModifier$Events#onServerStarted"
        ],
        "net.neoforged.neoforge.event.tick.EntityTickEvent$Post": [
          "it.hurts.sskirillss.relics.effects.BleedingEffect$Events#onLivingUpdate"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "it.hurts.sskirillss.relics.system.casts.handlers.HUDRenderHandler$GeneralEvents#onPlayerTick",
          "it.hurts.sskirillss.relics.system.casts.handlers.HUDRenderHandler$CastEvents#onPlayerTick",
          "it.hurts.sskirillss.relics.system.casts.handlers.CacheHandler#onPlayerTick",
          "it.hurts.sskirillss.relics.client.handlers.DescriptionHandler#onPlayerTick"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "it.hurts.sskirillss.relics.network.NetworkHandler#onRegisterPayloadHandler"
        ],
        "net.neoforged.neoforge.registries.NewRegistryEvent": [
          "it.hurts.sskirillss.relics.init.RegistryRegistry#registerRegistries"
        ]
      },
      "info": {
        "authors": "SSKirillSS",
        "classes": "368",
        "description": "Just a mod about useful relics with unique mechanics ;)",
        "displayName": "Relics",
        "file": "relics-1.21.1-0.10.5.jar",
        "license": "All Rights Reserved",
        "package": "it.hurts.sskirillss.relics",
        "version": "0.10.5"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "it.hurts.sskirillss.relics.client.screen.description.research.AbilityResearchScreen",
          "it.hurts.sskirillss.relics.client.screen.description.relic.RelicDescriptionScreen",
          "it.hurts.sskirillss.relics.client.screen.description.experience.ExperienceDescriptionScreen",
          "it.hurts.sskirillss.relics.client.screen.description.ability.AbilityDescriptionScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "it.hurts.sskirillss.relics.client.particles.BasicColoredParticle"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "it.hurts.sskirillss.relics.client.renderer.tiles.ResearchingTableRenderer"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "it.hurts.sskirillss.relics.effects.VanishingEffect",
          "it.hurts.sskirillss.relics.effects.StunEffect",
          "it.hurts.sskirillss.relics.effects.ParalysisEffect",
          "it.hurts.sskirillss.relics.effects.ImmortalityEffect",
          "it.hurts.sskirillss.relics.effects.ConfusionEffect",
          "it.hurts.sskirillss.relics.effects.BleedingEffect",
          "it.hurts.sskirillss.relics.effects.AntiHealEffect"
        ],
        "net.minecraft.world.entity.Entity": [
          "it.hurts.sskirillss.relics.entities.ThrownRelicExperienceBottle",
          "it.hurts.sskirillss.relics.entities.StalactiteEntity",
          "it.hurts.sskirillss.relics.entities.SporeEntity",
          "it.hurts.sskirillss.relics.entities.SolidSnowballEntity",
          "it.hurts.sskirillss.relics.entities.ShockwaveEntity",
          "it.hurts.sskirillss.relics.entities.ShadowGlaiveEntity",
          "it.hurts.sskirillss.relics.entities.RelicExperienceOrbEntity",
          "it.hurts.sskirillss.relics.entities.LifeEssenceEntity",
          "it.hurts.sskirillss.relics.entities.DissectionEntity",
          "it.hurts.sskirillss.relics.entities.DeathEssenceEntity",
          "it.hurts.sskirillss.relics.entities.ChairEntity",
          "it.hurts.sskirillss.relics.entities.BlockSimulationEntity"
        ],
        "net.minecraft.world.item.Item": [
          "it.hurts.sskirillss.relics.items.SolidSnowballItem",
          "it.hurts.sskirillss.relics.items.relics.SpaceDissectorItem",
          "it.hurts.sskirillss.relics.items.relics.ShadowGlaiveItem",
          "it.hurts.sskirillss.relics.items.relics.ring.LeafyRingItem",
          "it.hurts.sskirillss.relics.items.relics.ring.ChorusInhibitorItem",
          "it.hurts.sskirillss.relics.items.relics.ring.BastionRingItem",
          "it.hurts.sskirillss.relics.items.relics.necklace.ReflectionNecklaceItem",
          "it.hurts.sskirillss.relics.items.relics.necklace.JellyfishNecklaceItem",
          "it.hurts.sskirillss.relics.items.relics.necklace.HolyLocketItem",
          "it.hurts.sskirillss.relics.items.relics.MagicMirrorItem",
          "it.hurts.sskirillss.relics.items.relics.InfiniteHamItem",
          "it.hurts.sskirillss.relics.items.relics.hands.WoolMittenItem",
          "it.hurts.sskirillss.relics.items.relics.hands.RageGloveItem",
          "it.hurts.sskirillss.relics.items.relics.hands.EnderHandItem",
          "it.hurts.sskirillss.relics.items.relics.feet.SpringyBootItem",
          "it.hurts.sskirillss.relics.items.relics.feet.RollerSkatesItem",
          "it.hurts.sskirillss.relics.items.relics.feet.PhantomBootItem",
          "it.hurts.sskirillss.relics.items.relics.feet.MagmaWalkerItem",
          "it.hurts.sskirillss.relics.items.relics.feet.IceSkatesItem",
          "it.hurts.sskirillss.relics.items.relics.feet.IceBreakerItem",
          "it.hurts.sskirillss.relics.items.relics.feet.AquaWalkerItem",
          "it.hurts.sskirillss.relics.items.relics.feet.AmphibianBootItem",
          "it.hurts.sskirillss.relics.items.relics.charm.SporeSackItem",
          "it.hurts.sskirillss.relics.items.relics.BlazingFlaskItem",
          "it.hurts.sskirillss.relics.items.relics.belt.LeatherBeltItem",
          "it.hurts.sskirillss.relics.items.relics.belt.HunterBeltItem",
          "it.hurts.sskirillss.relics.items.relics.belt.DrownedBeltItem",
          "it.hurts.sskirillss.relics.items.relics.base.RelicItem",
          "it.hurts.sskirillss.relics.items.relics.back.MidnightRobeItem",
          "it.hurts.sskirillss.relics.items.relics.back.ElytraBoosterItem",
          "it.hurts.sskirillss.relics.items.RelicExperienceBottleItem",
          "it.hurts.sskirillss.relics.items.ItemBase",
          "it.hurts.sskirillss.relics.items.BlockItemBase"
        ],
        "net.minecraft.world.level.block.Block": [
          "it.hurts.sskirillss.relics.blocks.ResearchingTableBlock",
          "it.hurts.sskirillss.relics.blocks.PhantomBlock"
        ]
      },
      "modifies": [
        "com.mojang.blaze3d.platform.Window",
        "net.minecraft.client.Camera",
        "net.minecraft.client.KeyboardHandler",
        "net.minecraft.client.MouseHandler",
        "net.minecraft.client.gui.GuiGraphics",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.animal.horse.AbstractChestedHorse",
        "net.minecraft.world.entity.monster.EnderMan",
        "net.minecraft.world.entity.monster.piglin.PiglinAi",
        "net.minecraft.world.inventory.AbstractContainerMenu",
        "net.minecraft.world.item.Item",
        "net.minecraft.world.level.block.Block",
        "net.minecraft.world.level.block.PowderSnowBlock",
        "net.neoforged.neoforge.registries.GameData",
        "net.p3pp3rf1y.sophisticatedcore.upgrades.UpgradeWrapperBase",
        "net.p3pp3rf1y.sophisticatedcore.upgrades.feeding.FeedingUpgradeWrapper"
      ],
      "summary": [
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Network Packets",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Server Commands",
        "Custom Shaders",
        "Custom Tag Assignments",
        "Custom Tooltip Components",
        "Listens to Entity Breathing Events",
        "Listens to Entity Damage Events",
        "Listens to Entity Death Events",
        "Listens to Entity Healing Events",
        "Listens to Right Click Block Events",
        "Listens to Server Started Events",
        "Localization",
        "Modifies Default Components",
        "Modifies Methods",
        "Runs Entity Tick Logic",
        "Runs Player Tick Logic",
        "Uses Access Transformers",
        "Uses Loot Modifiers"
      ]
    },
    "replication": {
      "dependencies": {
        "minecraft": "[1.21.1,)",
        "titanium": "[4.0.32,)"
      },
      "info": {
        "authors": "Buuz135, Rid",
        "classes": "187",
        "description": "\n",
        "displayName": "Replication",
        "file": "Replication-1.21.1-1.1.15.jar",
        "license": "MIT",
        "package": "com.buuz135.replication",
        "version": "1.21.1-1.1.15"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.buuz135.replication.client.gui.ReplicationTerminalScreen"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.buuz135.replication.client.render.IdentificationChamberRenderer",
          "com.buuz135.replication.client.render.MatterTankRenderer",
          "com.buuz135.replication.client.render.MatterPipeRenderer",
          "com.buuz135.replication.client.render.ReplicatorRenderer",
          "com.buuz135.replication.client.render.DisintegratorRenderer",
          "com.buuz135.replication.client.render.ChipStorageRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "com.buuz135.replication.data.ReplicationLootTableDataProvider",
          "com.buuz135.replication.data.ReplicationItemTagsProvider",
          "com.buuz135.replication.data.ReplicationBlockTagsProvider",
          "com.buuz135.replication.data.RepBlockstateProvider",
          "com.buuz135.replication.data.RepLangItemProvider",
          "com.buuz135.replication.data.RepModelProvider",
          "com.buuz135.replication.data.ReplicationRecipesProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.buuz135.replication.item.MemoryChipItem",
          "com.buuz135.replication.item.MatterBluePrintItem",
          "com.buuz135.replication.item.ReplicationItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.buuz135.replication.recipe.MatterValueRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.buuz135.replication.block.ReplicationTerminalBlock",
          "com.buuz135.replication.block.ReplicatorBlock",
          "com.buuz135.replication.block.MatterPipeBlock",
          "com.buuz135.replication.block.IdentificationChamberBlock",
          "com.buuz135.replication.block.ChipStorageBlock",
          "com.buuz135.replication.block.DisintegratorBlock",
          "com.buuz135.replication.block.MatterTankBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Localization",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "resourcefullib": {
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21.0.0-beta,)"
      },
      "info": {
        "authors": "ThatGravyBoat, Epic_Oreo",
        "classes": "221",
        "description": "Team Resourceful Library",
        "displayName": "Resourceful Lib",
        "file": "resourcefullib-neoforge-1.21-3.0.11.jar",
        "license": "MIT",
        "package": "com.teamresourceful.resourcefullib",
        "version": "3.0.11"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.teamresourceful.resourcefullib.client.screens.PriorityScreen",
          "com.teamresourceful.resourcefullib.client.screens.HistoryScreen",
          "com.teamresourceful.resourcefullib.client.screens.BaseCursorScreen",
          "com.teamresourceful.resourcefullib.client.screens.AbstractContainerCursorScreen"
        ],
        "net.minecraft.world.item.Item": [
          "com.teamresourceful.resourcefullib.common.fluid.ResourcefulBucketItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.teamresourceful.resourcefullib.common.recipe.CodecRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.teamresourceful.resourcefullib.common.fluid.ResourcefulLiquidBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.teamresourceful.resourcefullib.common.utils.files.CodecSavedData",
          "com.teamresourceful.resourcefullib.common.utils.SaveHandler"
        ]
      },
      "modifies": [
        "com.teamresourceful.resourcefullib.common.fluid.ResourcefulFlowingFluid"
      ],
      "summary": [
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom Items",
        "Custom Recipe Types",
        "Stores Data in World Saves"
      ]
    },
    "resourcepackoverrides": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "fuzs.resourcepackoverrides.neoforge.mixin.client.OptionsNeoForgeMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.repository.PackRepository",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "loadSelectedResourcePacks",
              "raw": "loadSelectedResourcePacks(Lnet/minecraft/server/packs/repository/PackRepository;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "fuzs.resourcepackoverrides.neoforge.mixin.client.OptionsNeoForgeMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "load",
              "raw": "load(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "fuzs.resourcepackoverrides.mixin.client.PackRepositoryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "reload",
              "raw": "reload(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/server/packs/repository/PackRepository;rebuildSelected(Ljava/util/Collection;)Ljava/util/List;}]"
            }
          },
          {
            "class": "fuzs.resourcepackoverrides.mixin.client.MinecraftMixin",
            "method": {
              "argTypes": [
                "java.lang.Throwable",
                "net.minecraft.network.chat.Component",
                "java.lang.Object",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "clearResourcePacksOnError",
              "raw": "clearResourcePacksOnError(Ljava/lang/Throwable;Lnet/minecraft/network/chat/Component;Ljava/lang/Object;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/server/packs/repository/PackRepository;setSelected(Ljava/util/Collection;)V}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[21.1.21,)"
      },
      "info": {
        "authors": "Fuzs",
        "classes": "22",
        "description": "Ensures important resource packs stay always active and helps clean up the pack selection screen.",
        "displayName": "Resource Pack Overrides",
        "file": "ResourcePackOverrides-v21.1.0-1.21.1-NeoForge.jar",
        "license": "MPL-2.0",
        "package": "fuzs.resourcepackoverrides",
        "updateUrl": "https://raw.githubusercontent.com/Fuzss/modresources/main/update/resourcepackoverrides.json",
        "version": "21.1.0"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "fuzs.resourcepackoverrides.mixin.client.PackSelectionScreenMixin"
        ],
        "net.minecraft.data.DataProvider": [
          "fuzs.resourcepackoverrides.neoforge.data.client.ModLanguageProvider"
        ]
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.Options",
        "net.minecraft.client.gui.screens.packs.PackSelectionScreen",
        "net.minecraft.server.packs.repository.PackRepository"
      ],
      "summary": [
        "Custom GUI Screens",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "rftoolsbase": {
      "dependencies": {
        "mcjtylib": "[1.21-9.0.5,)",
        "neoforge": "[21.0,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "mcjty.rftoolsbase.keys.KeyInputHandler#onKeyInput"
        ]
      },
      "info": {
        "classes": "164",
        "description": "The base class for all RFTools tech mods (and XNet/Deep Resonance)\n",
        "displayName": "RFToolsBase",
        "file": "rftoolsbase-1.21-6.0.5.jar",
        "license": "MIT License https://github.com/McJtyMods/RFToolsBase/blob/1.16/LICENCE",
        "package": "mcjty.rftoolsbase",
        "version": "1.21-6.0.5"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "mcjty.rftoolsbase.modules.tablet.client.GuiTablet",
          "mcjty.rftoolsbase.modules.infuser.client.GuiMachineInfuser",
          "mcjty.rftoolsbase.modules.crafting.client.GuiCraftingCard",
          "mcjty.rftoolsbase.modules.filter.client.GuiFilterModule"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "mcjty.rftoolsbase.modules.informationscreen.client.InformationScreenRenderer"
        ],
        "net.minecraft.world.item.Item": [
          "mcjty.rftoolsbase.modules.tablet.items.TabletItem",
          "mcjty.rftoolsbase.modules.crafting.items.CraftingCardItem",
          "mcjty.rftoolsbase.modules.various.items.ManualItem",
          "mcjty.rftoolsbase.modules.various.items.SmartWrenchItem",
          "mcjty.rftoolsbase.modules.filter.items.FilterModuleItem",
          "mcjty.rftoolsbase.tools.GenericModuleItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "mcjty.rftoolsbase.modules.informationscreen.blocks.InformationScreenBlock",
          "mcjty.rftoolsbase.modules.worldgen.blocks.DimensionalShardBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Localization",
        "Patchouli Guide Book",
        "Uses Access Transformers",
        "Uses Loot Modifiers"
      ]
    },
    "rftoolspower": {
      "dependencies": {
        "mcjtylib": "[1.21-9.0.5,)",
        "neoforge": "[21.0,)",
        "rftoolsbase": "[1.21-6.0.2,)"
      },
      "info": {
        "classes": "104",
        "description": "Everything related to power generation\n",
        "displayName": "RFToolsPower",
        "file": "rftoolspower-1.21-7.0.1.jar",
        "license": "MIT License https://github.com/McJtyMods/RFToolsPower/blob/1.21_neo/LICENCE",
        "package": "mcjty.rftoolspower",
        "version": "1.21-7.0.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "mcjty.rftoolspower.modules.blazing.client.GuiBlazingAgitator",
          "mcjty.rftoolspower.modules.blazing.client.GuiBlazingInfuser",
          "mcjty.rftoolspower.modules.blazing.client.GuiBlazingGenerator",
          "mcjty.rftoolspower.modules.dimensionalcell.client.GuiDimensionalCell",
          "mcjty.rftoolspower.modules.endergenic.client.GuiEnderMonitor",
          "mcjty.rftoolspower.modules.endergenic.client.GuiPearlInjector",
          "mcjty.rftoolspower.modules.endergenic.client.GuiEndergenic",
          "mcjty.rftoolspower.modules.monitor.client.GuiPowerMonitor",
          "mcjty.rftoolspower.modules.generator.client.GuiCoalGenerator"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "mcjty.rftoolspower.modules.blazing.client.BlazingAgitatorRenderer",
          "mcjty.rftoolspower.modules.endergenic.client.EndergenicRenderer",
          "mcjty.rftoolspower.modules.monitor.client.PowerLevelRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "mcjty.rftoolspower.modules.powercell.client.PowerCellBakedModel"
        ],
        "net.minecraft.world.item.Item": [
          "mcjty.rftoolspower.modules.blazing.items.BlazingRod",
          "mcjty.rftoolspower.modules.powercell.items.PowerCoreItem",
          "mcjty.rftoolspower.modules.dimensionalcell.items.PowerCellCardItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "mcjty.rftoolspower.modules.blazing.blocks.BlazingAgitatorTileEntity$1",
          "mcjty.rftoolspower.modules.blazing.blocks.BlazingGeneratorTileEntity$1",
          "mcjty.rftoolspower.modules.powercell.blocks.PowerCellBlock",
          "mcjty.rftoolspower.modules.dimensionalcell.blocks.DimensionalCellBlock",
          "mcjty.rftoolspower.modules.endergenic.blocks.EndergenicTileEntity$1",
          "mcjty.rftoolspower.modules.monitor.blocks.PowerMonitorTileEntity$1",
          "mcjty.rftoolspower.modules.generator.blocks.CoalGeneratorTileEntity$1"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "mcjty.rftoolspower.modules.dimensionalcell.DimensionalCellNetwork"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Patchouli Guide Book",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Loot Modifiers"
      ]
    },
    "rgp_client": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.rocketplatform.game.client.mod.mixin.screen.TitleScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.rocketplatform.game.client.mod.mixin.screen.ServerSelectionListMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "updateNetworkServers",
              "raw": "updateNetworkServers(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.rocketplatform.game.client.mod.mixin.screen.PauseScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.client.gui.layouts.GridLayout",
                "net.minecraft.client.gui.layouts.GridLayout$RowHelper"
              ],
              "name": "createPauseMenu",
              "raw": "createPauseMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/client/gui/layouts/GridLayout;Lnet/minecraft/client/gui/layouts/GridLayout$RowHelper;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/Minecraft;isLocalServer()Z}]"
            }
          },
          {
            "class": "net.rocketplatform.game.client.mod.mixin.screen.PauseScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onDisconnect",
              "raw": "onDisconnect(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=NEW, target=()Lnet/minecraft/client/gui/screens/TitleScreen;, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.rocketplatform.game.client.mod.mixin.multiplayer.ClientCommonPacketListenerImplMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.DisconnectionDetails",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "createDisconnectScreen",
              "raw": "createDisconnectScreen(Lnet/minecraft/network/DisconnectionDetails;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.rocketplatform.game.client.mod.mixin.ext.CustomPauseScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.client.gui.layouts.GridLayout",
                "net.minecraft.client.gui.layouts.GridLayout$RowHelper"
              ],
              "name": "createPauseMenu",
              "raw": "createPauseMenu(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/client/gui/layouts/GridLayout;Lnet/minecraft/client/gui/layouts/GridLayout$RowHelper;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/Minecraft;isLocalServer()Z}]"
            }
          },
          {
            "class": "net.rocketplatform.game.client.mod.mixin.ext.CustomPauseScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onDisconnect",
              "raw": "onDisconnect(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=NEW, target=()Lnet/minecraft/client/gui/screens/TitleScreen;, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.rocketplatform.game.client.mod.mixin.WorldConnectionMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onDisconnect",
              "raw": "onDisconnect(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.rocketplatform.game.client.mod.mixin.WorldConnectionMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "channelActive",
              "raw": "channelActive(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21,)"
      },
      "info": {
        "authors": "Rocket Platform",
        "classes": "168",
        "description": "Provides functionality for your client to communicated with Rocket Game Platform.\n",
        "displayName": "Rocket Game Platform Client",
        "file": "rgp_client-1.0.7.jar",
        "license": "MIT",
        "package": "net.rocketplatform.game.client.mod",
        "version": "1.0.7"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.rocketplatform.game.client.mod.ui.template.layout.type.list.RendererListScreenWrapper",
          "net.rocketplatform.game.client.mod.ui.template.layout.type.list.ListScreenWrapper",
          "net.rocketplatform.game.client.mod.ui.MultilineErrorScreen"
        ]
      },
      "modifies": [
        "dev.ftb.packcompanion.client.screen.pause.CustomPauseScreen",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.screens.PauseScreen",
        "net.minecraft.client.gui.screens.TitleScreen",
        "net.minecraft.client.gui.screens.multiplayer.ServerSelectionList",
        "net.minecraft.client.multiplayer.ClientCommonPacketListenerImpl",
        "net.minecraft.network.Connection"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Localization",
        "Modifies Methods"
      ]
    },
    "rhino": {
      "dependencies": {},
      "info": {
        "authors": "latvian.dev, Mozilla",
        "classes": "337",
        "description": "A fork of Mozilla's Rhino library, modified for use in mods\n",
        "displayName": "Rhino",
        "file": "rhino-2101.2.6-build.66.jar",
        "license": "MPL-2.0",
        "loader": "lowcodefml",
        "package": "dev.latvian.mods.rhino",
        "url": "https://kubejs.com",
        "version": "2101.2.6-build.66"
      }
    },
    "rusticdelight": {
      "dependencies": {
        "farmersdelight": "[1.2.4,)",
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.102-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.phantomwing.rusticdelight.RusticDelight$ClientModEvents#onClientSetup"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.phantomwing.rusticdelight.datagen.DataGenerators#gatherData"
        ],
        "net.neoforged.neoforge.event.brewing.RegisterBrewingRecipesEvent": [
          "com.phantomwing.rusticdelight.event.ModEvents#registerBrewingRecipes"
        ],
        "net.neoforged.neoforge.event.server.ServerStartingEvent": [
          "com.phantomwing.rusticdelight.RusticDelight#onServerStarting"
        ],
        "net.neoforged.neoforge.event.village.VillagerTradesEvent": [
          "com.phantomwing.rusticdelight.event.ModEvents#addVillagerTrades"
        ],
        "net.neoforged.neoforge.event.village.WandererTradesEvent": [
          "com.phantomwing.rusticdelight.event.ModEvents#addWanderingTraderTrades"
        ]
      },
      "info": {
        "authors": "PhantomWing",
        "classes": "39",
        "description": "A rustic add-on for Farmer's Delight that adds Cotton, Bell Peppers, Pancakes, Calamari and more!",
        "displayName": "Rustic Delight",
        "file": "rusticdelight-neoforge-1.21-1.3.2.jar",
        "license": "All Rights Reserved",
        "package": "com.phantomwing.rusticdelight",
        "version": "1.3.2"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "com.phantomwing.rusticdelight.datagen.ModRecipeProvider",
          "com.phantomwing.rusticdelight.datagen.ModItemTagsProvider",
          "com.phantomwing.rusticdelight.datagen.ModItemModelProvider",
          "com.phantomwing.rusticdelight.datagen.ModGlobalLootModifiersProvider",
          "com.phantomwing.rusticdelight.datagen.ModDataMapProvider",
          "com.phantomwing.rusticdelight.datagen.ModBlockTagsProvider",
          "com.phantomwing.rusticdelight.datagen.ModBlockStateProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.phantomwing.rusticdelight.block.custom.MilkCoffeeItem",
          "com.phantomwing.rusticdelight.block.custom.FuelItem",
          "com.phantomwing.rusticdelight.block.custom.ChocolateCoffeeItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.phantomwing.rusticdelight.block.custom.PancakeBlock",
          "com.phantomwing.rusticdelight.block.custom.ModWildCropBlock",
          "com.phantomwing.rusticdelight.block.custom.CottonCropBlock",
          "com.phantomwing.rusticdelight.block.custom.CoffeeCropBlock",
          "com.phantomwing.rusticdelight.block.custom.BellPepperCropBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Brewing Recipes",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Listens to Server Starting Events",
        "Localization",
        "Modifies Villager Trades",
        "Modifies Wandering Trader Trades",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "searchables": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[4,)"
      },
      "info": {
        "authors": "Jaredlll08",
        "classes": "41",
        "description": "A library mod to facilitate adding search bars with auto complete and search types.",
        "displayName": "Searchables",
        "file": "Searchables-neoforge-1.21.1-1.0.2.jar",
        "license": "MIT",
        "package": "com.blamejared.searchables",
        "updateUrl": "https://updates.blamejared.com/get?n=searchables&gv=1.21.1&ml=neoforge",
        "version": "1.0.2"
      },
      "modifies": [
        "net.minecraft.client.gui.components.EditBox"
      ],
      "summary": [
        "Localization"
      ]
    },
    "servercore": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "me.wesley1808.servercore.mixin.optimizations.ticking.chunk.random.ServerChunkCacheMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$resetIceAndSnowTick",
              "raw": "servercore$resetIceAndSnowTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/util/profiling/ProfilerFiller;push(Ljava/lang/String;)V, ordinal=0}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.optimizations.ticking.chunk.random.LevelChunkMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.level.ChunkPos",
                "net.minecraft.world.level.chunk.UpgradeData",
                "net.minecraft.world.ticks.LevelChunkTicks",
                "net.minecraft.world.ticks.LevelChunkTicks",
                "long",
                "[",
                "net.minecraft.world.level.chunk.LevelChunkSection",
                "net.minecraft.world.level.chunk.LevelChunk$PostLoadProcessor",
                "net.minecraft.world.level.levelgen.blending.BlendingData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$initLightingTick",
              "raw": "servercore$initLightingTick(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/UpgradeData;Lnet/minecraft/world/ticks/LevelChunkTicks;Lnet/minecraft/world/ticks/LevelChunkTicks;J[Lnet/minecraft/world/level/chunk/LevelChunkSection;Lnet/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor;Lnet/minecraft/world/level/levelgen/blending/BlendingData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.optimizations.ticking.chunk.cache.ServerChunkCacheMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$onSave",
              "raw": "servercore$onSave(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.optimizations.ticking.chunk.broadcast.ChunkHolderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.LightLayer",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$onLightChanged",
              "raw": "servercore$onLightChanged(Lnet/minecraft/world/level/LightLayer;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/BitSet;set(I)V}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.optimizations.ticking.chunk.broadcast.ChunkHolderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$onBlockChanged",
              "raw": "servercore$onBlockChanged(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{opcode=181, value=FIELD, target=Lnet/minecraft/server/level/ChunkHolder;hasChangedSections:Z}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.optimizations.sync_loads.StructureCheckMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.ChunkPos",
                "net.minecraft.world.level.levelgen.structure.Structure",
                "net.minecraft.world.level.levelgen.structure.placement.StructurePlacement",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "servercore$skipInvalidBiomes",
              "raw": "servercore$skipInvalidBiomes(Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/world/level/levelgen/structure/StructureCheck;tryLoadFromStorage(Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;ZJ)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.optimizations.sync_loads.SleepInBedMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.core.GlobalPos"
              ],
              "name": "servercore$onlyProcessIfLoaded",
              "raw": "servercore$onlyProcessIfLoaded(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/core/GlobalPos;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/server/level/ServerLevel;dimension()Lnet/minecraft/resources/ResourceKey;, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.optimizations.sync_loads.GroundPathNavigationMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "servercore$onlyPathfindIfLoaded",
              "raw": "servercore$onlyPathfindIfLoaded(Lnet/minecraft/core/BlockPos;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.optimizations.players.PlayerListMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.Connection",
                "net.minecraft.server.level.ServerPlayer",
                "net.minecraft.server.network.CommonListenerCookie",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "java.util.Optional",
                "net.minecraft.server.level.ServerLevel"
              ],
              "name": "servercore$moveToSpawn",
              "raw": "servercore$moveToSpawn(Lnet/minecraft/network/Connection;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/network/CommonListenerCookie;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Ljava/util/Optional;Lnet/minecraft/server/level/ServerLevel;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/server/level/ServerPlayer;setServerLevel(Lnet/minecraft/server/level/ServerLevel;)V}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.optimizations.command_blocks.BaseCommandBlockMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$resetCache",
              "raw": "servercore$resetCache(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.optimizations.command_blocks.BaseCommandBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "net.minecraft.core.HolderLookup$Provider",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$resetCache",
              "raw": "servercore$resetCache(Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/HolderLookup$Provider;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.mob_spawning.InfestedMobEffectMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "int",
                "net.minecraft.world.damagesource.DamageSource",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$enforceMobcap",
              "raw": "servercore$enforceMobcap(Lnet/minecraft/world/entity/LivingEntity;ILnet/minecraft/world/damagesource/DamageSource;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Ljava/util/function/ToIntFunction;applyAsInt(Ljava/lang/Object;)I, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.mob_spawning.BaseSpawnerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.entity.Entity"
              ],
              "name": "servercore$enforceMobcap",
              "raw": "servercore$enforceMobcap(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/entity/Entity;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/server/level/ServerLevel;getEntities(Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List;, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.misc.ServerGamePacketListenerImplMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ServerboundMovePlayerPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.server.level.ServerLevel",
                "double",
                "double",
                "double",
                "float",
                "float",
                "double",
                "double",
                "double"
              ],
              "name": "servercore$handleMovePlayer",
              "raw": "servercore$handleMovePlayer(Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/server/level/ServerLevel;DDDFFDDD)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/server/level/ServerPlayer;getBoundingBox()Lnet/minecraft/world/phys/AABB;, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.misc.ServerGamePacketListenerImplMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ServerboundMoveVehiclePacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.entity.Entity",
                "net.minecraft.server.level.ServerLevel",
                "double",
                "double",
                "double",
                "double",
                "double",
                "double",
                "float",
                "float",
                "double",
                "double",
                "double"
              ],
              "name": "servercore$handleMoveVehicle",
              "raw": "servercore$handleMoveVehicle(Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;DDDDDDFFDDD)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/phys/Vec3;lengthSqr()D, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.dynamic.PlayerListMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$updateSimulationDistance",
              "raw": "servercore$updateSimulationDistance(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.dynamic.PlayerListMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$updateViewDistance",
              "raw": "servercore$updateViewDistance(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.dynamic.MobCategoryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "servercore$getCapacity",
              "raw": "servercore$getCapacity(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.dynamic.MobCategoryMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "int",
                "java.lang.String",
                "int",
                "boolean",
                "boolean",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$onInit",
              "raw": "servercore$onInit(Ljava/lang/String;ILjava/lang/String;IZZILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.breeding_cap.tasks.VillagerMakeLoveMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.entity.npc.Villager",
                "long",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.entity.npc.Villager"
              ],
              "name": "servercore$enforceBreedCap",
              "raw": "servercore$enforceBreedCap(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;JLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/entity/npc/Villager;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/npc/Villager;eatAndDigestFood()V, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.breeding_cap.AllayMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$enforceBreedCap",
              "raw": "servercore$enforceBreedCap(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.activation_range.fixes.PistonMovingBlockEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "float",
                "net.minecraft.world.level.block.piston.PistonMovingBlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.entity.Entity"
              ],
              "name": "servercore$onPushEntity",
              "raw": "servercore$onPushEntity(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;FLnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/entity/Entity;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/world/entity/Entity;setDeltaMovement(DDD)V}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.activation_range.ServerLevelMixin",
            "method": {
              "argTypes": [
                "java.util.function.BooleanSupplier",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$activateEntities",
              "raw": "servercore$activateEntities(Ljava/util/function/BooleanSupplier;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/entity/EntityTickList;forEach(Ljava/util/function/Consumer;)V}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.activation_range.EntityMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "servercore$onTagAdded",
              "raw": "servercore$onTagAdded(Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.activation_range.EntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$onLoadNbt",
              "raw": "servercore$onLoadNbt(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.activation_range.EntityMixin",
            "method": {
              "argTypes": [
                "double",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$ignorePushingWhileInactive",
              "raw": "servercore$ignorePushingWhileInactive(DDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.activation_range.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.MoverType",
                "net.minecraft.world.phys.Vec3",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$onPistonMove",
              "raw": "servercore$onPistonMove(Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/world/entity/Entity;limitPistonMovement(Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3;}]"
            }
          },
          {
            "class": "me.wesley1808.servercore.mixin.features.activation_range.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.EntityType",
                "net.minecraft.world.level.Level",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "servercore$setupActivationStates",
              "raw": "servercore$setupActivationStates(Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[20.2.86,)"
      },
      "events": {
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "me.wesley1808.servercore.neoforge.common.ServerCoreNeoForge#onRegisterCommands"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "me.wesley1808.servercore.neoforge.common.ServerCoreNeoForge#onServerStarted"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppedEvent": [
          "me.wesley1808.servercore.neoforge.common.ServerCoreNeoForge#onServerStopped"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "me.wesley1808.servercore.neoforge.common.ServerCoreNeoForge#onTick"
        ],
        "net.neoforged.neoforge.server.permission.events.PermissionGatherEvent$Nodes": [
          "me.wesley1808.servercore.neoforge.common.ServerCoreNeoForge#handlePermissionNodesGather"
        ]
      },
      "info": {
        "authors": "Wesley1808",
        "classes": "612",
        "description": "A NeoForge mod that aims to optimize the minecraft server.\n",
        "displayName": "ServerCore",
        "file": "servercore-neoforge-1.5.5+1.21.1.jar",
        "license": "MIT",
        "package": "me.wesley1808.servercore.mixin",
        "version": "1.5.5+1.21.1"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "me.wesley1808.servercore.mixin.optimizations.sync_loads.BeeMixin",
          "me.wesley1808.servercore.mixin.features.ticking.VillagerMixin",
          "me.wesley1808.servercore.mixin.features.mob_spawning.ZombieMixin",
          "me.wesley1808.servercore.mixin.features.breeding_cap.ThrownEggMixin",
          "me.wesley1808.servercore.mixin.features.breeding_cap.AllayMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.VillagerMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.TadpoleMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.SpectralArrowMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.SkeletonHorseMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.MobMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.LivingEntityMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.ItemEntityMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.ChickenMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.BeeMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.ArrowMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.AreaEffectCloudMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.AgeableMobMixin"
        ],
        "net.minecraft.world.entity.Mob": [
          "me.wesley1808.servercore.mixin.optimizations.sync_loads.BeeMixin",
          "me.wesley1808.servercore.mixin.features.ticking.VillagerMixin",
          "me.wesley1808.servercore.mixin.features.mob_spawning.ZombieMixin",
          "me.wesley1808.servercore.mixin.features.breeding_cap.AllayMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.VillagerMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.TadpoleMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.SkeletonHorseMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.ChickenMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.BeeMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.AgeableMobMixin"
        ],
        "net.minecraft.world.entity.animal.Animal": [
          "me.wesley1808.servercore.mixin.optimizations.sync_loads.BeeMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.SkeletonHorseMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.ChickenMixin",
          "me.wesley1808.servercore.mixin.features.activation_range.inactive_ticks.BeeMixin"
        ]
      },
      "modifies": [
        "net.minecraft.server.MinecraftServer",
        "net.minecraft.server.level.ChunkHolder",
        "net.minecraft.server.level.ChunkMap",
        "net.minecraft.server.level.ServerChunkCache",
        "net.minecraft.server.level.ServerLevel",
        "net.minecraft.server.level.ServerPlayer",
        "net.minecraft.server.network.ServerGamePacketListenerImpl",
        "net.minecraft.server.players.PlayerList",
        "net.minecraft.world.effect.InfestedMobEffect",
        "net.minecraft.world.entity.AgeableMob",
        "net.minecraft.world.entity.AreaEffectCloud",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.ExperienceOrb",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.Mob",
        "net.minecraft.world.entity.MobCategory",
        "net.minecraft.world.entity.ai.behavior.AnimalMakeLove",
        "net.minecraft.world.entity.ai.behavior.SleepInBed",
        "net.minecraft.world.entity.ai.behavior.VillagerMakeLove",
        "net.minecraft.world.entity.ai.goal.BreedGoal",
        "net.minecraft.world.entity.ai.goal.GoalSelector",
        "net.minecraft.world.entity.ai.goal.RemoveBlockGoal",
        "net.minecraft.world.entity.ai.navigation.GroundPathNavigation",
        "net.minecraft.world.entity.animal.Bee",
        "net.minecraft.world.entity.animal.Cat",
        "net.minecraft.world.entity.animal.Chicken",
        "net.minecraft.world.entity.animal.Ocelot",
        "net.minecraft.world.entity.animal.allay.Allay",
        "net.minecraft.world.entity.animal.frog.Tadpole",
        "net.minecraft.world.entity.animal.horse.SkeletonHorse",
        "net.minecraft.world.entity.item.ItemEntity",
        "net.minecraft.world.entity.monster.Zombie",
        "net.minecraft.world.entity.npc.Villager",
        "net.minecraft.world.entity.projectile.Arrow",
        "net.minecraft.world.entity.projectile.SpectralArrow",
        "net.minecraft.world.entity.projectile.ThrownEgg",
        "net.minecraft.world.item.MapItem",
        "net.minecraft.world.level.BaseCommandBlock",
        "net.minecraft.world.level.BaseSpawner",
        "net.minecraft.world.level.NaturalSpawner",
        "net.minecraft.world.level.block.LiquidBlock",
        "net.minecraft.world.level.block.NetherPortalBlock",
        "net.minecraft.world.level.block.piston.PistonMovingBlockEntity",
        "net.minecraft.world.level.chunk.ChunkGenerator",
        "net.minecraft.world.level.chunk.LevelChunk",
        "net.minecraft.world.level.gameevent.DynamicGameEventListener",
        "net.minecraft.world.level.levelgen.structure.StructureCheck",
        "net.minecraft.world.level.pathfinder.PathFinder",
        "net.minecraft.world.level.saveddata.maps.MapItemSavedData"
      ],
      "summary": [
        "Custom Animals",
        "Custom Entities",
        "Custom Mobs",
        "Custom Server Commands",
        "Listens to Server Started Events",
        "Listens to Server Stopped Events",
        "Modifies Methods",
        "Runs Server Tick Logic",
        "Uses Access Transformers"
      ]
    },
    "shrink": {
      "dependencies": {
        "architectury": "[13.0.1,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21,)",
        "polylib": "[2100.0.3,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "net.gigabit101.shrink.neoforge.ClientRegistration#registerScreens"
        ]
      },
      "info": {
        "authors": "Gigabit101",
        "classes": "22",
        "description": "Honey I shrunk the children\n",
        "displayName": "Shrink",
        "file": "shrink-2.0.0.44-neoforge.jar",
        "license": "Insert License Here",
        "package": "net.gigabit101.shrink",
        "version": "2.0.0.44"
      },
      "inheritance": {
        "net.minecraft.world.item.Item": [
          "net.gigabit101.shrink.items.ItemShrinkDevice",
          "net.gigabit101.shrink.items.ItemShrinkBottle"
        ]
      },
      "summary": [
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Localization"
      ]
    },
    "signtastic": {
      "dependencies": {
        "mcjtylib": "[1.21-9.0.2,)",
        "neoforge": "[21.0,)"
      },
      "events": {
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "com.mcjty.signtastic.setup.ForgeEventHandlers#onPlayerInteract"
        ]
      },
      "info": {
        "authors": "McJty",
        "classes": "27",
        "description": "Signs signs and signs\n",
        "displayName": "SignTastic",
        "file": "signtastic-1.21-4.0.2.jar",
        "license": "MIT License https://github.com/McJtyMods/SignTastic/blob/1.21_neo/LICENSE",
        "package": "com.mcjty.signtastic",
        "version": "1.21-4.0.2"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.mcjty.signtastic.modules.signs.client.SignGui"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.mcjty.signtastic.modules.signs.client.SignRenderer"
        ],
        "net.minecraft.world.item.Item": [
          "com.mcjty.signtastic.modules.signs.items.SignConfiguratorItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.mcjty.signtastic.modules.signs.blocks.SlabSignBlock",
          "com.mcjty.signtastic.modules.signs.blocks.AbstractSignBlock",
          "com.mcjty.signtastic.modules.signs.blocks.BlockSignBlock",
          "com.mcjty.signtastic.modules.signs.blocks.SquareSignBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Listens to Right Click Block Events",
        "Localization",
        "Uses Access Transformers",
        "Uses Loot Modifiers"
      ]
    },
    "simple_weather": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "tv.soaryn.simpleweather.mixins.WeatherLevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.LightTexture",
                "float",
                "double",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "xycraft$cancelVanillaRenderSnowAndRain",
              "raw": "xycraft$cancelVanillaRenderSnowAndRain(Lnet/minecraft/client/renderer/LightTexture;FDDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BY], by=2, value=RETURN, ordinal=0}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.160,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "tv.soaryn.simpleweather.SimpleWeather$ModBus#setup"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "tv.soaryn.simpleweather.SimpleWeather$NeoBus#renderWeather"
        ],
        "net.neoforged.neoforge.client.event.RegisterParticleProvidersEvent": [
          "tv.soaryn.simpleweather.SimpleWeather$ModBus#onRegisterParticleProviders"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Load": [
          "tv.soaryn.simpleweather.SimpleWeather$NeoBus#updateTime"
        ]
      },
      "info": {
        "authors": "Soaryn",
        "classes": "13",
        "description": "An alternative, yet elegant solution to Minecraft's weather effects",
        "displayName": "Simple Weather",
        "file": "simple_weather-1.0.13.jar",
        "license": "All rights reserved",
        "package": "tv.soaryn.simpleweather",
        "version": "1.0.13"
      },
      "inheritance": {
        "net.minecraft.client.particle.Particle": [
          "tv.soaryn.simpleweather.particles.SnowParticle",
          "tv.soaryn.simpleweather.particles.RainParticle"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.LevelRenderer"
      ],
      "summary": [
        "Custom Particles",
        "Localization",
        "Modifies Methods",
        "Runs Client Tick Logic"
      ]
    },
    "simplemagnets": {
      "dependencies": {
        "minecraft": "[1.21,1.21.2)",
        "neoforge": "[21.0.78-beta,)",
        "supermartijn642configlib": "[1.1.6,)",
        "supermartijn642corelib": "[1.1.17,1.2.0)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "com.supermartijn642.simplemagnets.SimpleMagnetsClient#registerKeyBindings"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "com.supermartijn642.simplemagnets.DemagnetizationCoilAreaHighlighter#onDrawHighlight"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "com.supermartijn642.simplemagnets.ItemSpawnHandler#onEntitySpawn"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$StartTracking": [
          "com.supermartijn642.simplemagnets.MagnetItem#onStartTracking"
        ]
      },
      "info": {
        "authors": "SuperMartijn642",
        "classes": "60",
        "description": "Simple Magnets adds Magnets that pickup items around the player!",
        "displayName": "Simple Magnets",
        "file": "simplemagnets-1.1.12b-neoforge-mc1.21.jar",
        "license": "All rights reserved",
        "package": "com.supermartijn642.simplemagnets",
        "version": "1.1.12+b"
      },
      "inheritance": {
        "net.minecraft.world.item.Item": [
          "com.supermartijn642.simplemagnets.MagnetItem",
          "com.supermartijn642.simplemagnets.BasicMagnet",
          "com.supermartijn642.simplemagnets.AdvancedMagnet"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.supermartijn642.simplemagnets.DemagnetizationCoilBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Listens to Entity Join World Events",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "simpletomb": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.1.20,]"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RenderLevelStageEvent": [
          "com.lothrazar.simpletomb.event.ClientEvents#renderEvent"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "com.lothrazar.simpletomb.event.CommandEvents#onRegisterCommandsEvent"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "com.lothrazar.simpletomb.event.PlayerTombEvents#onLivingDeath"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDestroyBlockEvent": [
          "com.lothrazar.simpletomb.event.PlayerTombEvents#onDestroy"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "com.lothrazar.simpletomb.event.PlayerTombEvents#onPlayerDrops"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$LoadFromFile": [
          "com.lothrazar.simpletomb.event.PlayerTombEvents#onLoadFile"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "com.lothrazar.simpletomb.event.PlayerTombEvents#onPlayerLogged"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerRespawnEvent": [
          "com.lothrazar.simpletomb.event.PlayerTombEvents#onPlayerRespawn"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$SaveToFile": [
          "com.lothrazar.simpletomb.event.PlayerTombEvents#onSaveFile"
        ],
        "net.neoforged.neoforge.event.level.ExplosionEvent$Detonate": [
          "com.lothrazar.simpletomb.event.PlayerTombEvents#onDetonate"
        ]
      },
      "info": {
        "authors": "Lothrazar, Corail31",
        "classes": "38",
        "description": "When you die, a tomb is spawned in the world with your items, sneak on it to reclaim.  On respawn you get a key.\nThe key is not required to reclaim your tomb, but it will help you find the tomb.  For reports goto https://github.com/lothrazar/SimpleTomb/issues\n",
        "displayName": "Simple Tombstone",
        "file": "simpletomb-1.21.1-1.4.3.jar",
        "license": "LGPL2",
        "package": "com.lothrazar.simpletomb",
        "updateUrl": "https://raw.githubusercontent.com/Lothrazar/SimpleTomb/trunk/1.20/update.json",
        "version": "1.21.1-1.4.3"
      },
      "inheritance": {
        "net.minecraft.client.particle.Particle": [
          "com.lothrazar.simpletomb.particle.TransparentParticle",
          "com.lothrazar.simpletomb.particle.ParticleSmokeColumn",
          "com.lothrazar.simpletomb.particle.ParticleRotatingSmoke",
          "com.lothrazar.simpletomb.particle.ParticleGraveSoul",
          "com.lothrazar.simpletomb.particle.ParticleGraveSmoke",
          "com.lothrazar.simpletomb.particle.ParticleGhost",
          "com.lothrazar.simpletomb.particle.ParticleCasting",
          "com.lothrazar.simpletomb.particle.CustomParticle"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.lothrazar.simpletomb.block.RenderTomb"
        ],
        "net.minecraft.world.item.Item": [
          "com.lothrazar.simpletomb.item.GraveKeyItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.lothrazar.simpletomb.block.BlockTomb"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Particles",
        "Custom Server Commands",
        "Custom Tag Assignments",
        "Handles Explosion Detonation",
        "Listens to Entity Block Destruction Events",
        "Listens to Entity Death Events",
        "Listens to Entity Drop Events",
        "Listens to Player Login Events",
        "Localization",
        "Modifies World Rendering"
      ]
    },
    "simplylight": {
      "dependencies": {
        "neoforge": "[20.6,)"
      },
      "info": {
        "authors": "Flanks255",
        "classes": "42",
        "description": "Simple light, for a complicated world.",
        "displayName": "Simply Light",
        "file": "simplylight-1.5.1+1.21.1-b2.jar",
        "license": "MIT",
        "package": "com.flanks255.simplylight",
        "version": "1.5.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.flanks255.simplylight.gui.EdgeEditorGUI"
        ],
        "net.minecraft.data.DataProvider": [
          "com.flanks255.simplylight.data.SLItemTags",
          "com.flanks255.simplylight.data.ItemModels",
          "com.flanks255.simplylight.data.BlockStates",
          "com.flanks255.simplylight.data.SLBlockTags",
          "com.flanks255.simplylight.data.LangGen",
          "com.flanks255.simplylight.data.Recipes"
        ],
        "net.minecraft.world.item.Item": [
          "com.flanks255.simplylight.blocks.LampPostItem",
          "com.flanks255.simplylight.blocks.BaseBlockItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.flanks255.simplylight.blocks.LightBulb",
          "com.flanks255.simplylight.blocks.EdgeLight",
          "com.flanks255.simplylight.blocks.LampBase",
          "com.flanks255.simplylight.blocks.RodLamp",
          "com.flanks255.simplylight.blocks.LampPost",
          "com.flanks255.simplylight.blocks.ThinLamp",
          "com.flanks255.simplylight.blocks.Fixture",
          "com.flanks255.simplylight.blocks.LampBlock",
          "com.flanks255.simplylight.blocks.RotatableLamp"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Uses Data Generators"
      ]
    },
    "smartbrainlib": {
      "dependencies": {
        "minecraft": "[1.21.1,)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "net.tslat.smartbrainlib.example.boilerplate.SBLClient#registerEntityRenderers"
        ]
      },
      "info": {
        "authors": "Tslat",
        "classes": "130",
        "description": "A library mod for smarter Brains and easier usage of the Brain system.\n",
        "displayName": "SmartBrainLib",
        "file": "SmartBrainLib-neoforge-1.21.1-1.16.7.jar",
        "license": "MPL-2.0",
        "package": "net.tslat.smartbrainlib",
        "version": "1.16.7"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "net.tslat.smartbrainlib.example.SBLSkeleton"
        ],
        "net.minecraft.world.entity.Mob": [
          "net.tslat.smartbrainlib.example.SBLSkeleton"
        ]
      },
      "summary": [
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom Mobs",
        "Uses Access Transformers"
      ]
    },
    "sodium": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.caffeinemc.mods.sodium.mixin.workarounds.context_creation.WindowMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preSwapBuffers",
              "raw": "preSwapBuffers(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/mojang/blaze3d/systems/RenderSystem;flipFrame(J)V}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.workarounds.context_creation.WindowMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.platform.WindowEventHandler",
                "com.mojang.blaze3d.platform.ScreenManager",
                "com.mojang.blaze3d.platform.DisplayData",
                "java.lang.String",
                "java.lang.String",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "postContextReady",
              "raw": "postContextReady(Lcom/mojang/blaze3d/platform/WindowEventHandler;Lcom/mojang/blaze3d/platform/ScreenManager;Lcom/mojang/blaze3d/platform/DisplayData;Ljava/lang/String;Ljava/lang/String;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lorg/lwjgl/opengl/GL;createCapabilities()Lorg/lwjgl/opengl/GLCapabilities;}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.platform.neoforge.EntrypointMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.main.GameConfig",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "sodium$loadConfig",
              "raw": "sodium$loadConfig(Lnet/minecraft/client/main/GameConfig;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/Options;loadSelectedResourcePacks(Lnet/minecraft/server/packs/repository/PackRepository;)V}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.MinecraftMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "postResourceReload",
              "raw": "postResourceReload(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.MinecraftMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "postInit",
              "raw": "postInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.MinecraftMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "postRender",
              "raw": "postRender(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.MinecraftMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preRender",
              "raw": "preRender(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.TextureAtlasMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.texture.SpriteLoader$Preparations",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "sodium$deleteSpriteFinder",
              "raw": "sodium$deleteSpriteFinder(Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.world.LevelRendererMixin",
            "method": {
              "argTypes": [
                "java.util.function.Consumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "replaceBlockEntityIteration",
              "raw": "replaceBlockEntityIteration(Ljava/util/function/Consumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.world.LevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.llamalad7.mixinextras.sugar.ref.LocalBooleanRef"
              ],
              "name": "onRenderBlockEntities",
              "raw": "onRenderBlockEntities(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/llamalad7/mixinextras/sugar/ref/LocalBooleanRef;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=FIELD, target=Lnet/minecraft/client/renderer/LevelRenderer;globalBlockEntities:Ljava/util/Set;, ordinal=0}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.world.LevelRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onReload",
              "raw": "onReload(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.world.LevelRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onTerrainUpdateScheduled",
              "raw": "onTerrainUpdateScheduled(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.world.LevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientLevel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onWorldChanged",
              "raw": "onWorldChanged(Lnet/minecraft/client/multiplayer/ClientLevel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.world.LevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.Minecraft",
                "net.minecraft.client.renderer.entity.EntityRenderDispatcher",
                "net.minecraft.client.renderer.blockentity.BlockEntityRenderDispatcher",
                "net.minecraft.client.renderer.RenderBuffers",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher;Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher;Lnet/minecraft/client/renderer/RenderBuffers;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.immediate.consumer.SpriteCoordinateExpanderMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "net.minecraft.client.renderer.texture.TextureAtlasSprite",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.immediate.consumer.VertexMultiConsumerMixin$MultipleMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "checkFullStatus",
              "raw": "checkFullStatus(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.immediate.consumer.SheetedDecalTextureGeneratorMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.immediate.consumer.VertexMultiConsumerMixin$DoubleMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "checkFullStatus",
              "raw": "checkFullStatus(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.immediate.consumer.EntityOutlineGeneratorMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.render.VertexFormatMixin",
            "method": {
              "argTypes": [
                "java.util.List",
                "java.util.List",
                "it.unimi.dsi.fastutil.ints.IntList",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterInit",
              "raw": "afterInit(Ljava/util/List;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/IntList;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.world.map.ClientLevelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.chunk.LevelChunk",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "sodium$trackChunkUnload",
              "raw": "sodium$trackChunkUnload(Lnet/minecraft/world/level/chunk/LevelChunk;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.world.map.ClientChunkCacheMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "net.minecraft.network.FriendlyByteBuf",
                "net.minecraft.nbt.CompoundTag",
                "java.util.function.Consumer",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onChunkLoaded",
              "raw": "onChunkLoaded(IILnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/multiplayer/ClientLevel;onChunkLoaded(Lnet/minecraft/world/level/ChunkPos;)V}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.world.map.ClientChunkCacheMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.ChunkPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onChunkUnloaded",
              "raw": "onChunkUnloaded(Lnet/minecraft/world/level/ChunkPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/multiplayer/ClientChunkCache$Storage;replace(ILnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/world/level/chunk/LevelChunk;}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.world.map.ClientPacketListenerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.protocol.game.ClientboundForgetLevelChunkPacket",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onChunkUnloadPacket",
              "raw": "onChunkUnloadPacket(Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.world.map.ClientPacketListenerMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "net.minecraft.network.protocol.game.ClientboundLightUpdatePacketData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onLightDataReceived",
              "raw": "onLightDataReceived(IILnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.world.biome.ClientLevelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientPacketListener",
                "net.minecraft.client.multiplayer.ClientLevel$ClientLevelData",
                "net.minecraft.resources.ResourceKey",
                "net.minecraft.core.Holder",
                "int",
                "int",
                "java.util.function.Supplier",
                "net.minecraft.client.renderer.LevelRenderer",
                "boolean",
                "long",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "captureSeed",
              "raw": "captureSeed(Lnet/minecraft/client/multiplayer/ClientPacketListener;Lnet/minecraft/client/multiplayer/ClientLevel$ClientLevelData;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Holder;IILjava/util/function/Supplier;Lnet/minecraft/client/renderer/LevelRenderer;ZJLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.model.colors.ItemColorsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.color.item.ItemColor",
                "[",
                "net.minecraft.world.level.ItemLike",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preRegisterColor",
              "raw": "preRegisterColor(Lnet/minecraft/client/color/item/ItemColor;[Lnet/minecraft/world/level/ItemLike;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.model.colors.BlockColorsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.color.block.BlockColor",
                "[",
                "net.minecraft.world.level.block.Block",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preRegisterColorProvider",
              "raw": "preRegisterColorProvider(Lnet/minecraft/client/color/block/BlockColor;[Lnet/minecraft/world/level/block/Block;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.core.model.quad.BakedQuadMixin",
            "method": {
              "argTypes": [
                "[",
                "int",
                "int",
                "net.minecraft.core.Direction",
                "net.minecraft.client.renderer.texture.TextureAtlasSprite",
                "boolean",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init([IILnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;ZZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.shader.uniform.ShaderInstanceMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "initCache",
              "raw": "initCache(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsInterpolationMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.texture.SpriteContents",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "assignParent",
              "raw": "assignParent(Lnet/minecraft/client/renderer/texture/SpriteContents;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.textures.animations.tracking.TextureAtlasMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "preReturnSprite",
              "raw": "preReturnSprite(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.textures.animations.tracking.SpriteContentsTickerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "postTick",
              "raw": "postTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.textures.animations.tracking.SpriteContentsTickerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preTick",
              "raw": "preTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.textures.animations.tracking.SpriteContentsTickerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.texture.SpriteContents",
                "net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture",
                "net.minecraft.client.renderer.texture.SpriteContents$InterpolationData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "assignParent",
              "raw": "assignParent(Lnet/minecraft/client/renderer/texture/SpriteContents;Lnet/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture;Lnet/minecraft/client/renderer/texture/SpriteContents$InterpolationData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.textures.animations.tracking.TextureSheetParticleMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.texture.TextureAtlasSprite",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "afterSetSprite",
              "raw": "afterSetSprite(Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.textures.animations.tracking.ModelBlockRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockAndTintGetter",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "com.mojang.blaze3d.vertex.PoseStack$Pose",
                "net.minecraft.client.renderer.block.model.BakedQuad",
                "float",
                "float",
                "float",
                "float",
                "int",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preRenderQuad",
              "raw": "preRenderQuad(Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFFIIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.textures.animations.tracking.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "int",
                "int",
                "net.minecraft.client.renderer.texture.TextureAtlasSprite",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preDrawSprite",
              "raw": "preDrawSprite(IIIIILnet/minecraft/client/renderer/texture/TextureAtlasSprite;FFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.textures.animations.tracking.GuiGraphicsMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "int",
                "int",
                "net.minecraft.client.renderer.texture.TextureAtlasSprite",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preDrawSprite",
              "raw": "preDrawSprite(IIIIILnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.gui.hooks.console.GameRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRender",
              "raw": "onRender(Lnet/minecraft/client/DeltaTracker;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/gui/GuiGraphics;flush()V}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.gui.hooks.settings.OptionsScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "open",
              "raw": "open(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.options.render_layers.ItemBlockRenderTypesMixin",
            "method": {
              "argTypes": [
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onSetFancyGraphicsOrBetter",
              "raw": "onSetFancyGraphicsOrBetter(ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.particle.SingleQuadParticleMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "org.joml.Quaternionf",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderRotatedQuad",
              "raw": "renderRotatedQuad(Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Quaternionf;FFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.gui.font.BakedGlyphMixin",
            "method": {
              "argTypes": [
                "boolean",
                "float",
                "float",
                "org.joml.Matrix4f",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "float",
                "float",
                "float",
                "float",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "drawFast",
              "raw": "drawFast(ZFFLorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.gui.outlines.LevelRendererMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "double",
                "double",
                "double",
                "double",
                "double",
                "double",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "drawBoxFast",
              "raw": "drawBoxFast(Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.world.sky.LevelRendererMixin",
            "method": {
              "argTypes": [
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "net.minecraft.client.Camera",
                "boolean",
                "java.lang.Runnable",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "preRenderSky",
              "raw": "preRenderSky(Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.world.clouds.LevelRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClose",
              "raw": "onClose(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.world.clouds.LevelRendererMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onReload",
              "raw": "onReload(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.world.clouds.LevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onReload",
              "raw": "onReload(Lnet/minecraft/server/packs/resources/ResourceManager;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.world.clouds.LevelRendererMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "float",
                "double",
                "double",
                "double",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderClouds",
              "raw": "renderClouds(Lcom/mojang/blaze3d/vertex/PoseStack;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FDDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/renderer/DimensionSpecialEffects;getCloudHeight()F}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.compositing.RenderTargetMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "blitToScreen",
              "raw": "blitToScreen(IIZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.frapi.ItemRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemDisplayContext",
                "boolean",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "int",
                "net.minecraft.client.resources.model.BakedModel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeRenderItem",
              "raw": "beforeRenderItem(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/resources/model/BakedModel;isCustomRenderer()Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.frapi.ModelBlockRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockAndTintGetter",
                "net.minecraft.client.resources.model.BakedModel",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "com.mojang.blaze3d.vertex.PoseStack",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "boolean",
                "net.minecraft.util.RandomSource",
                "long",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRender",
              "raw": "onRender(Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;JILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.entity.CubeMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack$Pose",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onCompile",
              "raw": "onCompile(Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/mojang/blaze3d/vertex/PoseStack$Pose;pose()Lorg/joml/Matrix4f;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.entity.shadows.EntityRenderDispatcherMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack$Pose",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "net.minecraft.world.level.chunk.ChunkAccess",
                "net.minecraft.world.level.LevelReader",
                "net.minecraft.core.BlockPos",
                "double",
                "double",
                "double",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderShadowPartFast",
              "raw": "renderShadowPartFast(Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;DDDFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.render.model.block.ModelBlockRendererMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack$Pose",
                "com.mojang.blaze3d.vertex.VertexConsumer",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.client.resources.model.BakedModel",
                "float",
                "float",
                "float",
                "int",
                "int",
                "net.neoforged.neoforge.client.model.data.ModelData",
                "net.minecraft.client.renderer.RenderType",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderFast",
              "raw": "renderFast(Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/BakedModel;FFFIILnet/neoforged/neoforge/client/model/data/ModelData;Lnet/minecraft/client/renderer/RenderType;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.model.MultiPartBakedModelMixin",
            "method": {
              "argTypes": [
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "storeClassInfo",
              "raw": "storeClassInfo(Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.caffeinemc.mods.sodium.mixin.features.world.biome.BiomeMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "embeddium": "[0.0.1,)",
        "minecraft": "1.21.1",
        "neoforge": "[21.1.82,)"
      },
      "info": {
        "authors": "JellySquid (jellysquid3), IMS212",
        "classes": "572",
        "description": "Sodium is a powerful rendering engine for Minecraft which improves frame rates and reduces lag spikes.\n",
        "displayName": "Sodium",
        "file": "sodium-neoforge-0.6.7+mc1.21.1.jar",
        "license": "Polyform-Shield-1.0.0",
        "package": "net.caffeinemc.mods.sodium.mixin",
        "version": "0.6.7+mc1.21.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.caffeinemc.mods.sodium.client.gui.SodiumOptionsGUI",
          "net.caffeinemc.mods.sodium.client.gui.screen.ConfigCorruptedScreen",
          "net.caffeinemc.mods.sodium.mixin.features.gui.hooks.settings.OptionsScreenMixin"
        ],
        "net.minecraft.client.particle.Particle": [
          "net.caffeinemc.mods.sodium.mixin.features.textures.animations.tracking.TextureSheetParticleMixin",
          "net.caffeinemc.mods.sodium.mixin.features.render.particle.SingleQuadParticleMixin"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.caffeinemc.mods.sodium.mixin.features.options.render_layers.LeavesBlockMixin"
        ]
      },
      "modifies": [
        "com.mojang.blaze3d.pipeline.RenderTarget",
        "com.mojang.blaze3d.platform.NativeImage",
        "com.mojang.blaze3d.platform.Window",
        "com.mojang.blaze3d.systems.RenderSystem",
        "com.mojang.blaze3d.vertex.BufferBuilder",
        "com.mojang.blaze3d.vertex.MeshData",
        "com.mojang.blaze3d.vertex.PoseStack",
        "com.mojang.blaze3d.vertex.SheetedDecalTextureGenerator",
        "com.mojang.blaze3d.vertex.VertexConsumer",
        "com.mojang.blaze3d.vertex.VertexFormat",
        "com.mojang.blaze3d.vertex.VertexMultiConsumer$Double",
        "com.mojang.blaze3d.vertex.VertexMultiConsumer$Multiple",
        "com.mojang.blaze3d.vertex.VertexSorting",
        "net.caffeinemc.mods.sodium.client.render.frapi.render.AbstractBlockRenderContext",
        "net.caffeinemc.mods.sodium.client.world.LevelSlice",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.color.block.BlockColors",
        "net.minecraft.client.color.item.ItemColors",
        "net.minecraft.client.gui.Gui",
        "net.minecraft.client.gui.GuiGraphics",
        "net.minecraft.client.gui.components.DebugScreenOverlay",
        "net.minecraft.client.gui.font.glyphs.BakedGlyph",
        "net.minecraft.client.gui.screens.LevelLoadingScreen",
        "net.minecraft.client.gui.screens.options.OptionsScreen",
        "net.minecraft.client.model.geom.ModelPart",
        "net.minecraft.client.model.geom.ModelPart$Cube",
        "net.minecraft.client.multiplayer.ClientChunkCache",
        "net.minecraft.client.multiplayer.ClientLevel",
        "net.minecraft.client.multiplayer.ClientPacketListener",
        "net.minecraft.client.multiplayer.LevelLoadStatusManager",
        "net.minecraft.client.particle.SingleQuadParticle",
        "net.minecraft.client.particle.TextureSheetParticle",
        "net.minecraft.client.renderer.FogRenderer",
        "net.minecraft.client.renderer.GameRenderer",
        "net.minecraft.client.renderer.ItemBlockRenderTypes",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.OutlineBufferSource$EntityOutlineGenerator",
        "net.minecraft.client.renderer.RenderBuffers",
        "net.minecraft.client.renderer.ShaderInstance",
        "net.minecraft.client.renderer.SpriteCoordinateExpander",
        "net.minecraft.client.renderer.block.ModelBlockRenderer",
        "net.minecraft.client.renderer.block.model.BakedQuad",
        "net.minecraft.client.renderer.culling.Frustum",
        "net.minecraft.client.renderer.entity.EntityRenderDispatcher",
        "net.minecraft.client.renderer.entity.EntityRenderer",
        "net.minecraft.client.renderer.entity.ItemRenderer",
        "net.minecraft.client.renderer.texture.MipmapGenerator",
        "net.minecraft.client.renderer.texture.SpriteContents",
        "net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture",
        "net.minecraft.client.renderer.texture.SpriteContents$FrameInfo",
        "net.minecraft.client.renderer.texture.SpriteContents$InterpolationData",
        "net.minecraft.client.renderer.texture.SpriteContents$Ticker",
        "net.minecraft.client.renderer.texture.TextureAtlas",
        "net.minecraft.client.renderer.texture.TextureAtlasSprite",
        "net.minecraft.client.resources.model.BakedModel",
        "net.minecraft.client.resources.model.MultiPartBakedModel",
        "net.minecraft.client.resources.model.SimpleBakedModel",
        "net.minecraft.client.resources.model.WeightedBakedModel",
        "net.minecraft.core.Direction",
        "net.minecraft.util.SimpleBitStorage",
        "net.minecraft.util.ZeroBitStorage",
        "net.minecraft.world.level.biome.Biome",
        "net.minecraft.world.level.block.LeavesBlock",
        "net.minecraft.world.level.block.entity.BlockEntityType",
        "net.minecraft.world.level.chunk.PalettedContainer",
        "net.neoforged.neoforge.client.ChunkRenderTypeSet",
        "net.neoforged.neoforge.client.ClientHooks",
        "net.neoforged.neoforge.client.model.data.ModelData",
        "net.neoforged.neoforge.common.world.AuxiliaryLightManager",
        "net.neoforged.neoforge.resource.ResourcePackLoader"
      ],
      "summary": [
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Particles",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "sodiumdynamiclights": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "toni.sodiumdynamiclights.mixin.sodium.SodiumOptionsGuiMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "inject$dynLightsPage",
              "raw": "inject$dynLightsPage(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.sodium.LightDataAccessMixin",
            "method": {
              "argTypes": [
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "sodiumdynamiclights$getLightmap",
              "raw": "sodiumdynamiclights$getLightmap(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.sodium.FlatLightPipelineMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "net.minecraft.core.Direction",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "int",
                "int"
              ],
              "name": "sodiumdynamiclights$getLightmap",
              "raw": "sodiumdynamiclights$getLightmap(Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;II)V"
            },
            "params": {
              "at": "[{value=RETURN, ordinal=1}]",
              "cancellable": "true"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.sodium.ArrayLightDataCacheMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "sodiumdynamiclights$storeLightPos",
              "raw": "sodiumdynamiclights$storeLightPos(IIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.lightsource.PrimedTntEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onTick",
              "raw": "onTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.lightsource.PrimedTntEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.EntityType",
                "net.minecraft.world.level.Level",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onNew",
              "raw": "onNew(Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.lightsource.EntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRemove",
              "raw": "onRemove(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.lightsource.EntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onTick",
              "raw": "onTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.lightsource.BlockEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRemoved",
              "raw": "onRemoved(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.lightsource.AbstractMinecartEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onTick",
              "raw": "onTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.fabric.AoCalculatorMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockAndTintGetter",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetLightmapCoordinates",
              "raw": "onGetLightmapCoordinates(Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.WorldRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "beforeRender",
              "raw": "beforeRender(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.MinecraftClientMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.ClientLevel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onUpdateLevelInEngines",
              "raw": "onUpdateLevelInEngines(Lnet/minecraft/client/multiplayer/ClientLevel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.LevelMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "boolean",
                "net.minecraft.world.level.block.entity.TickingBlockEntity"
              ],
              "name": "onBlockEntityTick",
              "raw": "onBlockEntityTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;ZLnet/minecraft/world/level/block/entity/TickingBlockEntity;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/world/level/block/entity/TickingBlockEntity;tick()V}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.EntityRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetBlockLight",
              "raw": "onGetBlockLight(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.DebugScreenOverlayMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetLeftText",
              "raw": "onGetLeftText(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.CommonLevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockAndTintGetter",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onGetLightmapCoordinates",
              "raw": "onGetLightmapCoordinates(Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]",
              "cancellable": "true"
            }
          },
          {
            "class": "toni.sodiumdynamiclights.mixin.ClientLevelMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.world.entity.Entity$RemovalReason",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onFinishRemovingEntity",
              "raw": "onFinishRemovingEntity(ILnet/minecraft/world/entity/Entity$RemovalReason;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "toni.sodiumdynamiclights.SodiumDynamicLights#clientSetup"
        ],
        "net.neoforged.neoforge.event.AddReloadListenerEvent": [
          "toni.sodiumdynamiclights.SodiumDynamicLights#addReloadListeners"
        ]
      },
      "info": {
        "authors": "toni, LambdAurora",
        "classes": "43",
        "description": "Fork of LambDynLights to work with Sodium on Neoforge 1.21+",
        "displayName": "Sodium Dynamic Lights",
        "file": "sodiumdynamiclights-neoforge-1.0.10-1.21.1.jar",
        "license": "MIT",
        "package": "toni.sodiumdynamiclights",
        "version": "1.0.9"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "toni.sodiumdynamiclights.mixin.lightsource.PrimedTntEntityMixin",
          "toni.sodiumdynamiclights.mixin.lightsource.PlayerEntityMixin",
          "toni.sodiumdynamiclights.mixin.lightsource.LivingEntityMixin",
          "toni.sodiumdynamiclights.mixin.lightsource.BlockAttachedEntityMixin",
          "toni.sodiumdynamiclights.mixin.lightsource.AbstractMinecartEntityMixin",
          "toni.sodiumdynamiclights.mixin.lightsource.AbstractHurtingProjectileEntityMixin"
        ]
      },
      "modifies": [
        "me.jellysquid.mods.sodium.client.model.light.data.ArrayLightDataCache",
        "me.jellysquid.mods.sodium.client.model.light.data.LightDataAccess",
        "me.jellysquid.mods.sodium.client.model.light.flat.FlatLightPipeline",
        "net.caffeinemc.mods.sodium.client.gui.SodiumOptionsGUI",
        "net.caffeinemc.mods.sodium.client.model.light.data.ArrayLightDataCache",
        "net.caffeinemc.mods.sodium.client.model.light.data.LightDataAccess",
        "net.caffeinemc.mods.sodium.client.model.light.flat.FlatLightPipeline",
        "net.fabricmc.fabric.impl.client.indigo.renderer.aocalc.AoCalculator",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.gui.components.DebugScreenOverlay",
        "net.minecraft.client.multiplayer.ClientLevel",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.entity.EntityRenderer",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.EntityType",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.decoration.BlockAttachedEntity",
        "net.minecraft.world.entity.item.PrimedTnt",
        "net.minecraft.world.entity.player.Player",
        "net.minecraft.world.entity.projectile.AbstractHurtingProjectile",
        "net.minecraft.world.entity.vehicle.AbstractMinecart",
        "net.minecraft.world.level.Level",
        "net.minecraft.world.level.block.entity.BlockEntity",
        "net.minecraft.world.level.block.entity.BlockEntityType"
      ],
      "summary": [
        "Adds Reload Listeners",
        "Custom Entities",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "sodiumoptionsapi": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "toni.sodiumoptionsapi.mixin.sodium.SodiumOptionsGuiMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "inject$dynLightsPage",
              "raw": "inject$dynLightsPage(Lnet/minecraft/client/gui/screens/Screen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "toni.sodiumoptionsapi.mixin.sodium.ReesesVideoOptionsScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onRender",
              "raw": "onRender(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "toni.sodiumoptionsapi.mixin.sodium.ReesesVideoOptionsScreenMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.caffeinemc.mods.sodium.client.util.Dim2i"
              ],
              "name": "setLogoDim",
              "raw": "setLogoDim(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/caffeinemc/mods/sodium/client/util/Dim2i;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "toni.sodiumoptionsapi.mixin.sodium.ReesesVideoOptionsScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.screens.Screen",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "inject$registerTextures",
              "raw": "inject$registerTextures(Lnet/minecraft/client/gui/screens/Screen;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "toni.sodiumoptionsapi.mixin.sodium.OptionPageMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.chat.Component",
                "com.google.common.collect.ImmutableList",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onInit",
              "raw": "onInit(Lnet/minecraft/network/chat/Component;Lcom/google/common/collect/ImmutableList;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lcom/google/common/collect/ImmutableList;builder()Lcom/google/common/collect/ImmutableList$Builder;}]"
            }
          },
          {
            "class": "toni.sodiumoptionsapi.mixin.sodium.OptionGroupBuilderMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onBuild",
              "raw": "onBuild(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "toni.sodiumoptionsapi.mixin.sodium.FlatButtonWidgetOffsetMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.invoke.arg.Args",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "redirectDrawString",
              "raw": "redirectDrawString(Lorg/spongepowered/asm/mixin/injection/invoke/arg/Args;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,)",
        "reeses_sodium_options": "*"
      },
      "info": {
        "authors": "toni",
        "classes": "24",
        "description": "Cross-platform Sodium config event API for Sodium 1.21 and Embeddium 1.20",
        "displayName": "Sodium Options API",
        "file": "sodiumoptionsapi-neoforge-1.0.10-1.21.1.jar",
        "license": "LGPLv3",
        "package": "toni.sodiumoptionsapi",
        "version": "1.0.10"
      },
      "modifies": [
        "me.flashyreese.mods.reeses_sodium_options.client.gui.SodiumVideoOptionsScreen",
        "net.caffeinemc.mods.sodium.client.gui.SodiumOptionsGUI",
        "net.caffeinemc.mods.sodium.client.gui.options.OptionGroup",
        "net.caffeinemc.mods.sodium.client.gui.options.OptionGroup$Builder",
        "net.caffeinemc.mods.sodium.client.gui.options.OptionPage",
        "net.caffeinemc.mods.sodium.client.gui.widgets.FlatButtonWidget"
      ],
      "summary": [
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "solcarrot": {
      "dependencies": {
        "neoforge": "[21.1.1,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "com.cazsius.solcarrot.client.FoodItems#onConfigLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "com.cazsius.solcarrot.client.FoodItems#onConfigUpdate",
          "com.cazsius.solcarrot.SOLCarrotConfig#onConfigReload"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "com.cazsius.solcarrot.tracking.CapabilityHandler$Setup#registerCapabilities"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "com.cazsius.solcarrot.item.SOLCarrotItems#buildCreativeTabs"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "com.cazsius.solcarrot.command.FoodListCommand#register"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingEntityUseItemEvent$Finish": [
          "com.cazsius.solcarrot.tracking.FoodTracker#onFoodEaten"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "com.cazsius.solcarrot.client.TooltipHandler#onItemTooltip"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$Clone": [
          "com.cazsius.solcarrot.tracking.CapabilityHandler#onClone",
          "com.cazsius.solcarrot.tracking.MaxHealthHandler#onPlayerClone"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": [
          "com.cazsius.solcarrot.tracking.CapabilityHandler#onPlayerDimensionChange"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "com.cazsius.solcarrot.tracking.CapabilityHandler#onPlayerLogin",
          "com.cazsius.solcarrot.tracking.MaxHealthHandler#onPlayerLogin"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerRespawnEvent": [
          "com.cazsius.solcarrot.tracking.CapabilityHandler#onPlayerRespawn"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.cazsius.solcarrot.SOLCarrot#setUp"
        ]
      },
      "info": {
        "classes": "54",
        "description": "A mod designed to encourage dietary variety!\n\nIt does so by rewarding the player for eating a variety of foods instead of punishing them for failing to diversify.\nInstead of using the stick, we use the carrot!\n",
        "displayName": "Spice of Life: Carrot Edition",
        "file": "solcarrot-1.21.1-1.16.5.jar",
        "license": "LGPL-2.1",
        "package": "com.cazsius.solcarrot",
        "version": "1.16.5"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.cazsius.solcarrot.client.gui.FoodBookScreen"
        ],
        "net.minecraft.world.item.Item": [
          "com.cazsius.solcarrot.item.FoodBookItem"
        ]
      },
      "summary": [
        "Auto-reloads Config Files",
        "Custom Advancements",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Network Packets",
        "Custom Server Commands",
        "Has Capability Providers",
        "Listens to Dimension Change Events",
        "Listens to Player Login Events",
        "Localization"
      ]
    },
    "sophisticatedbackpacks": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.2)",
        "neoforge": "[21.1.0,)",
        "sophisticatedcore": "[1.2.9,)"
      },
      "info": {
        "authors": "P3pp3rF1y, Ridanisaurus",
        "classes": "283",
        "description": "Fancy and functional backpacks.",
        "displayName": "Sophisticated Backpacks",
        "file": "sophisticatedbackpacks-1.21.1-3.23.4.1197.jar",
        "license": "All Rights Reserved",
        "package": "net.p3pp3rf1y.sophisticatedbackpacks",
        "version": "3.23.4"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.p3pp3rf1y.sophisticatedbackpacks.client.gui.BackpackSettingsScreen",
          "net.p3pp3rf1y.sophisticatedbackpacks.client.gui.BackpackScreen"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "net.p3pp3rf1y.sophisticatedbackpacks.client.render.BackpackItemStackRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "net.p3pp3rf1y.sophisticatedbackpacks.client.render.BackpackBlockEntityRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "net.p3pp3rf1y.sophisticatedbackpacks.client.render.BackpackDynamicModel$BackpackBakedModel"
        ],
        "net.minecraft.data.DataProvider": [
          "net.p3pp3rf1y.sophisticatedbackpacks.data.DataGenerators$1",
          "net.p3pp3rf1y.sophisticatedbackpacks.data.ItemTagProvider",
          "net.p3pp3rf1y.sophisticatedbackpacks.data.SBLootTableProvider",
          "net.p3pp3rf1y.sophisticatedbackpacks.data.SBPRecipeProvider",
          "net.p3pp3rf1y.sophisticatedbackpacks.data.SBLootModifierProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "net.p3pp3rf1y.sophisticatedbackpacks.upgrades.everlasting.EverlastingBackpackItemEntity"
        ],
        "net.minecraft.world.item.Item": [
          "net.p3pp3rf1y.sophisticatedbackpacks.backpack.BackpackItem",
          "net.p3pp3rf1y.sophisticatedbackpacks.upgrades.refill.RefillUpgradeItem",
          "net.p3pp3rf1y.sophisticatedbackpacks.upgrades.deposit.DepositUpgradeItem",
          "net.p3pp3rf1y.sophisticatedbackpacks.upgrades.anvil.AnvilUpgradeItem",
          "net.p3pp3rf1y.sophisticatedbackpacks.upgrades.inception.InceptionUpgradeItem",
          "net.p3pp3rf1y.sophisticatedbackpacks.upgrades.toolswapper.ToolSwapperUpgradeItem",
          "net.p3pp3rf1y.sophisticatedbackpacks.upgrades.everlasting.EverlastingUpgradeItem",
          "net.p3pp3rf1y.sophisticatedbackpacks.upgrades.restock.RestockUpgradeItem",
          "net.p3pp3rf1y.sophisticatedbackpacks.upgrades.smithing.SmithingUpgradeItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "net.p3pp3rf1y.sophisticatedbackpacks.crafting.SmithingBackpackUpgradeRecipe",
          "net.p3pp3rf1y.sophisticatedbackpacks.crafting.BasicBackpackRecipe",
          "net.p3pp3rf1y.sophisticatedbackpacks.crafting.BackpackDyeRecipe",
          "net.p3pp3rf1y.sophisticatedbackpacks.crafting.BackpackUpgradeRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.p3pp3rf1y.sophisticatedbackpacks.backpack.BackpackBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "net.p3pp3rf1y.sophisticatedbackpacks.backpack.BackpackStorage"
        ],
        "net.neoforged.neoforge.client.model.geometry.IGeometryLoader": [
          "net.p3pp3rf1y.sophisticatedbackpacks.client.render.BackpackDynamicModel$Loader"
        ]
      },
      "summary": [
        "Custom 3D Models",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Model Loaders",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Localization",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "sophisticatedcore": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.2)",
        "neoforge": "[21.1.0,)"
      },
      "info": {
        "authors": "P3pp3rF1y",
        "classes": "564",
        "description": "A library / shared functionality mod for Sophisticated Storage and Backpacks",
        "displayName": "Sophisticated Core",
        "file": "sophisticatedcore-1.21.1-1.2.10.863.jar",
        "license": "All Rights Reserved",
        "package": "net.p3pp3rf1y.sophisticatedcore",
        "version": "1.2.10"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "net.p3pp3rf1y.sophisticatedcore.client.gui.SettingsScreen",
          "net.p3pp3rf1y.sophisticatedcore.client.gui.StorageScreenBase"
        ],
        "net.minecraft.client.particle.Particle": [
          "net.p3pp3rf1y.sophisticatedcore.upgrades.jukebox.JukeboxUpgradeNoteParticle"
        ],
        "net.minecraft.data.DataProvider": [
          "net.p3pp3rf1y.sophisticatedcore.data.SCFluidTagsProvider",
          "net.p3pp3rf1y.sophisticatedcore.data.SCRecipeProvider"
        ],
        "net.minecraft.world.item.Item": [
          "net.p3pp3rf1y.sophisticatedcore.upgrades.crafting.CraftingUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.cooking.AutoBlastingUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.cooking.AutoSmeltingUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.cooking.SmeltingUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.cooking.SmokingUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.cooking.AutoSmokingUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.cooking.BlastingUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.pump.PumpUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.pickup.PickupUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.battery.BatteryUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.magnet.MagnetUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.xppump.XpPumpUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.voiding.VoidUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.stonecutter.StonecutterUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.UpgradeItemBase",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.compacting.CompactingUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.feeding.FeedingUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.filter.FilterUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.infinity.InfinityUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.tank.TankUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.jukebox.JukeboxUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.upgrades.stack.StackUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.compat.chipped.BlockTransformationUpgradeItem",
          "net.p3pp3rf1y.sophisticatedcore.util.ItemBase",
          "net.p3pp3rf1y.sophisticatedcore.util.BlockItemBase"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "net.p3pp3rf1y.sophisticatedcore.crafting.StorageDyeRecipeBase",
          "net.p3pp3rf1y.sophisticatedcore.crafting.UpgradeNextTierRecipe",
          "net.p3pp3rf1y.sophisticatedcore.crafting.UpgradeClearRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.p3pp3rf1y.sophisticatedcore.util.BlockBase"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "net.p3pp3rf1y.sophisticatedcore.settings.SettingsTemplateStorage"
        ]
      },
      "summary": [
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Particles",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Localization",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "soulbound": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.imoonday.soulbound.mixin.InventoryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "soulbound$restoreItems",
              "raw": "soulbound$restoreItems(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.imoonday.soulbound.mixin.InventoryMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "soulbound$reserveItems",
              "raw": "soulbound$reserveItems(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.imoonday.soulbound.mixin.BackpackUtilsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "handleOnPlayerDeath",
              "raw": "handleOnPlayerDeath(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.0,1.22)",
        "neoforge": "[21,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "com.imoonday.soulbound.Config#onLoad"
        ]
      },
      "info": {
        "authors": "iMoonDay",
        "classes": "4",
        "description": "Enchantment that prevents items from being dropped when the player dies",
        "displayName": "Soulbound",
        "file": "soulbound-neoforge-1.0.1+1.21.1.jar",
        "license": "MIT",
        "package": "com.imoonday.soulbound",
        "version": "1.0.1"
      },
      "modifies": [
        "com.tiviacz.travelersbackpack.util.BackpackDeathHelper",
        "net.minecraft.world.entity.player.Inventory"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods"
      ]
    },
    "spark": {
      "dependencies": {
        "neoforge": "[20,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "me.lucko.spark.neoforge.NeoForgeTickReporter$Client#onTickEnd"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "me.lucko.spark.neoforge.NeoForgeTickReporter$Client#onTickStart",
          "me.lucko.spark.neoforge.NeoForgeTickHook$Client#onTickStart"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientCommandsEvent": [
          "me.lucko.spark.neoforge.plugin.NeoForgeClientSparkPlugin#onCommandRegister"
        ],
        "net.neoforged.neoforge.event.RegisterCommandsEvent": [
          "me.lucko.spark.neoforge.plugin.NeoForgeServerSparkPlugin#onCommandRegister"
        ],
        "net.neoforged.neoforge.event.server.ServerAboutToStartEvent": [
          "me.lucko.spark.neoforge.NeoForgeSparkMod#serverInit"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppingEvent": [
          "me.lucko.spark.neoforge.plugin.NeoForgeServerSparkPlugin#onDisable"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Post": [
          "me.lucko.spark.neoforge.NeoForgeTickReporter$Server#onTickEnd"
        ],
        "net.neoforged.neoforge.event.tick.ServerTickEvent$Pre": [
          "me.lucko.spark.neoforge.NeoForgeTickHook$Server#onTickStart",
          "me.lucko.spark.neoforge.NeoForgeTickReporter$Server#onTickStart"
        ],
        "net.neoforged.neoforge.server.permission.events.PermissionGatherEvent$Nodes": [
          "me.lucko.spark.neoforge.plugin.NeoForgeServerSparkPlugin#onPermissionGather"
        ]
      },
      "info": {
        "classes": "1624",
        "description": "spark is a performance profiling plugin/mod for Minecraft clients, servers and proxies.",
        "displayName": "spark",
        "file": "spark-1.10.109-neoforge.jar",
        "license": "GPLv3",
        "package": "me.lucko.spark.api",
        "version": "1.10.109"
      },
      "inheritance": {
        "com.mojang.brigadier.Command": [
          "me.lucko.spark.neoforge.plugin.NeoForgeServerSparkPlugin",
          "me.lucko.spark.neoforge.plugin.NeoForgeClientSparkPlugin"
        ]
      },
      "summary": [
        "Custom Client Commands",
        "Custom Server Commands",
        "Has Commands",
        "Listens to Server About to Start Events",
        "Listens to Server Stopping Events",
        "Runs Client Tick Logic",
        "Runs Server Tick Logic",
        "Uses Access Transformers"
      ]
    },
    "squatgrow": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.wuffs.squatgrow.mixins.PlayerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "sg$onTickEnd",
              "raw": "sg$onTickEnd(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "architectury": "[13.0.1,)",
        "minecraft": "[1.21,)",
        "neoforge": "[2,)"
      },
      "info": {
        "authors": "Gaz",
        "classes": "19",
        "description": "Squat up and down to grow your plant\n",
        "displayName": "Squat Grow",
        "file": "squatgrow-neoforge-21.1.0+mc1.21.1.jar",
        "license": "All rights reserved",
        "package": "dev.wuffs.squatgrow",
        "version": "21.1.0+mc1.21.1"
      },
      "modifies": [
        "net.minecraft.world.entity.player.Player"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "starbunclemania": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "alexthw.starbunclemania.mixin.WixieCharmMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.context.UseOnContext",
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "useOnBlock",
              "raw": "useOnBlock(Lnet/minecraft/world/item/context/UseOnContext;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "alexthw.starbunclemania.mixin.StarbyBrainFix",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onWanded",
              "raw": "onWanded(Lnet/minecraft/world/entity/player/Player;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "ars_nouveau": "[3.17.0,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "alexthw.starbunclemania.Configs#onLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "alexthw.starbunclemania.Configs#onReload"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "alexthw.starbunclemania.client.ClientHandler#init"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "alexthw.starbunclemania.EventHandler#registerCaps"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "alexthw.starbunclemania.client.ClientHandler#bindRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "alexthw.starbunclemania.client.ClientHandler#registerColors"
        ],
        "net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent": [
          "alexthw.starbunclemania.client.ClientHandler#registerClientExtensions"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "alexthw.starbunclemania.datagen.Setup#gatherData"
        ]
      },
      "info": {
        "authors": "Alexthw",
        "classes": "128",
        "description": "Starbuncles will conquer the world\n",
        "displayName": "Starbunclemania",
        "file": "starbunclemania-1.21.1-1.3.1.0.jar",
        "license": "GNU Lesser General Public License v3.0",
        "package": "alexthw.starbunclemania",
        "version": "1.3.1.0"
      },
      "inheritance": {
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "alexthw.starbunclemania.client.JarRenderer$ISTER",
          "alexthw.starbunclemania.client.BalloonRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "alexthw.starbunclemania.client.WixiePotRenderer",
          "alexthw.starbunclemania.client.SourceCondenserRenderer",
          "alexthw.starbunclemania.client.JarRenderer",
          "alexthw.starbunclemania.client.FluidSourceLinkRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "alexthw.starbunclemania.datagen.StarItemTagsProvider",
          "alexthw.starbunclemania.datagen.StarItemModelProvider",
          "alexthw.starbunclemania.datagen.StarCurioProvider",
          "alexthw.starbunclemania.datagen.StarBlockTagsProvider",
          "alexthw.starbunclemania.datagen.StarAdvancementsProvider",
          "alexthw.starbunclemania.datagen.Setup$1",
          "alexthw.starbunclemania.datagen.ModRecipeProvider",
          "alexthw.starbunclemania.datagen.ArsProviders$StarPatchouliProvider",
          "alexthw.starbunclemania.datagen.ArsProviders$ImbuementProvider",
          "alexthw.starbunclemania.datagen.ArsProviders$GlyphProvider",
          "alexthw.starbunclemania.datagen.ArsProviders$EnchantingAppProvider"
        ],
        "net.minecraft.world.entity.Entity": [
          "alexthw.starbunclemania.common.StarbyMountEntity"
        ],
        "net.minecraft.world.entity.Mob": [
          "alexthw.starbunclemania.common.StarbyMountEntity"
        ],
        "net.minecraft.world.item.Item": [
          "alexthw.starbunclemania.registry.ModRegistry$3",
          "alexthw.starbunclemania.registry.ModRegistry$2",
          "alexthw.starbunclemania.registry.ModRegistry$1",
          "alexthw.starbunclemania.common.item.FluidScroll",
          "alexthw.starbunclemania.common.item.FluidJarItem",
          "alexthw.starbunclemania.common.item.DirectionScroll",
          "alexthw.starbunclemania.common.item.cosmetic.StarWand",
          "alexthw.starbunclemania.common.item.cosmetic.StarSword",
          "alexthw.starbunclemania.common.item.cosmetic.StarbySaddle",
          "alexthw.starbunclemania.common.item.cosmetic.StarBucket",
          "alexthw.starbunclemania.common.item.cosmetic.StarBin",
          "alexthw.starbunclemania.common.item.cosmetic.StarBalloon",
          "alexthw.starbunclemania.common.item.cosmetic.StarbAABattery",
          "alexthw.starbunclemania.common.item.cosmetic.ProfHat",
          "alexthw.starbunclemania.common.item.cosmetic.PlayerCurioCosmetic",
          "alexthw.starbunclemania.common.item.cosmetic.MinerHat",
          "alexthw.starbunclemania.common.item.cosmetic.ExampleCosmetic",
          "alexthw.starbunclemania.common.item.cosmetic.ArchitectHat",
          "alexthw.starbunclemania.common.item.cosmetic.AbstractCosmeticItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "alexthw.starbunclemania.recipe.FluidSourcelinkRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "alexthw.starbunclemania.common.block.wixie_stations.StonecutterWixieCauldron",
          "alexthw.starbunclemania.common.block.wixie_stations.SmeltingWixieCauldron",
          "alexthw.starbunclemania.common.block.wixie_stations.FarmerPotWixieCauldron",
          "alexthw.starbunclemania.common.block.wixie_stations.CuttingWixieCauldron",
          "alexthw.starbunclemania.common.block.wixie_stations.CrucibleWixieCauldron",
          "alexthw.starbunclemania.common.block.fluids.SourceCondenserBlock",
          "alexthw.starbunclemania.common.block.fluids.LiquidJarBlock",
          "alexthw.starbunclemania.common.block.fluids.FluidSourcelinkBlock"
        ]
      },
      "modifies": [
        "com.hollingsworth.arsnouveau.common.entity.Starbuncle",
        "com.hollingsworth.arsnouveau.common.items.summon_charms.WixieCharm"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom Entity Renderers",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Has Capability Providers",
        "Localization",
        "Modifies Methods",
        "Patchouli Guide Book",
        "Uses Data Generators"
      ]
    },
    "stickit": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent$Loading": [
          "com.portingdeadmods.stickit.common.config.PlonkConfig#onLoad"
        ],
        "net.neoforged.fml.event.config.ModConfigEvent$Reloading": [
          "com.portingdeadmods.stickit.common.config.PlonkConfig#onReload"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.portingdeadmods.stickit.data.DataGenerators#gatherData"
        ],
        "net.neoforged.neoforge.network.event.RegisterPayloadHandlersEvent": [
          "com.portingdeadmods.stickit.common.networking.NetworkEvents#registerPayloads"
        ]
      },
      "info": {
        "authors": "Leclowndu93150, Reclipse, BlueAgent",
        "classes": "48",
        "description": "Place blocks and items anywhere in the world!",
        "displayName": "Stick It!",
        "file": "stickit-1.21.1-NeoForge-1.0.1.jar",
        "license": "MIT",
        "package": "com.portingdeadmods.stickit",
        "version": "1.0.1"
      },
      "inheritance": {
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.portingdeadmods.stickit.client.render.tile.TESRPlacedItems"
        ],
        "net.minecraft.data.DataProvider": [
          "com.portingdeadmods.stickit.data.ItemTags",
          "com.portingdeadmods.stickit.data.BlockTags",
          "com.portingdeadmods.stickit.data.BlockStates"
        ],
        "net.minecraft.world.item.Item": [
          "com.portingdeadmods.stickit.common.item.ItemBlockPlacedItems"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.portingdeadmods.stickit.common.block.BlockPlacedItems"
        ]
      },
      "summary": [
        "Auto-reloads Config Files",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Items",
        "Custom Network Packets",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "structureexpansion": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.sunekaer.mods.structureexpansion.mixin.ServerboundSetStructureBlockPacketMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.FriendlyByteBuf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "writeSE",
              "raw": "writeSE(Lnet/minecraft/network/FriendlyByteBuf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.sunekaer.mods.structureexpansion.mixin.ServerboundSetStructureBlockPacketMixin",
            "method": {
              "argTypes": [
                "net.minecraft.network.FriendlyByteBuf",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "readSE",
              "raw": "readSE(Lnet/minecraft/network/FriendlyByteBuf;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21,)"
      },
      "info": {
        "authors": "Sunekaer, LatvianModder",
        "classes": "7",
        "description": "Small mod that Increases the size limit of the vanilla structure blocks\n\nIncreases the size limit of the structure block from 48x48x48 to 127x127x127\n",
        "displayName": "Structure Expansion",
        "file": "structure-expansion-neoforge-87.0.0.jar",
        "license": "MIT License",
        "package": "com.sunekaer.mods.structureexpansion",
        "version": "87.0.0"
      },
      "modifies": [
        "net.minecraft.client.renderer.blockentity.StructureBlockRenderer",
        "net.minecraft.network.protocol.game.ServerboundSetStructureBlockPacket",
        "net.minecraft.world.level.block.entity.StructureBlockEntity"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "supermartijn642configlib": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.78-beta,)"
      },
      "info": {
        "authors": "SuperMartijn642",
        "classes": "44",
        "description": "Config Lib makes dealing with config files just a bit easier.",
        "displayName": "SuperMartijn642's Config Library",
        "file": "supermartijn642configlib-1.1.8-neoforge-mc1.21.jar",
        "license": "All rights reserved",
        "package": "com.supermartijn642.configlib",
        "version": "1.1.8"
      }
    },
    "supermartijn642corelib": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.supermartijn642.core.mixin.TagManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.packs.resources.ResourceManager",
                "java.util.concurrent.Executor",
                "net.minecraft.core.RegistryAccess$RegistryEntry",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.resources.ResourceKey",
                "net.minecraft.core.Registry",
                "net.minecraft.tags.TagLoader"
              ],
              "name": "createLoader",
              "raw": "createLoader(Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;Lnet/minecraft/core/RegistryAccess$RegistryEntry;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Registry;Lnet/minecraft/tags/TagLoader;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "com.supermartijn642.core.mixin.TagLoaderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.tags.TagEntry$Lookup",
                "java.util.List",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "build",
              "raw": "build(Lnet/minecraft/tags/TagEntry$Lookup;Ljava/util/List;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.supermartijn642.core.mixin.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "com.google.gson.JsonObject",
                "net.minecraft.core.HolderLookup$Provider",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "fromJson",
              "raw": "fromJson(Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;Lnet/minecraft/core/HolderLookup$Provider;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.supermartijn642.core.mixin.RecipeManagerMixin",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "apply",
              "raw": "apply(Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.supermartijn642.core.mixin.MappedRegistryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceKey",
                "java.lang.Object",
                "net.minecraft.core.RegistrationInfo",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "registerMappingTail",
              "raw": "registerMappingTail(Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lnet/minecraft/core/RegistrationInfo;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.supermartijn642.core.mixin.MappedRegistryMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceKey",
                "java.lang.Object",
                "net.minecraft.core.RegistrationInfo",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "registerMappingHead",
              "raw": "registerMappingHead(Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lnet/minecraft/core/RegistrationInfo;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.supermartijn642.core.mixin.LevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderLevel",
              "raw": "renderLevel(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/client/Options;getCloudsType()Lnet/minecraft/client/CloudStatus;}]"
            }
          },
          {
            "class": "com.supermartijn642.core.mixin.GameDataMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "postRegisterEvents",
              "raw": "postRegisterEvents(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/neoforged/fml/ModLoader;postEventWrapContainerInModOrder(Lnet/neoforged/bus/api/Event;)V}]"
            }
          },
          {
            "class": "com.supermartijn642.core.mixin.dev.DataGeneratorMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "runTail",
              "raw": "runTail(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/data/HashCache;purgeStaleAndWrite()V}]"
            }
          },
          {
            "class": "com.supermartijn642.core.mixin.dev.DataGeneratorMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.data.HashCache"
              ],
              "name": "runBeforeGenerators",
              "raw": "runBeforeGenerators(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/data/HashCache;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lcom/google/common/base/Stopwatch;createUnstarted()Lcom/google/common/base/Stopwatch;}]"
            }
          },
          {
            "class": "com.supermartijn642.core.mixin.dev.DataGeneratorMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.data.HashCache"
              ],
              "name": "runHead",
              "raw": "runHead(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/data/HashCache;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lcom/google/common/base/Stopwatch;createStarted()Lcom/google/common/base/Stopwatch;}]"
            }
          },
          {
            "class": "com.supermartijn642.core.mixin.dev.DataGeneratorConfigMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "makeGenerator",
              "raw": "makeGenerator(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.21.2)",
        "neoforge": "[21.0.102-beta,)"
      },
      "info": {
        "authors": "SuperMartijn642",
        "classes": "186",
        "description": "SuperMartijn642's Core Lib adds lots of basic implementations for guis that allow for similar code between Minecraft 1.12, 1.14, 1.15, and 1.16!",
        "displayName": "SuperMartijn642's Core Lib",
        "file": "supermartijn642corelib-1.1.18a-neoforge-mc1.21.jar",
        "license": "All rights reserved",
        "package": "com.supermartijn642.core",
        "version": "1.1.18+a"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.supermartijn642.core.gui.WidgetScreen",
          "com.supermartijn642.core.gui.WidgetContainerScreen"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "com.supermartijn642.core.render.CustomItemRenderer$1"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "com.supermartijn642.core.render.CustomRendererBakedModelWrapper"
        ],
        "net.minecraft.data.DataProvider": [
          "com.supermartijn642.core.generator.ResourceGenerator$DataProviderInstance"
        ],
        "net.minecraft.world.item.Item": [
          "com.supermartijn642.core.item.BaseItem",
          "com.supermartijn642.core.item.BaseBlockItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.supermartijn642.core.data.recipe.ConditionalRecipeSerializer$DummyRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.supermartijn642.core.block.BaseBlock"
        ]
      },
      "modifies": [
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.texture.atlas.SpriteSourceList",
        "net.minecraft.core.Holder$Reference",
        "net.minecraft.core.MappedRegistry",
        "net.minecraft.data.DataGenerator",
        "net.minecraft.tags.TagLoader",
        "net.minecraft.tags.TagManager",
        "net.minecraft.world.item.crafting.RecipeManager",
        "net.minecraft.world.level.block.state.BlockBehaviour$Properties",
        "net.neoforged.neoforge.data.event.GatherDataEvent$DataGeneratorConfig",
        "net.neoforged.neoforge.data.loading.DatagenModLoader",
        "net.neoforged.neoforge.registries.GameData"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Renderer",
        "Custom Items",
        "Custom Recipe Types",
        "Custom Tag Assignments",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "supplementaries": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.neoforge.TreasureMapForEmeraldsMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "net.minecraft.util.RandomSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "turnToQuill",
              "raw": "turnToQuill(Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.neoforge.CompatSodiumFluidRendererMixin",
            "method": {
              "argTypes": [
                "net.caffeinemc.mods.sodium.client.model.quad.ModelQuadViewMutable",
                "net.caffeinemc.mods.sodium.client.world.LevelSlice",
                "net.minecraft.core.BlockPos",
                "net.caffeinemc.mods.sodium.client.model.light.LightPipeline",
                "net.minecraft.core.Direction",
                "net.caffeinemc.mods.sodium.client.model.quad.properties.ModelQuadFacing",
                "float",
                "net.caffeinemc.mods.sodium.client.model.color.ColorProvider",
                "net.minecraft.world.level.material.FluidState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supplementaries$modifyLumiseneEmissivity",
              "raw": "supplementaries$modifyLumiseneEmissivity(Lnet/caffeinemc/mods/sodium/client/model/quad/ModelQuadViewMutable;Lnet/caffeinemc/mods/sodium/client/world/LevelSlice;Lnet/minecraft/core/BlockPos;Lnet/caffeinemc/mods/sodium/client/model/light/LightPipeline;Lnet/minecraft/core/Direction;Lnet/caffeinemc/mods/sodium/client/model/quad/properties/ModelQuadFacing;FLnet/caffeinemc/mods/sodium/client/model/color/ColorProvider;Lnet/minecraft/world/level/material/FluidState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, remap=true, target=Lnet/caffeinemc/mods/sodium/client/model/color/ColorProvider;getColors(Lnet/caffeinemc/mods/sodium/client/world/LevelSlice;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Ljava/lang/Object;Lnet/caffeinemc/mods/sodium/client/model/quad/ModelQuadView;[I)V}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.neoforge.CompatFarmersDelightTomatoMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.core.BlockPos",
                "net.minecraft.util.RandomSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$tomatoLoggingCompat",
              "raw": "supp$tomatoLoggingCompat(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, remap=true, target=Lnet/minecraft/core/BlockPos;above()Lnet/minecraft/core/BlockPos;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.neoforge.CompatEmbFluidRendererMixin",
            "method": {
              "argTypes": [
                "org.embeddedt.embeddium.impl.model.quad.ModelQuadView",
                "org.embeddedt.embeddium.impl.world.WorldSlice",
                "net.minecraft.core.BlockPos",
                "org.embeddedt.embeddium.impl.model.light.LightPipeline",
                "net.minecraft.core.Direction",
                "float",
                "org.embeddedt.embeddium.impl.model.color.ColorProvider",
                "net.minecraft.world.level.material.FluidState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supplementaries$modifyLumiseneEmissivity",
              "raw": "supplementaries$modifyLumiseneEmissivity(Lorg/embeddedt/embeddium/impl/model/quad/ModelQuadView;Lorg/embeddedt/embeddium/impl/world/WorldSlice;Lnet/minecraft/core/BlockPos;Lorg/embeddedt/embeddium/impl/model/light/LightPipeline;Lnet/minecraft/core/Direction;FLorg/embeddedt/embeddium/impl/model/color/ColorProvider;Lnet/minecraft/world/level/material/FluidState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, remap=true, target=Lorg/embeddedt/embeddium/impl/model/color/ColorProvider;getColors(Lorg/embeddedt/embeddium/api/render/chunk/EmbeddiumBlockAndTintGetter;Lnet/minecraft/core/BlockPos;Ljava/lang/Object;Lorg/embeddedt/embeddium/impl/model/quad/ModelQuadView;[I)V}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.neoforge.ChunkHolderMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.entity.BlockEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "sendBlockEntityCaps",
              "raw": "sendBlockEntityCaps(Lnet/minecraft/world/level/block/entity/BlockEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.neoforge.ChatMixin",
            "method": {
              "argTypes": [
                "java.lang.String",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "interceptMessage",
              "raw": "interceptMessage(Ljava/lang/String;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.neoforge.BlockEntityRendererDispatcherMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.blockentity.BlockEntityRenderer",
                "net.minecraft.world.level.block.entity.BlockEntity",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setupAndRenderPost",
              "raw": "setupAndRenderPost(Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer;Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.neoforge.BlockEntityRendererDispatcherMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.blockentity.BlockEntityRenderer",
                "net.minecraft.world.level.block.entity.BlockEntity",
                "float",
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setupAndRenderPre",
              "raw": "setupAndRenderPre(Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer;Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ZombieHorseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.InteractionHand",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$interact",
              "raw": "supp$interact(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.WanderingTraderMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$addOpenDoor",
              "raw": "supp$addOpenDoor(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.StrongholdRoomSconceMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.WorldGenLevel",
                "net.minecraft.world.level.StructureManager",
                "net.minecraft.world.level.chunk.ChunkGenerator",
                "net.minecraft.util.RandomSource",
                "net.minecraft.world.level.levelgen.structure.BoundingBox",
                "net.minecraft.world.level.ChunkPos",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$addSconces",
              "raw": "supp$addSconces(Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.StrongholdCrossingSconceMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.WorldGenLevel",
                "net.minecraft.world.level.StructureManager",
                "net.minecraft.world.level.chunk.ChunkGenerator",
                "net.minecraft.util.RandomSource",
                "net.minecraft.world.level.levelgen.structure.BoundingBox",
                "net.minecraft.world.level.ChunkPos",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$addSconces",
              "raw": "supp$addSconces(Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.SlimeMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$applySlimedEffect",
              "raw": "supp$applySlimedEffect(Lnet/minecraft/world/entity/LivingEntity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/monster/Slime;playSound(Lnet/minecraft/sounds/SoundEvent;FF)V}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.SkellyHorseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.InteractionHand",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "mobInteract",
              "raw": "mobInteract(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.SkellyHorseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "readAdditionalSaveData",
              "raw": "readAdditionalSaveData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.SkellyHorseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "addAdditionalSaveData",
              "raw": "addAdditionalSaveData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.SkeletonMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "readAdditionalSaveData",
              "raw": "readAdditionalSaveData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.SkeletonMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "addAdditionalSaveData",
              "raw": "addAdditionalSaveData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.SkeletonMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.damagesource.DamageSource",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$dropQuiver",
              "raw": "supp$dropQuiver(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/damagesource/DamageSource;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ShulkerBoxBlockEntityMixin",
            "method": {
              "argTypes": [
                "int",
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.core.Direction",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$preventInsertion",
              "raw": "supp$preventInsertion(ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ServerLevelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.core.BlockPos"
              ],
              "name": "supp$unluckyLightning",
              "raw": "supp$unluckyLightning(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/core/BlockPos;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Ljava/util/List;isEmpty()Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ServerLevelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "int",
                "net.minecraft.core.BlockPos",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$redirectEvent",
              "raw": "supp$redirectEvent(Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.RedMerchantSpawnerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$spawnRedMerchant",
              "raw": "supp$spawnRedMerchant(Lnet/minecraft/server/level/ServerLevel;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.RedMerchantSpawnerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "boolean",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$tickRedMerchant",
              "raw": "supp$tickRedMerchant(Lnet/minecraft/server/level/ServerLevel;ZZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ProjectileWeaponItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "java.util.function.Predicate",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$getProjectileInQuiver",
              "raw": "supp$getProjectileInQuiver(Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.PlayerSocialManagerMixin",
            "method": {
              "argTypes": [
                "java.util.UUID",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$removePlayer",
              "raw": "supp$removePlayer(Ljava/util/UUID;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.PlayerSocialManagerMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.multiplayer.PlayerInfo",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$getPlayer",
              "raw": "supp$getPlayer(Lnet/minecraft/client/multiplayer/PlayerInfo;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.PlayerProjectileMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.item.ItemStack",
                "java.util.function.Predicate"
              ],
              "name": "supp$getQuiverProjectile",
              "raw": "supp$getQuiverProjectile(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE_ASSIGN, target=Ljava/util/function/Predicate;test(Ljava/lang/Object;)Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.PartDefinitionMixin",
            "method": {
              "argTypes": [
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$onBakeRoot",
              "raw": "supp$onBakeRoot(IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ParrotMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supplementaries$fluteAi",
              "raw": "supplementaries$fluteAi(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ParrotLayerMixin",
            "method": {
              "argTypes": [
                "com.mojang.blaze3d.vertex.PoseStack",
                "net.minecraft.client.renderer.MultiBufferSource",
                "int",
                "net.minecraft.world.entity.player.Player",
                "float",
                "float",
                "float",
                "float",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.nbt.CompoundTag"
              ],
              "name": "supp$renderParty",
              "raw": "supp$renderParty(Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/nbt/CompoundTag;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/nbt/CompoundTag;getString(Ljava/lang/String;)Ljava/lang/String;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.MouseHandlerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$onMoveMouse",
              "raw": "supp$onMoveMouse(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.MineshaftPiecesMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.structure.StructurePieceAccessor",
                "net.minecraft.util.RandomSource",
                "int",
                "int",
                "int",
                "net.minecraft.core.Direction",
                "int",
                "net.minecraft.world.level.levelgen.structure.structures.MineshaftStructure$Type",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$addElevator",
              "raw": "supp$addElevator(Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;ILnet/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.MineshaftCorridorMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.WorldGenLevel",
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.core.BlockPos$MutableBlockPos",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$addRope",
              "raw": "supp$addRope(Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.MapItemMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.entity.Entity",
                "net.minecraft.world.level.saveddata.maps.MapItemSavedData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.llamalad7.mixinextras.sugar.ref.LocalIntRef",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef",
                "com.llamalad7.mixinextras.sugar.ref.LocalIntRef"
              ],
              "name": "supp$checkHeightLock",
              "raw": "supp$checkHeightLock(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/llamalad7/mixinextras/sugar/ref/LocalIntRef;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;Lcom/llamalad7/mixinextras/sugar/ref/LocalIntRef;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/world/level/dimension/DimensionType;hasCeiling()Z, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.LoomScreenFlagMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "float",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$renderFlags",
              "raw": "supp$renderFlags(Lnet/minecraft/client/gui/GuiGraphics;FIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.LoomInputSlotMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$allowFlags",
              "raw": "supp$allowFlags(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.LocalPlayerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "suppl$checkIfHasQuiver",
              "raw": "suppl$checkIfHasQuiver(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE, target=Lnet/minecraft/client/player/AbstractClientPlayer;tick()V}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.LocalPlayerMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "suppl$PreventSprintingWithOverencumbered",
              "raw": "suppl$PreventSprintingWithOverencumbered(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "suppl$writeSlimedTicks",
              "raw": "suppl$writeSlimedTicks(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "suppl$readSlimedTicks",
              "raw": "suppl$readSlimedTicks(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.LivingEntityMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "suppl$slimeTick",
              "raw": "suppl$slimeTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.llamalad7.mixinextras.sugar.ref.LocalRef"
              ],
              "name": "suppl$eatFromLunchBasket",
              "raw": "suppl$eatFromLunchBasket(Lnet/minecraft/world/item/ItemStack;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/llamalad7/mixinextras/sugar/ref/LocalRef;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/entity/LivingEntity;isUsingItem()Z}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.LivingEntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.phys.Vec3",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "suppl$checkOnRope",
              "raw": "suppl$checkOnRope(Lnet/minecraft/world/phys/Vec3;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.LevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$setPartying",
              "raw": "supp$setPartying(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.LevelRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.DeltaTracker",
                "boolean",
                "net.minecraft.client.Camera",
                "net.minecraft.client.renderer.GameRenderer",
                "net.minecraft.client.renderer.LightTexture",
                "org.joml.Matrix4f",
                "org.joml.Matrix4f",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "com.mojang.blaze3d.vertex.PoseStack"
              ],
              "name": "supplementaries$renderSlingshotOutline",
              "raw": "supplementaries$renderSlingshotOutline(Lnet/minecraft/client/DeltaTracker;ZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lcom/mojang/blaze3d/vertex/PoseStack;)V"
            },
            "params": {
              "at": "[{value=FIELD, target=Lnet/minecraft/client/Minecraft;hitResult:Lnet/minecraft/world/phys/HitResult;, ordinal=1}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.KeyboardHandlerMixin",
            "method": {
              "argTypes": [
                "long",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$onKeyPressCancellable",
              "raw": "supp$onKeyPressCancellable(JIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lcom/mojang/blaze3d/platform/InputConstants;getKey(II)Lcom/mojang/blaze3d/platform/InputConstants$Key;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.IronGolemRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.animal.IronGolem",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$swag",
              "raw": "supp$swag(Lnet/minecraft/world/entity/animal/IronGolem;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.InkSackMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.world.level.block.entity.SignBlockEntity",
                "boolean",
                "net.minecraft.world.entity.player.Player",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$clearAntiqueInk",
              "raw": "supp$clearAntiqueInk(Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLnet/minecraft/world/entity/player/Player;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.GrindstoneTestSlotMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$getAppleXP",
              "raw": "supp$getAppleXP(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.GrindstoneMenuMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$updateGoldenAppleResult",
              "raw": "supp$updateGoldenAppleResult(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.GrindstoneInputSlotMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$allowApples",
              "raw": "supp$allowApples(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.GameRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$addCustomPostShaders",
              "raw": "supp$addCustomPostShaders(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.FontRendererMixin",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$setAntiqueFont",
              "raw": "supp$setAntiqueFont(Lnet/minecraft/resources/ResourceLocation;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ExplosionMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$explode",
              "raw": "supp$explode(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ExplorationMapFunctionMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$modifyCodec",
              "raw": "supp$modifyCodec(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ExplorationMapFunctionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.level.storage.loot.LootContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.phys.Vec3",
                "net.minecraft.server.level.ServerLevel"
              ],
              "name": "supp$turnToQuill",
              "raw": "supp$turnToQuill(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/server/level/ServerLevel;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/server/level/ServerLevel;findNearestMapStructure(Lnet/minecraft/tags/TagKey;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos;}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.EntityMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "playStepSound",
              "raw": "playStepSound(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.EndermanMixin",
            "method": {
              "argTypes": [
                "net.minecraft.server.level.ServerLevel",
                "net.minecraft.world.damagesource.DamageSource",
                "boolean",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$dropEndermanHead",
              "raw": "supp$dropEndermanHead(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/damagesource/DamageSource;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.CreeperMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$readPartyCreeperData",
              "raw": "supp$readPartyCreeperData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.CreeperMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$addPartyCreeperData",
              "raw": "supp$addPartyCreeperData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.CompatCreeperArclightMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$readPartyCreeperData",
              "raw": "supp$readPartyCreeperData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.CompatCreeperArclightMixin",
            "method": {
              "argTypes": [
                "net.minecraft.nbt.CompoundTag",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$addPartyCreeperData",
              "raw": "supp$addPartyCreeperData(Lnet/minecraft/nbt/CompoundTag;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ComparatorBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$updateSideRelayers",
              "raw": "supp$updateSideRelayers(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/level/block/ComparatorBlock;updateNeighborsInFront(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.ClientLevelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.Entity",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$addRopeSoundInstance",
              "raw": "supp$addRopeSoundInstance(Lnet/minecraft/world/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.CatSitOnBlockGoalMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.LevelReader",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$shouldMoveToCarpet",
              "raw": "supp$shouldMoveToCarpet(Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.CartographyTableScreenMixin",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "float",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$renderBetterSlots",
              "raw": "supp$renderBetterSlots(Lnet/minecraft/client/gui/GuiGraphics;FIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.CartographyTableMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.level.Level",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.level.saveddata.maps.MapItemSavedData"
              ],
              "name": "supp$getItem",
              "raw": "supp$getItem(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/item/ItemStack;is(Lnet/minecraft/world/item/Item;)Z, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.CartographyTableMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable",
                "net.minecraft.world.item.ItemStack",
                "net.minecraft.world.inventory.Slot",
                "net.minecraft.world.item.ItemStack"
              ],
              "name": "supp$getItem",
              "raw": "supp$getItem(Lnet/minecraft/world/entity/player/Player;ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/world/item/ItemStack;is(Lnet/minecraft/world/item/Item;)Z, ordinal=0}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.CartographyTableInputSlotMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$mayPlace",
              "raw": "supp$mayPlace(Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.CampfireBlockMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$isSmokeSource",
              "raw": "supp$isSmokeSource(Lnet/minecraft/world/level/block/state/BlockState;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.CameraMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.BlockGetter",
                "net.minecraft.world.entity.Entity",
                "boolean",
                "boolean",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$setupCannonCamera",
              "raw": "supp$setupCannonCamera(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;ZZFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/world/entity/Entity;getViewYRot(F)F}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.BowMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$getAllSupportedProjectiles",
              "raw": "supp$getAllSupportedProjectiles(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.BlockSourceMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$alterCenter",
              "raw": "supp$alterCenter(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.AbstractSkeletonMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.world.item.ItemStack"
              ],
              "name": "supp$consumeQuiverArrow",
              "raw": "supp$consumeQuiverArrow(Lnet/minecraft/world/entity/LivingEntity;FLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/item/ItemStack;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=AFTER], value=INVOKE_ASSIGN, target=Lnet/minecraft/world/entity/monster/AbstractSkeleton;getArrow(Lnet/minecraft/world/item/ItemStack;FLnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/AbstractArrow;}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.AbstractSkeletonMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.ServerLevelAccessor",
                "net.minecraft.world.DifficultyInstance",
                "net.minecraft.world.entity.MobSpawnType",
                "net.minecraft.world.entity.SpawnGroupData",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$finalizeSpawn",
              "raw": "supp$finalizeSpawn(Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.AbstractHorseMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "net.minecraft.world.item.ItemStack",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "supp$eatSugarCube",
              "raw": "supp$eatSugarCube(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.AbstractHorseMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "supp$addSugarCube",
              "raw": "supp$addSugarCube(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "net.mehvahdjukaar.supplementaries.mixins.AbstractArrowMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.player.Player",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onPlayerTouch",
              "raw": "onPlayerTouch(Lnet/minecraft/world/entity/player/Player;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.21.2)",
        "moonlight": "[1.21-2.17.0,]",
        "neoforge": "[4,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "net.mehvahdjukaar.supplementaries.neoforge.SupplementariesForgeClient#setup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "net.mehvahdjukaar.supplementaries.neoforge.SupplementariesForge#setup"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "net.mehvahdjukaar.supplementaries.neoforge.SupplementariesForge#registerCapabilities"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Post": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onClientEndTick"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$AddLayers": [
          "net.mehvahdjukaar.supplementaries.neoforge.SupplementariesForgeClient#onAddLayers"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$CreateSkullModels": [
          "net.mehvahdjukaar.supplementaries.neoforge.SupplementariesForgeClient#onRegisterSkullModels"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$InteractionKeyMappingTriggered": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onClickInput"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$Key": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onKeyPress"
        ],
        "net.neoforged.neoforge.client.event.InputEvent$MouseScrollingEvent": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onMouseScrolled"
        ],
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "net.mehvahdjukaar.supplementaries.neoforge.SupplementariesForgeClient#onAddGuiLayers"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiLayerEvent$Pre": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onRenderGuiOverlayPre"
        ],
        "net.neoforged.neoforge.client.event.RenderHandEvent": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#renderHandEvent"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onRenderOutline"
        ],
        "net.neoforged.neoforge.client.event.RenderPlayerEvent$Pre": [
          "net.mehvahdjukaar.supplementaries.client.renderers.neoforge.PicklePlayer#onRenderPlayerPre"
        ],
        "net.neoforged.neoforge.client.event.RenderTooltipEvent$GatherComponents": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onAddTooltips",
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onGatherTooltipComponents"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onScreenInit",
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onScreenDrawPost"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Opening": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onPlayerDeath"
        ],
        "net.neoforged.neoforge.client.event.ViewportEvent$ComputeCameraAngles": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onCameraSetup"
        ],
        "net.neoforged.neoforge.client.event.sound.PlaySoundSourceEvent": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onSoundPlay"
        ],
        "net.neoforged.neoforge.event.OnDatapackSyncEvent": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onDataSync"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onEntityJoin"
        ],
        "net.neoforged.neoforge.event.entity.ProjectileImpactEvent": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onProjectileImpact"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDamageEvent$Post": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onLivingDeath"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemEntityPickupEvent$Pre": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onItemPickup"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ClientEventsForge#onItemTooltip"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onPlayerLoggedIn",
          "net.mehvahdjukaar.supplementaries.client.renderers.neoforge.PicklePlayer#onPlayerLoggedIn"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": [
          "net.mehvahdjukaar.supplementaries.client.renderers.neoforge.PicklePlayer#onLogout"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$EntityInteract": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onEntityInteract"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickBlock": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onUseBlockHP",
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onUseBlock"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerInteractEvent$RightClickItem": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onUseItem"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BlockToolModificationEvent": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#toolModification"
        ],
        "net.neoforged.neoforge.event.level.NoteBlockEvent$Play": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#noteBlockEvent"
        ],
        "net.neoforged.neoforge.event.server.ServerStartedEvent": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onServerStart"
        ],
        "net.neoforged.neoforge.event.server.ServerStoppedEvent": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onLevelUnload"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Pre": [
          "net.mehvahdjukaar.supplementaries.common.events.neoforge.ServerEventsForge#onPlayerTick"
        ]
      },
      "info": {
        "authors": "MehVahdJukaar, Plantkillable",
        "classes": "1067",
        "description": "Many functional and useful Vanilla+ blocks",
        "displayName": "Supplementaries",
        "file": "supplementaries-1.21-3.0.35-beta-neoforge.jar",
        "license": "Supplementaries Team License v.1.1",
        "package": "net.mehvahdjukaar.supplementaries",
        "url": "https://www.curseforge.com/minecraft/mc-mods/supplementaries",
        "version": "1.21-3.0.35-beta"
      },
      "inheritance": {
        "com.mojang.brigadier.Command": [
          "net.mehvahdjukaar.supplementaries.common.commands.ResetGlobeSeedCommand",
          "net.mehvahdjukaar.supplementaries.common.commands.ReloadConfigsCommand",
          "net.mehvahdjukaar.supplementaries.common.commands.OpenConfiguredCommand",
          "net.mehvahdjukaar.supplementaries.common.commands.IUsedToRollTheDice",
          "net.mehvahdjukaar.supplementaries.common.commands.ChangeGlobeSeedCommand",
          "net.mehvahdjukaar.supplementaries.common.commands.AddCageMobCommand"
        ],
        "net.minecraft.client.gui.screens.Screen": [
          "net.mehvahdjukaar.supplementaries.mixins.LoomScreenFlagMixin",
          "net.mehvahdjukaar.supplementaries.mixins.CartographyTableScreenMixin",
          "net.mehvahdjukaar.supplementaries.client.screens.WelcomeMessageScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.VariableSizeContainerScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.TrappedPresentScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.TextHolderEditScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.SpeakerBlockScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.SignPostScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.RedMerchantScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.PulleyScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.PresentScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.NoticeBoardScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.DoormatScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.CannonScreen",
          "net.mehvahdjukaar.supplementaries.client.screens.BlackBoardScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "net.mehvahdjukaar.supplementaries.client.particles.WindTrailParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.SugarParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.SudsParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.StreamerParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.StasisParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.SpeakerSoundParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.SparkleParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.SlingshotParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.RotationTrailParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.RotationTrailEmitter",
          "net.mehvahdjukaar.supplementaries.client.particles.FeatherParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.FallingLiquidParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.DrippingLiquidParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.DirectionOrientedBillboardParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.ConfettiParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.CannonFireParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.BubbleBlockParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.BottlingXpParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.BombSmokeParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.BombExplosionParticle",
          "net.mehvahdjukaar.supplementaries.client.particles.BombExplosionEmitterParticle"
        ],
        "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": [
          "net.mehvahdjukaar.supplementaries.client.renderers.items.LunchBoxItemRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.items.JarItemRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.items.FlagItemRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.items.EndermanHeadItemRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.items.CageItemRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.items.BubbleBlockItemRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.items.BlackboardItemRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.items.AltimeterItemRenderer"
        ],
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.WindVaneBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.StatueBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.SpringLauncherArmBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.SlidyBlockRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.SignPostBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.PedestalBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.NoticeBoardBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.JarBoatTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.JarBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.ItemShelfBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.HourGlassBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.GlobeBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.FlagBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.EndermanSkullBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.DoormatBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.ClockBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.CannonBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.CageBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.BuntingBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.BubbleBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.BookPileBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.BlackboardBlockTileRenderer",
          "net.mehvahdjukaar.supplementaries.client.renderers.tiles.BellowsBlockTileRenderer"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "net.mehvahdjukaar.supplementaries.client.renderers.items.AltimeterItemRenderer$AltimeterModel",
          "net.mehvahdjukaar.supplementaries.client.block_models.SignPostBlockBakedModel",
          "net.mehvahdjukaar.supplementaries.client.block_models.RopeKnotBlockBakedModel",
          "net.mehvahdjukaar.supplementaries.client.block_models.JarBakedModel",
          "net.mehvahdjukaar.supplementaries.client.block_models.GobletBakedModel",
          "net.mehvahdjukaar.supplementaries.client.block_models.FrameBlockBakedModel",
          "net.mehvahdjukaar.supplementaries.client.block_models.FlowerBoxBakedModel",
          "net.mehvahdjukaar.supplementaries.client.block_models.FaucetBakedModel",
          "net.mehvahdjukaar.supplementaries.client.block_models.BuntingsBakedModel",
          "net.mehvahdjukaar.supplementaries.client.block_models.BookPileModel",
          "net.mehvahdjukaar.supplementaries.client.block_models.BlackboardBakedModel"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "net.mehvahdjukaar.supplementaries.common.misc.effects.OverencumberedEffect",
          "net.mehvahdjukaar.supplementaries.common.misc.effects.FlammableEffect"
        ],
        "net.minecraft.world.entity.Entity": [
          "net.mehvahdjukaar.supplementaries.mixins.ZombieHorseMixin",
          "net.mehvahdjukaar.supplementaries.mixins.WanderingTraderMixin",
          "net.mehvahdjukaar.supplementaries.mixins.StrayMixin",
          "net.mehvahdjukaar.supplementaries.mixins.SnowballMixin",
          "net.mehvahdjukaar.supplementaries.mixins.SkellyHorseMixin",
          "net.mehvahdjukaar.supplementaries.mixins.SkeletonMixin",
          "net.mehvahdjukaar.supplementaries.mixins.ServerPlayerMixin",
          "net.mehvahdjukaar.supplementaries.mixins.RemotePlayerMixin",
          "net.mehvahdjukaar.supplementaries.mixins.PlayerProjectileMixin",
          "net.mehvahdjukaar.supplementaries.mixins.ParrotMixin",
          "net.mehvahdjukaar.supplementaries.mixins.LocalPlayerMixin",
          "net.mehvahdjukaar.supplementaries.mixins.LivingEntityMixin",
          "net.mehvahdjukaar.supplementaries.mixins.FallingBlockEntityMixin",
          "net.mehvahdjukaar.supplementaries.mixins.EvokerMixin",
          "net.mehvahdjukaar.supplementaries.mixins.EndermanMixin",
          "net.mehvahdjukaar.supplementaries.mixins.CreeperMixin",
          "net.mehvahdjukaar.supplementaries.mixins.CompatCreeperArclightMixin",
          "net.mehvahdjukaar.supplementaries.mixins.AbstractSkeletonMixin",
          "net.mehvahdjukaar.supplementaries.mixins.AbstractHorseMixin",
          "net.mehvahdjukaar.supplementaries.mixins.AbstractArrowMixin",
          "net.mehvahdjukaar.supplementaries.common.entities.dispenser_minecart.DispenserMinecartEntity",
          "net.mehvahdjukaar.supplementaries.common.entities.ThrowableBrickEntity",
          "net.mehvahdjukaar.supplementaries.common.entities.SlingshotProjectileEntity",
          "net.mehvahdjukaar.supplementaries.common.entities.SlimeBallEntity",
          "net.mehvahdjukaar.supplementaries.common.entities.RopeArrowEntity",
          "net.mehvahdjukaar.supplementaries.common.entities.RedMerchantEntity",
          "net.mehvahdjukaar.supplementaries.common.entities.PearlMarker",
          "net.mehvahdjukaar.supplementaries.common.entities.HatStandEntity",
          "net.mehvahdjukaar.supplementaries.common.entities.FallingUrnEntity",
          "net.mehvahdjukaar.supplementaries.common.entities.FallingAshEntity",
          "net.mehvahdjukaar.supplementaries.common.entities.CannonBallEntity",
          "net.mehvahdjukaar.supplementaries.common.entities.BombEntity"
        ],
        "net.minecraft.world.entity.Mob": [
          "net.mehvahdjukaar.supplementaries.mixins.ZombieHorseMixin",
          "net.mehvahdjukaar.supplementaries.mixins.WanderingTraderMixin",
          "net.mehvahdjukaar.supplementaries.mixins.StrayMixin",
          "net.mehvahdjukaar.supplementaries.mixins.SkellyHorseMixin",
          "net.mehvahdjukaar.supplementaries.mixins.SkeletonMixin",
          "net.mehvahdjukaar.supplementaries.mixins.EvokerMixin",
          "net.mehvahdjukaar.supplementaries.mixins.EndermanMixin",
          "net.mehvahdjukaar.supplementaries.mixins.CreeperMixin",
          "net.mehvahdjukaar.supplementaries.mixins.CompatCreeperArclightMixin",
          "net.mehvahdjukaar.supplementaries.mixins.AbstractSkeletonMixin",
          "net.mehvahdjukaar.supplementaries.mixins.AbstractHorseMixin",
          "net.mehvahdjukaar.supplementaries.common.entities.RedMerchantEntity"
        ],
        "net.minecraft.world.entity.animal.Animal": [
          "net.mehvahdjukaar.supplementaries.mixins.ZombieHorseMixin",
          "net.mehvahdjukaar.supplementaries.mixins.SkellyHorseMixin",
          "net.mehvahdjukaar.supplementaries.mixins.AbstractHorseMixin"
        ],
        "net.minecraft.world.item.Item": [
          "net.mehvahdjukaar.supplementaries.mixins.neoforge.self.SelfWrenchMixin",
          "net.mehvahdjukaar.supplementaries.mixins.neoforge.self.SelfSoapItemMixin",
          "net.mehvahdjukaar.supplementaries.mixins.PaintingItemMixin",
          "net.mehvahdjukaar.supplementaries.mixins.BannerPatternItemMixin",
          "net.mehvahdjukaar.supplementaries.common.items.neoforge.LumiseneBucketItem",
          "net.mehvahdjukaar.supplementaries.common.items.WrenchItem",
          "net.mehvahdjukaar.supplementaries.common.items.TrappedPresentItem",
          "net.mehvahdjukaar.supplementaries.common.items.TimberFrameItem",
          "net.mehvahdjukaar.supplementaries.common.items.SugarCubeItem",
          "net.mehvahdjukaar.supplementaries.common.items.SpeedometerItem",
          "net.mehvahdjukaar.supplementaries.common.items.SongInstrumentItem",
          "net.mehvahdjukaar.supplementaries.common.items.SoapItem",
          "net.mehvahdjukaar.supplementaries.common.items.SlingshotItem",
          "net.mehvahdjukaar.supplementaries.common.items.SignPostItem",
          "net.mehvahdjukaar.supplementaries.common.items.ShulkerShellItem",
          "net.mehvahdjukaar.supplementaries.common.items.SelectableContainerItem",
          "net.mehvahdjukaar.supplementaries.common.items.SafeItem",
          "net.mehvahdjukaar.supplementaries.common.items.SackItem",
          "net.mehvahdjukaar.supplementaries.common.items.RopeItem",
          "net.mehvahdjukaar.supplementaries.common.items.RopeArrowItem",
          "net.mehvahdjukaar.supplementaries.common.items.QuiverItem",
          "net.mehvahdjukaar.supplementaries.common.items.PresentItem",
          "net.mehvahdjukaar.supplementaries.common.items.PancakeItem",
          "net.mehvahdjukaar.supplementaries.common.items.LunchBoxItem",
          "net.mehvahdjukaar.supplementaries.common.items.LumiseneBottleItem",
          "net.mehvahdjukaar.supplementaries.common.items.KeyItem",
          "net.mehvahdjukaar.supplementaries.common.items.JarItem",
          "net.mehvahdjukaar.supplementaries.common.items.HatStandItem",
          "net.mehvahdjukaar.supplementaries.common.items.FluteItem",
          "net.mehvahdjukaar.supplementaries.common.items.FlagItem",
          "net.mehvahdjukaar.supplementaries.common.items.EndermanHeadItem",
          "net.mehvahdjukaar.supplementaries.common.items.EmptySliceMapItem",
          "net.mehvahdjukaar.supplementaries.common.items.DispenserMinecartItem",
          "net.mehvahdjukaar.supplementaries.common.items.ConfettiPopperItem",
          "net.mehvahdjukaar.supplementaries.common.items.CannonBallItem",
          "net.mehvahdjukaar.supplementaries.common.items.CandyItem",
          "net.mehvahdjukaar.supplementaries.common.items.CageItem",
          "net.mehvahdjukaar.supplementaries.common.items.BuntingItem",
          "net.mehvahdjukaar.supplementaries.common.items.BubbleBlowerItem",
          "net.mehvahdjukaar.supplementaries.common.items.BubbleBlockItem",
          "net.mehvahdjukaar.supplementaries.common.items.BombItem",
          "net.mehvahdjukaar.supplementaries.common.items.BlackboardItem",
          "net.mehvahdjukaar.supplementaries.common.items.BambooSpikesTippedItem",
          "net.mehvahdjukaar.supplementaries.common.items.AntiqueInkItem",
          "net.mehvahdjukaar.supplementaries.common.items.AltimeterItem",
          "net.mehvahdjukaar.supplementaries.common.items.AbstractMobContainerItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "net.mehvahdjukaar.supplementaries.common.items.crafting.WeatheredMapRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.TrappedPresentRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.TippedBambooSpikesRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.TatteredBookRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.SusRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.SoapClearRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.SafeRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.RopeArrowCreateRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.RopeArrowAddRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.PresentDyeRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.ItemLoreRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.FlagFromBannerRecipe",
          "net.mehvahdjukaar.supplementaries.common.items.crafting.BlackboardDuplicateRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.mehvahdjukaar.supplementaries.neoforge.SuppPlatformStuffImpl$CropAccessor",
          "net.mehvahdjukaar.supplementaries.mixins.neoforge.self.SelfSafeMixin",
          "net.mehvahdjukaar.supplementaries.mixins.neoforge.self.SelfPlanterMixin",
          "net.mehvahdjukaar.supplementaries.mixins.neoforge.self.SelfNetheriteDoorMixin",
          "net.mehvahdjukaar.supplementaries.mixins.neoforge.self.SelfGunpowderMixin",
          "net.mehvahdjukaar.supplementaries.mixins.neoforge.self.SelfFrameMixin",
          "net.mehvahdjukaar.supplementaries.mixins.neoforge.self.SelfFlammableFluidBlockMixin",
          "net.mehvahdjukaar.supplementaries.mixins.neoforge.CompatFarmersDelightTomatoMixin",
          "net.mehvahdjukaar.supplementaries.mixins.ComparatorBlockMixin",
          "net.mehvahdjukaar.supplementaries.integration.FarmersDelightCompat$TomatoStickBlock",
          "net.mehvahdjukaar.supplementaries.integration.FarmersDelightCompat$TomatoRopeBlock",
          "net.mehvahdjukaar.supplementaries.integration.FarmersDelightCompat$TomatoLoggedBlock",
          "net.mehvahdjukaar.supplementaries.integration.FarmersDelightCompat$PlanterRichBlock",
          "net.mehvahdjukaar.supplementaries.integration.CaveEnhancementsCompat$SpectacleCandleHolder",
          "net.mehvahdjukaar.supplementaries.common.fluids.FlammableLiquidBlock",
          "net.mehvahdjukaar.supplementaries.common.fluids.FiniteLiquidBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.WindVaneBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.WildFlaxBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.WickerFenceBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.UrnBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.TurnTableBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.TrappedPresentBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SusGravelBricksBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SugarBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.StructureTempBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.StickBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.StatueBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SpringLauncherHeadBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SpringLauncherBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SpringLauncherArmBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SpeakerBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SoapBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SlidyBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SignPostWallBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SignPostBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SconceWallBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SconceLeverBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SconceBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SafeBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.SackBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.RopeKnotBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.RopeBuntingBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.RopeBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.RelayerBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.RedstoneIlluminatorBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.RakedGravelBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.PulleyBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.PresentBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.PlanterBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.PedestalBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.PancakeBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.NoticeBoardBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.NetheriteTrapdoorBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.NetheriteDoorBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.MovingSlidyBlockSource",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.MovingSlidyBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.LunchBoxBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.LockBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.LightUpWaterBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.LightUpBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.JarBoatBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.JarBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.ItemShelfBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.IronGateBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.HourGlassBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.GunpowderBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.GravelBricksBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.GoldTrapdoorBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.GoldDoorBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.GobletBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.GlobeBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FrameBraceBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FrameBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FodderBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FlowerBoxBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FlippedBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FlintBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FlaxBlockUpper",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FlaxBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FlaxBaleBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FlagBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FirePitBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FenceMimicBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FeatherBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.FaucetBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.EndermanSkullWallBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.EndermanSkullBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.EndLampBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.DoormatBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.DirectionalSlabBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.CrystalDisplayBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.CrankBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.CogBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.ClockBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.CannonBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.CannonBallBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.CandleHolderBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.CageBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.BubbleBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.BookPileHorizontalBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.BookPileBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.BlockGeneratorBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.BlazeRodBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.BlackboardBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.BellowsBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.BambooSpikesBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.AwningBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.AshenBasaltBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.AshLayerBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.AbstractRopeKnotBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.AbstractRopeBlock",
          "net.mehvahdjukaar.supplementaries.common.block.blocks.AbstractPresentBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "net.mehvahdjukaar.supplementaries.common.misc.globe.GlobeData"
        ]
      },
      "modifies": [
        "net.caffeinemc.mods.sodium.client.render.chunk.compile.pipeline.DefaultFluidRenderer",
        "net.mehvahdjukaar.supplementaries.common.block.blocks.FrameBlock",
        "net.mehvahdjukaar.supplementaries.common.block.blocks.GunpowderBlock",
        "net.mehvahdjukaar.supplementaries.common.block.blocks.NetheriteDoorBlock",
        "net.mehvahdjukaar.supplementaries.common.block.blocks.NetheriteTrapdoorBlock",
        "net.mehvahdjukaar.supplementaries.common.block.blocks.PlanterBlock",
        "net.mehvahdjukaar.supplementaries.common.block.blocks.SafeBlock",
        "net.mehvahdjukaar.supplementaries.common.fluids.FlammableLiquidBlock",
        "net.mehvahdjukaar.supplementaries.common.fluids.LumiseneFluid",
        "net.mehvahdjukaar.supplementaries.common.items.SoapItem",
        "net.mehvahdjukaar.supplementaries.common.items.WrenchItem",
        "net.minecraft.client.Camera",
        "net.minecraft.client.KeyboardHandler",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.MouseHandler",
        "net.minecraft.client.gui.Font",
        "net.minecraft.client.gui.MapRenderer$MapInstance",
        "net.minecraft.client.gui.screens.ChatScreen",
        "net.minecraft.client.gui.screens.inventory.BookViewScreen",
        "net.minecraft.client.gui.screens.inventory.BookViewScreen$BookAccess",
        "net.minecraft.client.gui.screens.inventory.CartographyTableScreen",
        "net.minecraft.client.gui.screens.inventory.LoomScreen",
        "net.minecraft.client.gui.screens.inventory.PageButton",
        "net.minecraft.client.gui.screens.social.PlayerSocialManager",
        "net.minecraft.client.model.AgeableListModel",
        "net.minecraft.client.model.geom.ModelPart",
        "net.minecraft.client.model.geom.builders.PartDefinition",
        "net.minecraft.client.multiplayer.ClientLevel",
        "net.minecraft.client.player.LocalPlayer",
        "net.minecraft.client.player.RemotePlayer",
        "net.minecraft.client.renderer.GameRenderer",
        "net.minecraft.client.renderer.LevelRenderer",
        "net.minecraft.client.renderer.block.LiquidBlockRenderer",
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderDispatcher",
        "net.minecraft.client.renderer.entity.IronGolemRenderer",
        "net.minecraft.client.renderer.entity.UndeadHorseRenderer",
        "net.minecraft.client.renderer.entity.layers.ParrotOnShoulderLayer",
        "net.minecraft.core.dispenser.BlockSource",
        "net.minecraft.network.protocol.game.ClientboundLevelChunkPacketData$BlockEntityInfo",
        "net.minecraft.server.level.ServerLevel",
        "net.minecraft.server.level.ServerPlayer",
        "net.minecraft.server.network.ServerGamePacketListenerImpl",
        "net.minecraft.world.entity.Entity",
        "net.minecraft.world.entity.LivingEntity",
        "net.minecraft.world.entity.ai.goal.CatSitOnBlockGoal",
        "net.minecraft.world.entity.animal.Parrot",
        "net.minecraft.world.entity.animal.horse.AbstractHorse",
        "net.minecraft.world.entity.animal.horse.SkeletonHorse",
        "net.minecraft.world.entity.animal.horse.ZombieHorse",
        "net.minecraft.world.entity.item.FallingBlockEntity",
        "net.minecraft.world.entity.monster.AbstractSkeleton",
        "net.minecraft.world.entity.monster.Creeper",
        "net.minecraft.world.entity.monster.EnderMan",
        "net.minecraft.world.entity.monster.Evoker",
        "net.minecraft.world.entity.monster.Skeleton",
        "net.minecraft.world.entity.monster.Slime",
        "net.minecraft.world.entity.monster.Stray",
        "net.minecraft.world.entity.npc.VillagerTrades$TreasureMapForEmeralds",
        "net.minecraft.world.entity.npc.WanderingTrader",
        "net.minecraft.world.entity.npc.WanderingTraderSpawner",
        "net.minecraft.world.entity.player.Player",
        "net.minecraft.world.entity.projectile.AbstractArrow",
        "net.minecraft.world.entity.projectile.Snowball",
        "net.minecraft.world.inventory.CartographyTableMenu",
        "net.minecraft.world.inventory.CartographyTableMenu$4",
        "net.minecraft.world.inventory.GrindstoneMenu",
        "net.minecraft.world.inventory.GrindstoneMenu$2",
        "net.minecraft.world.inventory.GrindstoneMenu$4",
        "net.minecraft.world.inventory.LoomMenu",
        "net.minecraft.world.inventory.LoomMenu$3",
        "net.minecraft.world.item.BannerPatternItem",
        "net.minecraft.world.item.BowItem",
        "net.minecraft.world.item.BrushItem",
        "net.minecraft.world.item.HangingEntityItem",
        "net.minecraft.world.item.InkSacItem",
        "net.minecraft.world.item.Items",
        "net.minecraft.world.item.MapItem",
        "net.minecraft.world.item.ProjectileWeaponItem",
        "net.minecraft.world.level.Explosion",
        "net.minecraft.world.level.block.CampfireBlock",
        "net.minecraft.world.level.block.ComparatorBlock",
        "net.minecraft.world.level.block.FireBlock",
        "net.minecraft.world.level.block.IronBarsBlock",
        "net.minecraft.world.level.block.ObserverBlock",
        "net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity",
        "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase",
        "net.minecraft.world.level.levelgen.structure.structures.MineshaftPieces",
        "net.minecraft.world.level.levelgen.structure.structures.MineshaftPieces$MineShaftCorridor",
        "net.minecraft.world.level.levelgen.structure.structures.StrongholdPieces$FiveCrossing",
        "net.minecraft.world.level.levelgen.structure.structures.StrongholdPieces$RoomCrossing",
        "net.minecraft.world.level.storage.loot.functions.ExplorationMapFunction",
        "net.raphimc.immediatelyfast.feature.map_atlas_generation.MapAtlasTexture",
        "org.embeddedt.embeddium.impl.render.chunk.compile.pipeline.FluidRenderer",
        "vectorwing.farmersdelight.common.block.TomatoVineBlock"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Animals",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Data Pack Sync",
        "Custom Entities",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Renderer",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Particles",
        "Custom Potion Effects",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Handles Right Clicks with Items",
        "Has Capability Providers",
        "Has Commands",
        "Listens to Entity Interaction Events",
        "Listens to Entity Join World Events",
        "Listens to GUI Open Events",
        "Listens to Item Pickup Events",
        "Listens to Player Login Events",
        "Listens to Player Logout Events",
        "Listens to Right Click Block Events",
        "Listens to Server Started Events",
        "Listens to Server Stopped Events",
        "Localization",
        "Modifies Methods",
        "Modifies Tooltips",
        "Runs Client Tick Logic",
        "Runs Player Tick Logic",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Loot Modifiers"
      ]
    },
    "sushigocrafting": {
      "dependencies": {
        "minecraft": "[1.21.0,1.22)",
        "neoforge": "[21,)",
        "titanium": "[3.2.8,)"
      },
      "info": {
        "authors": "Buuz135",
        "classes": "122",
        "description": "Sushi!",
        "displayName": "Sushi Go Crafting",
        "file": "sushigocrafting-1.21-0.6.3.jar",
        "license": "MIT",
        "package": "com.buuz135.sushigocrafting",
        "version": "0.6.3"
      },
      "inheritance": {
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "com.buuz135.sushigocrafting.client.tesr.CuttingBoardRenderer",
          "com.buuz135.sushigocrafting.client.tesr.RollerRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "com.buuz135.sushigocrafting.datagen.SushiBlockstateProvider",
          "com.buuz135.sushigocrafting.datagen.SushiItemModelProvider",
          "com.buuz135.sushigocrafting.datagen.SushiModelProvider",
          "com.buuz135.sushigocrafting.datagen.SushiDataMapProvider",
          "com.buuz135.sushigocrafting.datagen.SushiLangProvider",
          "com.buuz135.sushigocrafting.datagen.SushiLootTableProvider",
          "com.buuz135.sushigocrafting.datagen.SushiBlockTagsProvider",
          "com.buuz135.sushigocrafting.datagen.SushiItemTagsProvider",
          "com.buuz135.sushigocrafting.datagen.SushiRecipeProvider"
        ],
        "net.minecraft.world.effect.MobEffect": [
          "com.buuz135.sushigocrafting.potioneffect.SmallBitesEffect",
          "com.buuz135.sushigocrafting.potioneffect.AcquiredTasteEffect",
          "com.buuz135.sushigocrafting.potioneffect.SteadyHandsEffect"
        ],
        "net.minecraft.world.entity.Entity": [
          "com.buuz135.sushigocrafting.entity.TunaEntity",
          "com.buuz135.sushigocrafting.entity.ShrimpEntity"
        ],
        "net.minecraft.world.entity.Mob": [
          "com.buuz135.sushigocrafting.entity.TunaEntity",
          "com.buuz135.sushigocrafting.entity.ShrimpEntity"
        ],
        "net.minecraft.world.item.Item": [
          "com.buuz135.sushigocrafting.item.SushiItem",
          "com.buuz135.sushigocrafting.item.AmountItem",
          "com.buuz135.sushigocrafting.item.FoodItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.buuz135.sushigocrafting.recipe.CuttingBoardRecipe",
          "com.buuz135.sushigocrafting.recipe.CombineAmountItemRecipe",
          "com.buuz135.sushigocrafting.recipe.FermentingBarrelRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.buuz135.sushigocrafting.block.SushiGoCraftingBlock",
          "com.buuz135.sushigocrafting.block.plant.AvocadoLeavesBlock",
          "com.buuz135.sushigocrafting.block.plant.WaterCropBlock",
          "com.buuz135.sushigocrafting.block.plant.AvocadoLogBlock",
          "com.buuz135.sushigocrafting.block.plant.CustomCropBlock",
          "com.buuz135.sushigocrafting.block.machinery.CoolerBoxBlock",
          "com.buuz135.sushigocrafting.block.machinery.CuttingBoardBlock",
          "com.buuz135.sushigocrafting.block.machinery.FermentationBarrelBlock",
          "com.buuz135.sushigocrafting.block.machinery.RiceCookerBlock",
          "com.buuz135.sushigocrafting.block.machinery.RollerBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entities",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Mobs",
        "Custom Potion Effects",
        "Custom Recipe Types",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Custom World Generation",
        "Localization",
        "Patchouli Guide Book",
        "Uses Access Transformers",
        "Uses Data Generators",
        "Uses Loot Modifiers"
      ]
    },
    "tesseract": {
      "dependencies": {
        "minecraft": "[1.21,1.21.2)",
        "neoforge": "[21.0.78-beta,)",
        "supermartijn642configlib": "[1.1.6,)",
        "supermartijn642corelib": "[1.1.17,1.2.0)"
      },
      "info": {
        "authors": "SuperMartijn642",
        "classes": "52",
        "description": "Tesseract allows you to transport Items, Fluid and Energy",
        "displayName": "Tesseract",
        "file": "tesseract-1.0.37-neoforge-mc1.21.jar",
        "license": "All rights reserved",
        "package": "com.supermartijn642.tesseract",
        "version": "1.0.37"
      },
      "inheritance": {
        "net.minecraft.world.level.block.Block": [
          "com.supermartijn642.tesseract.TesseractBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Blocks",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "titanium": {
      "dependencies": {
        "neoforge": "[21.0,)"
      },
      "info": {
        "classes": "315",
        "description": "A Lib\n",
        "displayName": "Titanium",
        "file": "titanium-1.21-4.0.34.jar",
        "license": "GNU LESSER GENERAL PUBLIC LICENSE",
        "package": "com.hrznstudio.titanium",
        "version": "4.0.34"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.hrznstudio.titanium.client.screen.ScreenAddonScreen",
          "com.hrznstudio.titanium.client.screen.container.BasicContainerScreen",
          "com.hrznstudio.titanium.client.screen.container.BasicAddonScreen"
        ],
        "net.minecraft.data.DataProvider": [
          "com.hrznstudio.titanium.datagenerator.model.BlockItemModelGeneratorProvider",
          "com.hrznstudio.titanium.datagenerator.loot.TitaniumLootTableProvider"
        ],
        "net.minecraft.world.item.Item": [
          "com.hrznstudio.titanium.item.BasicItem",
          "com.hrznstudio.titanium.item.EnergyItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "com.hrznstudio.titanium._impl.test.recipe.TestSerializableRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.hrznstudio.titanium._impl.creative.CreativeFEGeneratorBlock",
          "com.hrznstudio.titanium._impl.test.TwentyFourTestBlock",
          "com.hrznstudio.titanium._impl.test.MachineTestBlock",
          "com.hrznstudio.titanium._impl.test.TestBlock",
          "com.hrznstudio.titanium._impl.test.AssetTestBlock",
          "com.hrznstudio.titanium.block.BasicBlock",
          "com.hrznstudio.titanium.block.RotatableBlock",
          "com.hrznstudio.titanium.block.BasicTileBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "com.hrznstudio.titanium.block_network.NetworkManager",
          "com.hrznstudio.titanium.reward.storage.RewardWorldStorage"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Items",
        "Custom Recipe Types",
        "Localization",
        "Stores Data in World Saves",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "toofast": {
      "dependencies": {},
      "info": {
        "authors": "Noobanidus",
        "classes": "2",
        "description": "Disables \"moved too quickly\".\n",
        "displayName": "Too Fast",
        "file": "toofast-1.21.0-0.4.3.5.jar",
        "license": "https://github.com/noobanidus/TooFast/blob/1.18/LICENSE",
        "package": "noobanidus.mods.toofast",
        "version": "0.4.3.5"
      },
      "modifies": [
        "net.minecraft.server.network.ServerGamePacketListenerImpl"
      ],
      "summary": [
        "Uses Access Transformers"
      ]
    },
    "toolbelt": {
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.10-beta,)",
        "sewingkit": "[2.0.1,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "dev.gigaherz.toolbelt.client.ClientEvents$ModBusEvents#clientSetup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLCommonSetupEvent": [
          "dev.gigaherz.toolbelt.BeltFinderDebug#init"
        ],
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "dev.gigaherz.toolbelt.client.ClientEvents#handleKeys"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$AddLayers": [
          "dev.gigaherz.toolbelt.client.ClientEvents$ModBusEvents#construct"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": [
          "dev.gigaherz.toolbelt.client.ClientEvents$ModBusEvents#registerLayer"
        ],
        "net.neoforged.neoforge.client.event.MovementInputUpdateEvent": [
          "dev.gigaherz.toolbelt.client.ClientEvents#updateInputEvent"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "dev.gigaherz.toolbelt.client.ClientEvents$ModBusEvents#colors"
        ],
        "net.neoforged.neoforge.client.event.RegisterKeyMappingsEvent": [
          "dev.gigaherz.toolbelt.client.ClientEvents$ModBusEvents#initKeybinds"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "dev.gigaherz.toolbelt.ToolBelt$ClientModBusEvents#menuScreens"
        ],
        "net.neoforged.neoforge.client.event.RenderGuiLayerEvent$Pre": [
          "dev.gigaherz.toolbelt.client.RadialMenuScreen#overlayEvent"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "dev.gigaherz.toolbelt.slot.BeltAttachment$EventHandlers#attachCapabilities"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDropsEvent": [
          "dev.gigaherz.toolbelt.slot.BeltAttachment$EventHandlers#playerDeath"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$Clone": [
          "dev.gigaherz.toolbelt.slot.BeltAttachment$EventHandlers#playerClone"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": [
          "dev.gigaherz.toolbelt.slot.BeltAttachment$EventHandlers#joinWorld"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": [
          "dev.gigaherz.toolbelt.slot.BeltAttachment$EventHandlers#joinWorld"
        ],
        "net.neoforged.neoforge.event.entity.player.PlayerEvent$StartTracking": [
          "dev.gigaherz.toolbelt.slot.BeltAttachment$EventHandlers#track",
          "dev.gigaherz.toolbelt.common.BeltEvents#startTracking"
        ],
        "net.neoforged.neoforge.event.tick.PlayerTickEvent$Post": [
          "dev.gigaherz.toolbelt.slot.BeltAttachment$EventHandlers#entityTick"
        ]
      },
      "info": {
        "authors": "gigaherz",
        "classes": "76",
        "description": "Declutter your inventory of tools\n",
        "displayName": "Tool Belt",
        "file": "ToolBelt-1.21.1-2.2.6.jar",
        "license": "BSD (3 clause)",
        "package": "dev.gigaherz.toolbelt",
        "version": "2.2.6"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.gigaherz.toolbelt.slot.BeltSlotScreen",
          "dev.gigaherz.toolbelt.common.BeltScreen",
          "dev.gigaherz.toolbelt.client.RadialMenuScreen"
        ],
        "net.minecraft.data.DataProvider": [
          "dev.gigaherz.toolbelt.ToolBelt$DataGen$Recipes"
        ],
        "net.minecraft.world.item.Item": [
          "dev.gigaherz.toolbelt.belt.ToolBeltItem"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Key Mappings",
        "Custom Tag Assignments",
        "Listens to Dimension Change Events",
        "Listens to Entity Drop Events",
        "Listens to Entity Join World Events",
        "Listens to Player Login Events",
        "Localization",
        "Runs Client Tick Logic",
        "Runs Player Tick Logic",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "toolkit": {
      "dependencies": {
        "architectury": "[13.0.1,)",
        "minecraft": "[1.21,)",
        "neoforge": "[21,)"
      },
      "info": {
        "authors": "Sunekaer",
        "classes": "37",
        "description": "This mod adds bunch of useful commands\n",
        "displayName": "Toolkit",
        "file": "ToolKit-neoforge-87.0.1.jar",
        "license": "All Rights Reserved",
        "package": "com.sunekaer.toolkit",
        "version": "87.0.1"
      },
      "summary": [
        "Localization"
      ]
    },
    "torchmaster": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.xalcon.torchmaster.mixin.MinecraftServerMixin",
            "method": {
              "argTypes": [
                "java.util.function.BooleanSupplier",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "torchmaster_tickServer_tail",
              "raw": "torchmaster_tickServer_tail(Ljava/util/function/BooleanSupplier;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "net.xalcon.torchmaster.mixin.MixinTitleScreen",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "init",
              "raw": "init(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.41,)"
      },
      "events": {
        "net.neoforged.neoforge.event.entity.living.MobSpawnEvent$PositionCheck": [
          "net.xalcon.torchmaster.NeoforgeEventHandler#onDoSpecialSpawn",
          "net.xalcon.torchmaster.NeoforgeEventHandler#onCheckSpawn"
        ],
        "net.neoforged.neoforge.event.village.VillageSiegeEvent": [
          "net.xalcon.torchmaster.NeoforgeEventHandler#onVillageSiegeEvent"
        ]
      },
      "info": {
        "authors": "Xalcon",
        "classes": "56",
        "description": "Special lamp and torch which prevents mob spawning.",
        "displayName": "Torchmaster",
        "file": "torchmaster-neoforge-1.21.1-21.1.5-beta.jar",
        "license": "MIT",
        "package": "net.xalcon.torchmaster",
        "version": "21.1.5-beta"
      },
      "inheritance": {
        "net.minecraft.world.item.Item": [
          "net.xalcon.torchmaster.items.TMItemBlock"
        ],
        "net.minecraft.world.level.block.Block": [
          "net.xalcon.torchmaster.blocks.EntityBlockingLightBlock",
          "net.xalcon.torchmaster.blocks.InvisibleLightBlock",
          "net.xalcon.torchmaster.blocks.FeralFlareLanternBlock"
        ],
        "net.minecraft.world.level.saveddata.SavedData": [
          "net.xalcon.torchmaster.logic.EntityBlockingManager",
          "net.xalcon.torchmaster.logic.entityblocking.FilteredLightManager"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.screens.TitleScreen",
        "net.minecraft.server.MinecraftServer"
      ],
      "summary": [
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods",
        "Stores Data in World Saves"
      ]
    },
    "trashcans": {
      "dependencies": {
        "minecraft": "[1.21,1.21.2)",
        "neoforge": "[21.0.78-beta,)",
        "supermartijn642configlib": "[1.1.6,)",
        "supermartijn642corelib": "[1.1.17,1.2.0)"
      },
      "info": {
        "authors": "SuperMartijn642",
        "classes": "60",
        "description": "Trash Cans adds Trash Cans which can be used to void items, liquids and energy!",
        "displayName": "Trash Cans",
        "file": "trashcans-1.0.18c-neoforge-mc1.21.jar",
        "license": "All rights reserved",
        "package": "com.supermartijn642.trashcans",
        "version": "1.0.18+c"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.supermartijn642.trashcans.screen.TrashCanWidgetContainerScreen"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.supermartijn642.trashcans.TrashCanBlock"
        ]
      },
      "summary": [
        "Custom Advancements",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom Item Models",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "travelerstitles": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.yungnickyoung.minecraft.travelerstitles.mixin.MinecraftClientTickMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onClientTick",
              "raw": "onClientTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.yungnickyoung.minecraft.travelerstitles.mixin.LocalPlayerTickMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onPostPlayerTick",
              "raw": "onPostPlayerTick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.yungnickyoung.minecraft.travelerstitles.mixin.EntityChangeDimensionMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.portal.DimensionTransition",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "onPlayerChangeDimension",
              "raw": "onPlayerChangeDimension(Lnet/minecraft/world/level/portal/DimensionTransition;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.0,)",
        "yungsapi": "[1.21.1-NeoForge-5.1.2,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.RegisterGuiLayersEvent": [
          "com.yungnickyoung.minecraft.travelerstitles.module.RenderGuiNeoForge#onClientTick"
        ]
      },
      "info": {
        "authors": "YUNGNICKYOUNG",
        "classes": "35",
        "description": "Epic, RPG-like titles when entering biomes & dimensions",
        "displayName": "Traveler's Titles",
        "file": "TravelersTitles-1.21.1-NeoForge-5.1.2.jar",
        "license": "LGPLv3",
        "package": "com.yungnickyoung.minecraft.travelerstitles",
        "version": "1.21.1-NeoForge-5.1.2"
      },
      "inheritance": {
        "net.minecraft.world.entity.Entity": [
          "com.yungnickyoung.minecraft.travelerstitles.mixin.LocalPlayerTickMixin"
        ]
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.player.LocalPlayer",
        "net.minecraft.world.entity.Entity"
      ],
      "summary": [
        "Custom Entities",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods"
      ]
    },
    "trenzalore": {
      "dependencies": {
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[1.0,)"
      },
      "info": {
        "authors": "UnRealDinnerbone",
        "classes": "15",
        "description": "This mod adds a few small helpers to provide compatibility with Forge / Fabric.",
        "displayName": "Trenzalore",
        "file": "trenzalore-neo-6.1.1+mc1.21.1.jar",
        "license": "All Rights Reserved unless stated otherwise. Distribution permission is given to FeedTheBeast and CurseForge for use in modpacks",
        "package": "com.unrealdinnerbone.trenzalore",
        "version": "6.1.1"
      },
      "summary": [
        "Uses Access Transformers"
      ]
    },
    "txnilib": {
      "dependencies": {
        "minecraft": "[1.21.1,)"
      },
      "info": {
        "authors": "Toni",
        "classes": "50",
        "description": "Yet Another Library Mod",
        "displayName": "TxniLib",
        "file": "txnilib-neoforge-1.0.22-1.21.1.jar",
        "license": "MIT",
        "package": "toni.lib",
        "version": "1.0.21"
      },
      "summary": [
        "Localization",
        "Uses Access Transformers"
      ]
    },
    "utilitarian": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "cy.jdkdigital.utilitarian.mixin.MixinServerAdvancementManager",
            "method": {
              "argTypes": [
                "java.util.Map",
                "net.minecraft.server.packs.resources.ResourceManager",
                "net.minecraft.util.profiling.ProfilerFiller",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "utilitarian_removeAdvancements",
              "raw": "utilitarian_removeAdvancements(Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=INVOKE, target=Lnet/minecraft/advancements/AdvancementTree;<init>()V}]"
            }
          },
          {
            "class": "cy.jdkdigital.utilitarian.mixin.MixinFarmBlock",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.block.state.BlockState",
                "net.minecraft.world.level.LevelReader",
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "canSurvive",
              "raw": "canSurvive(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.82-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "cy.jdkdigital.utilitarian.Config#onLoad"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "cy.jdkdigital.utilitarian.event.ClientModEvents#init"
        ],
        "net.neoforged.neoforge.capabilities.RegisterCapabilitiesEvent": [
          "cy.jdkdigital.utilitarian.event.ModEventHandler#registerBlockEntityCapabilities"
        ],
        "net.neoforged.neoforge.client.event.ClientChatReceivedEvent$System": [
          "cy.jdkdigital.utilitarian.event.EventHandler#onSystemMessage"
        ],
        "net.neoforged.neoforge.client.event.EntityRenderersEvent$RegisterRenderers": [
          "cy.jdkdigital.utilitarian.event.ClientModEvents#registerEntityRenderers"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Block": [
          "cy.jdkdigital.utilitarian.event.ClientModEvents#registerBlockColors"
        ],
        "net.neoforged.neoforge.client.event.RegisterColorHandlersEvent$Item": [
          "cy.jdkdigital.utilitarian.event.ClientModEvents#registerItemColors"
        ],
        "net.neoforged.neoforge.client.event.ScreenEvent$Init$Post": [
          "cy.jdkdigital.utilitarian.event.ClientEvents#onLoad"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "cy.jdkdigital.utilitarian.data.UtilitarianDataProvider#gatherData"
        ],
        "net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent": [
          "cy.jdkdigital.utilitarian.event.ClientModEvents#tabContents"
        ],
        "net.neoforged.neoforge.event.entity.EntityJoinLevelEvent": [
          "cy.jdkdigital.utilitarian.event.EventHandler#onEntitySpawn"
        ],
        "net.neoforged.neoforge.event.entity.player.BonemealEvent": [
          "cy.jdkdigital.utilitarian.event.EventHandler#onBoneMeal"
        ],
        "net.neoforged.neoforge.event.entity.player.CanPlayerSleepEvent": [
          "cy.jdkdigital.utilitarian.event.EventHandler#canSleep"
        ],
        "net.neoforged.neoforge.event.entity.player.ItemTooltipEvent": [
          "cy.jdkdigital.utilitarian.event.EventHandler#onTooltip"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$BlockToolModificationEvent": [
          "cy.jdkdigital.utilitarian.event.EventHandler#blockToolModified"
        ],
        "net.neoforged.neoforge.event.level.BlockEvent$FarmlandTrampleEvent": [
          "cy.jdkdigital.utilitarian.event.EventHandler#onTrample"
        ]
      },
      "info": {
        "authors": "LobsterJonn",
        "classes": "45",
        "description": "Various features and changes to the base game.",
        "displayName": "Utilitarian",
        "file": "utilitarian-1.21.1-0.13.5.jar",
        "license": "All Rights Reserved",
        "package": "cy.jdkdigital.utilitarian",
        "version": "1.21.1-0.13.5"
      },
      "inheritance": {
        "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": [
          "cy.jdkdigital.utilitarian.client.render.block.NoSolicitingBannerRenderer"
        ],
        "net.minecraft.data.DataProvider": [
          "cy.jdkdigital.utilitarian.data.RecipeProvider",
          "cy.jdkdigital.utilitarian.data.ModelProvider",
          "cy.jdkdigital.utilitarian.data.LootDataProvider",
          "cy.jdkdigital.utilitarian.data.DataMapProvider"
        ],
        "net.minecraft.world.item.Item": [
          "cy.jdkdigital.utilitarian.common.item.YankingRopeItem",
          "cy.jdkdigital.utilitarian.common.item.TrowelItem",
          "cy.jdkdigital.utilitarian.common.item.TPSMeterItem",
          "cy.jdkdigital.utilitarian.common.item.RestrainingOrder",
          "cy.jdkdigital.utilitarian.common.item.AngelBlockItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "cy.jdkdigital.utilitarian.common.block.WellBehavedDropperBlock",
          "cy.jdkdigital.utilitarian.common.block.TPSMeter",
          "cy.jdkdigital.utilitarian.common.block.SoulSnadBlock",
          "cy.jdkdigital.utilitarian.common.block.SolicitingCarpet",
          "cy.jdkdigital.utilitarian.common.block.SnadBlock",
          "cy.jdkdigital.utilitarian.common.block.RedstoneClockBlock",
          "cy.jdkdigital.utilitarian.common.block.NoSolicitingWallBanner",
          "cy.jdkdigital.utilitarian.common.block.NoSolicitingBanner",
          "cy.jdkdigital.utilitarian.common.block.GrrassBlock",
          "cy.jdkdigital.utilitarian.common.block.FluidHopperBlock",
          "cy.jdkdigital.utilitarian.common.block.DritBlock",
          "cy.jdkdigital.utilitarian.common.block.AngelBlock"
        ]
      },
      "modifies": [
        "net.minecraft.server.ServerAdvancementManager",
        "net.minecraft.world.level.block.FarmBlock"
      ],
      "summary": [
        "Auto-reloads Config Files",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Renderer",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Entity Renderers",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Recipes",
        "Custom Tag Assignments",
        "Has Capability Providers",
        "Listens to Entity Join World Events",
        "Localization",
        "Modifies Farmland Trampling",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "watut": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.corosus.watut.mixin.PlayerTick",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tick",
              "raw": "tick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.corosus.watut.mixin.PlayerLoggedIn",
            "method": {
              "argTypes": [
                "net.minecraft.network.Connection",
                "net.minecraft.server.level.ServerPlayer",
                "net.minecraft.server.network.CommonListenerCookie",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "placeNewPlayer",
              "raw": "placeNewPlayer(Lnet/minecraft/network/Connection;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/network/CommonListenerCookie;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.corosus.watut.mixin.client.TextureAtlasUpload",
            "method": {
              "argTypes": [
                "net.minecraft.client.renderer.texture.SpriteLoader$Preparations",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "render",
              "raw": "render(Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.corosus.watut.mixin.client.SetupRotationsInject",
            "method": {
              "argTypes": [
                "net.minecraft.world.entity.LivingEntity",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "setupAnim",
              "raw": "setupAnim(Lnet/minecraft/world/entity/LivingEntity;FFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.corosus.watut.mixin.client.ScreenRenderWithTooltip",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderWithTooltipEnd",
              "raw": "renderWithTooltipEnd(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.corosus.watut.mixin.client.ScreenRenderWithTooltip",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "int",
                "int",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "renderWithTooltipStart",
              "raw": "renderWithTooltipStart(Lnet/minecraft/client/gui/GuiGraphics;IIFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=HEAD}]"
            }
          },
          {
            "class": "com.corosus.watut.mixin.client.MouseHandlerOnPress",
            "method": {
              "argTypes": [
                "long",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "onPress",
              "raw": "onPress(JIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.corosus.watut.mixin.client.MinecraftTick",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "tick",
              "raw": "tick(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.corosus.watut.mixin.client.KeyboardHandlerKeyPress",
            "method": {
              "argTypes": [
                "long",
                "int",
                "int",
                "int",
                "int",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "keyPress",
              "raw": "keyPress(JIIIILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.corosus.watut.mixin.client.GuiRender",
            "method": {
              "argTypes": [
                "net.minecraft.client.gui.GuiGraphics",
                "net.minecraft.client.DeltaTracker",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "render",
              "raw": "render(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/DeltaTracker;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.corosus.watut.mixin.client.GuiGraphicsInnerBlit",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "int",
                "int",
                "int",
                "int",
                "int",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "innerBlit",
              "raw": "innerBlit(Lnet/minecraft/resources/ResourceLocation;IIIIIFFFFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          },
          {
            "class": "com.corosus.watut.mixin.client.GuiGraphicsInnerBlit",
            "method": {
              "argTypes": [
                "net.minecraft.resources.ResourceLocation",
                "int",
                "int",
                "int",
                "int",
                "int",
                "float",
                "float",
                "float",
                "float",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "innerBlit",
              "raw": "innerBlit(Lnet/minecraft/resources/ResourceLocation;IIIIIFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=TAIL}]"
            }
          }
        ]
      },
      "dependencies": {
        "coroutil": "[1.21.0-1.3.7,)",
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.0-beta,)"
      },
      "info": {
        "authors": "Corosus",
        "classes": "50",
        "description": "Lets you see if players are typing, in a GUI, idle, with cool ingame visuals",
        "displayName": "What Are They Up To",
        "file": "watut-neoforge-1.21.0-1.1.4.jar",
        "license": "All Rights Reserved",
        "package": "com.corosus.watut",
        "version": "1.21.0-1.1.4"
      },
      "inheritance": {
        "net.minecraft.client.particle.Particle": [
          "com.corosus.watut.particle.ParticleStaticPartial",
          "com.corosus.watut.particle.ParticleStaticLoD",
          "com.corosus.watut.particle.ParticleStatic",
          "com.corosus.watut.particle.ParticleRotating",
          "com.corosus.watut.particle.ParticleDynamic",
          "com.corosus.watut.particle.ParticleAnimated"
        ]
      },
      "modifies": [
        "net.minecraft.client.KeyboardHandler",
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.MouseHandler",
        "net.minecraft.client.gui.Gui",
        "net.minecraft.client.gui.GuiGraphics",
        "net.minecraft.client.gui.components.PlayerTabOverlay",
        "net.minecraft.client.gui.screens.Screen",
        "net.minecraft.client.model.PlayerModel",
        "net.minecraft.client.renderer.texture.TextureAtlas",
        "net.minecraft.server.players.PlayerList",
        "net.minecraft.world.entity.player.Player"
      ],
      "summary": [
        "Custom Particles",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "weathergate": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.unrealdinnerbone.weathergate.mixin.ServerLevelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.core.BlockPos"
              ],
              "name": "tickWeatherIce",
              "raw": "tickWeatherIce(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/core/BlockPos;)V"
            },
            "params": {
              "at": "[{value=INVOKE, ordinal=0, target=Lnet/minecraft/server/level/ServerLevel;setBlockAndUpdate(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.unrealdinnerbone.weathergate.mixin.ServerLevelMixin",
            "method": {
              "argTypes": [
                "net.minecraft.core.BlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo",
                "net.minecraft.core.BlockPos"
              ],
              "name": "tickWeatherSnow",
              "raw": "tickWeatherSnow(Lnet/minecraft/core/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/core/BlockPos;)V"
            },
            "params": {
              "at": "[{value=INVOKE, ordinal=0, target=Lnet/minecraft/server/level/ServerLevel;getBlockState(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState;}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "ftblibrary": " ",
        "minecraft": "[1.21.1,1.21.1]",
        "neoforge": "[1.0,)",
        "trenzalore": "[6.1.1,)"
      },
      "info": {
        "authors": "UnRealDinnerbone",
        "classes": "40",
        "description": "Gate the weather",
        "displayName": "Weather Gate",
        "file": "weathergate-neo-2.0.0+mc1.21.1.jar",
        "license": "All Rights Reserved unless stated otherwise. Distribution permission is given to FeedTheBeast and CurseForge for use in modpacks",
        "package": "com.unrealdinnerbone.weathergate",
        "version": "2.0.0"
      },
      "inheritance": {
        "net.minecraft.data.DataProvider": [
          "com.unrealdinnerbone.weathergate.data.LangProvider",
          "com.unrealdinnerbone.weathergate.data.RecipeProvider",
          "com.unrealdinnerbone.weathergate.data.TagProvider$Blocks",
          "com.unrealdinnerbone.weathergate.data.ModelProvider"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.unrealdinnerbone.weathergate.block.SunInABoxBlock",
          "com.unrealdinnerbone.weathergate.block.SnowCatcherBlock",
          "com.unrealdinnerbone.weathergate.block.TerrainControllerBlock"
        ]
      },
      "modifies": [
        "net.minecraft.client.multiplayer.ClientLevel",
        "net.minecraft.server.level.ServerLevel"
      ],
      "summary": [
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers",
        "Uses Data Generators"
      ]
    },
    "whatthebucket": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "net.darkhax.whatthebucket.common.mixin.MixinItems",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "classInit",
              "raw": "classInit(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{value=RETURN}]"
            }
          }
        ]
      },
      "dependencies": {
        "bookshelf": "[21.1,21.2)",
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.61,)",
        "prickle": "[21.1,21.2)"
      },
      "info": {
        "authors": "Darkhax",
        "classes": "4",
        "description": "Fixes MC-151457 which resulted in some bucket variants not producing an empty bucket when used as an ingredient.",
        "displayName": "WhatTheBucket",
        "file": "whatthebucket-neoforge-1.21.1-21.1.1.jar",
        "license": "LGPL 2.1",
        "package": "net.darkhax.whatthebucket.common.impl",
        "updateUrl": "https://updates.blamejared.com/get?n=whatthebucket&gv=1.21.1&ml=neoforge",
        "version": "21.1.1"
      },
      "modifies": [
        "net.minecraft.world.item.Item",
        "net.minecraft.world.item.Items"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "whodoesthat": {
      "dependencies": {
        "minecraft": "[1.21.1,)",
        "neoforge": "[20,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "com.davenonymous.whodoesthat.config.ModConfig#onLoad"
        ],
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "com.davenonymous.whodoesthat.WhoDoesThat#onClientSetup"
        ],
        "net.neoforged.fml.event.lifecycle.FMLLoadCompleteEvent": [
          "com.davenonymous.whodoesthat.WhoDoesThat#loadingFinished"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientCommandsEvent": [
          "com.davenonymous.whodoesthat.setup.ModCommands#onRegisterCommands"
        ],
        "net.neoforged.neoforge.client.event.RegisterClientTooltipComponentFactoriesEvent": [
          "com.davenonymous.whodoesthat.setup.ModTooltipComponents#onTooltipRegister"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "com.davenonymous.whodoesthat.datagen.DGHandler#gatherData"
        ]
      },
      "info": {
        "authors": "Davenonymous",
        "classes": "133",
        "description": "Find which mods are touching which parts of Minecraft",
        "displayName": "WhoDoesThat",
        "file": "whodoesthat-1.0.0.jar",
        "license": "MIT",
        "package": "com.davenonymous.whodoesthat",
        "version": "1.0.0"
      },
      "inheritance": {
        "com.mojang.brigadier.Command": [
          "com.davenonymous.whodoesthat.command.ShowScreenCommand",
          "com.davenonymous.whodoesthat.command.ReloadYamlConfigCommand",
          "com.davenonymous.whodoesthat.command.RecreateDefaultConfigsCommand",
          "com.davenonymous.whodoesthat.command.DumpAllCommand"
        ],
        "net.minecraft.client.gui.screens.Screen": [
          "com.davenonymous.whodoesthat.WhoDoesThat$1",
          "com.davenonymous.whodoesthat.lib.gui.WidgetScreen",
          "com.davenonymous.whodoesthat.lib.gui.WidgetContainerScreen",
          "com.davenonymous.whodoesthat.gui.ModOverviewScreen"
        ],
        "net.minecraft.data.DataProvider": [
          "com.davenonymous.whodoesthat.datagen.DefaultDescriptions"
        ]
      },
      "summary": [
        "Auto-reloads Config Files",
        "Custom Client Commands",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Tooltip Components",
        "Has Commands",
        "Localization",
        "Uses Data Generators"
      ]
    },
    "wits": {
      "dependencies": {
        "minecraft": "[1.21,)"
      },
      "info": {
        "authors": "TelepathicGrunt",
        "classes": "4",
        "description": "Use `\\wits` command to get registry name of all structures where you are standing.\n",
        "displayName": "WITS",
        "file": "wits-1.3.0+1.21-neoforge.jar",
        "license": "https://github.com/TelepathicGrunt/WITS/blob/latest-released/LICENSE",
        "package": "com.telepathicgrunt.wits",
        "version": "1.3.0+1.21-neoforge"
      },
      "summary": [
        "Uses Access Transformers"
      ]
    },
    "xp_synthesiser": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.0,)"
      },
      "events": {
        "net.neoforged.fml.event.config.ModConfigEvent": [
          "com.mcdart.xp_synthesiser.Config#onLoad"
        ],
        "net.neoforged.neoforge.client.event.RegisterMenuScreensEvent": [
          "com.mcdart.xp_synthesiser.XPSynthesiser$ClientModEvents#registerScreens"
        ],
        "net.neoforged.neoforge.event.entity.living.LivingDeathEvent": [
          "com.mcdart.xp_synthesiser.XPSynthesiser#killed"
        ]
      },
      "info": {
        "authors": "MCDart",
        "classes": "14",
        "description": "A mod that allows you to synthesise XP from power",
        "displayName": "XP Synthesiser",
        "file": "xp_synthesiser-1.0.1.jar",
        "license": "All Rights Reserved",
        "package": "com.mcdart.xp_synthesiser",
        "version": "1.0.1"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "com.mcdart.xp_synthesiser.blocks.SynthesiserScreen"
        ],
        "net.minecraft.world.item.Item": [
          "com.mcdart.xp_synthesiser.items.KillRecorderItem"
        ],
        "net.minecraft.world.level.block.Block": [
          "com.mcdart.xp_synthesiser.blocks.XPSynthesiserBlock"
        ]
      },
      "summary": [
        "Auto-reloads Config Files",
        "Custom Advancements",
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Listens to Entity Death Events",
        "Localization"
      ]
    },
    "xtonesreworked": {
      "dependencies": {
        "minecraft": "[1.21,1.21.1)",
        "neoforge": "[21.0.0-beta,)"
      },
      "events": {
        "net.neoforged.fml.event.lifecycle.FMLClientSetupEvent": [
          "net.tobsend.xtonesreworked.XtonesReworkedMod$ClientModEvents#onClientSetup"
        ],
        "net.neoforged.neoforge.event.server.ServerStartingEvent": [
          "net.tobsend.xtonesreworked.XtonesReworkedMod#onServerStarting"
        ]
      },
      "info": {
        "authors": "TobsenD",
        "classes": "42",
        "description": "This is a port of the Mod Xtones from TehNut(https://github.com/TehNut/Xtones).",
        "displayName": "XTones Reworked",
        "file": "xtonesreworked-1.1.0-NF-1.21_21.0.167.jar",
        "license": "MIT",
        "package": "net.tobsend.xtonesreworked",
        "version": "1.1.0"
      },
      "inheritance": {
        "net.minecraft.world.level.block.Block": [
          "net.tobsend.xtonesreworked.block.custom.XGlass",
          "net.tobsend.xtonesreworked.block.custom.XBlock",
          "net.tobsend.xtonesreworked.block.custom.FlatLamp"
        ]
      },
      "summary": [
        "Custom Block Models",
        "Custom Block Textures",
        "Custom Blocks",
        "Custom Item Models",
        "Custom Loot Tables",
        "Custom Tag Assignments",
        "Listens to Server Starting Events",
        "Localization"
      ]
    },
    "yeetusexperimentus": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.sunekaer.yeetusexperimentus.neo.mixin.PrimaryLevelDataMixinNeo",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "hasConfirmedExperimentalWarning",
              "raw": "hasConfirmedExperimentalWarning(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,)",
        "neoforge": "[21,)"
      },
      "info": {
        "authors": "Sunekaer",
        "classes": "6",
        "description": "Disables the Experimental Settings popup, which appears when you create or load world.\n",
        "displayName": "Yeetus Experimentus",
        "file": "yeetusexperimentus-neoforge-87.0.0.jar",
        "license": "All Rights Reserved",
        "package": "com.sunekaer.yeetusexperimentus",
        "version": "87.0.0"
      },
      "modifies": [
        "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen",
        "net.minecraft.client.gui.screens.worldselection.WorldOpenFlows",
        "net.minecraft.world.level.storage.PrimaryLevelData"
      ],
      "summary": [
        "Modifies Methods"
      ]
    },
    "yet_another_config_lib_v3": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "dev.isxander.yacl3.mixin.MinecraftMixin",
            "method": {
              "argTypes": [
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfo"
              ],
              "name": "closeImages",
              "raw": "closeImages(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V"
            },
            "params": {
              "at": "[{shift=EnumHolder[desc=Lorg/spongepowered/asm/mixin/injection/At$Shift;, value=BEFORE], value=INVOKE, target=Lnet/minecraft/client/Minecraft;close()V}]"
            }
          }
        ]
      },
      "dependencies": {},
      "info": {
        "authors": "isXander",
        "classes": "345",
        "description": "YetAnotherConfigLib (yacl) is just that. A builder-based configuration library for Minecraft.\n",
        "displayName": "YetAnotherConfigLib",
        "file": "YetAnotherConfigLib-3.6.2+1.21-neoforge.jar",
        "license": "LGPL-3.0-or-later",
        "package": "dev.isxander.yacl3.gui",
        "version": "3.6.2+1.21-neoforge"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "dev.isxander.yacl3.gui.controllers.PopupControllerScreen",
          "dev.isxander.yacl3.gui.YACLScreen",
          "dev.isxander.yacl3.gui.RequireRestartScreen"
        ]
      },
      "modifies": [
        "net.minecraft.client.Minecraft",
        "net.minecraft.client.OptionInstance",
        "net.minecraft.client.gui.components.AbstractSelectionList",
        "net.minecraft.client.gui.components.events.ContainerEventHandler",
        "net.minecraft.client.gui.components.tabs.TabNavigationBar"
      ],
      "summary": [
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Localization",
        "Modifies Methods",
        "Uses Access Transformers"
      ]
    },
    "yungsapi": {
      "annotations": {
        "org.spongepowered.asm.mixin.injection.Inject": [
          {
            "class": "com.yungnickyoung.minecraft.yungsapi.mixin.NoVinesInStructuresMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "yungsapi_noVinesInStructures",
              "raw": "yungsapi_noVinesInStructures(Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.yungnickyoung.minecraft.yungsapi.mixin.NoMagmaInStructuresMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "yungsapi_noMagmaInStructures",
              "raw": "yungsapi_noMagmaInStructures(Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.yungnickyoung.minecraft.yungsapi.mixin.NoDeltasInStructuresMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "yungsapi_noDeltasInStructures",
              "raw": "yungsapi_noDeltasInStructures(Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.yungnickyoung.minecraft.yungsapi.mixin.NoBasaltColumnsInStructuresMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.LevelAccessor",
                "int",
                "net.minecraft.core.BlockPos$MutableBlockPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "yungsapi_noBasaltColumnsInStructures",
              "raw": "yungsapi_noBasaltColumnsInStructures(Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=HEAD}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.yungnickyoung.minecraft.yungsapi.mixin.BeardifierMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.levelgen.DensityFunction$FunctionContext",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "yungsapi_calculateDensity",
              "raw": "yungsapi_calculateDensity(Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          },
          {
            "class": "com.yungnickyoung.minecraft.yungsapi.mixin.BeardifierMixin",
            "method": {
              "argTypes": [
                "net.minecraft.world.level.StructureManager",
                "net.minecraft.world.level.ChunkPos",
                "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable"
              ],
              "name": "yungsapi_supportCustomTerrainAdaptations",
              "raw": "yungsapi_supportCustomTerrainAdaptations(Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V"
            },
            "params": {
              "at": "[{value=RETURN}]",
              "cancellable": "true"
            }
          }
        ]
      },
      "dependencies": {
        "minecraft": "[1.21,1.22)",
        "neoforge": "[21.0.0,)"
      },
      "info": {
        "authors": "YUNGNICKYOUNG",
        "classes": "163",
        "description": "API Library for YUNG's minecraft mods.",
        "displayName": "YUNG's API",
        "file": "YungsApi-1.21.1-NeoForge-5.1.3.jar",
        "license": "LGPLv3",
        "package": "com.yungnickyoung.minecraft.yungsapi",
        "version": "1.21.1-NeoForge-5.1.3"
      },
      "modifies": [
        "net.minecraft.world.level.levelgen.Beardifier",
        "net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature",
        "net.minecraft.world.level.levelgen.feature.DeltaFeature",
        "net.minecraft.world.level.levelgen.feature.UnderwaterMagmaFeature",
        "net.minecraft.world.level.levelgen.feature.VinesFeature",
        "net.minecraft.world.level.levelgen.structure.BoundingBox",
        "net.minecraft.world.level.levelgen.structure.pools.FeaturePoolElement",
        "net.minecraft.world.level.levelgen.structure.pools.ListPoolElement",
        "net.minecraft.world.level.levelgen.structure.pools.SinglePoolElement",
        "net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool"
      ],
      "summary": [
        "Custom Tag Assignments",
        "Modifies Methods"
      ]
    },
    "zerocore": {
      "dependencies": {
        "minecraft": "[1.21.1,1.22)",
        "neoforge": "[21.1.21,)"
      },
      "events": {
        "net.neoforged.neoforge.client.event.ClientTickEvent$Pre": [
          "it.zerono.mods.zerocore.lib.multiblock.registry.MultiblockClientRegistry#onClientTick"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$BakingCompleted": [
          "it.zerono.mods.zerocore.lib.client.model.ModBakedModelSupplier#onModelBake"
        ],
        "net.neoforged.neoforge.client.event.ModelEvent$RegisterAdditional": [
          "it.zerono.mods.zerocore.lib.client.model.ModBakedModelSupplier#onRegisterModels"
        ],
        "net.neoforged.neoforge.client.event.RenderHighlightEvent$Block": [
          "it.zerono.mods.zerocore.internal.client.debug.VoxelShapeHighlighter#onHighlightBlock"
        ],
        "net.neoforged.neoforge.data.event.GatherDataEvent": [
          "it.zerono.mods.zerocore.internal.datagen.DataGenerationHandler#gatherData"
        ],
        "net.neoforged.neoforge.event.level.ChunkEvent$Unload": [
          "it.zerono.mods.zerocore.lib.world.ChunkCache#onChunkUnload"
        ],
        "net.neoforged.neoforge.event.level.LevelEvent$Unload": [
          "it.zerono.mods.zerocore.lib.world.ChunkCache#onWorldUnload",
          "it.zerono.mods.zerocore.lib.multiblock.registry.MultiblockRegistry#onWorldUnload"
        ],
        "net.neoforged.neoforge.event.tick.LevelTickEvent$Pre": [
          "it.zerono.mods.zerocore.lib.multiblock.registry.MultiblockRegistry#onWorldTick"
        ]
      },
      "info": {
        "authors": "ZeroNoRyouki",
        "classes": "794",
        "description": "Utility mod and multiblock API",
        "displayName": "Zero CORE 2",
        "file": "ZeroCore2-1.21.1-2.4.16.jar",
        "license": "All rights reserved",
        "package": "it.zerono.mods.zerocore",
        "updateUrl": "https://raw.githubusercontent.com/ZeroNoRyouki/ModUpdates/master/ZeroCore2.json",
        "version": "1.21.1-2.4.16"
      },
      "inheritance": {
        "net.minecraft.client.gui.screens.Screen": [
          "it.zerono.mods.zerocore.lib.client.gui.ModTileContainerScreen",
          "it.zerono.mods.zerocore.lib.client.gui.ModContainerScreen",
          "it.zerono.mods.zerocore.base.multiblock.client.screen.io.AbstractIOPortScreen",
          "it.zerono.mods.zerocore.base.multiblock.client.screen.AbstractMultiblockScreen",
          "it.zerono.mods.zerocore.base.client.screen.AbstractBaseScreen"
        ],
        "net.minecraft.client.particle.Particle": [
          "it.zerono.mods.zerocore.lib.client.particle.SpiralParticle"
        ],
        "net.minecraft.client.resources.model.BakedModel": [
          "it.zerono.mods.zerocore.lib.client.model.multiblock.CuboidPartVariantsModel",
          "it.zerono.mods.zerocore.lib.client.model.BlockVariantsModel",
          "it.zerono.mods.zerocore.lib.client.model.AbstractDynamicBakedModel",
          "it.zerono.mods.zerocore.internal.client.model.MissingModel"
        ],
        "net.minecraft.data.DataProvider": [
          "it.zerono.mods.zerocore.lib.datagen.provider.recipe.ModRecipeProvider",
          "it.zerono.mods.zerocore.lib.datagen.IModDataGenerator$1",
          "it.zerono.mods.zerocore.lib.datagen.ForgeModDataGenerator$2",
          "it.zerono.mods.zerocore.lib.datagen.ForgeModDataGenerator$1"
        ],
        "net.minecraft.world.item.Item": [
          "it.zerono.mods.zerocore.lib.item.TintedBucketItem",
          "it.zerono.mods.zerocore.lib.item.ModItem",
          "it.zerono.mods.zerocore.internal.gamecontent.debugtool.DebugToolItem"
        ],
        "net.minecraft.world.item.crafting.Recipe": [
          "it.zerono.mods.zerocore.lib.recipe.ModRecipe",
          "it.zerono.mods.zerocore.lib.recipe.AbstractTwoToOneRecipe",
          "it.zerono.mods.zerocore.lib.recipe.AbstractOneToOneRecipe",
          "it.zerono.mods.zerocore.lib.recipe.AbstractManyToOneRecipe"
        ],
        "net.minecraft.world.level.block.Block": [
          "it.zerono.mods.zerocore.lib.block.multiblock.MultiblockPartBlock",
          "it.zerono.mods.zerocore.lib.block.ModOreBlock",
          "it.zerono.mods.zerocore.lib.block.ModBlock",
          "it.zerono.mods.zerocore.base.multiblock.part.io.IOPortBlock",
          "it.zerono.mods.zerocore.base.multiblock.part.GlassBlock",
          "it.zerono.mods.zerocore.base.multiblock.part.GenericDeviceBlock"
        ]
      },
      "modifies": [
        "net.minecraft.client.gui.GuiGraphics",
        "net.minecraft.client.resources.model.ModelBakery",
        "net.minecraft.world.inventory.Slot"
      ],
      "summary": [
        "Custom 3D Models",
        "Custom Blocks",
        "Custom GUI Screens",
        "Custom GUI Textures",
        "Custom Item Models",
        "Custom Item Textures",
        "Custom Items",
        "Custom Particles",
        "Custom Recipe Types",
        "Listens to Chunk Unload Events",
        "Localization",
        "Runs Client Tick Logic",
        "Runs World Tick Logic",
        "Uses Data Generators"
      ]
    }
  }
}